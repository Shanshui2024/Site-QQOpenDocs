(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var i,o,s=e[0],l=e[1],d=e[2],u=0,p=[];u<s.length;u++)o=s[u],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&p.push(a[o][0]),a[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(n[i]=l[i]);for(c&&c(e);p.length;)p.shift()();return r.push.apply(r,d||[]),t()}function t(){for(var n,e=0;e<r.length;e++){for(var t=r[e],i=!0,s=1;s<t.length;s++){var l=t[s];0!==a[l]&&(i=!1)}i&&(r.splice(e--,1),n=o(o.s=t[0]))}return n}var i={},a={9:0},r=[];function o(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=a[n];if(0!==t)if(t)e.push(t[2]);else{var i=new Promise((function(e,i){t=a[n]=[e,i]}));e.push(t[2]=i);var r,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(n){return o.p+"assets/js/"+({10:"vendors~docsearch"}[n]||n)+"."+{1:"a5e19a33",2:"c824a5d6",3:"a0856afb",4:"0e72f52b",5:"c742147a",6:"fc867e07",7:"bb9549cd",8:"2051c98b",10:"d187e373",11:"0d48f541",12:"ae733df8",13:"270fed90",14:"fc0492ea",15:"aad8b9c7",16:"ccb37dae",17:"56f95356",18:"1b28f1f7",19:"01a9bb82",20:"5aade6b6",21:"75ea68cb",22:"4c4b0f28",23:"94c038f8",24:"19adcd6b",25:"31c9e509",26:"059aa38a",27:"65445e5f",28:"0fc25f8a",29:"f1095100",30:"ead4e78a",31:"c68f7f39",32:"c2d2a39c",33:"0c30824f",34:"d422d125",35:"96055c0b",36:"b202500e",37:"84ee3d00",38:"9f8fd404",39:"f3f5ab84",40:"6c130b3d",41:"2de02d3f",42:"e1ff87c0",43:"1dde056c",44:"5a25d6c0",45:"d0f2cee0",46:"3101f74c",47:"88facefc",48:"9623f5e0",49:"bb899cbd",50:"b70bf38e",51:"f760689f",52:"1c464975",53:"cfdacdf9",54:"bfaf26ff",55:"72230c2a",56:"44d73e59",57:"4de6ee06",58:"5238fa3c",59:"5fc831b9",60:"4f01b1b9",61:"10d563fc",62:"739f6dcf",63:"085a9b05",64:"a1b65205",65:"0aa43ec6",66:"612cbead",67:"8eba657d",68:"e4f48df3",69:"f4b67c08",70:"c1b60551",71:"f7200e5a",72:"8f2a592b",73:"25e60c38",74:"a163bcd2",75:"85fb8d75",76:"530aed82",77:"385804de",78:"2f6bb5e7",79:"007e372a",80:"9cb07b11",81:"b376006a",82:"ebb3bd6a",83:"5cad8564",84:"92aeda4e",85:"f513f743",86:"6f59d9a0",87:"9968efdf",88:"62386d03",89:"0401b256",90:"56785154",91:"6ae6db22",92:"cf8b958a",93:"ae186e2f",94:"bc5017d4",95:"df6f9a04",96:"cd508cc5",97:"00aa60f2",98:"294f64cb",99:"b8b1bbd4",100:"aefdafa9",101:"1f3b4f2d",102:"4fd3751f",103:"6ed2bb46",104:"01c9ef8a",105:"868ca517",106:"41c9259b",107:"cbbc9091",108:"693e0e2c",109:"5284fc73",110:"6a0716b9",111:"db8d849c",112:"48583dc1",113:"875e5a67",114:"dab1ff03",115:"f0818350",116:"6895d59f",117:"2fd4ee29",118:"50939ec8",119:"759a71ce",120:"e62de92b",121:"ad650408",122:"b850afd0",123:"3f5f8b63",124:"0a70019d",125:"eaaaaf9d",126:"f3425f3f",127:"173aff0d",128:"3a1689ad",129:"885e18ac",130:"2e92faf0",131:"9907df42",132:"66c495ad",133:"bedbee99",134:"004a4869",135:"52087d4e",136:"506cbfbe",137:"525938a5",138:"e22a95a4",139:"a27a9174",140:"0c0b2452",141:"8acff045",142:"c0286d35",143:"f82847c3",144:"f8d087b5",145:"1ed7ed6e",146:"a404edba",147:"f1270f07",148:"3dd26cc6",149:"86ab0666",150:"c1f28240",151:"b599910d",152:"4fcb86a4",153:"e98d7ffc",154:"555c593f",155:"1a2fdedf",156:"da345867",157:"a4b921fc",158:"85d4302a",159:"a7b8455a",160:"ff6db941",161:"7c53f480",162:"7209a86f",163:"4e7af224",164:"dfdc7644",165:"75c82d43",166:"523c8a3a",167:"0000f3e0",168:"77b38f9f",169:"2f085869",170:"1e6fc255",171:"81627ec7",172:"84dfdf3d",173:"044771c5",174:"dbc027df",175:"adb7eddd",176:"831b41a0",177:"84c0175f",178:"3ac02b21",179:"17a6b217",180:"fc30c586",181:"83f1d945",182:"01fdbb62",183:"a00ecaaa",184:"71177f22",185:"ba4e5644",186:"66672e58",187:"a1647f72",188:"792629fb",189:"d976a177",190:"264d60c8",191:"03489beb",192:"9dc1075a",193:"82832d35",194:"a3acd30c",195:"faf8212a",196:"1433b603",197:"a714d7e7",198:"514ceb3e",199:"0577a4ad",200:"7c0f49b0",201:"e1f0a551",202:"f55c6d5f",203:"907fc685",204:"895cbc0a",205:"c10c5953",206:"6d4ab001",207:"7c039590",208:"15e93407",209:"68ef6037",210:"d6dcd544",211:"f7b3e616",212:"f8dd49b3",213:"e2eb69a0",214:"14190061",215:"6ab6a95c",216:"d60232bb",217:"290c468e",218:"6aedb562",219:"deab7d43",220:"a6625fd3",221:"e316306b",222:"7b7d4cf4",223:"1ce65a3f",224:"769fd7be",225:"6ea785d5",226:"57273cdf",227:"b668316c",228:"46384dd3",229:"e7f743d5",230:"fb3cb3cd",231:"56968367",232:"47887342",233:"eb7cb251",234:"325d1431",235:"bea02988",236:"2a3371df",237:"db9aa290",238:"2d30b20f",239:"fc285b62",240:"0f3be050",241:"69d35f52",242:"fbcf3911",243:"76b1e60e",244:"89ccbe87",245:"4ea3f8ca",246:"4f0ec4be",247:"7d902b50",248:"fc850d51",249:"6aed36d3",250:"cd7b769e",251:"238fc0a6",252:"b64b6f5a",253:"c1b3eaee",254:"7bc4607f",255:"401bf187",256:"0b7221c6",257:"4c23535f",258:"786a75ea",259:"e3659852",260:"b92a9c89",261:"92f23dab",262:"803555e1",263:"7a3f2513",264:"4bcbcc8d",265:"0d24a7f6",266:"f4e0ae43",267:"920f47bb",268:"f4053993",269:"67d6e308",270:"a504d1db",271:"91bb6973",272:"9bea6f02",273:"e44ccfe4",274:"155ae2d4",275:"76e94162",276:"c87d3ba1",277:"a4f76b83",278:"e7375cc9",279:"188a1a16",280:"8d1b20d3",281:"98763684",282:"5c971644",283:"f4618ba7",284:"02248999",285:"df07f7df",286:"1662ae6b",287:"97b705e7",288:"1c3f6b27",289:"050e1d2e",290:"aa83784b",291:"1cc849fd",292:"73c6404e",293:"4b005ec2",294:"1fb5d981",295:"62bb497a",296:"9f12f49f",297:"cd32046a",298:"f199bb89",299:"e248703c",300:"f130b012",301:"c8919d71",302:"863dc328",303:"aad15e31",304:"abe0c5e6",305:"e4942d42",306:"9908c253",307:"b69ae9d4",308:"5ba8db6e",309:"1d96ac49",310:"f31dbb73",311:"d36cb5df",312:"66b2a433",313:"9b21613c",314:"10f28111",315:"b016e344",316:"5409e5b9",317:"7f5644b5",318:"858883b5",319:"5a4ce329",320:"d97c64e2",321:"a9794ad9",322:"18a1a82e",323:"d76db3f6",324:"811bd5f2",325:"08072bce",326:"d8f2528e",327:"d25c25c5",328:"afd661f3",329:"fa6077c7",330:"a9001c65",331:"46450dad",332:"b93070a1",333:"17ff5d2b",334:"177d32af",335:"f826c40f",336:"b22e25b2",337:"116ce23d",338:"e87a4f32",339:"2b889324",340:"b5616a30",341:"8d8a4366",342:"49783639",343:"60ade979",344:"039bc024",345:"917e9064",346:"a83e8dec",347:"0891ce89",348:"7175e711",349:"815e7714",350:"94eff187",351:"5de7e274",352:"66aa0f69",353:"663edbc4",354:"7c536c52",355:"46102a82",356:"4cd6cd70",357:"91cd9f40",358:"e32f5cde",359:"98d8af5e",360:"46755837",361:"2b5cc926",362:"eac43837",363:"f8499eb8",364:"df53dd49",365:"3e72cfc8",366:"8a7ecda2",367:"78c86916",368:"f53b7b86",369:"b73283ae",370:"4e922345",371:"a8b1b4bc",372:"7f843c74",373:"d58f6b78",374:"8ddd7984",375:"c4c7ef6a",376:"75b48d82",377:"a3838f33",378:"ef2748b8",379:"f8cea5bd",380:"0847f530",381:"9f395d44",382:"ad38a4ea",383:"a8b3552c",384:"3f735221",385:"8a23a91d",386:"334f5ebc",387:"4656bacc",388:"868fff66",389:"a89fd71c",390:"06c6e57e",391:"fce0d6d0",392:"08421cd4",393:"7a4d67ba",394:"4ba8c5b6",395:"95f96dde",396:"6c162075",397:"828bb4c0",398:"827e98ee",399:"506f81f3",400:"f4a881d4",401:"6a79179c",402:"1aaaa785",403:"d9b1502d",404:"5b25efd1"}[n]+".js"}(n);var l=new Error;r=function(e){s.onerror=s.onload=null,clearTimeout(d);var t=a[n];if(0!==t){if(t){var i=e&&("load"===e.type?"missing":e.type),r=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+i+": "+r+")",l.name="ChunkLoadError",l.type=i,l.request=r,t[1](l)}a[n]=void 0}};var d=setTimeout((function(){r({type:"timeout",target:s})}),12e4);s.onerror=s.onload=r,document.head.appendChild(s)}return Promise.all(e)},o.m=n,o.c=i,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)o.d(t,i,function(e){return n[e]}.bind(null,i));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="https://mpqq.gtimg.cn/bot-wiki/online/",o.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var d=0;d<s.length;d++)e(s[d]);var c=l;r.push([176,0]),t()}([function(n,e,t){"use strict";t.d(e,"d",(function(){return b})),t.d(e,"c",(function(){return _})),t.d(e,"b",(function(){return y})),t.d(e,"e",(function(){return x})),t.d(e,"a",(function(){return k})),t.d(e,"f",(function(){return T})),t.d(e,"g",(function(){return w})),t.d(e,"h",(function(){return I}));t(210),t(171),t(12),t(25),t(57);var i=t(1),a={"components/AlgoliaSearchBox":()=>Promise.all([t.e(0),t.e(15)]).then(t.bind(null,496)),"components/DropdownLink":()=>Promise.all([t.e(0),t.e(14)]).then(t.bind(null,427)),"components/DropdownTransition":()=>Promise.all([t.e(0),t.e(25)]).then(t.bind(null,418)),"components/Home":()=>Promise.all([t.e(0),t.e(18)]).then(t.bind(null,470)),"components/NavLink":()=>t.e(28).then(t.bind(null,415)),"components/NavLinks":()=>Promise.all([t.e(0),t.e(13)]).then(t.bind(null,440)),"components/Navbar":()=>Promise.all([t.e(0),t.e(2),t.e(11)]).then(t.bind(null,468)),"components/Page":()=>Promise.all([t.e(0),t.e(12)]).then(t.bind(null,471)),"components/PageEdit":()=>Promise.all([t.e(0),t.e(19)]).then(t.bind(null,441)),"components/PageNav":()=>Promise.all([t.e(0),t.e(17)]).then(t.bind(null,442)),"components/Sidebar":()=>Promise.all([t.e(0),t.e(1),t.e(403)]).then(t.bind(null,492)),"components/SidebarButton":()=>Promise.all([t.e(0),t.e(26)]).then(t.bind(null,444)),"components/SidebarGroup":()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,454)),"components/SidebarLink":()=>Promise.all([t.e(0),t.e(20)]).then(t.bind(null,445)),"components/SidebarLinks":()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,443)),"global-components/Badge":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,505)),"global-components/CodeBlock":()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,497)),"global-components/CodeGroup":()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,498)),"layouts/404":()=>Promise.all([t.e(0),t.e(8)]).then(t.bind(null,499)),"layouts/Layout":()=>Promise.all([t.e(0),t.e(2),t.e(1),t.e(3)]).then(t.bind(null,500)),NotFound:()=>Promise.all([t.e(0),t.e(8)]).then(t.bind(null,499)),Layout:()=>Promise.all([t.e(0),t.e(2),t.e(1),t.e(3)]).then(t.bind(null,500))},r={"v-12d12f04":()=>t.e(32).then(t.bind(null,506)),"v-48a99384":()=>t.e(33).then(t.bind(null,507)),"v-254b0c64":()=>t.e(31).then(t.bind(null,508)),"v-a11afcc4":()=>t.e(34).then(t.bind(null,509)),"v-d8f6f926":()=>t.e(35).then(t.bind(null,510)),"v-6edd88e6":()=>t.e(36).then(t.bind(null,511)),"v-3ac09f7e":()=>t.e(38).then(t.bind(null,512)),"v-28a0c253":()=>t.e(39).then(t.bind(null,513)),"v-3d40d5ad":()=>t.e(37).then(t.bind(null,514)),"v-07e873e5":()=>t.e(40).then(t.bind(null,515)),"v-947d5584":()=>t.e(41).then(t.bind(null,516)),"v-7ecfd877":()=>t.e(42).then(t.bind(null,517)),"v-3f0a1d6d":()=>t.e(43).then(t.bind(null,518)),"v-720a53ed":()=>t.e(44).then(t.bind(null,519)),"v-25967209":()=>t.e(45).then(t.bind(null,520)),"v-4c3b09e7":()=>t.e(47).then(t.bind(null,521)),"v-0591060d":()=>t.e(48).then(t.bind(null,522)),"v-266976e9":()=>t.e(49).then(t.bind(null,523)),"v-d3fd96e6":()=>t.e(46).then(t.bind(null,524)),"v-1b9126da":()=>t.e(50).then(t.bind(null,525)),"v-cc6f5f5e":()=>t.e(52).then(t.bind(null,526)),"v-3a924e8d":()=>t.e(51).then(t.bind(null,527)),"v-f506fd66":()=>t.e(53).then(t.bind(null,528)),"v-161381a3":()=>t.e(54).then(t.bind(null,529)),"v-59b19f0d":()=>t.e(55).then(t.bind(null,530)),"v-5ec66dad":()=>t.e(56).then(t.bind(null,531)),"v-a98dede6":()=>t.e(57).then(t.bind(null,532)),"v-5efc5a9b":()=>t.e(59).then(t.bind(null,533)),"v-53b4fcea":()=>t.e(58).then(t.bind(null,534)),"v-b6a66a66":()=>t.e(60).then(t.bind(null,535)),"v-0cc041b7":()=>t.e(62).then(t.bind(null,536)),"v-58b25779":()=>t.e(61).then(t.bind(null,537)),"v-0886d424":()=>t.e(64).then(t.bind(null,538)),"v-234805c4":()=>t.e(63).then(t.bind(null,539)),"v-6732c15e":()=>t.e(65).then(t.bind(null,540)),"v-452e0b4d":()=>t.e(66).then(t.bind(null,541)),"v-356d6496":()=>t.e(67).then(t.bind(null,542)),"v-0352f9f0":()=>t.e(68).then(t.bind(null,543)),"v-223dea19":()=>t.e(69).then(t.bind(null,544)),"v-793415b9":()=>t.e(70).then(t.bind(null,545)),"v-41c362ed":()=>t.e(71).then(t.bind(null,546)),"v-594deb22":()=>t.e(72).then(t.bind(null,547)),"v-3ebc95cd":()=>t.e(74).then(t.bind(null,548)),"v-e3e9b362":()=>t.e(73).then(t.bind(null,549)),"v-6bba1e7f":()=>t.e(75).then(t.bind(null,550)),"v-07f32226":()=>t.e(76).then(t.bind(null,551)),"v-da90b626":()=>t.e(77).then(t.bind(null,552)),"v-fe06bc26":()=>t.e(78).then(t.bind(null,553)),"v-09a6c0cd":()=>t.e(79).then(t.bind(null,554)),"v-df929b56":()=>t.e(80).then(t.bind(null,555)),"v-7ad9c581":()=>t.e(81).then(t.bind(null,556)),"v-5d2e05cd":()=>t.e(82).then(t.bind(null,557)),"v-434a2c3a":()=>t.e(83).then(t.bind(null,558)),"v-17187b45":()=>t.e(85).then(t.bind(null,559)),"v-b161d272":()=>t.e(84).then(t.bind(null,560)),"v-04bf5527":()=>t.e(87).then(t.bind(null,561)),"v-71f8884d":()=>t.e(88).then(t.bind(null,562)),"v-541917f1":()=>t.e(89).then(t.bind(null,563)),"v-02f306a6":()=>t.e(86).then(t.bind(null,564)),"v-9c4e54a6":()=>t.e(90).then(t.bind(null,565)),"v-e6c05416":()=>t.e(92).then(t.bind(null,566)),"v-20fb459b":()=>t.e(94).then(t.bind(null,567)),"v-71ff77be":()=>t.e(91).then(t.bind(null,568)),"v-3fb1bf3e":()=>t.e(95).then(t.bind(null,569)),"v-1cd54bcd":()=>t.e(96).then(t.bind(null,570)),"v-41cd760d":()=>t.e(98).then(t.bind(null,571)),"v-1f13079d":()=>t.e(99).then(t.bind(null,572)),"v-68c9fbbb":()=>t.e(97).then(t.bind(null,573)),"v-28cf9dd2":()=>t.e(100).then(t.bind(null,574)),"v-f814c55e":()=>t.e(101).then(t.bind(null,575)),"v-5fef905b":()=>t.e(103).then(t.bind(null,576)),"v-370f150a":()=>t.e(102).then(t.bind(null,577)),"v-4a364e6d":()=>t.e(105).then(t.bind(null,578)),"v-0904d6fb":()=>t.e(104).then(t.bind(null,579)),"v-332e983d":()=>t.e(106).then(t.bind(null,580)),"v-89b04ec2":()=>t.e(107).then(t.bind(null,581)),"v-cad47de4":()=>t.e(109).then(t.bind(null,582)),"v-b60326e6":()=>t.e(108).then(t.bind(null,583)),"v-bcdcc626":()=>t.e(110).then(t.bind(null,584)),"v-96e857a6":()=>t.e(93).then(t.bind(null,585)),"v-05bf3b5e":()=>t.e(112).then(t.bind(null,586)),"v-59b26021":()=>t.e(113).then(t.bind(null,587)),"v-02661611":()=>t.e(111).then(t.bind(null,588)),"v-627fe80d":()=>t.e(115).then(t.bind(null,589)),"v-98a6b1b6":()=>t.e(114).then(t.bind(null,590)),"v-ae4352a2":()=>t.e(116).then(t.bind(null,591)),"v-1019bc26":()=>t.e(118).then(t.bind(null,592)),"v-32c1f1f3":()=>t.e(117).then(t.bind(null,593)),"v-a6c0997e":()=>t.e(120).then(t.bind(null,594)),"v-0bf5fcb6":()=>t.e(119).then(t.bind(null,595)),"v-3539c7ad":()=>t.e(121).then(t.bind(null,596)),"v-18052b93":()=>t.e(123).then(t.bind(null,597)),"v-b058cf62":()=>t.e(122).then(t.bind(null,598)),"v-06cbb81e":()=>t.e(124).then(t.bind(null,599)),"v-773986e6":()=>t.e(125).then(t.bind(null,600)),"v-5ea07855":()=>t.e(126).then(t.bind(null,601)),"v-6e78da2d":()=>t.e(128).then(t.bind(null,602)),"v-0a712ae6":()=>t.e(127).then(t.bind(null,603)),"v-269b33ad":()=>t.e(130).then(t.bind(null,604)),"v-45721f76":()=>t.e(129).then(t.bind(null,605)),"v-0a79194e":()=>t.e(131).then(t.bind(null,606)),"v-e973c266":()=>t.e(132).then(t.bind(null,607)),"v-0e76ec4b":()=>t.e(133).then(t.bind(null,608)),"v-34cbea84":()=>t.e(134).then(t.bind(null,609)),"v-1de8f42d":()=>t.e(135).then(t.bind(null,610)),"v-5fe6706d":()=>t.e(137).then(t.bind(null,611)),"v-10ca2451":()=>t.e(136).then(t.bind(null,612)),"v-0934f526":()=>t.e(138).then(t.bind(null,613)),"v-1b592a66":()=>t.e(139).then(t.bind(null,614)),"v-0ad45a04":()=>t.e(141).then(t.bind(null,615)),"v-3202e1e8":()=>t.e(140).then(t.bind(null,616)),"v-030ad4ca":()=>t.e(142).then(t.bind(null,617)),"v-3955f456":()=>t.e(144).then(t.bind(null,618)),"v-80ccf088":()=>t.e(143).then(t.bind(null,619)),"v-72cba642":()=>t.e(145).then(t.bind(null,620)),"v-4c27396d":()=>t.e(146).then(t.bind(null,621)),"v-5a69cfab":()=>t.e(147).then(t.bind(null,622)),"v-2cbfda8d":()=>t.e(149).then(t.bind(null,623)),"v-a7e8d6a6":()=>t.e(150).then(t.bind(null,624)),"v-ea42ece6":()=>t.e(148).then(t.bind(null,625)),"v-eca22ec4":()=>t.e(152).then(t.bind(null,626)),"v-182f304f":()=>t.e(154).then(t.bind(null,627)),"v-448cc4e6":()=>t.e(151).then(t.bind(null,628)),"v-4a2c9f39":()=>t.e(153).then(t.bind(null,629)),"v-7c5f43a6":()=>t.e(155).then(t.bind(null,630)),"v-4c1170cd":()=>t.e(156).then(t.bind(null,631)),"v-759a1463":()=>t.e(157).then(t.bind(null,632)),"v-a53196ec":()=>t.e(158).then(t.bind(null,633)),"v-d7256ae6":()=>t.e(159).then(t.bind(null,634)),"v-58fa6266":()=>t.e(160).then(t.bind(null,635)),"v-7b26e01e":()=>t.e(162).then(t.bind(null,636)),"v-6debebfb":()=>t.e(161).then(t.bind(null,637)),"v-b025b1fe":()=>t.e(163).then(t.bind(null,638)),"v-4ca878ee":()=>t.e(164).then(t.bind(null,639)),"v-276e6003":()=>t.e(165).then(t.bind(null,640)),"v-58967c02":()=>t.e(167).then(t.bind(null,641)),"v-4a353466":()=>t.e(166).then(t.bind(null,642)),"v-6656b58e":()=>t.e(169).then(t.bind(null,643)),"v-140e83ed":()=>t.e(168).then(t.bind(null,644)),"v-7a73490a":()=>t.e(170).then(t.bind(null,645)),"v-0ee39f2d":()=>t.e(171).then(t.bind(null,646)),"v-1877a9e6":()=>t.e(172).then(t.bind(null,647)),"v-f6b384a6":()=>t.e(174).then(t.bind(null,648)),"v-5996becd":()=>t.e(173).then(t.bind(null,649)),"v-3c5ddbbf":()=>t.e(175).then(t.bind(null,650)),"v-24ceddbe":()=>t.e(176).then(t.bind(null,651)),"v-6bc707f8":()=>t.e(177).then(t.bind(null,652)),"v-07811e6d":()=>t.e(178).then(t.bind(null,653)),"v-444ef428":()=>t.e(179).then(t.bind(null,654)),"v-0bff128d":()=>t.e(181).then(t.bind(null,655)),"v-9b0d7c6a":()=>t.e(182).then(t.bind(null,656)),"v-03005017":()=>t.e(184).then(t.bind(null,657)),"v-1015976b":()=>t.e(183).then(t.bind(null,658)),"v-d37f87a6":()=>t.e(180).then(t.bind(null,659)),"v-2232b1cd":()=>t.e(186).then(t.bind(null,660)),"v-4d1916d9":()=>t.e(188).then(t.bind(null,661)),"v-54832fad":()=>t.e(185).then(t.bind(null,662)),"v-77f1f0bb":()=>t.e(189).then(t.bind(null,663)),"v-d0f51066":()=>t.e(190).then(t.bind(null,664)),"v-5b201c51":()=>t.e(187).then(t.bind(null,665)),"v-34b08827":()=>t.e(191).then(t.bind(null,666)),"v-266b20ff":()=>t.e(192).then(t.bind(null,667)),"v-6133b68d":()=>t.e(193).then(t.bind(null,668)),"v-03bffa66":()=>t.e(194).then(t.bind(null,669)),"v-9c279b82":()=>t.e(195).then(t.bind(null,670)),"v-218357cd":()=>t.e(199).then(t.bind(null,671)),"v-250f0203":()=>t.e(196).then(t.bind(null,672)),"v-1f0f00d9":()=>t.e(198).then(t.bind(null,673)),"v-5b570bde":()=>t.e(197).then(t.bind(null,674)),"v-0049f0ad":()=>t.e(201).then(t.bind(null,675)),"v-9fa51432":()=>t.e(202).then(t.bind(null,676)),"v-bb6832e6":()=>t.e(203).then(t.bind(null,677)),"v-56428d7a":()=>t.e(204).then(t.bind(null,678)),"v-ef261bba":()=>t.e(205).then(t.bind(null,679)),"v-d513fcee":()=>t.e(200).then(t.bind(null,680)),"v-7f65bab2":()=>t.e(206).then(t.bind(null,681)),"v-71bd640d":()=>t.e(207).then(t.bind(null,682)),"v-42ed2266":()=>t.e(209).then(t.bind(null,683)),"v-590f1313":()=>t.e(208).then(t.bind(null,684)),"v-a3971b92":()=>t.e(210).then(t.bind(null,685)),"v-be25097a":()=>t.e(211).then(t.bind(null,686)),"v-4c55b506":()=>t.e(213).then(t.bind(null,687)),"v-6ee39926":()=>t.e(212).then(t.bind(null,688)),"v-8e2f504a":()=>t.e(214).then(t.bind(null,689)),"v-aa3319de":()=>t.e(215).then(t.bind(null,690)),"v-73a726a6":()=>t.e(217).then(t.bind(null,691)),"v-572d4b6f":()=>t.e(216).then(t.bind(null,692)),"v-6b2cc4cf":()=>t.e(219).then(t.bind(null,693)),"v-38f3ad26":()=>t.e(221).then(t.bind(null,694)),"v-30ac920d":()=>t.e(220).then(t.bind(null,695)),"v-423c25dd":()=>t.e(218).then(t.bind(null,696)),"v-2f6e0543":()=>t.e(222).then(t.bind(null,697)),"v-acd36226":()=>t.e(223).then(t.bind(null,698)),"v-82a1a0ea":()=>t.e(224).then(t.bind(null,699)),"v-587befe6":()=>t.e(225).then(t.bind(null,700)),"v-22ed0f7b":()=>t.e(226).then(t.bind(null,701)),"v-32a61847":()=>t.e(228).then(t.bind(null,702)),"v-43f3ab35":()=>t.e(227).then(t.bind(null,703)),"v-72809de6":()=>t.e(229).then(t.bind(null,704)),"v-69a3d206":()=>t.e(231).then(t.bind(null,705)),"v-51063227":()=>t.e(232).then(t.bind(null,706)),"v-ffe26726":()=>t.e(233).then(t.bind(null,707)),"v-28e4d12a":()=>t.e(230).then(t.bind(null,708)),"v-b5feab66":()=>t.e(234).then(t.bind(null,709)),"v-f76b258e":()=>t.e(235).then(t.bind(null,710)),"v-3d0bb0ad":()=>t.e(236).then(t.bind(null,711)),"v-4d36f66d":()=>t.e(237).then(t.bind(null,712)),"v-1279841b":()=>t.e(239).then(t.bind(null,713)),"v-5255e166":()=>t.e(238).then(t.bind(null,714)),"v-53308a66":()=>t.e(240).then(t.bind(null,715)),"v-758e5903":()=>t.e(241).then(t.bind(null,716)),"v-97f3b4ba":()=>t.e(243).then(t.bind(null,717)),"v-4d19bb7d":()=>t.e(242).then(t.bind(null,718)),"v-0adf9ab9":()=>t.e(245).then(t.bind(null,719)),"v-001cac21":()=>t.e(244).then(t.bind(null,720)),"v-bc235c66":()=>t.e(246).then(t.bind(null,721)),"v-71917040":()=>t.e(247).then(t.bind(null,722)),"v-b04be47e":()=>t.e(248).then(t.bind(null,723)),"v-154f157e":()=>t.e(250).then(t.bind(null,724)),"v-518722eb":()=>t.e(251).then(t.bind(null,725)),"v-3fb920be":()=>t.e(249).then(t.bind(null,726)),"v-5ecaac8b":()=>t.e(252).then(t.bind(null,727)),"v-356490cd":()=>t.e(254).then(t.bind(null,728)),"v-6097c74d":()=>t.e(253).then(t.bind(null,729)),"v-66d773ad":()=>t.e(255).then(t.bind(null,730)),"v-0c95e2cd":()=>t.e(256).then(t.bind(null,731)),"v-d1e2f026":()=>t.e(257).then(t.bind(null,732)),"v-03c7bdd6":()=>t.e(259).then(t.bind(null,733)),"v-6b8813f1":()=>t.e(260).then(t.bind(null,734)),"v-dfdc5d92":()=>t.e(258).then(t.bind(null,735)),"v-454e93a6":()=>t.e(261).then(t.bind(null,736)),"v-01afe12d":()=>t.e(263).then(t.bind(null,737)),"v-176c6466":()=>t.e(264).then(t.bind(null,738)),"v-429e3cce":()=>t.e(266).then(t.bind(null,739)),"v-b0c78dc6":()=>t.e(262).then(t.bind(null,740)),"v-787c290b":()=>t.e(268).then(t.bind(null,741)),"v-e42846f2":()=>t.e(269).then(t.bind(null,742)),"v-0e69c4e6":()=>t.e(267).then(t.bind(null,743)),"v-75d44e6d":()=>t.e(265).then(t.bind(null,744)),"v-1e883079":()=>t.e(271).then(t.bind(null,745)),"v-0ef7d38d":()=>t.e(29).then(t.bind(null,746)),"v-2c02facd":()=>t.e(270).then(t.bind(null,747)),"v-53d9502d":()=>t.e(272).then(t.bind(null,748)),"v-b57398a6":()=>t.e(273).then(t.bind(null,749)),"v-783ae9a2":()=>t.e(275).then(t.bind(null,750)),"v-21352306":()=>t.e(276).then(t.bind(null,751)),"v-b7b390a6":()=>t.e(274).then(t.bind(null,752)),"v-6f9c4066":()=>t.e(278).then(t.bind(null,753)),"v-725590e6":()=>t.e(277).then(t.bind(null,754)),"v-e1722716":()=>t.e(279).then(t.bind(null,755)),"v-30fec46a":()=>t.e(282).then(t.bind(null,756)),"v-042ee0ad":()=>t.e(280).then(t.bind(null,757)),"v-5de8c571":()=>t.e(281).then(t.bind(null,758)),"v-0fe4a4f1":()=>t.e(283).then(t.bind(null,759)),"v-4eef646d":()=>t.e(284).then(t.bind(null,760)),"v-3d1d9cb3":()=>t.e(286).then(t.bind(null,761)),"v-232db9ad":()=>t.e(287).then(t.bind(null,762)),"v-6b25410e":()=>t.e(285).then(t.bind(null,763)),"v-228f036d":()=>t.e(30).then(t.bind(null,764)),"v-3331c466":()=>t.e(288).then(t.bind(null,765)),"v-de24c766":()=>t.e(289).then(t.bind(null,766)),"v-e1c3a526":()=>t.e(292).then(t.bind(null,767)),"v-25accec9":()=>t.e(290).then(t.bind(null,768)),"v-3502b333":()=>t.e(291).then(t.bind(null,769)),"v-493b728d":()=>t.e(293).then(t.bind(null,770)),"v-6775fb6d":()=>t.e(296).then(t.bind(null,771)),"v-1c39df05":()=>t.e(294).then(t.bind(null,772)),"v-443c562d":()=>t.e(295).then(t.bind(null,773)),"v-60b1ad0d":()=>t.e(297).then(t.bind(null,774)),"v-6f025eb2":()=>t.e(299).then(t.bind(null,775)),"v-21880566":()=>t.e(298).then(t.bind(null,776)),"v-1192520d":()=>t.e(300).then(t.bind(null,777)),"v-c2d779e2":()=>t.e(301).then(t.bind(null,778)),"v-eae6396e":()=>t.e(302).then(t.bind(null,779)),"v-79da6daf":()=>t.e(303).then(t.bind(null,780)),"v-623c076d":()=>t.e(304).then(t.bind(null,781)),"v-900787f6":()=>t.e(305).then(t.bind(null,782)),"v-0003000d":()=>t.e(306).then(t.bind(null,783)),"v-aebcebda":()=>t.e(307).then(t.bind(null,784)),"v-58a3d20d":()=>t.e(308).then(t.bind(null,785)),"v-871b4d76":()=>t.e(309).then(t.bind(null,786)),"v-0c39c52d":()=>t.e(310).then(t.bind(null,787)),"v-0cb42a4d":()=>t.e(311).then(t.bind(null,788)),"v-a64c1d8e":()=>t.e(312).then(t.bind(null,789)),"v-fb864e66":()=>t.e(313).then(t.bind(null,790)),"v-5ef23463":()=>t.e(314).then(t.bind(null,791)),"v-207c3481":()=>t.e(315).then(t.bind(null,792)),"v-52fbc8a6":()=>t.e(318).then(t.bind(null,793)),"v-49654e2d":()=>t.e(316).then(t.bind(null,794)),"v-df64ea9e":()=>t.e(317).then(t.bind(null,795)),"v-7588b826":()=>t.e(320).then(t.bind(null,796)),"v-218409ab":()=>t.e(319).then(t.bind(null,797)),"v-35a13f58":()=>t.e(323).then(t.bind(null,798)),"v-287f2926":()=>t.e(321).then(t.bind(null,799)),"v-6d5699e6":()=>t.e(322).then(t.bind(null,800)),"v-20d75376":()=>t.e(324).then(t.bind(null,801)),"v-e5a924b6":()=>t.e(325).then(t.bind(null,802)),"v-ccf6a73a":()=>t.e(326).then(t.bind(null,803)),"v-9cc9c0a6":()=>t.e(328).then(t.bind(null,804)),"v-4794f9fa":()=>t.e(327).then(t.bind(null,805)),"v-4f8a3ced":()=>t.e(330).then(t.bind(null,806)),"v-2572bc37":()=>t.e(331).then(t.bind(null,807)),"v-5c070569":()=>t.e(332).then(t.bind(null,808)),"v-3d911f66":()=>t.e(329).then(t.bind(null,809)),"v-9c41da1e":()=>t.e(333).then(t.bind(null,810)),"v-5fb5275a":()=>t.e(334).then(t.bind(null,811)),"v-6172b04d":()=>t.e(335).then(t.bind(null,812)),"v-235dc1bf":()=>t.e(336).then(t.bind(null,813)),"v-c0ef08d2":()=>t.e(337).then(t.bind(null,814)),"v-8868cd8a":()=>t.e(339).then(t.bind(null,815)),"v-da3e93e6":()=>t.e(338).then(t.bind(null,816)),"v-373a50d7":()=>t.e(340).then(t.bind(null,817)),"v-414f814d":()=>t.e(341).then(t.bind(null,818)),"v-7fa9669e":()=>t.e(342).then(t.bind(null,819)),"v-9630672e":()=>t.e(343).then(t.bind(null,820)),"v-2c7d264d":()=>t.e(344).then(t.bind(null,821)),"v-bac0b6a6":()=>t.e(346).then(t.bind(null,822)),"v-57a408be":()=>t.e(345).then(t.bind(null,823)),"v-10d325db":()=>t.e(349).then(t.bind(null,824)),"v-43ce4b0d":()=>t.e(348).then(t.bind(null,825)),"v-39d9007f":()=>t.e(347).then(t.bind(null,826)),"v-8887bd82":()=>t.e(351).then(t.bind(null,827)),"v-07296fab":()=>t.e(353).then(t.bind(null,828)),"v-1b56848a":()=>t.e(350).then(t.bind(null,829)),"v-4a6468e6":()=>t.e(352).then(t.bind(null,830)),"v-16a33966":()=>t.e(354).then(t.bind(null,831)),"v-e3d7e0d6":()=>t.e(356).then(t.bind(null,832)),"v-44fb964a":()=>t.e(355).then(t.bind(null,833)),"v-e77aeb66":()=>t.e(358).then(t.bind(null,834)),"v-c6cabb1a":()=>t.e(357).then(t.bind(null,835)),"v-65363ba6":()=>t.e(360).then(t.bind(null,836)),"v-5c097a29":()=>t.e(359).then(t.bind(null,837)),"v-994b6bf2":()=>t.e(361).then(t.bind(null,838)),"v-c6c256a6":()=>t.e(362).then(t.bind(null,839)),"v-62634816":()=>t.e(363).then(t.bind(null,840)),"v-4fe449e9":()=>t.e(364).then(t.bind(null,841)),"v-2017c68d":()=>t.e(366).then(t.bind(null,842)),"v-edd20332":()=>t.e(365).then(t.bind(null,843)),"v-06b895db":()=>t.e(368).then(t.bind(null,844)),"v-cd6ddb26":()=>t.e(367).then(t.bind(null,845)),"v-7b93bb26":()=>t.e(369).then(t.bind(null,846)),"v-dc5e13f6":()=>t.e(370).then(t.bind(null,847)),"v-194e4e23":()=>t.e(371).then(t.bind(null,848)),"v-78768ee6":()=>t.e(372).then(t.bind(null,849)),"v-24a449da":()=>t.e(373).then(t.bind(null,850)),"v-b037bf66":()=>t.e(374).then(t.bind(null,851)),"v-85ca1042":()=>t.e(375).then(t.bind(null,852)),"v-4952848d":()=>t.e(376).then(t.bind(null,853)),"v-e92069fa":()=>t.e(377).then(t.bind(null,854)),"v-2e55e20a":()=>t.e(378).then(t.bind(null,855)),"v-02085015":()=>t.e(379).then(t.bind(null,856)),"v-1d268482":()=>t.e(380).then(t.bind(null,857)),"v-896ad926":()=>t.e(381).then(t.bind(null,858)),"v-6da20066":()=>t.e(382).then(t.bind(null,859)),"v-7c630a51":()=>t.e(383).then(t.bind(null,860)),"v-dd0df526":()=>t.e(385).then(t.bind(null,861)),"v-ed61c066":()=>t.e(386).then(t.bind(null,862)),"v-64345a0d":()=>t.e(387).then(t.bind(null,863)),"v-7f2650ad":()=>t.e(384).then(t.bind(null,864)),"v-7c7206b3":()=>t.e(388).then(t.bind(null,865)),"v-2bbdee4d":()=>t.e(389).then(t.bind(null,866)),"v-ed9e72ca":()=>t.e(390).then(t.bind(null,867)),"v-5349e18a":()=>t.e(392).then(t.bind(null,868)),"v-4b13e6d1":()=>t.e(394).then(t.bind(null,869)),"v-3ec5678e":()=>t.e(393).then(t.bind(null,870)),"v-5e80d495":()=>t.e(391).then(t.bind(null,871)),"v-a9a94810":()=>t.e(397).then(t.bind(null,872)),"v-0486517e":()=>t.e(396).then(t.bind(null,873)),"v-34ff9b66":()=>t.e(395).then(t.bind(null,874)),"v-63c3d856":()=>t.e(398).then(t.bind(null,875)),"v-7e08d754":()=>t.e(399).then(t.bind(null,876)),"v-ce009004":()=>t.e(400).then(t.bind(null,877)),"v-3074783e":()=>t.e(402).then(t.bind(null,878)),"v-0792f49e":()=>t.e(401).then(t.bind(null,879))};function o(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const s=/-(\w)/g,l=o(n=>n.replace(s,(n,e)=>e?e.toUpperCase():"")),d=/\B([A-Z])/g,c=o(n=>n.replace(d,"-$1").toLowerCase()),u=o(n=>n.charAt(0).toUpperCase()+n.slice(1));function p(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(u(l(e))):n(u(e))||n(c(e))}const h=Object.assign({},a,r),m=n=>h[n],g=n=>r[n],f=n=>a[n],v=n=>i.default.component(n);function b(n){return p(g,n)}function _(n){return p(f,n)}function y(n){return p(m,n)}function x(n){return p(v,n)}function k(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!x(n)&&y(n)){const e=await y(n)();i.default.component(n,e.default)}}))}function T(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}function w(n,e){const{$localePath:t}=n;return"object"==typeof e&&e[t]?e[t]:e}function I(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}},function(n,e,t){"use strict";t.r(e),t.d(e,"EffectScope",(function(){return _e})),t.d(e,"computed",(function(){return le})),t.d(e,"customRef",(function(){return ee})),t.d(e,"default",(function(){return Ji})),t.d(e,"defineAsyncComponent",(function(){return Mt})),t.d(e,"defineComponent",(function(){return Ht})),t.d(e,"del",(function(){return Rn})),t.d(e,"effectScope",(function(){return ye})),t.d(e,"getCurrentInstance",(function(){return hn})),t.d(e,"getCurrentScope",(function(){return xe})),t.d(e,"h",(function(){return ht})),t.d(e,"inject",(function(){return Ie})),t.d(e,"isProxy",(function(){return Vn})),t.d(e,"isReactive",(function(){return qn})),t.d(e,"isReadonly",(function(){return Fn})),t.d(e,"isRef",(function(){return Wn})),t.d(e,"isShallow",(function(){return Bn})),t.d(e,"markRaw",(function(){return Hn})),t.d(e,"mergeDefaults",(function(){return lt})),t.d(e,"nextTick",(function(){return Dt})),t.d(e,"onActivated",(function(){return Lt})),t.d(e,"onBeforeMount",(function(){return Ot})),t.d(e,"onBeforeUnmount",(function(){return Rt})),t.d(e,"onBeforeUpdate",(function(){return jt})),t.d(e,"onDeactivated",(function(){return Ut})),t.d(e,"onErrorCaptured",(function(){return Vt})),t.d(e,"onMounted",(function(){return Pt})),t.d(e,"onRenderTracked",(function(){return qt})),t.d(e,"onRenderTriggered",(function(){return Bt})),t.d(e,"onScopeDispose",(function(){return ke})),t.d(e,"onServerPrefetch",(function(){return Nt})),t.d(e,"onUnmounted",(function(){return $t})),t.d(e,"onUpdated",(function(){return zt})),t.d(e,"provide",(function(){return Te})),t.d(e,"proxyRefs",(function(){return Zn})),t.d(e,"reactive",(function(){return Ln})),t.d(e,"readonly",(function(){return ae})),t.d(e,"ref",(function(){return Qn})),t.d(e,"set",(function(){return zn})),t.d(e,"shallowReactive",(function(){return Un})),t.d(e,"shallowReadonly",(function(){return se})),t.d(e,"shallowRef",(function(){return Kn})),t.d(e,"toRaw",(function(){return Gn})),t.d(e,"toRef",(function(){return ie})),t.d(e,"toRefs",(function(){return te})),t.d(e,"triggerRef",(function(){return Xn})),t.d(e,"unref",(function(){return Jn})),t.d(e,"useAttrs",(function(){return rt})),t.d(e,"useCssModule",(function(){return Et})),t.d(e,"useCssVars",(function(){return St})),t.d(e,"useListeners",(function(){return ot})),t.d(e,"useSlots",(function(){return at})),t.d(e,"version",(function(){return Gt})),t.d(e,"watch",(function(){return ve})),t.d(e,"watchEffect",(function(){return pe})),t.d(e,"watchPostEffect",(function(){return he})),t.d(e,"watchSyncEffect",(function(){return me}));
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var i=Object.freeze({}),a=Array.isArray;function r(n){return null==n}function o(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function d(n){return"function"==typeof n}function c(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function h(n){return"[object RegExp]"===u.call(n)}function m(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function g(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function f(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,v,2):String(n)}function v(n,e){return e&&e.__v_isRef?e.value:e}function b(n){var e=parseFloat(n);return isNaN(e)?n:e}function _(n,e){for(var t=Object.create(null),i=n.split(","),a=0;a<i.length;a++)t[i[a]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}_("slot,component",!0);var y=_("key,ref,slot,slot-scope,is");function x(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var i=n.indexOf(e);if(i>-1)return n.splice(i,1)}}var k=Object.prototype.hasOwnProperty;function T(n,e){return k.call(n,e)}function w(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var I=/-(\w)/g,C=w((function(n){return n.replace(I,(function(n,e){return e?e.toUpperCase():""}))})),D=w((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),E=/\B([A-Z])/g,S=w((function(n){return n.replace(E,"-$1").toLowerCase()}));var M=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var i=arguments.length;return i?i>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function A(n,e){e=e||0;for(var t=n.length-e,i=new Array(t);t--;)i[t]=n[t+e];return i}function O(n,e){for(var t in e)n[t]=e[t];return n}function P(n){for(var e={},t=0;t<n.length;t++)n[t]&&O(e,n[t]);return e}function j(n,e,t){}var z=function(n,e,t){return!1},R=function(n){return n};function $(n,e){if(n===e)return!0;var t=c(n),i=c(e);if(!t||!i)return!t&&!i&&String(n)===String(e);try{var a=Array.isArray(n),r=Array.isArray(e);if(a&&r)return n.length===e.length&&n.every((function(n,t){return $(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(a||r)return!1;var o=Object.keys(n),s=Object.keys(e);return o.length===s.length&&o.every((function(t){return $(n[t],e[t])}))}catch(n){return!1}}function L(n,e){for(var t=0;t<n.length;t++)if($(n[t],e))return t;return-1}function U(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function N(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var q=["component","directive","filter"],B=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:z,isReservedAttr:z,isUnknownElement:z,getTagNamespace:j,parsePlatformTagName:R,mustUseProp:z,async:!0,_lifecycleHooks:B},V=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function H(n,e,t,i){Object.defineProperty(n,e,{value:t,enumerable:!!i,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(V.source,".$_\\d]"));var Q="__proto__"in{},K="undefined"!=typeof window,Y=K&&window.navigator.userAgent.toLowerCase(),X=Y&&/msie|trident/.test(Y),J=Y&&Y.indexOf("msie 9.0")>0,Z=Y&&Y.indexOf("edge/")>0;Y&&Y.indexOf("android");var nn=Y&&/iphone|ipad|ipod|ios/.test(Y);Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y);var en,tn=Y&&Y.match(/firefox\/(\d+)/),an={}.watch,rn=!1;if(K)try{var on={};Object.defineProperty(on,"passive",{get:function(){rn=!0}}),window.addEventListener("test-passive",null,on)}catch(n){}var sn=function(){return void 0===en&&(en=!K&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),en},ln=K&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function dn(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,un="undefined"!=typeof Symbol&&dn(Symbol)&&"undefined"!=typeof Reflect&&dn(Reflect.ownKeys);cn="undefined"!=typeof Set&&dn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var pn=null;function hn(){return pn&&{proxy:pn}}function mn(n){void 0===n&&(n=null),n||pn&&pn._scope.off(),pn=n,n&&n._scope.on()}var gn=function(){function n(n,e,t,i,a,r,o,s){this.tag=n,this.data=e,this.children=t,this.text=i,this.elm=a,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),fn=function(n){void 0===n&&(n="");var e=new gn;return e.text=n,e.isComment=!0,e};function vn(n){return new gn(void 0,void 0,void 0,String(n))}function bn(n){var e=new gn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}"function"==typeof SuppressedError&&SuppressedError;var _n=0,yn=[],xn=function(){function n(){this._pending=!1,this.id=_n++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,yn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,i=e.length;t<i;t++){0,e[t].update()}},n}();xn.target=null;var kn=[];function Tn(n){kn.push(n),xn.target=n}function wn(){kn.pop(),xn.target=kn[kn.length-1]}var In=Array.prototype,Cn=Object.create(In);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=In[n];H(Cn,n,(function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];var a,r=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":a=t;break;case"splice":a=t.slice(2)}return a&&o.observeArray(a),o.dep.notify(),r}))}));var Dn=Object.getOwnPropertyNames(Cn),En={},Sn=!0;function Mn(n){Sn=n}var An={notify:j,depend:j,addSub:j,removeSub:j},On=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?An:new xn,this.vmCount=0,H(n,"__ob__",this),a(n)){if(!t)if(Q)n.__proto__=Cn;else for(var i=0,r=Dn.length;i<r;i++){H(n,s=Dn[i],Cn[s])}e||this.observeArray(n)}else{var o=Object.keys(n);for(i=0;i<o.length;i++){var s;jn(n,s=o[i],En,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Pn(n[e],!1,this.mock)},n}();function Pn(n,e,t){return n&&T(n,"__ob__")&&n.__ob__ instanceof On?n.__ob__:!Sn||!t&&sn()||!a(n)&&!p(n)||!Object.isExtensible(n)||n.__v_skip||Wn(n)||n instanceof gn?void 0:new On(n,e,t)}function jn(n,e,t,i,r,o,s){void 0===s&&(s=!1);var l=new xn,d=Object.getOwnPropertyDescriptor(n,e);if(!d||!1!==d.configurable){var c=d&&d.get,u=d&&d.set;c&&!u||t!==En&&2!==arguments.length||(t=n[e]);var p=r?t&&t.__ob__:Pn(t,!1,o);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=c?c.call(n):t;return xn.target&&(l.depend(),p&&(p.dep.depend(),a(e)&&$n(e))),Wn(e)&&!r?e.value:e},set:function(e){var i=c?c.call(n):t;if(N(i,e)){if(u)u.call(n,e);else{if(c)return;if(!r&&Wn(i)&&!Wn(e))return void(i.value=e);t=e}p=r?e&&e.__ob__:Pn(e,!1,o),l.notify()}}}),l}}function zn(n,e,t){if(!Fn(n)){var i=n.__ob__;return a(n)&&m(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),i&&!i.shallow&&i.mock&&Pn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||i&&i.vmCount?t:i?(jn(i.value,e,t,void 0,i.shallow,i.mock),i.dep.notify(),t):(n[e]=t,t)}}function Rn(n,e){if(a(n)&&m(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Fn(n)||T(n,e)&&(delete n[e],t&&t.dep.notify())}}function $n(n){for(var e=void 0,t=0,i=n.length;t<i;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),a(e)&&$n(e)}function Ln(n){return Nn(n,!1),n}function Un(n){return Nn(n,!0),H(n,"__v_isShallow",!0),n}function Nn(n,e){if(!Fn(n)){Pn(n,e,sn());0}}function qn(n){return Fn(n)?qn(n.__v_raw):!(!n||!n.__ob__)}function Bn(n){return!(!n||!n.__v_isShallow)}function Fn(n){return!(!n||!n.__v_isReadonly)}function Vn(n){return qn(n)||Fn(n)}function Gn(n){var e=n&&n.__v_raw;return e?Gn(e):n}function Hn(n){return Object.isExtensible(n)&&H(n,"__v_skip",!0),n}function Wn(n){return!(!n||!0!==n.__v_isRef)}function Qn(n){return Yn(n,!1)}function Kn(n){return Yn(n,!0)}function Yn(n,e){if(Wn(n))return n;var t={};return H(t,"__v_isRef",!0),H(t,"__v_isShallow",e),H(t,"dep",jn(t,"value",n,null,e,sn())),t}function Xn(n){n.dep&&n.dep.notify()}function Jn(n){return Wn(n)?n.value:n}function Zn(n){if(qn(n))return n;for(var e={},t=Object.keys(n),i=0;i<t.length;i++)ne(e,n,t[i]);return e}function ne(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Wn(n))return n.value;var i=n&&n.__ob__;return i&&i.dep.depend(),n},set:function(n){var i=e[t];Wn(i)&&!Wn(n)?i.value=n:e[t]=n}})}function ee(n){var e=new xn,t=n((function(){e.depend()}),(function(){e.notify()})),i=t.get,a=t.set,r={get value(){return i()},set value(n){a(n)}};return H(r,"__v_isRef",!0),r}function te(n){var e=a(n)?new Array(n.length):{};for(var t in n)e[t]=ie(n,t);return e}function ie(n,e,t){var i=n[e];if(Wn(i))return i;var a={get value(){var i=n[e];return void 0===i?t:i},set value(t){n[e]=t}};return H(a,"__v_isRef",!0),a}function ae(n){return re(n,!1)}function re(n,e){if(!p(n))return n;if(Fn(n))return n;var t=e?"__v_rawToShallowReadonly":"__v_rawToReadonly",i=n[t];if(i)return i;var a=Object.create(Object.getPrototypeOf(n));H(n,t,a),H(a,"__v_isReadonly",!0),H(a,"__v_raw",n),Wn(n)&&H(a,"__v_isRef",!0),(e||Bn(n))&&H(a,"__v_isShallow",!0);for(var r=Object.keys(n),o=0;o<r.length;o++)oe(a,n,r[o],e);return a}function oe(n,e,t,i){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];return i||!p(n)?n:ae(n)},set:function(){}})}function se(n){return re(n,!0)}function le(n,e){var t,i,a=d(n);a?(t=n,i=j):(t=n.get,i=n.set);var r=sn()?null:new Xt(pn,t,j,{lazy:!0});var o={effect:r,get value(){return r?(r.dirty&&r.evaluate(),xn.target&&r.depend(),r.value):t()},set value(n){i(n)}};return H(o,"__v_isRef",!0),H(o,"__v_isReadonly",a),o}var de="".concat("watcher"," callback"),ce="".concat("watcher"," getter"),ue="".concat("watcher"," cleanup");function pe(n,e){return be(n,null,e)}function he(n,e){return be(n,null,{flush:"post"})}function me(n,e){return be(n,null,{flush:"sync"})}var ge,fe={};function ve(n,e,t){return be(n,e,t)}function be(n,e,t){var r=void 0===t?i:t,o=r.immediate,s=r.deep,l=r.flush,c=void 0===l?"pre":l;r.onTrack,r.onTrigger;var u,p,h=pn,m=function(n,e,t){void 0===t&&(t=null);var i=gt(n,null,t,h,e);return s&&i&&i.__ob__&&i.__ob__.dep.depend(),i},g=!1,f=!1;if(Wn(n)?(u=function(){return n.value},g=Bn(n)):qn(n)?(u=function(){return n.__ob__.dep.depend(),n},s=!0):a(n)?(f=!0,g=n.some((function(n){return qn(n)||Bn(n)})),u=function(){return n.map((function(n){return Wn(n)?n.value:qn(n)?(n.__ob__.dep.depend(),Qt(n)):d(n)?m(n,ce):void 0}))}):u=d(n)?e?function(){return m(n,ce)}:function(){if(!h||!h._isDestroyed)return p&&p(),m(n,"watcher",[b])}:j,e&&s){var v=u;u=function(){return Qt(v())}}var b=function(n){p=_.onStop=function(){m(n,ue)}};if(sn())return b=j,e?o&&m(e,de,[u(),f?[]:void 0,b]):u(),j;var _=new Xt(pn,u,j,{lazy:!0});_.noRecurse=!e;var y=f?[]:fe;return _.run=function(){if(_.active)if(e){var n=_.get();(s||g||(f?n.some((function(n,e){return N(n,y[e])})):N(n,y)))&&(p&&p(),m(e,de,[n,y===fe?void 0:y,b]),y=n)}else _.get()},"sync"===c?_.update=_.run:"post"===c?(_.post=!0,_.update=function(){return bi(_)}):_.update=function(){if(h&&h===pn&&!h._isMounted){var n=h._preWatchers||(h._preWatchers=[]);n.indexOf(_)<0&&n.push(_)}else bi(_)},e?o?_.run():y=_.get():"post"===c&&h?h.$once("hook:mounted",(function(){return _.get()})):_.get(),function(){_.teardown()}}var _e=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=ge,!n&&ge&&(this.index=(ge.scopes||(ge.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=ge;try{return ge=this,n()}finally{ge=e}}else 0},n.prototype.on=function(){ge=this},n.prototype.off=function(){ge=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.parent=void 0,this.active=!1}},n}();function ye(n){return new _e(n)}function xe(){return ge}function ke(n){ge&&ge.cleanups.push(n)}function Te(n,e){pn&&(we(pn)[n]=e)}function we(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}function Ie(n,e,t){void 0===t&&(t=!1);var i=pn;if(i){var a=i.$parent&&i.$parent._provided;if(a&&n in a)return a[n];if(arguments.length>1)return t&&d(e)?e.call(i):e}else 0}var Ce=w((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),i="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=i?n.slice(1):n,once:t,capture:i,passive:e}}));function De(n,e){function t(){var n=t.fns;if(!a(n))return gt(n,null,arguments,e,"v-on handler");for(var i=n.slice(),r=0;r<i.length;r++)gt(i[r],null,arguments,e,"v-on handler")}return t.fns=n,t}function Ee(n,e,t,i,a,o){var l,d,c,u;for(l in n)d=n[l],c=e[l],u=Ce(l),r(d)||(r(c)?(r(d.fns)&&(d=n[l]=De(d,o)),s(u.once)&&(d=n[l]=a(u.name,d,u.capture)),t(u.name,d,u.capture,u.passive,u.params)):d!==c&&(c.fns=d,n[l]=c));for(l in e)r(n[l])&&i((u=Ce(l)).name,e[l],u.capture)}function Se(n,e,t){var i;n instanceof gn&&(n=n.data.hook||(n.data.hook={}));var a=n[e];function l(){t.apply(this,arguments),x(i.fns,l)}r(a)?i=De([l]):o(a.fns)&&s(a.merged)?(i=a).fns.push(l):i=De([a,l]),i.merged=!0,n[e]=i}function Me(n,e,t,i,a){if(o(e)){if(T(e,t))return n[t]=e[t],a||delete e[t],!0;if(T(e,i))return n[t]=e[i],a||delete e[i],!0}return!1}function Ae(n){return l(n)?[vn(n)]:a(n)?function n(e,t){var i,d,c,u,p=[];for(i=0;i<e.length;i++)r(d=e[i])||"boolean"==typeof d||(c=p.length-1,u=p[c],a(d)?d.length>0&&(Oe((d=n(d,"".concat(t||"","_").concat(i)))[0])&&Oe(u)&&(p[c]=vn(u.text+d[0].text),d.shift()),p.push.apply(p,d)):l(d)?Oe(u)?p[c]=vn(u.text+d):""!==d&&p.push(vn(d)):Oe(d)&&Oe(u)?p[c]=vn(u.text+d.text):(s(e._isVList)&&o(d.tag)&&r(d.key)&&o(t)&&(d.key="__vlist".concat(t,"_").concat(i,"__")),p.push(d)));return p}(n):void 0}function Oe(n){return o(n)&&o(n.text)&&!1===n.isComment}function Pe(n,e){var t,i,r,s,l=null;if(a(n)||"string"==typeof n)for(l=new Array(n.length),t=0,i=n.length;t<i;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(c(n))if(un&&n[Symbol.iterator]){l=[];for(var d=n[Symbol.iterator](),u=d.next();!u.done;)l.push(e(u.value,l.length)),u=d.next()}else for(r=Object.keys(n),l=new Array(r.length),t=0,i=r.length;t<i;t++)s=r[t],l[t]=e(n[s],s,t);return o(l)||(l=[]),l._isVList=!0,l}function je(n,e,t,i){var a,r=this.$scopedSlots[n];r?(t=t||{},i&&(t=O(O({},i),t)),a=r(t)||(d(e)?e():e)):a=this.$slots[n]||(d(e)?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},a):a}function ze(n){return Ri(this.$options,"filters",n,!0)||R}function Re(n,e){return a(n)?-1===n.indexOf(e):n!==e}function $e(n,e,t,i,a){var r=F.keyCodes[e]||t;return a&&i&&!F.keyCodes[e]?Re(a,i):r?Re(r,n):i?S(i)!==e:void 0===n}function Le(n,e,t,i,r){if(t)if(c(t)){a(t)&&(t=P(t));var o=void 0,s=function(a){if("class"===a||"style"===a||y(a))o=n;else{var s=n.attrs&&n.attrs.type;o=i||F.mustUseProp(e,s,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=C(a),d=S(a);l in o||d in o||(o[a]=t[a],r&&((n.on||(n.on={}))["update:".concat(a)]=function(n){t[a]=n}))};for(var l in t)s(l)}else;return n}function Ue(n,e){var t=this._staticTrees||(this._staticTrees=[]),i=t[n];return i&&!e||qe(i=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),i}function Ne(n,e,t){return qe(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function qe(n,e,t){if(a(n))for(var i=0;i<n.length;i++)n[i]&&"string"!=typeof n[i]&&Be(n[i],"".concat(e,"_").concat(i),t);else Be(n,e,t)}function Be(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Fe(n,e){if(e)if(p(e)){var t=n.on=n.on?O({},n.on):{};for(var i in e){var a=t[i],r=e[i];t[i]=a?[].concat(a,r):r}}else;return n}function Ve(n,e,t,i){e=e||{$stable:!t};for(var r=0;r<n.length;r++){var o=n[r];a(o)?Ve(o,e,t):o&&(o.proxy&&(o.fn.proxy=!0),e[o.key]=o.fn)}return i&&(e.$key=i),e}function Ge(n,e){for(var t=0;t<e.length;t+=2){var i=e[t];"string"==typeof i&&i&&(n[e[t]]=e[t+1])}return n}function He(n,e){return"string"==typeof n?e+n:n}function We(n){n._o=Ne,n._n=b,n._s=f,n._l=Pe,n._t=je,n._q=$,n._i=L,n._m=Ue,n._f=ze,n._k=$e,n._b=Le,n._v=vn,n._e=fn,n._u=Ve,n._g=Fe,n._d=Ge,n._p=He}function Qe(n,e){if(!n||!n.length)return{};for(var t={},i=0,a=n.length;i<a;i++){var r=n[i],o=r.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,r.context!==e&&r.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(r);else{var s=o.slot,l=t[s]||(t[s]=[]);"template"===r.tag?l.push.apply(l,r.children||[]):l.push(r)}}for(var d in t)t[d].every(Ke)&&delete t[d];return t}function Ke(n){return n.isComment&&!n.asyncFactory||" "===n.text}function Ye(n){return n.isComment&&n.asyncFactory}function Xe(n,e,t,a){var r,o=Object.keys(t).length>0,s=e?!!e.$stable:!o,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&a&&a!==i&&l===a.$key&&!o&&!a.$hasNormal)return a;for(var d in r={},e)e[d]&&"$"!==d[0]&&(r[d]=Je(n,t,d,e[d]))}else r={};for(var c in t)c in r||(r[c]=Ze(t,c));return e&&Object.isExtensible(e)&&(e._normalized=r),H(r,"$stable",s),H(r,"$key",l),H(r,"$hasNormal",o),r}function Je(n,e,t,i){var r=function(){var e=pn;mn(n);var t=arguments.length?i.apply(null,arguments):i({}),r=(t=t&&"object"==typeof t&&!a(t)?[t]:Ae(t))&&t[0];return mn(e),t&&(!r||1===t.length&&r.isComment&&!Ye(r))?void 0:t};return i.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function Ze(n,e){return function(){return n[e]}}function nt(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};H(e,"_v_attr_proxy",!0),et(e,n.$attrs,i,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||et(n._listenersProxy={},n.$listeners,i,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||it(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:M(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return ne(n,e,t)}))}}}function et(n,e,t,i,a){var r=!1;for(var o in e)o in n?e[o]!==t[o]&&(r=!0):(r=!0,tt(n,o,i,a));for(var o in n)o in e||(r=!0,delete n[o]);return r}function tt(n,e,t,i){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[i][e]}})}function it(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}function at(){return st().slots}function rt(){return st().attrs}function ot(){return st().listeners}function st(){var n=pn;return n._setupContext||(n._setupContext=nt(n))}function lt(n,e){var t=a(n)?n.reduce((function(n,e){return n[e]={},n}),{}):n;for(var i in e){var r=t[i];r?a(r)||d(r)?t[i]={type:r,default:e[i]}:r.default=e[i]:null===r&&(t[i]={default:e[i]})}return t}var dt=null;function ct(n,e){return(n.__esModule||un&&"Module"===n[Symbol.toStringTag])&&(n=n.default),c(n)?e.extend(n):n}function ut(n){if(a(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||Ye(t)))return t}}function pt(n,e,t,i,u,p){return(a(t)||l(t))&&(u=i,i=t,t=void 0),s(p)&&(u=2),function(n,e,t,i,l){if(o(t)&&o(t.__ob__))return fn();o(t)&&o(t.is)&&(e=t.is);if(!e)return fn();0;a(i)&&d(i[0])&&((t=t||{}).scopedSlots={default:i[0]},i.length=0);2===l?i=Ae(i):1===l&&(i=function(n){for(var e=0;e<n.length;e++)if(a(n[e]))return Array.prototype.concat.apply([],n);return n}(i));var u,p;if("string"==typeof e){var h=void 0;p=n.$vnode&&n.$vnode.ns||F.getTagNamespace(e),u=F.isReservedTag(e)?new gn(F.parsePlatformTagName(e),t,i,void 0,void 0,n):t&&t.pre||!o(h=Ri(n.$options,"components",e))?new gn(e,t,i,void 0,void 0,n):Ci(h,t,n,i,e)}else u=Ci(e,t,n,i);return a(u)?u:o(u)?(o(p)&&function n(e,t,i){e.ns=t,"foreignObject"===e.tag&&(t=void 0,i=!0);if(o(e.children))for(var a=0,l=e.children.length;a<l;a++){var d=e.children[a];o(d.tag)&&(r(d.ns)||s(i)&&"svg"!==d.tag)&&n(d,t,i)}}(u,p),o(t)&&function(n){c(n.style)&&Qt(n.style);c(n.class)&&Qt(n.class)}(t),u):fn()}(n,e,t,i,u)}function ht(n,e,t){return pt(pn,n,e,t,2,!0)}function mt(n,e,t){Tn();try{if(e)for(var i=e;i=i.$parent;){var a=i.$options.errorCaptured;if(a)for(var r=0;r<a.length;r++)try{if(!1===a[r].call(i,n,e,t))return}catch(n){ft(n,i,"errorCaptured hook")}}ft(n,e,t)}finally{wn()}}function gt(n,e,t,i,a){var r;try{(r=t?n.apply(e,t):n.call(e))&&!r._isVue&&g(r)&&!r._handled&&(r.catch((function(n){return mt(n,i,a+" (Promise/async)")})),r._handled=!0)}catch(n){mt(n,i,a)}return r}function ft(n,e,t){if(F.errorHandler)try{return F.errorHandler.call(null,n,e,t)}catch(e){e!==n&&vt(e,null,"config.errorHandler")}vt(n,e,t)}function vt(n,e,t){if(!K||"undefined"==typeof console)throw n;console.error(n)}var bt,_t=!1,yt=[],xt=!1;function kt(){xt=!1;var n=yt.slice(0);yt.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&dn(Promise)){var Tt=Promise.resolve();bt=function(){Tt.then(kt),nn&&setTimeout(j)},_t=!0}else if(X||"undefined"==typeof MutationObserver||!dn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())bt="undefined"!=typeof setImmediate&&dn(setImmediate)?function(){setImmediate(kt)}:function(){setTimeout(kt,0)};else{var wt=1,It=new MutationObserver(kt),Ct=document.createTextNode(String(wt));It.observe(Ct,{characterData:!0}),bt=function(){wt=(wt+1)%2,Ct.data=String(wt)},_t=!0}function Dt(n,e){var t;if(yt.push((function(){if(n)try{n.call(e)}catch(n){mt(n,e,"nextTick")}else t&&t(e)})),xt||(xt=!0,bt()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Et(n){if(void 0===n&&(n="$style"),!pn)return i;var e=pn[n];return e||i}function St(n){if(K){var e=pn;e&&he((function(){var t=e.$el,i=n(e,e._setupProxy);if(t&&1===t.nodeType){var a=t.style;for(var r in i)a.setProperty("--".concat(r),i[r])}}))}}function Mt(n){d(n)&&(n={loader:n});var e=n.loader,t=n.loadingComponent,i=n.errorComponent,a=n.delay,r=void 0===a?200:a,o=n.timeout,s=(n.suspensible,n.onError);var l=null,c=0,u=function(){var n;return l||(n=l=e().catch((function(n){if(n=n instanceof Error?n:new Error(String(n)),s)return new Promise((function(e,t){s(n,(function(){return e((c++,l=null,u()))}),(function(){return t(n)}),c+1)}));throw n})).then((function(e){return n!==l&&l?l:(e&&(e.__esModule||"Module"===e[Symbol.toStringTag])&&(e=e.default),e)})))};return function(){return{component:u(),delay:r,timeout:o,error:i,loading:t}}}function At(n){return function(e,t){if(void 0===t&&(t=pn),t)return function(n,e,t){var i=n.$options;i[e]=Oi(i[e],t)}(t,n,e)}}var Ot=At("beforeMount"),Pt=At("mounted"),jt=At("beforeUpdate"),zt=At("updated"),Rt=At("beforeDestroy"),$t=At("destroyed"),Lt=At("activated"),Ut=At("deactivated"),Nt=At("serverPrefetch"),qt=At("renderTracked"),Bt=At("renderTriggered"),Ft=At("errorCaptured");function Vt(n,e){void 0===e&&(e=pn),Ft(n,e)}var Gt="2.7.16";function Ht(n){return n}var Wt=new cn;function Qt(n){return function n(e,t){var i,r,o=a(e);if(!o&&!c(e)||e.__v_skip||Object.isFrozen(e)||e instanceof gn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(o)for(i=e.length;i--;)n(e[i],t);else if(Wn(e))n(e.value,t);else for(r=Object.keys(e),i=r.length;i--;)n(e[r[i]],t)}(n,Wt),Wt.clear(),n}var Kt,Yt=0,Xt=function(){function n(n,e,t,i,a){var r,o;r=this,void 0===(o=ge&&!ge._vm?ge:n?n._scope:void 0)&&(o=ge),o&&o.active&&o.effects.push(r),(this.vm=n)&&a&&(n._watcher=this),i?(this.deep=!!i.deep,this.user=!!i.user,this.lazy=!!i.lazy,this.sync=!!i.sync,this.before=i.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Yt,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="",d(e)?this.getter=e:(this.getter=function(n){if(!W.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=j)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;Tn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;mt(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Qt(n),wn(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():bi(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||c(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');gt(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&x(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Jt(n,e){Kt.$on(n,e)}function Zt(n,e){Kt.$off(n,e)}function ni(n,e){var t=Kt;return function i(){var a=e.apply(null,arguments);null!==a&&t.$off(n,i)}}function ei(n,e,t){Kt=n,Ee(e,t||{},Jt,Zt,ni,n),Kt=void 0}var ti=null;function ii(n){var e=ti;return ti=n,function(){ti=e}}function ai(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function ri(n,e){if(e){if(n._directInactive=!1,ai(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)ri(n.$children[t]);oi(n,"activated")}}function oi(n,e,t,i){void 0===i&&(i=!0),Tn();var a=pn,r=xe();i&&mn(n);var o=n.$options[e],s="".concat(e," hook");if(o)for(var l=0,d=o.length;l<d;l++)gt(o[l],n,t||null,n,s);n._hasHookEvent&&n.$emit("hook:"+e),i&&(mn(a),r&&r.on()),wn()}var si=[],li=[],di={},ci=!1,ui=!1,pi=0;var hi=0,mi=Date.now;if(K&&!X){var gi=window.performance;gi&&"function"==typeof gi.now&&mi()>document.createEvent("Event").timeStamp&&(mi=function(){return gi.now()})}var fi=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function vi(){var n,e;for(hi=mi(),ui=!0,si.sort(fi),pi=0;pi<si.length;pi++)(n=si[pi]).before&&n.before(),e=n.id,di[e]=null,n.run();var t=li.slice(),i=si.slice();pi=si.length=li.length=0,di={},ci=ui=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,ri(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],i=t.vm;i&&i._watcher===t&&i._isMounted&&!i._isDestroyed&&oi(i,"updated")}}(i),function(){for(var n=0;n<yn.length;n++){var e=yn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}yn.length=0}(),ln&&F.devtools&&ln.emit("flush")}function bi(n){var e=n.id;if(null==di[e]&&(n!==xn.target||!n.noRecurse)){if(di[e]=!0,ui){for(var t=si.length-1;t>pi&&si[t].id>n.id;)t--;si.splice(t+1,0,n)}else si.push(n);ci||(ci=!0,Dt(vi))}}function _i(n,e){if(n){for(var t=Object.create(null),i=un?Reflect.ownKeys(n):Object.keys(n),a=0;a<i.length;a++){var r=i[a];if("__ob__"!==r){var o=n[r].from;if(o in e._provided)t[r]=e._provided[o];else if("default"in n[r]){var s=n[r].default;t[r]=d(s)?s.call(e):s}else 0}}return t}}function yi(n,e,t,r,o){var l,d=this,c=o.options;T(r,"_uid")?(l=Object.create(r))._original=r:(l=r,r=r._original);var u=s(c._compiled),p=!u;this.data=n,this.props=e,this.children=t,this.parent=r,this.listeners=n.on||i,this.injections=_i(c.inject,r),this.slots=function(){return d.$slots||Xe(r,n.scopedSlots,d.$slots=Qe(t,r)),d.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return Xe(r,n.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=Xe(r,n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,i){var o=pt(l,n,e,t,i,p);return o&&!a(o)&&(o.fnScopeId=c._scopeId,o.fnContext=r),o}:this._c=function(n,e,t,i){return pt(l,n,e,t,i,p)}}function xi(n,e,t,i,a){var r=bn(n);return r.fnContext=t,r.fnOptions=i,e.slot&&((r.data||(r.data={})).slot=e.slot),r}function ki(n,e){for(var t in e)n[C(t)]=e[t]}function Ti(n){return n.name||n.__name||n._componentTag}We(yi.prototype);var wi={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;wi.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},i=n.data.inlineTemplate;o(i)&&(t.render=i.render,t.staticRenderFns=i.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,ti)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,r){var o=a.data.scopedSlots,s=n.$scopedSlots,l=!!(o&&!o.$stable||s!==i&&!s.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),d=!!(r||n.$options._renderChildren||l),c=n.$vnode;n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a),n.$options._renderChildren=r;var u=a.data.attrs||i;n._attrsProxy&&et(n._attrsProxy,u,c.data&&c.data.attrs||i,n,"$attrs")&&(d=!0),n.$attrs=u,t=t||i;var p=n.$options._parentListeners;if(n._listenersProxy&&et(n._listenersProxy,t,p||i,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,ei(n,t,p),e&&n.$options.props){Mn(!1);for(var h=n._props,m=n.$options._propKeys||[],g=0;g<m.length;g++){var f=m[g],v=n.$options.props;h[f]=$i(f,v,e,n)}Mn(!0),n.$options.propsData=e}d&&(n.$slots=Qe(r,a.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,i=n.componentInstance;i._isMounted||(i._isMounted=!0,oi(i,"mounted")),n.data.keepAlive&&(t._isMounted?((e=i)._inactive=!1,li.push(e)):ri(i,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,ai(e))||e._inactive)){e._inactive=!0;for(var i=0;i<e.$children.length;i++)n(e.$children[i]);oi(e,"deactivated")}}(e,!0):e.$destroy())}},Ii=Object.keys(wi);function Ci(n,e,t,l,d){if(!r(n)){var u=t.$options._base;if(c(n)&&(n=u.extend(n)),"function"==typeof n){var p;if(r(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=dt;if(t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var i=n.owners=[t],a=!0,l=null,d=null;t.$on("hook:destroyed",(function(){return x(i,t)}));var u=function(n){for(var e=0,t=i.length;e<t;e++)i[e].$forceUpdate();n&&(i.length=0,null!==l&&(clearTimeout(l),l=null),null!==d&&(clearTimeout(d),d=null))},p=U((function(t){n.resolved=ct(t,e),a?i.length=0:u(!0)})),h=U((function(e){o(n.errorComp)&&(n.error=!0,u(!0))})),m=n(p,h);return c(m)&&(g(m)?r(n.resolved)&&m.then(p,h):g(m.component)&&(m.component.then(p,h),o(m.error)&&(n.errorComp=ct(m.error,e)),o(m.loading)&&(n.loadingComp=ct(m.loading,e),0===m.delay?n.loading=!0:l=setTimeout((function(){l=null,r(n.resolved)&&r(n.error)&&(n.loading=!0,u(!1))}),m.delay||200)),o(m.timeout)&&(d=setTimeout((function(){d=null,r(n.resolved)&&h(null)}),m.timeout)))),a=!1,n.loading?n.loadingComp:n.resolved}}(p=n,u)))return function(n,e,t,i,a){var r=fn();return r.asyncFactory=n,r.asyncMeta={data:e,context:t,children:i,tag:a},r}(p,e,t,l,d);e=e||{},Xi(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",i=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var r=e.on||(e.on={}),s=r[i],l=e.model.callback;o(s)?(a(s)?-1===s.indexOf(l):s!==l)&&(r[i]=[l].concat(s)):r[i]=l}(n.options,e);var h=function(n,e,t){var i=e.options.props;if(!r(i)){var a={},s=n.attrs,l=n.props;if(o(s)||o(l))for(var d in i){var c=S(d);Me(a,l,d,c,!0)||Me(a,s,d,c,!1)}return a}}(e,n);if(s(n.options.functional))return function(n,e,t,r,s){var l=n.options,d={},c=l.props;if(o(c))for(var u in c)d[u]=$i(u,c,e||i);else o(t.attrs)&&ki(d,t.attrs),o(t.props)&&ki(d,t.props);var p=new yi(t,d,s,r,n),h=l.render.call(null,p._c,p);if(h instanceof gn)return xi(h,t,p.parent,l,p);if(a(h)){for(var m=Ae(h)||[],g=new Array(m.length),f=0;f<m.length;f++)g[f]=xi(m[f],t,p.parent,l,p);return g}}(n,h,e,t,l);var m=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var f=e.slot;e={},f&&(e.slot=f)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Ii.length;t++){var i=Ii[t],a=e[i],r=wi[i];a===r||a&&a._merged||(e[i]=a?Di(r,a):r)}}(e);var v=Ti(n.options)||d;return new gn("vue-component-".concat(n.cid).concat(v?"-".concat(v):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:h,listeners:m,tag:d,children:l},p)}}}function Di(n,e){var t=function(t,i){n(t,i),e(t,i)};return t._merged=!0,t}var Ei=j,Si=F.optionMergeStrategies;function Mi(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var i,a,r,o=un?Reflect.ownKeys(e):Object.keys(e),s=0;s<o.length;s++)"__ob__"!==(i=o[s])&&(a=n[i],r=e[i],t&&T(n,i)?a!==r&&p(a)&&p(r)&&Mi(a,r):zn(n,i,r));return n}function Ai(n,e,t){return t?function(){var i=d(e)?e.call(t,t):e,a=d(n)?n.call(t,t):n;return i?Mi(i,a):a}:e?n?function(){return Mi(d(e)?e.call(this,this):e,d(n)?n.call(this,this):n)}:e:n}function Oi(n,e){var t=e?n?n.concat(e):a(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Pi(n,e,t,i){var a=Object.create(n||null);return e?O(a,e):a}Si.data=function(n,e,t){return t?Ai(n,e,t):e&&"function"!=typeof e?n:Ai(n,e)},B.forEach((function(n){Si[n]=Oi})),q.forEach((function(n){Si[n+"s"]=Pi})),Si.watch=function(n,e,t,i){if(n===an&&(n=void 0),e===an&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var r={};for(var o in O(r,n),e){var s=r[o],l=e[o];s&&!a(s)&&(s=[s]),r[o]=s?s.concat(l):a(l)?l:[l]}return r},Si.props=Si.methods=Si.inject=Si.computed=function(n,e,t,i){if(!n)return e;var a=Object.create(null);return O(a,n),e&&O(a,e),a},Si.provide=function(n,e){return n?function(){var t=Object.create(null);return Mi(t,d(n)?n.call(this):n),e&&Mi(t,d(e)?e.call(this):e,!1),t}:e};var ji=function(n,e){return void 0===e?n:e};function zi(n,e,t){if(d(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var i,r,o={};if(a(t))for(i=t.length;i--;)"string"==typeof(r=t[i])&&(o[C(r)]={type:null});else if(p(t))for(var s in t)r=t[s],o[C(s)]=p(r)?r:{type:r};else 0;n.props=o}}(e),function(n,e){var t=n.inject;if(t){var i=n.inject={};if(a(t))for(var r=0;r<t.length;r++)i[t[r]]={from:t[r]};else if(p(t))for(var o in t){var s=t[o];i[o]=p(s)?O({from:o},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var i=e[t];d(i)&&(e[t]={bind:i,update:i})}}(e),!e._base&&(e.extends&&(n=zi(n,e.extends,t)),e.mixins))for(var i=0,r=e.mixins.length;i<r;i++)n=zi(n,e.mixins[i],t);var o,s={};for(o in n)l(o);for(o in e)T(n,o)||l(o);function l(i){var a=Si[i]||ji;s[i]=a(n[i],e[i],t,i)}return s}function Ri(n,e,t,i){if("string"==typeof t){var a=n[e];if(T(a,t))return a[t];var r=C(t);if(T(a,r))return a[r];var o=D(r);return T(a,o)?a[o]:a[t]||a[r]||a[o]}}function $i(n,e,t,i){var a=e[n],r=!T(t,n),o=t[n],s=qi(Boolean,a.type);if(s>-1)if(r&&!T(a,"default"))o=!1;else if(""===o||o===S(n)){var l=qi(String,a.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!T(e,"default"))return;var i=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return d(i)&&"Function"!==Ui(e.type)?i.call(n):i}(i,a,n);var c=Sn;Mn(!0),Pn(o),Mn(c)}return o}var Li=/^\s*function (\w+)/;function Ui(n){var e=n&&n.toString().match(Li);return e?e[1]:""}function Ni(n,e){return Ui(n)===Ui(e)}function qi(n,e){if(!a(e))return Ni(e,n)?0:-1;for(var t=0,i=e.length;t<i;t++)if(Ni(e[t],n))return t;return-1}var Bi={enumerable:!0,configurable:!0,get:j,set:j};function Fi(n,e,t){Bi.get=function(){return this[e][t]},Bi.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Bi)}function Vi(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},i=n._props=Un({}),a=n.$options._propKeys=[];n.$parent&&Mn(!1);var r=function(r){a.push(r);var o=$i(r,e,t,n);jn(i,r,o,void 0,!0),r in n||Fi(n,"_props",r)};for(var o in e)r(o);Mn(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var i=n._setupContext=nt(n);mn(n),Tn();var a=gt(t,null,[n._props||Un({}),i],n,"setup");if(wn(),mn(),d(a))e.render=a;else if(c(a))if(n._setupState=a,a.__sfc){var r=n._setupProxy={};for(var o in a)"__sfc"!==o&&ne(r,a,o)}else for(var o in a)G(o)||ne(n,a,o);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?j:M(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;p(e=n._data=d(e)?function(n,e){Tn();try{return n.call(e,e)}catch(n){return mt(n,e,"data()"),{}}finally{wn()}}(e,n):e||{})||(e={});var t=Object.keys(e),i=n.$options.props,a=(n.$options.methods,t.length);for(;a--;){var r=t[a];0,i&&T(i,r)||G(r)||Fi(n,"_data",r)}var o=Pn(e);o&&o.vmCount++}(n);else{var t=Pn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),i=sn();for(var a in e){var r=e[a],o=d(r)?r:r.get;0,i||(t[a]=new Xt(n,o||j,j,Gi)),a in n||Hi(n,a,r)}}(n,e.computed),e.watch&&e.watch!==an&&function(n,e){for(var t in e){var i=e[t];if(a(i))for(var r=0;r<i.length;r++)Ki(n,t,i[r]);else Ki(n,t,i)}}(n,e.watch)}var Gi={lazy:!0};function Hi(n,e,t){var i=!sn();d(t)?(Bi.get=i?Wi(e):Qi(t),Bi.set=j):(Bi.get=t.get?i&&!1!==t.cache?Wi(e):Qi(t.get):j,Bi.set=t.set||j),Object.defineProperty(n,e,Bi)}function Wi(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),xn.target&&e.depend(),e.value}}function Qi(n){return function(){return n.call(this,this)}}function Ki(n,e,t,i){return p(t)&&(i=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,i)}var Yi=0;function Xi(n){var e=n.options;if(n.super){var t=Xi(n.super);if(t!==n.superOptions){n.superOptions=t;var i=function(n){var e,t=n.options,i=n.sealedOptions;for(var a in t)t[a]!==i[a]&&(e||(e={}),e[a]=t[a]);return e}(n);i&&O(n.extendOptions,i),(e=n.options=zi(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Ji(n){this._init(n)}function Zi(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,i=t.cid,a=n._Ctor||(n._Ctor={});if(a[i])return a[i];var r=Ti(n)||Ti(t.options);var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=zi(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)Fi(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)Hi(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,q.forEach((function(n){o[n]=t[n]})),r&&(o.options.components[r]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=O({},o.options),a[i]=o,o}}function na(n){return n&&(Ti(n.Ctor.options)||n.tag)}function ea(n,e){return a(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!h(n)&&n.test(e)}function ta(n,e){var t=n.cache,i=n.keys,a=n._vnode,r=n.$vnode;for(var o in t){var s=t[o];if(s){var l=s.name;l&&!e(l)&&ia(t,o,i,a)}}r.componentOptions.children=void 0}function ia(n,e,t,i){var a=n[e];!a||i&&a.tag===i.tag||a.componentInstance.$destroy(),n[e]=null,x(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=Yi++,e._isVue=!0,e.__v_skip=!0,e._scope=new _e(!0),e._scope.parent=void 0,e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),i=e._parentVnode;t.parent=e.parent,t._parentVnode=i;var a=i.componentOptions;t.propsData=a.propsData,t._parentListeners=a.listeners,t._renderChildren=a.children,t._componentTag=a.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=zi(Xi(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&ei(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=Qe(e._renderChildren,a),n.$scopedSlots=t?Xe(n.$parent,t.data.scopedSlots,n.$slots):i,n._c=function(e,t,i,a){return pt(n,e,t,i,a,!1)},n.$createElement=function(e,t,i,a){return pt(n,e,t,i,a,!0)};var r=t&&t.data;jn(n,"$attrs",r&&r.attrs||i,null,!0),jn(n,"$listeners",e._parentListeners||i,null,!0)}(e),oi(e,"beforeCreate",void 0,!1),function(n){var e=_i(n.$options.inject,n);e&&(Mn(!1),Object.keys(e).forEach((function(t){jn(n,t,e[t])})),Mn(!0))}(e),Vi(e),function(n){var e=n.$options.provide;if(e){var t=d(e)?e.call(n):e;if(!c(t))return;for(var i=we(n),a=un?Reflect.ownKeys(t):Object.keys(t),r=0;r<a.length;r++){var o=a[r];Object.defineProperty(i,o,Object.getOwnPropertyDescriptor(t,o))}}}(e),oi(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(Ji),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=zn,n.prototype.$delete=Rn,n.prototype.$watch=function(n,e,t){if(p(e))return Ki(this,n,e,t);(t=t||{}).user=!0;var i=new Xt(this,n,e,t);if(t.immediate){var a='callback for immediate watcher "'.concat(i.expression,'"');Tn(),gt(e,this,[i.value],this,a),wn()}return function(){i.teardown()}}}(Ji),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var i=this;if(a(n))for(var r=0,o=n.length;r<o;r++)i.$on(n[r],t);else(i._events[n]||(i._events[n]=[])).push(t),e.test(n)&&(i._hasHookEvent=!0);return i},n.prototype.$once=function(n,e){var t=this;function i(){t.$off(n,i),e.apply(t,arguments)}return i.fn=e,t.$on(n,i),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(a(n)){for(var i=0,r=n.length;i<r;i++)t.$off(n[i],e);return t}var o,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var l=s.length;l--;)if((o=s[l])===e||o.fn===e){s.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?A(t):t;for(var i=A(arguments,1),a='event handler for "'.concat(n,'"'),r=0,o=t.length;r<o;r++)gt(t[r],e,i,e,a)}return e}}(Ji),function(n){n.prototype._update=function(n,e){var t=this,i=t.$el,a=t._vnode,r=ii(t);t._vnode=n,t.$el=a?t.__patch__(a,n):t.__patch__(t.$el,n,e,!1),r(),i&&(i.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var o=t;o&&o.$vnode&&o.$parent&&o.$vnode===o.$parent._vnode;)o.$parent.$el=o.$el,o=o.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){oi(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||x(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),oi(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Ji),function(n){We(n.prototype),n.prototype.$nextTick=function(n){return Dt(n,this)},n.prototype._render=function(){var n=this,e=n.$options,t=e.render,i=e._parentVnode;i&&n._isMounted&&(n.$scopedSlots=Xe(n.$parent,i.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&it(n._slotsProxy,n.$scopedSlots)),n.$vnode=i;var r,o=pn,s=dt;try{mn(n),dt=n,r=t.call(n._renderProxy,n.$createElement)}catch(e){mt(e,n,"render"),r=n._vnode}finally{dt=s,mn(o)}return a(r)&&1===r.length&&(r=r[0]),r instanceof gn||(r=fn()),r.parent=i,r}}(Ji);var aa=[String,RegExp,Array],ra={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:aa,exclude:aa,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,i=this.keyToCache;if(t){var a=t.tag,r=t.componentInstance,o=t.componentOptions;n[i]={name:na(o),tag:a,componentInstance:r},e.push(i),this.max&&e.length>parseInt(this.max)&&ia(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)ia(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){ta(n,(function(n){return ea(e,n)}))})),this.$watch("exclude",(function(e){ta(n,(function(n){return!ea(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=ut(n),t=e&&e.componentOptions;if(t){var i=na(t),a=this.include,r=this.exclude;if(a&&(!i||!ea(a,i))||r&&i&&ea(r,i))return e;var o=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;o[l]?(e.componentInstance=o[l].componentInstance,x(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return F}};Object.defineProperty(n,"config",e),n.util={warn:Ei,extend:O,mergeOptions:zi,defineReactive:jn},n.set=zn,n.delete=Rn,n.nextTick=Dt,n.observable=function(n){return Pn(n),n},n.options=Object.create(null),q.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,O(n.options.components,ra),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=A(arguments,1);return t.unshift(this),d(n.install)?n.install.apply(n,t):d(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=zi(this.options,n),this}}(n),Zi(n),function(n){q.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&d(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Ji),Object.defineProperty(Ji.prototype,"$isServer",{get:sn}),Object.defineProperty(Ji.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Ji,"FunctionalRenderContext",{value:yi}),Ji.version=Gt;var oa=_("style,class"),sa=_("input,textarea,option,select,progress"),la=_("contenteditable,draggable,spellcheck"),da=_("events,caret,typing,plaintext-only"),ca=_("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ua="http://www.w3.org/1999/xlink",pa=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},ha=function(n){return pa(n)?n.slice(6,n.length):""},ma=function(n){return null==n||!1===n};function ga(n){for(var e=n.data,t=n,i=n;o(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(e=fa(i.data,e));for(;o(t=t.parent);)t&&t.data&&(e=fa(e,t.data));return function(n,e){if(o(n)||o(e))return va(n,ba(e));return""}(e.staticClass,e.class)}function fa(n,e){return{staticClass:va(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function va(n,e){return n?e?n+" "+e:n:e||""}function ba(n){return Array.isArray(n)?function(n){for(var e,t="",i=0,a=n.length;i<a;i++)o(e=ba(n[i]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):c(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var _a={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ya=_("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),xa=_("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ka=function(n){return ya(n)||xa(n)};var Ta=Object.create(null);var wa=_("text,number,password,search,email,tel,url");var Ia=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(_a[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Ca={create:function(n,e){Da(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Da(n,!0),Da(e))},destroy:function(n){Da(n,!0)}};function Da(n,e){var t=n.data.ref;if(o(t)){var i=n.context,r=n.componentInstance||n.elm,s=e?null:r,l=e?void 0:r;if(d(t))gt(t,i,[s],i,"template ref function");else{var c=n.data.refInFor,u="string"==typeof t||"number"==typeof t,p=Wn(t),h=i.$refs;if(u||p)if(c){var m=u?h[t]:t.value;e?a(m)&&x(m,r):a(m)?m.includes(r)||m.push(r):u?(h[t]=[r],Ea(i,t,h[t])):t.value=[r]}else if(u){if(e&&h[t]!==r)return;h[t]=l,Ea(i,t,s)}else if(p){if(e&&t.value!==r)return;t.value=s}else 0}}}function Ea(n,e,t){var i=n._setupState;i&&T(i,e)&&(Wn(i[e])?i[e].value=t:i[e]=t)}var Sa=new gn("",{},[]),Ma=["create","activate","update","remove","destroy"];function Aa(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,i=o(t=n.data)&&o(t=t.attrs)&&t.type,a=o(t=e.data)&&o(t=t.attrs)&&t.type;return i===a||wa(i)&&wa(a)}(n,e)||s(n.isAsyncPlaceholder)&&r(e.asyncFactory.error))}function Oa(n,e,t){var i,a,r={};for(i=e;i<=t;++i)o(a=n[i].key)&&(r[a]=i);return r}var Pa={create:ja,update:ja,destroy:function(n){ja(n,Sa)}};function ja(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,i,a,r=n===Sa,o=e===Sa,s=Ra(n.data.directives,n.context),l=Ra(e.data.directives,e.context),d=[],c=[];for(t in l)i=s[t],a=l[t],i?(a.oldValue=i.value,a.oldArg=i.arg,La(a,"update",e,n),a.def&&a.def.componentUpdated&&c.push(a)):(La(a,"bind",e,n),a.def&&a.def.inserted&&d.push(a));if(d.length){var u=function(){for(var t=0;t<d.length;t++)La(d[t],"inserted",e,n)};r?Se(e,"insert",u):u()}c.length&&Se(e,"postpatch",(function(){for(var t=0;t<c.length;t++)La(c[t],"componentUpdated",e,n)}));if(!r)for(t in s)l[t]||La(s[t],"unbind",n,n,o)}(n,e)}var za=Object.create(null);function Ra(n,e){var t,i,a=Object.create(null);if(!n)return a;for(t=0;t<n.length;t++){if((i=n[t]).modifiers||(i.modifiers=za),a[$a(i)]=i,e._setupState&&e._setupState.__sfc){var r=i.def||Ri(e,"_setupState","v-"+i.name);i.def="function"==typeof r?{bind:r,update:r}:r}i.def=i.def||Ri(e.$options,"directives",i.name)}return a}function $a(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function La(n,e,t,i,a){var r=n.def&&n.def[e];if(r)try{r(t.elm,n,t,i,a)}catch(i){mt(i,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Ua=[Ca,Pa];function Na(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||r(n.data.attrs)&&r(e.data.attrs))){var i,a,l=e.elm,d=n.data.attrs||{},c=e.data.attrs||{};for(i in(o(c.__ob__)||s(c._v_attr_proxy))&&(c=e.data.attrs=O({},c)),c)a=c[i],d[i]!==a&&qa(l,i,a,e.data.pre);for(i in(X||Z)&&c.value!==d.value&&qa(l,"value",c.value),d)r(c[i])&&(pa(i)?l.removeAttributeNS(ua,ha(i)):la(i)||l.removeAttribute(i))}}function qa(n,e,t,i){i||n.tagName.indexOf("-")>-1?Ba(n,e,t):ca(e)?ma(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):la(e)?n.setAttribute(e,function(n,e){return ma(e)||"false"===e?"false":"contenteditable"===n&&da(e)?e:"true"}(e,t)):pa(e)?ma(t)?n.removeAttributeNS(ua,ha(e)):n.setAttributeNS(ua,e,t):Ba(n,e,t)}function Ba(n,e,t){if(ma(t))n.removeAttribute(e);else{if(X&&!J&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var i=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",i)};n.addEventListener("input",i),n.__ieph=!0}n.setAttribute(e,t)}}var Fa={create:Na,update:Na};function Va(n,e){var t=e.elm,i=e.data,a=n.data;if(!(r(i.staticClass)&&r(i.class)&&(r(a)||r(a.staticClass)&&r(a.class)))){var s=ga(e),l=t._transitionClasses;o(l)&&(s=va(s,ba(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Ga,Ha={create:Va,update:Va};function Wa(n,e,t){var i=Ga;return function a(){var r=e.apply(null,arguments);null!==r&&Ya(n,a,t,i)}}var Qa=_t&&!(tn&&Number(tn[1])<=53);function Ka(n,e,t,i){if(Qa){var a=hi,r=e;e=r._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=a||n.timeStamp<=0||n.target.ownerDocument!==document)return r.apply(this,arguments)}}Ga.addEventListener(n,e,rn?{capture:t,passive:i}:t)}function Ya(n,e,t,i){(i||Ga).removeEventListener(n,e._wrapper||e,t)}function Xa(n,e){if(!r(n.data.on)||!r(e.data.on)){var t=e.data.on||{},i=n.data.on||{};Ga=e.elm||n.elm,function(n){if(o(n.__r)){var e=X?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Ee(t,i,Ka,Ya,Wa,e.context),Ga=void 0}}var Ja,Za={create:Xa,update:Xa,destroy:function(n){return Xa(n,Sa)}};function nr(n,e){if(!r(n.data.domProps)||!r(e.data.domProps)){var t,i,a=e.elm,l=n.data.domProps||{},d=e.data.domProps||{};for(t in(o(d.__ob__)||s(d._v_attr_proxy))&&(d=e.data.domProps=O({},d)),l)t in d||(a[t]="");for(t in d){if(i=d[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),i===l[t])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===t&&"PROGRESS"!==a.tagName){a._value=i;var c=r(i)?"":String(i);er(a,c)&&(a.value=c)}else if("innerHTML"===t&&xa(a.tagName)&&r(a.innerHTML)){(Ja=Ja||document.createElement("div")).innerHTML="<svg>".concat(i,"</svg>");for(var u=Ja.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;u.firstChild;)a.appendChild(u.firstChild)}else if(i!==l[t])try{a[t]=i}catch(n){}}}}function er(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,i=n._vModifiers;if(o(i)){if(i.number)return b(t)!==b(e);if(i.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var tr={create:nr,update:nr},ir=w((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var i=n.split(t);i.length>1&&(e[i[0].trim()]=i[1].trim())}})),e}));function ar(n){var e=rr(n.style);return n.staticStyle?O(n.staticStyle,e):e}function rr(n){return Array.isArray(n)?P(n):"string"==typeof n?ir(n):n}var or,sr=/^--/,lr=/\s*!important$/,dr=function(n,e,t){if(sr.test(e))n.style.setProperty(e,t);else if(lr.test(t))n.style.setProperty(S(e),t.replace(lr,""),"important");else{var i=ur(e);if(Array.isArray(t))for(var a=0,r=t.length;a<r;a++)n.style[i]=t[a];else n.style[i]=t}},cr=["Webkit","Moz","ms"],ur=w((function(n){if(or=or||document.createElement("div").style,"filter"!==(n=C(n))&&n in or)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<cr.length;t++){var i=cr[t]+e;if(i in or)return i}}));function pr(n,e){var t=e.data,i=n.data;if(!(r(t.staticStyle)&&r(t.style)&&r(i.staticStyle)&&r(i.style))){var a,s,l=e.elm,d=i.staticStyle,c=i.normalizedStyle||i.style||{},u=d||c,p=rr(e.data.style)||{};e.data.normalizedStyle=o(p.__ob__)?O({},p):p;var h=function(n,e){var t,i={};if(e)for(var a=n;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(t=ar(a.data))&&O(i,t);(t=ar(n.data))&&O(i,t);for(var r=n;r=r.parent;)r.data&&(t=ar(r.data))&&O(i,t);return i}(e,!0);for(s in u)r(h[s])&&dr(l,s,"");for(s in h)a=h[s],dr(l,s,null==a?"":a)}}var hr={create:pr,update:pr},mr=/\s+/;function gr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(mr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function fr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(mr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),i=" "+e+" ";t.indexOf(i)>=0;)t=t.replace(i," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function vr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&O(e,br(n.name||"v")),O(e,n),e}return"string"==typeof n?br(n):void 0}}var br=w((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),_r=K&&!J,yr="transition",xr="transitionend",kr="animation",Tr="animationend";_r&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(yr="WebkitTransition",xr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(kr="WebkitAnimation",Tr="webkitAnimationEnd"));var wr=K?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Ir(n){wr((function(){wr(n)}))}function Cr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),gr(n,e))}function Dr(n,e){n._transitionClasses&&x(n._transitionClasses,e),fr(n,e)}function Er(n,e,t){var i=Mr(n,e),a=i.type,r=i.timeout,o=i.propCount;if(!a)return t();var s="transition"===a?xr:Tr,l=0,d=function(){n.removeEventListener(s,c),t()},c=function(e){e.target===n&&++l>=o&&d()};setTimeout((function(){l<o&&d()}),r+1),n.addEventListener(s,c)}var Sr=/\b(transform|all)(,|$)/;function Mr(n,e){var t,i=window.getComputedStyle(n),a=(i[yr+"Delay"]||"").split(", "),r=(i[yr+"Duration"]||"").split(", "),o=Ar(a,r),s=(i[kr+"Delay"]||"").split(", "),l=(i[kr+"Duration"]||"").split(", "),d=Ar(s,l),c=0,u=0;return"transition"===e?o>0&&(t="transition",c=o,u=r.length):"animation"===e?d>0&&(t="animation",c=d,u=l.length):u=(t=(c=Math.max(o,d))>0?o>d?"transition":"animation":null)?"transition"===t?r.length:l.length:0,{type:t,timeout:c,propCount:u,hasTransform:"transition"===t&&Sr.test(i[yr+"Property"])}}function Ar(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Or(e)+Or(n[t])})))}function Or(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Pr(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var i=vr(n.data.transition);if(!r(i)&&!o(t._enterCb)&&1===t.nodeType){for(var a=i.css,s=i.type,l=i.enterClass,u=i.enterToClass,p=i.enterActiveClass,h=i.appearClass,m=i.appearToClass,g=i.appearActiveClass,f=i.beforeEnter,v=i.enter,_=i.afterEnter,y=i.enterCancelled,x=i.beforeAppear,k=i.appear,T=i.afterAppear,w=i.appearCancelled,I=i.duration,C=ti,D=ti.$vnode;D&&D.parent;)C=D.context,D=D.parent;var E=!C._isMounted||!n.isRootInsert;if(!E||k||""===k){var S=E&&h?h:l,M=E&&g?g:p,A=E&&m?m:u,O=E&&x||f,P=E&&d(k)?k:v,j=E&&T||_,z=E&&w||y,R=b(c(I)?I.enter:I);0;var $=!1!==a&&!J,L=Rr(P),N=t._enterCb=U((function(){$&&(Dr(t,A),Dr(t,M)),N.cancelled?($&&Dr(t,S),z&&z(t)):j&&j(t),t._enterCb=null}));n.data.show||Se(n,"insert",(function(){var e=t.parentNode,i=e&&e._pending&&e._pending[n.key];i&&i.tag===n.tag&&i.elm._leaveCb&&i.elm._leaveCb(),P&&P(t,N)})),O&&O(t),$&&(Cr(t,S),Cr(t,M),Ir((function(){Dr(t,S),N.cancelled||(Cr(t,A),L||(zr(R)?setTimeout(N,R):Er(t,s,N)))}))),n.data.show&&(e&&e(),P&&P(t,N)),$||L||N()}}}function jr(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var i=vr(n.data.transition);if(r(i)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var a=i.css,s=i.type,l=i.leaveClass,d=i.leaveToClass,u=i.leaveActiveClass,p=i.beforeLeave,h=i.leave,m=i.afterLeave,g=i.leaveCancelled,f=i.delayLeave,v=i.duration,_=!1!==a&&!J,y=Rr(h),x=b(c(v)?v.leave:v);0;var k=t._leaveCb=U((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),_&&(Dr(t,d),Dr(t,u)),k.cancelled?(_&&Dr(t,l),g&&g(t)):(e(),m&&m(t)),t._leaveCb=null}));f?f(T):T()}function T(){k.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),_&&(Cr(t,l),Cr(t,u),Ir((function(){Dr(t,l),k.cancelled||(Cr(t,d),y||(zr(x)?setTimeout(k,x):Er(t,s,k)))}))),h&&h(t,k),_||y||k())}}function zr(n){return"number"==typeof n&&!isNaN(n)}function Rr(n){if(r(n))return!1;var e=n.fns;return o(e)?Rr(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function $r(n,e){!0!==e.data.show&&Pr(e)}var Lr=function(n){var e,t,i={},d=n.modules,c=n.nodeOps;for(e=0;e<Ma.length;++e)for(i[Ma[e]]=[],t=0;t<d.length;++t)o(d[t][Ma[e]])&&i[Ma[e]].push(d[t][Ma[e]]);function u(n){var e=c.parentNode(n);o(e)&&c.removeChild(e,n)}function p(n,e,t,a,r,l,d){if(o(n.elm)&&o(l)&&(n=l[d]=bn(n)),n.isRootInsert=!r,!function(n,e,t,a){var r=n.data;if(o(r)){var l=o(n.componentInstance)&&r.keepAlive;if(o(r=r.hook)&&o(r=r.init)&&r(n,!1),o(n.componentInstance))return h(n,e),m(t,n.elm,a),s(l)&&function(n,e,t,a){var r,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(r=s.data)&&o(r=r.transition)){for(r=0;r<i.activate.length;++r)i.activate[r](Sa,s);e.push(s);break}m(t,n.elm,a)}(n,e,t,a),!0}}(n,e,t,a)){var u=n.data,p=n.children,f=n.tag;o(f)?(n.elm=n.ns?c.createElementNS(n.ns,f):c.createElement(f,n),b(n),g(n,p,e),o(u)&&v(n,e),m(t,n.elm,a)):s(n.isComment)?(n.elm=c.createComment(n.text),m(t,n.elm,a)):(n.elm=c.createTextNode(n.text),m(t,n.elm,a))}}function h(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,f(n)?(v(n,e),b(n)):(Da(n),e.push(n))}function m(n,e,t){o(n)&&(o(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function g(n,e,t){if(a(e)){0;for(var i=0;i<e.length;++i)p(e[i],t,n.elm,null,!0,e,i)}else l(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function f(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function v(n,t){for(var a=0;a<i.create.length;++a)i.create[a](Sa,n);o(e=n.data.hook)&&(o(e.create)&&e.create(Sa,n),o(e.insert)&&t.push(n))}function b(n){var e;if(o(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;o(e=ti)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function y(n,e,t,i,a,r){for(;i<=a;++i)p(t[i],r,n,e,!1,t,i)}function x(n){var e,t,a=n.data;if(o(a))for(o(e=a.hook)&&o(e=e.destroy)&&e(n),e=0;e<i.destroy.length;++e)i.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function k(n,e,t){for(;e<=t;++e){var i=n[e];o(i)&&(o(i.tag)?(T(i),x(i)):u(i.elm))}}function T(n,e){if(o(e)||o(n.data)){var t,a=i.remove.length+1;for(o(e)?e.listeners+=a:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,a),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&T(t,e),t=0;t<i.remove.length;++t)i.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else u(n.elm)}function w(n,e,t,i){for(var a=t;a<i;a++){var r=e[a];if(o(r)&&Aa(n,r))return a}}function I(n,e,t,a,l,d){if(n!==e){o(e.elm)&&o(a)&&(e=a[l]=bn(e));var u=e.elm=n.elm;if(s(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?E(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var h,m=e.data;o(m)&&o(h=m.hook)&&o(h=h.prepatch)&&h(n,e);var g=n.children,v=e.children;if(o(m)&&f(e)){for(h=0;h<i.update.length;++h)i.update[h](n,e);o(h=m.hook)&&o(h=h.update)&&h(n,e)}r(e.text)?o(g)&&o(v)?g!==v&&function(n,e,t,i,a){var s,l,d,u=0,h=0,m=e.length-1,g=e[0],f=e[m],v=t.length-1,b=t[0],_=t[v],x=!a;for(0;u<=m&&h<=v;)r(g)?g=e[++u]:r(f)?f=e[--m]:Aa(g,b)?(I(g,b,i,t,h),g=e[++u],b=t[++h]):Aa(f,_)?(I(f,_,i,t,v),f=e[--m],_=t[--v]):Aa(g,_)?(I(g,_,i,t,v),x&&c.insertBefore(n,g.elm,c.nextSibling(f.elm)),g=e[++u],_=t[--v]):Aa(f,b)?(I(f,b,i,t,h),x&&c.insertBefore(n,f.elm,g.elm),f=e[--m],b=t[++h]):(r(s)&&(s=Oa(e,u,m)),r(l=o(b.key)?s[b.key]:w(b,e,u,m))?p(b,i,n,g.elm,!1,t,h):Aa(d=e[l],b)?(I(d,b,i,t,h),e[l]=void 0,x&&c.insertBefore(n,d.elm,g.elm)):p(b,i,n,g.elm,!1,t,h),b=t[++h]);u>m?y(n,r(t[v+1])?null:t[v+1].elm,t,h,v,i):h>v&&k(e,u,m)}(u,g,v,t,d):o(v)?(o(n.text)&&c.setTextContent(u,""),y(u,null,v,0,v.length-1,t)):o(g)?k(g,0,g.length-1):o(n.text)&&c.setTextContent(u,""):n.text!==e.text&&c.setTextContent(u,e.text),o(m)&&o(h=m.hook)&&o(h=h.postpatch)&&h(n,e)}}}function C(n,e,t){if(s(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var i=0;i<e.length;++i)e[i].data.hook.insert(e[i])}var D=_("attrs,class,staticClass,staticStyle,key");function E(n,e,t,i){var a,r=e.tag,l=e.data,d=e.children;if(i=i||l&&l.pre,e.elm=n,s(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(e,!0),o(a=e.componentInstance)))return h(e,t),!0;if(o(r)){if(o(d))if(n.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==n.innerHTML)return!1}else{for(var c=!0,u=n.firstChild,p=0;p<d.length;p++){if(!u||!E(u,d[p],t,i)){c=!1;break}u=u.nextSibling}if(!c||u)return!1}else g(e,d,t);if(o(l)){var m=!1;for(var f in l)if(!D(f)){m=!0,v(e,t);break}!m&&l.class&&Qt(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,a){if(!r(e)){var l,d=!1,u=[];if(r(n))d=!0,p(e,u);else{var h=o(n.nodeType);if(!h&&Aa(n,e))I(n,e,u,null,null,a);else{if(h){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&E(n,e,u))return C(e,u,!0),n;l=n,n=new gn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var m=n.elm,g=c.parentNode(m);if(p(e,u,m._leaveCb?null:g,c.nextSibling(m)),o(e.parent))for(var v=e.parent,b=f(e);v;){for(var _=0;_<i.destroy.length;++_)i.destroy[_](v);if(v.elm=e.elm,b){for(var y=0;y<i.create.length;++y)i.create[y](Sa,v);var T=v.data.hook.insert;if(T.merged)for(var w=T.fns.slice(1),D=0;D<w.length;D++)w[D]()}else Da(v);v=v.parent}o(g)?k([n],0,0):o(n.tag)&&x(n)}}return C(e,u,d),e.elm}o(n)&&x(n)}}({nodeOps:Ia,modules:[Fa,Ha,Za,tr,hr,K?{create:$r,activate:$r,remove:function(n,e){!0!==n.data.show?jr(n,e):e()}}:{}].concat(Ua)});J&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Hr(n,"input")}));var Ur={inserted:function(n,e,t,i){"select"===t.tag?(i.elm&&!i.elm._vOptions?Se(t,"postpatch",(function(){Ur.componentUpdated(n,e,t)})):Nr(n,e,t.context),n._vOptions=[].map.call(n.options,Fr)):("textarea"===t.tag||wa(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Vr),n.addEventListener("compositionend",Gr),n.addEventListener("change",Gr),J&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Nr(n,e,t.context);var i=n._vOptions,a=n._vOptions=[].map.call(n.options,Fr);if(a.some((function(n,e){return!$(n,i[e])})))(n.multiple?e.value.some((function(n){return Br(n,a)})):e.value!==e.oldValue&&Br(e.value,a))&&Hr(n,"change")}}};function Nr(n,e,t){qr(n,e,t),(X||Z)&&setTimeout((function(){qr(n,e,t)}),0)}function qr(n,e,t){var i=e.value,a=n.multiple;if(!a||Array.isArray(i)){for(var r,o,s=0,l=n.options.length;s<l;s++)if(o=n.options[s],a)r=L(i,Fr(o))>-1,o.selected!==r&&(o.selected=r);else if($(Fr(o),i))return void(n.selectedIndex!==s&&(n.selectedIndex=s));a||(n.selectedIndex=-1)}}function Br(n,e){return e.every((function(e){return!$(e,n)}))}function Fr(n){return"_value"in n?n._value:n.value}function Vr(n){n.target.composing=!0}function Gr(n){n.target.composing&&(n.target.composing=!1,Hr(n.target,"input"))}function Hr(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Wr(n){return!n.componentInstance||n.data&&n.data.transition?n:Wr(n.componentInstance._vnode)}var Qr={model:Ur,show:{bind:function(n,e,t){var i=e.value,a=(t=Wr(t)).data&&t.data.transition,r=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;i&&a?(t.data.show=!0,Pr(t,(function(){n.style.display=r}))):n.style.display=i?r:"none"},update:function(n,e,t){var i=e.value;!i!=!e.oldValue&&((t=Wr(t)).data&&t.data.transition?(t.data.show=!0,i?Pr(t,(function(){n.style.display=n.__vOriginalDisplay})):jr(t,(function(){n.style.display="none"}))):n.style.display=i?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,i,a){a||(n.style.display=n.__vOriginalDisplay)}}},Kr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Yr(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Yr(ut(e.children)):n}function Xr(n){var e={},t=n.$options;for(var i in t.propsData)e[i]=n[i];var a=t._parentListeners;for(var i in a)e[C(i)]=a[i];return e}function Jr(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Zr=function(n){return n.tag||Ye(n)},no=function(n){return"show"===n.name},eo={name:"transition",props:Kr,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Zr)).length){0;var i=this.mode;0;var a=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return a;var r=Yr(a);if(!r)return a;if(this._leaving)return Jr(n,a);var o="__transition-".concat(this._uid,"-");r.key=null==r.key?r.isComment?o+"comment":o+r.tag:l(r.key)?0===String(r.key).indexOf(o)?r.key:o+r.key:r.key;var s=(r.data||(r.data={})).transition=Xr(this),d=this._vnode,c=Yr(d);if(r.data.directives&&r.data.directives.some(no)&&(r.data.show=!0),c&&c.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(r,c)&&!Ye(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var u=c.data.transition=O({},s);if("out-in"===i)return this._leaving=!0,Se(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Jr(n,a);if("in-out"===i){if(Ye(r))return d;var p,h=function(){p()};Se(s,"afterEnter",h),Se(s,"enterCancelled",h),Se(u,"delayLeave",(function(n){p=n}))}}return a}}},to=O({tag:String,moveClass:String},Kr);function io(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function ao(n){n.data.newPos=n.elm.getBoundingClientRect()}function ro(n){var e=n.data.pos,t=n.data.newPos,i=e.left-t.left,a=e.top-t.top;if(i||a){n.data.moved=!0;var r=n.elm.style;r.transform=r.WebkitTransform="translate(".concat(i,"px,").concat(a,"px)"),r.transitionDuration="0s"}}delete to.mode;var oo={Transition:eo,TransitionGroup:{props:to,beforeMount:function(){var n=this,e=this._update;this._update=function(t,i){var a=ii(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,a(),e.call(n,t,i)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),i=this.prevChildren=this.children,a=this.$slots.default||[],r=this.children=[],o=Xr(this),s=0;s<a.length;s++){if((c=a[s]).tag)if(null!=c.key&&0!==String(c.key).indexOf("__vlist"))r.push(c),t[c.key]=c,(c.data||(c.data={})).transition=o;else;}if(i){var l=[],d=[];for(s=0;s<i.length;s++){var c;(c=i[s]).data.transition=o,c.data.pos=c.elm.getBoundingClientRect(),t[c.key]?l.push(c):d.push(c)}this.kept=n(e,null,l),this.removed=d}return n(e,null,r)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(io),n.forEach(ao),n.forEach(ro),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,i=t.style;Cr(t,e),i.transform=i.WebkitTransform=i.transitionDuration="",t.addEventListener(xr,t._moveCb=function n(i){i&&i.target!==t||i&&!/transform$/.test(i.propertyName)||(t.removeEventListener(xr,n),t._moveCb=null,Dr(t,e))})}})))},methods:{hasMove:function(n,e){if(!_r)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){fr(t,n)})),gr(t,e),t.style.display="none",this.$el.appendChild(t);var i=Mr(t);return this.$el.removeChild(t),this._hasMove=i.hasTransform}}}};Ji.config.mustUseProp=function(n,e,t){return"value"===t&&sa(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Ji.config.isReservedTag=ka,Ji.config.isReservedAttr=oa,Ji.config.getTagNamespace=function(n){return xa(n)?"svg":"math"===n?"math":void 0},Ji.config.isUnknownElement=function(n){if(!K)return!0;if(ka(n))return!1;if(n=n.toLowerCase(),null!=Ta[n])return Ta[n];var e=document.createElement(n);return n.indexOf("-")>-1?Ta[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Ta[n]=/HTMLUnknownElement/.test(e.toString())},O(Ji.options.directives,Qr),O(Ji.options.components,oo),Ji.prototype.__patch__=K?Lr:j,Ji.prototype.$mount=function(n,e){return function(n,e,t){var i;n.$el=e,n.$options.render||(n.$options.render=fn),oi(n,"beforeMount"),i=function(){n._update(n._render(),t)},new Xt(n,i,j,{before:function(){n._isMounted&&!n._isDestroyed&&oi(n,"beforeUpdate")}},!0),t=!1;var a=n._preWatchers;if(a)for(var r=0;r<a.length;r++)a[r].run();return null==n.$vnode&&(n._isMounted=!0,oi(n,"mounted")),n}(this,n=n&&K?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},K&&setTimeout((function(){F.devtools&&ln&&ln.emit("init",Ji)}),0)},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};e.convertFieldsError=o,e.format=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];var i=1,a=e[0],o=e.length;if("function"==typeof a)return a.apply(null,e.slice(1));if("string"==typeof a){for(var s=String(a).replace(r,(function(n){if("%%"===n)return"%";if(i>=o)return n;switch(n){case"%s":return String(e[i++]);case"%d":return Number(e[i++]);case"%j":try{return JSON.stringify(e[i++])}catch(n){return"[Circular]"}break;default:return n}})),l=e[i];i<o;l=e[++i])s+=" "+l;return s}return a},e.isEmptyValue=function(n,e){if(null==n)return!0;if("array"===e&&Array.isArray(n)&&!n.length)return!0;if(function(n){return"string"===n||"url"===n||"hex"===n||"email"===n||"pattern"===n}(e)&&"string"==typeof n&&!n)return!0;return!1},e.isEmptyObject=function(n){return 0===Object.keys(n).length},e.asyncMap=function(n,e,t,i){if(e.first){return s(function(n){var e=[];return Object.keys(n).forEach((function(t){e.push.apply(e,n[t])})),e}(n),t,i)}var a=e.firstFields||[];!0===a&&(a=Object.keys(n));var r=Object.keys(n),l=r.length,d=0,c=[],u=new Promise((function(e,u){var p=function(n){if(c.push.apply(c,n),++d===l)return i(c),c.length?u({errors:c,fields:o(c)}):e()};r.forEach((function(e){var i=n[e];-1!==a.indexOf(e)?s(i,t,p):function(n,e,t){var i=[],a=0,r=n.length;function o(n){i.push.apply(i,n),++a===r&&t(i)}n.forEach((function(n){e(n,o)}))}(i,t,p)}))}));return u.catch((function(n){return n})),u},e.complementError=function(n){return function(e){return e&&e.message?(e.field=e.field||n.fullField,e):{message:"function"==typeof e?e():e,field:e.field||n.fullField}}},e.deepMerge=function(n,e){if(e)for(var t in e)if(e.hasOwnProperty(t)){var r=e[t];"object"===(void 0===r?"undefined":a(r))&&"object"===a(n[t])?n[t]=i({},n[t],r):n[t]=r}return n};var r=/%[sdj%]/g;e.warning=function(){};function o(n){if(!n||!n.length)return null;var e={};return n.forEach((function(n){var t=n.field;e[t]=e[t]||[],e[t].push(n)})),e}function s(n,e,t){var i=0,a=n.length;!function r(o){if(o&&o.length)t(o);else{var s=i;i+=1,s<a?e(n[s],r):t([])}}([])}},function(n,e,t){"use strict";var i="object"==typeof document&&document.all;n.exports=void 0===i&&void 0!==i?function(n){return"function"==typeof n||n===i}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var i=t(14),a=String,r=TypeError;n.exports=function(n){if(i(n))return n;throw new r(a(n)+" is not an object")}},function(n,e,t){"use strict";var i=function(n){return n&&n.Math===Math&&n};n.exports=i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof global&&global)||i("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=d(t(151)),a=d(t(349)),r=d(t(350)),o=d(t(351)),s=d(t(352)),l=d(t(353));function d(n){return n&&n.__esModule?n:{default:n}}e.default={required:i.default,whitespace:a.default,type:r.default,range:o.default,enum:s.default,pattern:l.default}},function(n,e,t){"use strict";var i=t(38),a=Function.prototype,r=a.call,o=i&&a.bind.bind(r,r);n.exports=i?o:function(n){return function(){return r.apply(n,arguments)}}},function(n,e,t){"use strict";var i=t(6);n.exports=!i((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){"use strict";e.__esModule=!0,e.isMac=e.isEmpty=e.isEqual=e.arrayEquals=e.looseEqual=e.capitalize=e.kebabCase=e.autoprefixer=e.isFirefox=e.isEdge=e.isIE=e.coerceTruthyValueToArray=e.arrayFind=e.arrayFindIndex=e.escapeRegexpString=e.valueEquals=e.generateId=e.getValueByPath=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};e.noop=function(){},e.hasOwn=function(n,e){return l.call(n,e)},e.toObject=function(n){for(var e={},t=0;t<n.length;t++)n[t]&&d(e,n[t]);return e},e.getPropByPath=function(n,e,t){for(var i=n,a=(e=(e=e.replace(/\[(\w+)\]/g,".$1")).replace(/^\./,"")).split("."),r=0,o=a.length;r<o-1&&(i||t);++r){var s=a[r];if(!(s in i)){if(t)throw new Error("please transfer a valid prop path to form item!");break}i=i[s]}return{o:i,k:a[r],v:i?i[a[r]]:null}},e.rafThrottle=function(n){var e=!1;return function(){for(var t=this,i=arguments.length,a=Array(i),r=0;r<i;r++)a[r]=arguments[r];e||(e=!0,window.requestAnimationFrame((function(i){n.apply(t,a),e=!1})))}},e.objToArray=function(n){if(Array.isArray(n))return n;return h(n)?[]:[n]};var a,r=t(1),o=(a=r)&&a.__esModule?a:{default:a},s=t(142);var l=Object.prototype.hasOwnProperty;function d(n,e){for(var t in e)n[t]=e[t];return n}e.getValueByPath=function(n,e){for(var t=(e=e||"").split("."),i=n,a=null,r=0,o=t.length;r<o;r++){var s=t[r];if(!i)break;if(r===o-1){a=i[s];break}i=i[s]}return a};e.generateId=function(){return Math.floor(1e4*Math.random())},e.valueEquals=function(n,e){if(n===e)return!0;if(!(n instanceof Array))return!1;if(!(e instanceof Array))return!1;if(n.length!==e.length)return!1;for(var t=0;t!==n.length;++t)if(n[t]!==e[t])return!1;return!0},e.escapeRegexpString=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return String(n).replace(/[|\\{}()[\]^$+*?.]/g,"\\$&")};var c=e.arrayFindIndex=function(n,e){for(var t=0;t!==n.length;++t)if(e(n[t]))return t;return-1},u=(e.arrayFind=function(n,e){var t=c(n,e);return-1!==t?n[t]:void 0},e.coerceTruthyValueToArray=function(n){return Array.isArray(n)?n:n?[n]:[]},e.isIE=function(){return!o.default.prototype.$isServer&&!isNaN(Number(document.documentMode))},e.isEdge=function(){return!o.default.prototype.$isServer&&navigator.userAgent.indexOf("Edge")>-1},e.isFirefox=function(){return!o.default.prototype.$isServer&&!!window.navigator.userAgent.match(/firefox/i)},e.autoprefixer=function(n){if("object"!==(void 0===n?"undefined":i(n)))return n;var e=["ms-","webkit-"];return["transform","transition","animation"].forEach((function(t){var i=n[t];t&&i&&e.forEach((function(e){n[e+t]=i}))})),n},e.kebabCase=function(n){var e=/([^-])([A-Z])/g;return n.replace(e,"$1-$2").replace(e,"$1-$2").toLowerCase()},e.capitalize=function(n){return(0,s.isString)(n)?n.charAt(0).toUpperCase()+n.slice(1):n},e.looseEqual=function(n,e){var t=(0,s.isObject)(n),i=(0,s.isObject)(e);return t&&i?JSON.stringify(n)===JSON.stringify(e):!t&&!i&&String(n)===String(e)}),p=e.arrayEquals=function(n,e){if(e=e||[],(n=n||[]).length!==e.length)return!1;for(var t=0;t<n.length;t++)if(!u(n[t],e[t]))return!1;return!0},h=(e.isEqual=function(n,e){return Array.isArray(n)&&Array.isArray(e)?p(n,e):u(n,e)},e.isEmpty=function(n){if(null==n)return!0;if("boolean"==typeof n)return!1;if("number"==typeof n)return!n;if(n instanceof Error)return""===n.message;switch(Object.prototype.toString.call(n)){case"[object String]":case"[object Array]":return!n.length;case"[object File]":case"[object Map]":case"[object Set]":return!n.size;case"[object Object]":return!Object.keys(n).length}return!1});e.isMac=function(){return!o.default.prototype.$isServer&&/macintosh|mac os x/i.test(navigator.userAgent)}},function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},function(n,e,t){"use strict";var i=t(16),a=t(5),r=t(191),o=t(4),s=t(3),l=t(113),d=t(174),c=t(193),u=t(6),p=t(15),h=t(21),m=t(114).IteratorPrototype,g=t(9),f=t(27),v=h("toStringTag"),b=TypeError,_=a.Iterator,y=f||!s(_)||_.prototype!==m||!u((function(){_({})})),x=function(){if(r(this,m),l(this)===m)throw new b("Abstract class Iterator not directly constructable")},k=function(n,e){g?d(m,n,{configurable:!0,get:function(){return e},set:function(e){if(o(this),this===m)throw new b("You can't redefine this property");p(this,n)?this[n]=e:c(this,n,e)}}):m[n]=e};p(m,v)||k(v,"Iterator"),!y&&p(m,"constructor")&&m.constructor!==Object||k("constructor",x),x.prototype=m,i({global:!0,constructor:!0,forced:y},{Iterator:x})},function(n,e,t){"use strict";var i=t(3),a=t(64),r=TypeError;n.exports=function(n){if(i(n))return n;throw new r(a(n)+" is not a function")}},function(n,e,t){"use strict";var i=t(3);n.exports=function(n){return"object"==typeof n?null!==n:i(n)}},function(n,e,t){"use strict";var i=t(8),a=t(36),r=i({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return r(a(n),e)}},function(n,e,t){"use strict";var i=t(5),a=t(96).f,r=t(28),o=t(60),s=t(66),l=t(110),d=t(190);n.exports=function(n,e){var t,c,u,p,h,m=n.target,g=n.global,f=n.stat;if(t=g?i:f?i[m]||s(m,{}):i[m]&&i[m].prototype)for(c in e){if(p=e[c],u=n.dontCallGetSet?(h=a(t,c))&&h.value:t[c],!d(g?c:m+(f?".":"#")+c,n.forced)&&void 0!==u){if(typeof p==typeof u)continue;l(p,u)}(n.sham||u&&u.sham)&&r(p,"sham",!0),o(t,c,p,n)}}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){"use strict";var i=t(38),a=Function.prototype.call;n.exports=i?a.bind(a):function(){return a.apply(a,arguments)}},function(n,e,t){var i=t(122),a="object"==typeof self&&self&&self.Object===Object&&self,r=i||a||Function("return this")();n.exports=r},function(n,e,t){"use strict";e.__esModule=!0,e.isInContainer=e.getScrollContainer=e.isScroll=e.getStyle=e.once=e.off=e.on=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};e.hasClass=h,e.addClass=function(n,e){if(!n)return;for(var t=n.className,i=(e||"").split(" "),a=0,r=i.length;a<r;a++){var o=i[a];o&&(n.classList?n.classList.add(o):h(n,o)||(t+=" "+o))}n.classList||n.setAttribute("class",t)},e.removeClass=function(n,e){if(!n||!e)return;for(var t=e.split(" "),i=" "+n.className+" ",a=0,r=t.length;a<r;a++){var o=t[a];o&&(n.classList?n.classList.remove(o):h(n,o)&&(i=i.replace(" "+o+" "," ")))}n.classList||n.setAttribute("class",(i||"").replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g,""))},e.setStyle=function n(e,t,a){if(!e||!t)return;if("object"===(void 0===t?"undefined":i(t)))for(var r in t)t.hasOwnProperty(r)&&n(e,r,t[r]);else"opacity"===(t=c(t))&&d<9?e.style.filter=isNaN(a)?"":"alpha(opacity="+100*a+")":e.style[t]=a};var a,r=t(1);var o=((a=r)&&a.__esModule?a:{default:a}).default.prototype.$isServer,s=/([\:\-\_]+(.))/g,l=/^moz([A-Z])/,d=o?0:Number(document.documentMode),c=function(n){return n.replace(s,(function(n,e,t,i){return i?t.toUpperCase():t})).replace(l,"Moz$1")},u=e.on=!o&&document.addEventListener?function(n,e,t){n&&e&&t&&n.addEventListener(e,t,!1)}:function(n,e,t){n&&e&&t&&n.attachEvent("on"+e,t)},p=e.off=!o&&document.removeEventListener?function(n,e,t){n&&e&&n.removeEventListener(e,t,!1)}:function(n,e,t){n&&e&&n.detachEvent("on"+e,t)};e.once=function(n,e,t){u(n,e,(function i(){t&&t.apply(this,arguments),p(n,e,i)}))};function h(n,e){if(!n||!e)return!1;if(-1!==e.indexOf(" "))throw new Error("className should not contain space.");return n.classList?n.classList.contains(e):(" "+n.className+" ").indexOf(" "+e+" ")>-1}var m=e.getStyle=d<9?function(n,e){if(!o){if(!n||!e)return null;"float"===(e=c(e))&&(e="styleFloat");try{switch(e){case"opacity":try{return n.filters.item("alpha").opacity/100}catch(n){return 1}default:return n.style[e]||n.currentStyle?n.currentStyle[e]:null}}catch(t){return n.style[e]}}}:function(n,e){if(!o){if(!n||!e)return null;"float"===(e=c(e))&&(e="cssFloat");try{var t=document.defaultView.getComputedStyle(n,"");return n.style[e]||t?t[e]:null}catch(t){return n.style[e]}}};var g=e.isScroll=function(n,e){if(!o)return m(n,null!=e?e?"overflow-y":"overflow-x":"overflow").match(/(scroll|auto|overlay)/)};e.getScrollContainer=function(n,e){if(!o){for(var t=n;t;){if([window,document,document.documentElement].includes(t))return window;if(g(t,e))return t;t=t.parentNode}return t}},e.isInContainer=function(n,e){if(o||!n||!e)return!1;var t=n.getBoundingClientRect(),i=void 0;return i=[window,document,document.documentElement,null,void 0].includes(e)?{top:0,right:window.innerWidth,bottom:window.innerHeight,left:0}:e.getBoundingClientRect(),t.top<i.bottom&&t.bottom>i.top&&t.right>i.left&&t.left<i.right}},function(n,e,t){"use strict";var i=t(5),a=t(103),r=t(15),o=t(104),s=t(100),l=t(99),d=i.Symbol,c=a("wks"),u=l?d.for||d:d&&d.withoutSetter||o;n.exports=function(n){return r(c,n)||(c[n]=s&&r(d,n)?d[n]:u("Symbol."+n)),c[n]}},function(n,e,t){"use strict";var i=t(9),a=t(105),r=t(107),o=t(4),s=t(97),l=TypeError,d=Object.defineProperty,c=Object.getOwnPropertyDescriptor;e.f=i?r?function(n,e,t){if(o(n),e=s(e),o(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var i=c(n,e);i&&i.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:i.configurable,enumerable:"enumerable"in t?t.enumerable:i.enumerable,writable:!1})}return d(n,e,t)}:d:function(n,e,t){if(o(n),e=s(e),o(t),a)try{return d(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var i=t(244),a=t(247);n.exports=function(n,e){var t=a(n,e);return i(t)?t:void 0}},function(n,e,t){"use strict";function i(n,e,t){this.$children.forEach((function(a){a.$options.componentName===n?a.$emit.apply(a,[e].concat(t)):i.apply(a,[n,e].concat([t]))}))}e.__esModule=!0,e.default={methods:{dispatch:function(n,e,t){for(var i=this.$parent||this.$root,a=i.$options.componentName;i&&(!a||a!==n);)(i=i.$parent)&&(a=i.$options.componentName);i&&i.$emit.apply(i,[e].concat(t))},broadcast:function(n,e,t){i.call(this,n,e,t)}}}},function(n,e,t){"use strict";var i=t(16),a=t(18),r=t(13),o=t(4),s=t(31),l=t(115),d=t(116),c=t(27),u=l((function(){for(var n,e,t=this.iterator,i=this.predicate,r=this.next;;){if(n=o(a(r,t)),this.done=!!n.done)return;if(e=n.value,d(t,i,[e,this.counter++],!0))return e}}));i({target:"Iterator",proto:!0,real:!0,forced:c},{filter:function(n){return o(this),r(n),new u(s(this),{predicate:n})}})},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var i=t(9),a=t(22),r=t(39);n.exports=i?function(n,e,t){return a.f(n,e,r(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){"use strict";n.exports=TypeError},function(n,e,t){"use strict";var i=t(1);e.a=new i.default},function(n,e,t){"use strict";n.exports=function(n){return{iterator:n,next:n.next,done:!1}}},function(n,e,t){var i=t(34),a=t(229),r=t(230),o=i?i.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?a(n):r(n)}},function(n,e,t){"use strict";var i=t(8),a=i({}.toString),r=i("".slice);n.exports=function(n){return r(a(n),8,-1)}},function(n,e,t){var i=t(19).Symbol;n.exports=i},function(n,e,t){"use strict";var i=t(16),a=t(59),r=t(13),o=t(4),s=t(31);i({target:"Iterator",proto:!0,real:!0},{forEach:function(n){o(this),r(n);var e=s(this),t=0;a(e,(function(e){n(e,t++)}),{IS_RECORD:!0})}})},function(n,e,t){"use strict";var i=t(62),a=Object;n.exports=function(n){return a(i(n))}},function(n,e,t){"use strict";var i=t(188);n.exports=function(n){return i(n.length)}},function(n,e,t){"use strict";var i=t(6);n.exports=!i((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var i=t(94),a=t(62);n.exports=function(n){return i(a(n))}},function(n,e,t){"use strict";var i=t(5),a=t(3),r=function(n){return a(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?r(i[n]):i[n]&&i[n][e]}},function(n,e,t){"use strict";var i=t(8);n.exports=i({}.isPrototypeOf)},function(n,e,t){"use strict";var i=t(13),a=t(63);n.exports=function(n,e){var t=n[e];return a(t)?void 0:i(t)}},function(n,e,t){var i=t(234),a=t(235),r=t(236),o=t(237),s=t(238);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=a,l.prototype.get=r,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var i=t(124);n.exports=function(n,e){for(var t=n.length;t--;)if(i(n[t][0],e))return t;return-1}},function(n,e,t){var i=t(23)(Object,"create");n.exports=i},function(n,e,t){var i=t(256);n.exports=function(n,e){var t=n.__data__;return i(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var i=t(78);n.exports=function(n){if("string"==typeof n||i(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";e.__esModule=!0;var i,a=t(1),r=(i=a)&&i.__esModule?i:{default:i},o=t(143);var s=r.default.prototype.$isServer?function(){}:t(327),l=function(n){return n.stopPropagation()};e.default={props:{transformOrigin:{type:[Boolean,String],default:!0},placement:{type:String,default:"bottom"},boundariesPadding:{type:Number,default:5},reference:{},popper:{},offset:{default:0},value:Boolean,visibleArrow:Boolean,arrowOffset:{type:Number,default:35},appendToBody:{type:Boolean,default:!0},popperOptions:{type:Object,default:function(){return{gpuAcceleration:!1}}}},data:function(){return{showPopper:!1,currentPlacement:""}},watch:{value:{immediate:!0,handler:function(n){this.showPopper=n,this.$emit("input",n)}},showPopper:function(n){this.disabled||(n?this.updatePopper():this.destroyPopper(),this.$emit("input",n))}},methods:{createPopper:function(){var n=this;if(!this.$isServer&&(this.currentPlacement=this.currentPlacement||this.placement,/^(top|bottom|left|right)(-start|-end)?$/g.test(this.currentPlacement))){var e=this.popperOptions,t=this.popperElm=this.popperElm||this.popper||this.$refs.popper,i=this.referenceElm=this.referenceElm||this.reference||this.$refs.reference;!i&&this.$slots.reference&&this.$slots.reference[0]&&(i=this.referenceElm=this.$slots.reference[0].elm),t&&i&&(this.visibleArrow&&this.appendArrow(t),this.appendToBody&&document.body.appendChild(this.popperElm),this.popperJS&&this.popperJS.destroy&&this.popperJS.destroy(),e.placement=this.currentPlacement,e.offset=this.offset,e.arrowOffset=this.arrowOffset,this.popperJS=new s(i,t,e),this.popperJS.onCreate((function(e){n.$emit("created",n),n.resetTransformOrigin(),n.$nextTick(n.updatePopper)})),"function"==typeof e.onUpdate&&this.popperJS.onUpdate(e.onUpdate),this.popperJS._popper.style.zIndex=o.PopupManager.nextZIndex(),this.popperElm.addEventListener("click",l))}},updatePopper:function(){var n=this.popperJS;n?(n.update(),n._popper&&(n._popper.style.zIndex=o.PopupManager.nextZIndex())):this.createPopper()},doDestroy:function(n){!this.popperJS||this.showPopper&&!n||(this.popperJS.destroy(),this.popperJS=null)},destroyPopper:function(){this.popperJS&&this.resetTransformOrigin()},resetTransformOrigin:function(){if(this.transformOrigin){var n=this.popperJS._popper.getAttribute("x-placement").split("-")[0],e={top:"bottom",bottom:"top",left:"right",right:"left"}[n];this.popperJS._popper.style.transformOrigin="string"==typeof this.transformOrigin?this.transformOrigin:["top","bottom"].indexOf(n)>-1?"center "+e:e+" center"}},appendArrow:function(n){var e=void 0;if(!this.appended){for(var t in this.appended=!0,n.attributes)if(/^_v-/.test(n.attributes[t].name)){e=n.attributes[t].name;break}var i=document.createElement("div");e&&i.setAttribute(e,""),i.setAttribute("x-arrow",""),i.className="popper__arrow",n.appendChild(i)}}},beforeDestroy:function(){this.doDestroy(!0),this.popperElm&&this.popperElm.parentNode===document.body&&(this.popperElm.removeEventListener("click",l),document.body.removeChild(this.popperElm))},deactivated:function(){this.$options.beforeDestroy[0].call(this)}}},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n){for(var e=1,t=arguments.length;e<t;e++){var i=arguments[e]||{};for(var a in i)if(i.hasOwnProperty(a)){var r=i[a];void 0!==r&&(n[a]=r)}}return n}},function(n,e,t){"use strict";e.__esModule=!0,e.isDef=function(n){return null!=n},e.isKorean=function(n){return/([(\uAC00-\uD7AF)|(\u3130-\u318F)])+/gi.test(n)}},function(n,e,t){var i=t(85);n.exports=function(n,e,t){return void 0===t?i(n,e,!1):i(n,t,!1!==e)}},function(n,e,t){var i="function"==typeof Map&&Map.prototype,a=Object.getOwnPropertyDescriptor&&i?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,r=i&&a&&"function"==typeof a.get?a.get:null,o=i&&Map.prototype.forEach,s="function"==typeof Set&&Set.prototype,l=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,d=s&&l&&"function"==typeof l.get?l.get:null,c=s&&Set.prototype.forEach,u="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,p="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,h="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,m=Boolean.prototype.valueOf,g=Object.prototype.toString,f=Function.prototype.toString,v=String.prototype.match,b=String.prototype.slice,_=String.prototype.replace,y=String.prototype.toUpperCase,x=String.prototype.toLowerCase,k=RegExp.prototype.test,T=Array.prototype.concat,w=Array.prototype.join,I=Array.prototype.slice,C=Math.floor,D="function"==typeof BigInt?BigInt.prototype.valueOf:null,E=Object.getOwnPropertySymbols,S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,M="function"==typeof Symbol&&"object"==typeof Symbol.iterator,A="function"==typeof Symbol&&Symbol.toStringTag&&(typeof Symbol.toStringTag===M||"symbol")?Symbol.toStringTag:null,O=Object.prototype.propertyIsEnumerable,P=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(n){return n.__proto__}:null);function j(n,e){if(n===1/0||n===-1/0||n!=n||n&&n>-1e3&&n<1e3||k.call(/e/,e))return e;var t=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof n){var i=n<0?-C(-n):C(n);if(i!==n){var a=String(i),r=b.call(e,a.length+1);return _.call(a,t,"$&_")+"."+_.call(_.call(r,/([0-9]{3})/g,"$&_"),/_$/,"")}}return _.call(e,t,"$&_")}var z=t(381),R=z.custom,$=G(R)?R:null,L={__proto__:null,double:'"',single:"'"},U={__proto__:null,double:/(["\\])/g,single:/(['\\])/g};function N(n,e,t){var i=t.quoteStyle||e,a=L[i];return a+n+a}function q(n){return _.call(String(n),/"/g,"&quot;")}function B(n){return!A||!("object"==typeof n&&(A in n||void 0!==n[A]))}function F(n){return"[object Array]"===Q(n)&&B(n)}function V(n){return"[object RegExp]"===Q(n)&&B(n)}function G(n){if(M)return n&&"object"==typeof n&&n instanceof Symbol;if("symbol"==typeof n)return!0;if(!n||"object"!=typeof n||!S)return!1;try{return S.call(n),!0}catch(n){}return!1}n.exports=function n(e,t,i,a){var s=t||{};if(W(s,"quoteStyle")&&!W(L,s.quoteStyle))throw new TypeError('option "quoteStyle" must be "single" or "double"');if(W(s,"maxStringLength")&&("number"==typeof s.maxStringLength?s.maxStringLength<0&&s.maxStringLength!==1/0:null!==s.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var l=!W(s,"customInspect")||s.customInspect;if("boolean"!=typeof l&&"symbol"!==l)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(W(s,"indent")&&null!==s.indent&&"\t"!==s.indent&&!(parseInt(s.indent,10)===s.indent&&s.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(W(s,"numericSeparator")&&"boolean"!=typeof s.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var g=s.numericSeparator;if(void 0===e)return"undefined";if(null===e)return"null";if("boolean"==typeof e)return e?"true":"false";if("string"==typeof e)return function n(e,t){if(e.length>t.maxStringLength){var i=e.length-t.maxStringLength,a="... "+i+" more character"+(i>1?"s":"");return n(b.call(e,0,t.maxStringLength),t)+a}var r=U[t.quoteStyle||"single"];return r.lastIndex=0,N(_.call(_.call(e,r,"\\$1"),/[\x00-\x1f]/g,Y),"single",t)}(e,s);if("number"==typeof e){if(0===e)return 1/0/e>0?"0":"-0";var y=String(e);return g?j(e,y):y}if("bigint"==typeof e){var k=String(e)+"n";return g?j(e,k):k}var C=void 0===s.depth?5:s.depth;if(void 0===i&&(i=0),i>=C&&C>0&&"object"==typeof e)return F(e)?"[Array]":"[Object]";var E=function(n,e){var t;if("\t"===n.indent)t="\t";else{if(!("number"==typeof n.indent&&n.indent>0))return null;t=w.call(Array(n.indent+1)," ")}return{base:t,prev:w.call(Array(e+1),t)}}(s,i);if(void 0===a)a=[];else if(K(a,e)>=0)return"[Circular]";function R(e,t,r){if(t&&(a=I.call(a)).push(t),r){var o={depth:s.depth};return W(s,"quoteStyle")&&(o.quoteStyle=s.quoteStyle),n(e,o,i+1,a)}return n(e,s,i+1,a)}if("function"==typeof e&&!V(e)){var H=function(n){if(n.name)return n.name;var e=v.call(f.call(n),/^function\s*([\w$]+)/);if(e)return e[1];return null}(e),tn=en(e,R);return"[Function"+(H?": "+H:" (anonymous)")+"]"+(tn.length>0?" { "+w.call(tn,", ")+" }":"")}if(G(e)){var an=M?_.call(String(e),/^(Symbol\(.*\))_[^)]*$/,"$1"):S.call(e);return"object"!=typeof e||M?an:X(an)}if(function(n){if(!n||"object"!=typeof n)return!1;if("undefined"!=typeof HTMLElement&&n instanceof HTMLElement)return!0;return"string"==typeof n.nodeName&&"function"==typeof n.getAttribute}(e)){for(var rn="<"+x.call(String(e.nodeName)),on=e.attributes||[],sn=0;sn<on.length;sn++)rn+=" "+on[sn].name+"="+N(q(on[sn].value),"double",s);return rn+=">",e.childNodes&&e.childNodes.length&&(rn+="..."),rn+="</"+x.call(String(e.nodeName))+">"}if(F(e)){if(0===e.length)return"[]";var ln=en(e,R);return E&&!function(n){for(var e=0;e<n.length;e++)if(K(n[e],"\n")>=0)return!1;return!0}(ln)?"["+nn(ln,E)+"]":"[ "+w.call(ln,", ")+" ]"}if(function(n){return"[object Error]"===Q(n)&&B(n)}(e)){var dn=en(e,R);return"cause"in Error.prototype||!("cause"in e)||O.call(e,"cause")?0===dn.length?"["+String(e)+"]":"{ ["+String(e)+"] "+w.call(dn,", ")+" }":"{ ["+String(e)+"] "+w.call(T.call("[cause]: "+R(e.cause),dn),", ")+" }"}if("object"==typeof e&&l){if($&&"function"==typeof e[$]&&z)return z(e,{depth:C-i});if("symbol"!==l&&"function"==typeof e.inspect)return e.inspect()}if(function(n){if(!r||!n||"object"!=typeof n)return!1;try{r.call(n);try{d.call(n)}catch(n){return!0}return n instanceof Map}catch(n){}return!1}(e)){var cn=[];return o&&o.call(e,(function(n,t){cn.push(R(t,e,!0)+" => "+R(n,e))})),Z("Map",r.call(e),cn,E)}if(function(n){if(!d||!n||"object"!=typeof n)return!1;try{d.call(n);try{r.call(n)}catch(n){return!0}return n instanceof Set}catch(n){}return!1}(e)){var un=[];return c&&c.call(e,(function(n){un.push(R(n,e))})),Z("Set",d.call(e),un,E)}if(function(n){if(!u||!n||"object"!=typeof n)return!1;try{u.call(n,u);try{p.call(n,p)}catch(n){return!0}return n instanceof WeakMap}catch(n){}return!1}(e))return J("WeakMap");if(function(n){if(!p||!n||"object"!=typeof n)return!1;try{p.call(n,p);try{u.call(n,u)}catch(n){return!0}return n instanceof WeakSet}catch(n){}return!1}(e))return J("WeakSet");if(function(n){if(!h||!n||"object"!=typeof n)return!1;try{return h.call(n),!0}catch(n){}return!1}(e))return J("WeakRef");if(function(n){return"[object Number]"===Q(n)&&B(n)}(e))return X(R(Number(e)));if(function(n){if(!n||"object"!=typeof n||!D)return!1;try{return D.call(n),!0}catch(n){}return!1}(e))return X(R(D.call(e)));if(function(n){return"[object Boolean]"===Q(n)&&B(n)}(e))return X(m.call(e));if(function(n){return"[object String]"===Q(n)&&B(n)}(e))return X(R(String(e)));if("undefined"!=typeof window&&e===window)return"{ [object Window] }";if("undefined"!=typeof globalThis&&e===globalThis||"undefined"!=typeof global&&e===global)return"{ [object globalThis] }";if(!function(n){return"[object Date]"===Q(n)&&B(n)}(e)&&!V(e)){var pn=en(e,R),hn=P?P(e)===Object.prototype:e instanceof Object||e.constructor===Object,mn=e instanceof Object?"":"null prototype",gn=!hn&&A&&Object(e)===e&&A in e?b.call(Q(e),8,-1):mn?"Object":"",fn=(hn||"function"!=typeof e.constructor?"":e.constructor.name?e.constructor.name+" ":"")+(gn||mn?"["+w.call(T.call([],gn||[],mn||[]),": ")+"] ":"");return 0===pn.length?fn+"{}":E?fn+"{"+nn(pn,E)+"}":fn+"{ "+w.call(pn,", ")+" }"}return String(e)};var H=Object.prototype.hasOwnProperty||function(n){return n in this};function W(n,e){return H.call(n,e)}function Q(n){return g.call(n)}function K(n,e){if(n.indexOf)return n.indexOf(e);for(var t=0,i=n.length;t<i;t++)if(n[t]===e)return t;return-1}function Y(n){var e=n.charCodeAt(0),t={8:"b",9:"t",10:"n",12:"f",13:"r"}[e];return t?"\\"+t:"\\x"+(e<16?"0":"")+y.call(e.toString(16))}function X(n){return"Object("+n+")"}function J(n){return n+" { ? }"}function Z(n,e,t,i){return n+" ("+e+") {"+(i?nn(t,i):w.call(t,", "))+"}"}function nn(n,e){if(0===n.length)return"";var t="\n"+e.prev+e.base;return t+w.call(n,","+t)+"\n"+e.prev}function en(n,e){var t=F(n),i=[];if(t){i.length=n.length;for(var a=0;a<n.length;a++)i[a]=W(n,a)?e(n[a],n):""}var r,o="function"==typeof E?E(n):[];if(M){r={};for(var s=0;s<o.length;s++)r["$"+o[s]]=o[s]}for(var l in n)W(n,l)&&(t&&String(Number(l))===l&&l<n.length||M&&r["$"+l]instanceof Symbol||(k.call(/[^\w$]/,l)?i.push(e(l,n)+": "+e(n[l],n)):i.push(l+": "+e(n[l],n))));if("function"==typeof E)for(var d=0;d<o.length;d++)O.call(n,o[d])&&i.push("["+e(o[d])+"]: "+e(n[o[d]],n));return i}},function(n,e,t){"use strict";var i=t(403);n.exports=Function.prototype.bind||i},function(n,e){var t=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,r=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,d=s||l||Function("return this")(),c=Object.prototype.toString,u=Math.max,p=Math.min,h=function(){return d.Date.now()};function m(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==c.call(n)}(n))return NaN;if(m(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=m(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=a.test(n);return s||r.test(n)?o(n.slice(2),s?2:8):i.test(n)?NaN:+n}n.exports=function(n,e,t){var i,a,r,o,s,l,d=0,c=!1,f=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=i,r=a;return i=a=void 0,d=e,o=n.apply(r,t)}function _(n){return d=n,s=setTimeout(x,e),c?b(n):o}function y(n){var t=n-l;return void 0===l||t>=e||t<0||f&&n-d>=r}function x(){var n=h();if(y(n))return k(n);s=setTimeout(x,function(n){var t=e-(n-l);return f?p(t,r-(n-d)):t}(n))}function k(n){return s=void 0,v&&i?b(n):(i=a=void 0,o)}function T(){var n=h(),t=y(n);if(i=arguments,a=this,l=n,t){if(void 0===s)return _(l);if(f)return s=setTimeout(x,e),b(l)}return void 0===s&&(s=setTimeout(x,e)),o}return e=g(e)||0,m(t)&&(c=!!t.leading,r=(f="maxWait"in t)?u(g(t.maxWait)||0,e):r,v="trailing"in t?!!t.trailing:v),T.cancel=function(){void 0!==s&&clearTimeout(s),d=0,i=l=a=s=void 0},T.flush=function(){return void 0===s?o:k(h())},T}},function(n,e,t){var i,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(i=function(){var n,e,t={version:"0.2.0"},i=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(n,e,t){return n<e?e:n>t?t:n}function r(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(i[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=a(n,i.minimum,1),t.status=1===n?null:n;var l=t.render(!e),d=l.querySelector(i.barSelector),c=i.speed,u=i.easing;return l.offsetWidth,o((function(e){""===i.positionUsing&&(i.positionUsing=t.getPositioningCSS()),s(d,function(n,e,t){var a;return(a="translate3d"===i.positionUsing?{transform:"translate3d("+r(n)+"%,0,0)"}:"translate"===i.positionUsing?{transform:"translate("+r(n)+"%,0)"}:{"margin-left":r(n)+"%"}).transition="all "+e+"ms "+t,a}(n,c,u)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+c+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),c)}),c)):setTimeout(e,c)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),i.trickleSpeed)};return i.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*a(Math.random()*e,.1,.95)),e=a(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*i.trickleRate)},n=0,e=0,t.promise=function(i){return i&&"resolved"!==i.state()?(0===e&&t.start(),n++,e++,i.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");d(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=i.template;var a,o=e.querySelector(i.barSelector),l=n?"-100":r(t.status||0),c=document.querySelector(i.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),i.showSpinner||(a=e.querySelector(i.spinnerSelector))&&p(a),c!=document.body&&d(c,"nprogress-custom-parent"),c.appendChild(e),e},t.remove=function(){c(document.documentElement,"nprogress-busy"),c(document.querySelector(i.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var i,a=n.length,r=e.charAt(0).toUpperCase()+e.slice(1);a--;)if((i=n[a]+r)in t)return i;return e}(t))}function i(n,e,i){e=t(e),n.style[e]=i}return function(n,e){var t,a,r=arguments;if(2==r.length)for(t in e)void 0!==(a=e[t])&&e.hasOwnProperty(t)&&i(n,t,a);else i(n,r[1],r[2])}}();function l(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function d(n,e){var t=u(n),i=t+e;l(t,e)||(n.className=i.substring(1))}function c(n,e){var t,i=u(n);l(n,e)&&(t=i.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?i.call(e,t,e,n):i)||(n.exports=a)},function(n,e,t){"use strict";var i=t(16),a=t(199);i({target:"Iterator",proto:!0,real:!0,forced:t(27)},{map:a})},function(n,e,t){"use strict";var i=t(16),a=t(59),r=t(13),o=t(4),s=t(31);i({target:"Iterator",proto:!0,real:!0},{some:function(n){o(this),r(n);var e=s(this),t=0;return a(e,(function(e,i){if(n(e,t++))return i()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(n,e,t){"use strict";var i=t(175),a=t(18),r=t(4),o=t(64),s=t(206),l=t(37),d=t(42),c=t(207),u=t(118),p=t(70),h=TypeError,m=function(n,e){this.stopped=n,this.result=e},g=m.prototype;n.exports=function(n,e,t){var f,v,b,_,y,x,k,T=t&&t.that,w=!(!t||!t.AS_ENTRIES),I=!(!t||!t.IS_RECORD),C=!(!t||!t.IS_ITERATOR),D=!(!t||!t.INTERRUPTED),E=i(e,T),S=function(n){return f&&p(f,"normal",n),new m(!0,n)},M=function(n){return w?(r(n),D?E(n[0],n[1],S):E(n[0],n[1])):D?E(n,S):E(n)};if(I)f=n.iterator;else if(C)f=n;else{if(!(v=u(n)))throw new h(o(n)+" is not iterable");if(s(v)){for(b=0,_=l(n);_>b;b++)if((y=M(n[b]))&&d(g,y))return y;return new m(!1)}f=c(n,v)}for(x=I?n.next:f.next;!(k=a(x,f)).done;){try{y=M(k.value)}catch(n){p(f,"throw",n)}if("object"==typeof y&&y&&d(g,y))return y}return new m(!1)}},function(n,e,t){"use strict";var i=t(3),a=t(22),r=t(108),o=t(66);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,d=void 0!==s.name?s.name:e;if(i(t)&&r(t,d,s),s.global)l?n[e]=t:o(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:a.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){"use strict";var i=t(63),a=TypeError;n.exports=function(n){if(i(n))throw new a("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var i=String;n.exports=function(n){try{return i(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var i=t(27),a=t(5),r=t(66),o=n.exports=a["__core-js_shared__"]||r("__core-js_shared__",{});(o.versions||(o.versions=[])).push({version:"3.41.0",mode:i?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.41.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";var i=t(5),a=Object.defineProperty;n.exports=function(n,e){try{a(i,n,{value:e,configurable:!0,writable:!0})}catch(t){i[n]=e}return e}},function(n,e,t){"use strict";var i=t(103),a=t(104),r=i("keys");n.exports=function(n){return r[n]||(r[n]=a(n))}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var i=t(18),a=t(4),r=t(43);n.exports=function(n,e,t){var o,s;a(n);try{if(!(o=r(n,"return"))){if("throw"===e)throw t;return t}o=i(o,n)}catch(n){s=!0,o=n}if("throw"===e)throw t;if(s)throw o;return a(o),t}},function(n,e,t){var i=t(228),a=t(26),r=Object.prototype,o=r.hasOwnProperty,s=r.propertyIsEnumerable,l=i(function(){return arguments}())?i:function(n){return a(n)&&o.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var i=t(23)(t(19),"Map");n.exports=i},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var i=t(248),a=t(255),r=t(257),o=t(258),s=t(259);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=a,l.prototype.get=r,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var i=t(17),a=t(78),r=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(i(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!a(n))||(o.test(n)||!r.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var i=t(32),a=t(26);n.exports=function(n){return"symbol"==typeof n||a(n)&&"[object Symbol]"==i(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";e.__esModule=!0,e.i18n=e.use=e.t=void 0;var i=o(t(323)),a=o(t(1)),r=o(t(324));function o(n){return n&&n.__esModule?n:{default:n}}var s=(0,o(t(325)).default)(a.default),l=i.default,d=!1,c=function(){var n=Object.getPrototypeOf(this||a.default).$t;if("function"==typeof n&&a.default.locale)return d||(d=!0,a.default.locale(a.default.config.lang,(0,r.default)(l,a.default.locale(a.default.config.lang)||{},{clone:!0}))),n.apply(this,arguments)},u=e.t=function(n,e){var t=c.apply(this,arguments);if(null!=t)return t;for(var i=n.split("."),a=l,r=0,o=i.length;r<o;r++){var d=i[r];if(t=a[d],r===o-1)return s(t,e);if(!t)return"";a=t}return""},p=e.use=function(n){l=n||l},h=e.i18n=function(n){c=n||c};e.default={use:p,t:u,i18n:h}},function(n,e,t){"use strict";e.__esModule=!0;var i=t(80);e.default={methods:{t:function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return i.t.apply(this,e)}}}},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(){if(r.default.prototype.$isServer)return 0;if(void 0!==o)return o;var n=document.createElement("div");n.className="el-scrollbar__wrap",n.style.visibility="hidden",n.style.width="100px",n.style.position="absolute",n.style.top="-9999px",document.body.appendChild(n);var e=n.offsetWidth;n.style.overflow="scroll";var t=document.createElement("div");t.style.width="100%",n.appendChild(t);var i=t.offsetWidth;return n.parentNode.removeChild(n),o=e-i};var i,a=t(1),r=(i=a)&&i.__esModule?i:{default:i};var o=void 0},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=75)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},11:function(n,e){n.exports=t(144)},21:function(n,e){n.exports=t(51)},4:function(n,e){n.exports=t(24)},75:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{class:["textarea"===n.type?"el-textarea":"el-input",n.inputSize?"el-input--"+n.inputSize:"",{"is-disabled":n.inputDisabled,"is-exceed":n.inputExceed,"el-input-group":n.$slots.prepend||n.$slots.append,"el-input-group--append":n.$slots.append,"el-input-group--prepend":n.$slots.prepend,"el-input--prefix":n.$slots.prefix||n.prefixIcon,"el-input--suffix":n.$slots.suffix||n.suffixIcon||n.clearable||n.showPassword}],on:{mouseenter:function(e){n.hovering=!0},mouseleave:function(e){n.hovering=!1}}},["textarea"!==n.type?[n.$slots.prepend?t("div",{staticClass:"el-input-group__prepend"},[n._t("prepend")],2):n._e(),"textarea"!==n.type?t("input",n._b({ref:"input",staticClass:"el-input__inner",attrs:{tabindex:n.tabindex,type:n.showPassword?n.passwordVisible?"text":"password":n.type,disabled:n.inputDisabled,readonly:n.readonly,autocomplete:n.autoComplete||n.autocomplete,"aria-label":n.label},on:{compositionstart:n.handleCompositionStart,compositionupdate:n.handleCompositionUpdate,compositionend:n.handleCompositionEnd,input:n.handleInput,focus:n.handleFocus,blur:n.handleBlur,change:n.handleChange}},"input",n.$attrs,!1)):n._e(),n.$slots.prefix||n.prefixIcon?t("span",{staticClass:"el-input__prefix"},[n._t("prefix"),n.prefixIcon?t("i",{staticClass:"el-input__icon",class:n.prefixIcon}):n._e()],2):n._e(),n.getSuffixVisible()?t("span",{staticClass:"el-input__suffix"},[t("span",{staticClass:"el-input__suffix-inner"},[n.showClear&&n.showPwdVisible&&n.isWordLimitVisible?n._e():[n._t("suffix"),n.suffixIcon?t("i",{staticClass:"el-input__icon",class:n.suffixIcon}):n._e()],n.showClear?t("i",{staticClass:"el-input__icon el-icon-circle-close el-input__clear",on:{mousedown:function(n){n.preventDefault()},click:n.clear}}):n._e(),n.showPwdVisible?t("i",{staticClass:"el-input__icon el-icon-view el-input__clear",on:{click:n.handlePasswordVisible}}):n._e(),n.isWordLimitVisible?t("span",{staticClass:"el-input__count"},[t("span",{staticClass:"el-input__count-inner"},[n._v("\n            "+n._s(n.textLength)+"/"+n._s(n.upperLimit)+"\n          ")])]):n._e()],2),n.validateState?t("i",{staticClass:"el-input__icon",class:["el-input__validateIcon",n.validateIcon]}):n._e()]):n._e(),n.$slots.append?t("div",{staticClass:"el-input-group__append"},[n._t("append")],2):n._e()]:t("textarea",n._b({ref:"textarea",staticClass:"el-textarea__inner",style:n.textareaStyle,attrs:{tabindex:n.tabindex,disabled:n.inputDisabled,readonly:n.readonly,autocomplete:n.autoComplete||n.autocomplete,"aria-label":n.label},on:{compositionstart:n.handleCompositionStart,compositionupdate:n.handleCompositionUpdate,compositionend:n.handleCompositionEnd,input:n.handleInput,focus:n.handleFocus,blur:n.handleBlur,change:n.handleChange}},"textarea",n.$attrs,!1)),n.isWordLimitVisible&&"textarea"===n.type?t("span",{staticClass:"el-input__count"},[n._v(n._s(n.textLength)+"/"+n._s(n.upperLimit))]):n._e()],2)};i._withStripped=!0;var a=t(4),r=t.n(a),o=t(11),s=t.n(o),l=void 0,d="\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n",c=["letter-spacing","line-height","padding-top","padding-bottom","font-family","font-weight","font-size","text-rendering","text-transform","width","text-indent","padding-left","padding-right","border-width","box-sizing"];function u(n){var e=window.getComputedStyle(n),t=e.getPropertyValue("box-sizing"),i=parseFloat(e.getPropertyValue("padding-bottom"))+parseFloat(e.getPropertyValue("padding-top")),a=parseFloat(e.getPropertyValue("border-bottom-width"))+parseFloat(e.getPropertyValue("border-top-width"));return{contextStyle:c.map((function(n){return n+":"+e.getPropertyValue(n)})).join(";"),paddingSize:i,borderSize:a,boxSizing:t}}function p(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;l||(l=document.createElement("textarea"),document.body.appendChild(l));var i=u(n),a=i.paddingSize,r=i.borderSize,o=i.boxSizing,s=i.contextStyle;l.setAttribute("style",s+";"+d),l.value=n.value||n.placeholder||"";var c=l.scrollHeight,p={};"border-box"===o?c+=r:"content-box"===o&&(c-=a),l.value="";var h=l.scrollHeight-a;if(null!==e){var m=h*e;"border-box"===o&&(m=m+a+r),c=Math.max(m,c),p.minHeight=m+"px"}if(null!==t){var g=h*t;"border-box"===o&&(g=g+a+r),c=Math.min(g,c)}return p.height=c+"px",l.parentNode&&l.parentNode.removeChild(l),l=null,p}var h=t(9),m=t.n(h),g=t(21),f={name:"ElInput",componentName:"ElInput",mixins:[r.a,s.a],inheritAttrs:!1,inject:{elForm:{default:""},elFormItem:{default:""}},data:function(){return{textareaCalcStyle:{},hovering:!1,focused:!1,isComposing:!1,passwordVisible:!1}},props:{value:[String,Number],size:String,resize:String,form:String,disabled:Boolean,readonly:Boolean,type:{type:String,default:"text"},autosize:{type:[Boolean,Object],default:!1},autocomplete:{type:String,default:"off"},autoComplete:{type:String,validator:function(n){return!0}},validateEvent:{type:Boolean,default:!0},suffixIcon:String,prefixIcon:String,label:String,clearable:{type:Boolean,default:!1},showPassword:{type:Boolean,default:!1},showWordLimit:{type:Boolean,default:!1},tabindex:String},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},validateState:function(){return this.elFormItem?this.elFormItem.validateState:""},needStatusIcon:function(){return!!this.elForm&&this.elForm.statusIcon},validateIcon:function(){return{validating:"el-icon-loading",success:"el-icon-circle-check",error:"el-icon-circle-close"}[this.validateState]},textareaStyle:function(){return m()({},this.textareaCalcStyle,{resize:this.resize})},inputSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},inputDisabled:function(){return this.disabled||(this.elForm||{}).disabled},nativeInputValue:function(){return null===this.value||void 0===this.value?"":String(this.value)},showClear:function(){return this.clearable&&!this.inputDisabled&&!this.readonly&&this.nativeInputValue&&(this.focused||this.hovering)},showPwdVisible:function(){return this.showPassword&&!this.inputDisabled&&!this.readonly&&(!!this.nativeInputValue||this.focused)},isWordLimitVisible:function(){return this.showWordLimit&&this.$attrs.maxlength&&("text"===this.type||"textarea"===this.type)&&!this.inputDisabled&&!this.readonly&&!this.showPassword},upperLimit:function(){return this.$attrs.maxlength},textLength:function(){return"number"==typeof this.value?String(this.value).length:(this.value||"").length},inputExceed:function(){return this.isWordLimitVisible&&this.textLength>this.upperLimit}},watch:{value:function(n){this.$nextTick(this.resizeTextarea),this.validateEvent&&this.dispatch("ElFormItem","el.form.change",[n])},nativeInputValue:function(){this.setNativeInputValue()},type:function(){var n=this;this.$nextTick((function(){n.setNativeInputValue(),n.resizeTextarea(),n.updateIconOffset()}))}},methods:{focus:function(){this.getInput().focus()},blur:function(){this.getInput().blur()},getMigratingConfig:function(){return{props:{icon:"icon is removed, use suffix-icon / prefix-icon instead.","on-icon-click":"on-icon-click is removed."},events:{click:"click is removed."}}},handleBlur:function(n){this.focused=!1,this.$emit("blur",n),this.validateEvent&&this.dispatch("ElFormItem","el.form.blur",[this.value])},select:function(){this.getInput().select()},resizeTextarea:function(){if(!this.$isServer){var n=this.autosize;if("textarea"===this.type)if(n){var e=n.minRows,t=n.maxRows;this.textareaCalcStyle=p(this.$refs.textarea,e,t)}else this.textareaCalcStyle={minHeight:p(this.$refs.textarea).minHeight}}},setNativeInputValue:function(){var n=this.getInput();n&&n.value!==this.nativeInputValue&&(n.value=this.nativeInputValue)},handleFocus:function(n){this.focused=!0,this.$emit("focus",n)},handleCompositionStart:function(n){this.$emit("compositionstart",n),this.isComposing=!0},handleCompositionUpdate:function(n){this.$emit("compositionupdate",n);var e=n.target.value,t=e[e.length-1]||"";this.isComposing=!Object(g.isKorean)(t)},handleCompositionEnd:function(n){this.$emit("compositionend",n),this.isComposing&&(this.isComposing=!1,this.handleInput(n))},handleInput:function(n){this.isComposing||n.target.value!==this.nativeInputValue&&(this.$emit("input",n.target.value),this.$nextTick(this.setNativeInputValue))},handleChange:function(n){this.$emit("change",n.target.value)},calcIconOffset:function(n){var e=[].slice.call(this.$el.querySelectorAll(".el-input__"+n)||[]);if(e.length){for(var t=null,i=0;i<e.length;i++)if(e[i].parentNode===this.$el){t=e[i];break}if(t){var a={suffix:"append",prefix:"prepend"}[n];this.$slots[a]?t.style.transform="translateX("+("suffix"===n?"-":"")+this.$el.querySelector(".el-input-group__"+a).offsetWidth+"px)":t.removeAttribute("style")}}},updateIconOffset:function(){this.calcIconOffset("prefix"),this.calcIconOffset("suffix")},clear:function(){this.$emit("input",""),this.$emit("change",""),this.$emit("clear")},handlePasswordVisible:function(){var n=this;this.passwordVisible=!this.passwordVisible,this.$nextTick((function(){n.focus()}))},getInput:function(){return this.$refs.input||this.$refs.textarea},getSuffixVisible:function(){return this.$slots.suffix||this.suffixIcon||this.showClear||this.showPassword||this.isWordLimitVisible||this.validateState&&this.needStatusIcon}},created:function(){this.$on("inputSelect",this.select)},mounted:function(){this.setNativeInputValue(),this.resizeTextarea(),this.updateIconOffset()},updated:function(){this.$nextTick(this.updateIconOffset)}},v=t(0),b=Object(v.a)(f,i,[],!1,null,null,null);b.options.__file="packages/input/src/input.vue";var _=b.exports;_.install=function(n){n.component(_.name,_)};e.default=_},9:function(n,e){n.exports=t(50)}})},function(n,e,t){"use strict";e.__esModule=!0,e.removeResizeListener=e.addResizeListener=void 0;var i,a=t(329),r=(i=a)&&i.__esModule?i:{default:i},o=t(147);var s="undefined"==typeof window,l=function(n){var e=n,t=Array.isArray(e),i=0;for(e=t?e:e[Symbol.iterator]();;){var a;if(t){if(i>=e.length)break;a=e[i++]}else{if((i=e.next()).done)break;a=i.value}var r=a.target.__resizeListeners__||[];r.length&&r.forEach((function(n){n()}))}};e.addResizeListener=function(n,e){s||(n.__resizeListeners__||(n.__resizeListeners__=[],n.__ro__=new r.default((0,o.debounce)(16,l)),n.__ro__.observe(n)),n.__resizeListeners__.push(e))},e.removeResizeListener=function(n,e){n&&n.__resizeListeners__&&(n.__resizeListeners__.splice(n.__resizeListeners__.indexOf(e),1),n.__resizeListeners__.length||n.__ro__.disconnect())}},function(n,e){n.exports=function(n,e,t,i){var a,r=0;return"boolean"!=typeof e&&(i=t,t=e,e=void 0),function(){var o=this,s=Number(new Date)-r,l=arguments;function d(){r=Number(new Date),t.apply(o,l)}function c(){a=void 0}i&&!a&&d(),a&&clearTimeout(a),void 0===i&&s>n?d():!0!==e&&(a=setTimeout(i?c:d,void 0===i?n-s:n))}}},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=133)}({133:function(n,e,t){"use strict";t.r(e);var i=t(16),a=t(39),r=t.n(a),o=t(3),s=t(2),l={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};function d(n){var e=n.move,t=n.size,i=n.bar,a={},r="translate"+i.axis+"("+e+"%)";return a[i.size]=t,a.transform=r,a.msTransform=r,a.webkitTransform=r,a}var c={name:"Bar",props:{vertical:Boolean,size:String,move:Number},computed:{bar:function(){return l[this.vertical?"vertical":"horizontal"]},wrap:function(){return this.$parent.wrap}},render:function(n){var e=this.size,t=this.move,i=this.bar;return n("div",{class:["el-scrollbar__bar","is-"+i.key],on:{mousedown:this.clickTrackHandler}},[n("div",{ref:"thumb",class:"el-scrollbar__thumb",on:{mousedown:this.clickThumbHandler},style:d({size:e,move:t,bar:i})})])},methods:{clickThumbHandler:function(n){n.ctrlKey||2===n.button||(this.startDrag(n),this[this.bar.axis]=n.currentTarget[this.bar.offset]-(n[this.bar.client]-n.currentTarget.getBoundingClientRect()[this.bar.direction]))},clickTrackHandler:function(n){var e=100*(Math.abs(n.target.getBoundingClientRect()[this.bar.direction]-n[this.bar.client])-this.$refs.thumb[this.bar.offset]/2)/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=e*this.wrap[this.bar.scrollSize]/100},startDrag:function(n){n.stopImmediatePropagation(),this.cursorDown=!0,Object(s.on)(document,"mousemove",this.mouseMoveDocumentHandler),Object(s.on)(document,"mouseup",this.mouseUpDocumentHandler),document.onselectstart=function(){return!1}},mouseMoveDocumentHandler:function(n){if(!1!==this.cursorDown){var e=this[this.bar.axis];if(e){var t=100*(-1*(this.$el.getBoundingClientRect()[this.bar.direction]-n[this.bar.client])-(this.$refs.thumb[this.bar.offset]-e))/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=t*this.wrap[this.bar.scrollSize]/100}}},mouseUpDocumentHandler:function(n){this.cursorDown=!1,this[this.bar.axis]=0,Object(s.off)(document,"mousemove",this.mouseMoveDocumentHandler),document.onselectstart=null}},destroyed:function(){Object(s.off)(document,"mouseup",this.mouseUpDocumentHandler)}},u={name:"ElScrollbar",components:{Bar:c},props:{native:Boolean,wrapStyle:{},wrapClass:{},viewClass:{},viewStyle:{},noresize:Boolean,tag:{type:String,default:"div"}},data:function(){return{sizeWidth:"0",sizeHeight:"0",moveX:0,moveY:0}},computed:{wrap:function(){return this.$refs.wrap}},render:function(n){var e=r()(),t=this.wrapStyle;if(e){var i="-"+e+"px",a="margin-bottom: "+i+"; margin-right: "+i+";";Array.isArray(this.wrapStyle)?(t=Object(o.toObject)(this.wrapStyle)).marginRight=t.marginBottom=i:"string"==typeof this.wrapStyle?t+=a:t=a}var s=n(this.tag,{class:["el-scrollbar__view",this.viewClass],style:this.viewStyle,ref:"resize"},this.$slots.default),l=n("div",{ref:"wrap",style:t,on:{scroll:this.handleScroll},class:[this.wrapClass,"el-scrollbar__wrap",e?"":"el-scrollbar__wrap--hidden-default"]},[[s]]),d=void 0;return d=this.native?[n("div",{ref:"wrap",class:[this.wrapClass,"el-scrollbar__wrap"],style:t},[[s]])]:[l,n(c,{attrs:{move:this.moveX,size:this.sizeWidth}}),n(c,{attrs:{vertical:!0,move:this.moveY,size:this.sizeHeight}})],n("div",{class:"el-scrollbar"},d)},methods:{handleScroll:function(){var n=this.wrap;this.moveY=100*n.scrollTop/n.clientHeight,this.moveX=100*n.scrollLeft/n.clientWidth},update:function(){var n,e,t=this.wrap;t&&(n=100*t.clientHeight/t.scrollHeight,e=100*t.clientWidth/t.scrollWidth,this.sizeHeight=n<100?n+"%":"",this.sizeWidth=e<100?e+"%":"")}},mounted:function(){this.native||(this.$nextTick(this.update),!this.noresize&&Object(i.addResizeListener)(this.$refs.resize,this.update))},beforeDestroy:function(){this.native||!this.noresize&&Object(i.removeResizeListener)(this.$refs.resize,this.update)},install:function(n){n.component(u.name,u)}};e.default=u},16:function(n,e){n.exports=t(84)},2:function(n,e){n.exports=t(20)},3:function(n,e){n.exports=t(10)},39:function(n,e){n.exports=t(82)}})},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n){return{methods:{focus:function(){this.$refs[n].focus()}}}}},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(r.default.prototype.$isServer)return;if(!e)return void(n.scrollTop=0);var t=[],i=e.offsetParent;for(;i&&n!==i&&n.contains(i);)t.push(i),i=i.offsetParent;var a=e.offsetTop+t.reduce((function(n,e){return n+e.offsetTop}),0),o=a+e.offsetHeight,s=n.scrollTop,l=s+n.clientHeight;a<s?n.scrollTop=a:o>l&&(n.scrollTop=o-n.clientHeight)};var i,a=t(1),r=(i=a)&&i.__esModule?i:{default:i}},function(n,e,t){"use strict";e.__esModule=!0;var i=i||{};i.Utils=i.Utils||{},i.Utils.focusFirstDescendant=function(n){for(var e=0;e<n.childNodes.length;e++){var t=n.childNodes[e];if(i.Utils.attemptFocus(t)||i.Utils.focusFirstDescendant(t))return!0}return!1},i.Utils.focusLastDescendant=function(n){for(var e=n.childNodes.length-1;e>=0;e--){var t=n.childNodes[e];if(i.Utils.attemptFocus(t)||i.Utils.focusLastDescendant(t))return!0}return!1},i.Utils.attemptFocus=function(n){if(!i.Utils.isFocusable(n))return!1;i.Utils.IgnoreUtilFocusChanges=!0;try{n.focus()}catch(n){}return i.Utils.IgnoreUtilFocusChanges=!1,document.activeElement===n},i.Utils.isFocusable=function(n){if(n.tabIndex>0||0===n.tabIndex&&null!==n.getAttribute("tabIndex"))return!0;if(n.disabled)return!1;switch(n.nodeName){case"A":return!!n.href&&"ignore"!==n.rel;case"INPUT":return"hidden"!==n.type&&"file"!==n.type;case"BUTTON":case"SELECT":case"TEXTAREA":return!0;default:return!1}},i.Utils.triggerEvent=function(n,e){var t=void 0;t=/^mouse|click/.test(e)?"MouseEvents":/^key/.test(e)?"KeyboardEvent":"HTMLEvents";for(var i=document.createEvent(t),a=arguments.length,r=Array(a>2?a-2:0),o=2;o<a;o++)r[o-2]=arguments[o];return i.initEvent.apply(i,[e].concat(r)),n.dispatchEvent?n.dispatchEvent(i):n.fireEvent("on"+e,i),n},i.Utils.keys={tab:9,enter:13,space:32,left:37,up:38,right:39,down:40,esc:27},e.default=i.Utils},function(n,e,t){"use strict";var i=t(156),a=t(383),r=t(384),o=t(385),s=t(386),l=t(387),d=t(29),c=t(388),u=t(389),p=t(390),h=t(391),m=t(392),g=t(393),f=t(394),v=t(395),b=Function,_=function(n){try{return b('"use strict"; return ('+n+").constructor;")()}catch(n){}},y=t(157),x=t(398),k=function(){throw new d},T=y?function(){try{return k}catch(n){try{return y(arguments,"callee").get}catch(n){return k}}}():k,w=t(399)(),I=t(401),C=t(159),D=t(158),E=t(161),S=t(91),M={},A="undefined"!=typeof Uint8Array&&I?I(Uint8Array):void 0,O={__proto__:null,"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":w&&I?I([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":M,"%AsyncGenerator%":M,"%AsyncGeneratorFunction%":M,"%AsyncIteratorPrototype%":M,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?void 0:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?void 0:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":a,"%eval%":eval,"%EvalError%":r,"%Float16Array%":"undefined"==typeof Float16Array?void 0:Float16Array,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":b,"%GeneratorFunction%":M,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":w&&I?I(I([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&w&&I?I((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":i,"%Object.getOwnPropertyDescriptor%":y,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":o,"%ReferenceError%":s,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&w&&I?I((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":w&&I?I(""[Symbol.iterator]()):void 0,"%Symbol%":w?Symbol:void 0,"%SyntaxError%":l,"%ThrowTypeError%":T,"%TypedArray%":A,"%TypeError%":d,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":c,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%Function.prototype.call%":S,"%Function.prototype.apply%":E,"%Object.defineProperty%":x,"%Object.getPrototypeOf%":C,"%Math.abs%":u,"%Math.floor%":p,"%Math.max%":h,"%Math.min%":m,"%Math.pow%":g,"%Math.round%":f,"%Math.sign%":v,"%Reflect.getPrototypeOf%":D};if(I)try{null.error}catch(n){var P=I(I(n));O["%Error.prototype%"]=P}var j={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},z=t(54),R=t(406),$=z.call(S,Array.prototype.concat),L=z.call(E,Array.prototype.splice),U=z.call(S,String.prototype.replace),N=z.call(S,String.prototype.slice),q=z.call(S,RegExp.prototype.exec),B=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,F=/\\(\\)?/g,V=function(n){var e=N(n,0,1),t=N(n,-1);if("%"===e&&"%"!==t)throw new l("invalid intrinsic syntax, expected closing `%`");if("%"===t&&"%"!==e)throw new l("invalid intrinsic syntax, expected opening `%`");var i=[];return U(n,B,(function(n,e,t,a){i[i.length]=t?U(a,F,"$1"):e||n})),i},G=function(n,e){var t,i=n;if(R(j,i)&&(i="%"+(t=j[i])[0]+"%"),R(O,i)){var a=O[i];if(a===M&&(a=function n(e){var t;if("%AsyncFunction%"===e)t=_("async function () {}");else if("%GeneratorFunction%"===e)t=_("function* () {}");else if("%AsyncGeneratorFunction%"===e)t=_("async function* () {}");else if("%AsyncGenerator%"===e){var i=n("%AsyncGeneratorFunction%");i&&(t=i.prototype)}else if("%AsyncIteratorPrototype%"===e){var a=n("%AsyncGenerator%");a&&I&&(t=I(a.prototype))}return O[e]=t,t}(i)),void 0===a&&!e)throw new d("intrinsic "+n+" exists, but is not available. Please file an issue!");return{alias:t,name:i,value:a}}throw new l("intrinsic "+n+" does not exist!")};n.exports=function(n,e){if("string"!=typeof n||0===n.length)throw new d("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new d('"allowMissing" argument must be a boolean');if(null===q(/^%?[^%]*%?$/,n))throw new l("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var t=V(n),i=t.length>0?t[0]:"",a=G("%"+i+"%",e),r=a.name,o=a.value,s=!1,c=a.alias;c&&(i=c[0],L(t,$([0,1],c)));for(var u=1,p=!0;u<t.length;u+=1){var h=t[u],m=N(h,0,1),g=N(h,-1);if(('"'===m||"'"===m||"`"===m||'"'===g||"'"===g||"`"===g)&&m!==g)throw new l("property names with quotes must have matching quotes");if("constructor"!==h&&p||(s=!0),R(O,r="%"+(i+="."+h)+"%"))o=O[r];else if(null!=o){if(!(h in o)){if(!e)throw new d("base intrinsic for "+n+" exists, but the property is not available.");return}if(y&&u+1>=t.length){var f=y(o,h);o=(p=!!f)&&"get"in f&&!("originalValue"in f.get)?f.get:o[h]}else p=R(o,h),o=o[h];p&&!s&&(O[r]=o)}}return o}},function(n,e,t){"use strict";n.exports=Function.prototype.call},function(n,e,t){"use strict";var i=String.prototype.replace,a=/%20/g,r="RFC1738",o="RFC3986";n.exports={default:o,formatters:{RFC1738:function(n){return i.call(n,a,"+")},RFC3986:function(n){return String(n)}},RFC1738:r,RFC3986:o}},function(n,e,t){"use strict";var i=t(379),a=t(408),r=t(92);n.exports={formats:r,parse:a,stringify:i}},function(n,e,t){"use strict";var i=t(8),a=t(6),r=t(33),o=Object,s=i("".split);n.exports=a((function(){return!o("z").propertyIsEnumerable(0)}))?function(n){return"String"===r(n)?s(n,""):o(n)}:o},function(n,e,t){"use strict";var i,a=t(4),r=t(194),o=t(69),s=t(68),l=t(196),d=t(106),c=t(67),u=c("IE_PROTO"),p=function(){},h=function(n){return"<script>"+n+"<\/script>"},m=function(n){n.write(h("")),n.close();var e=n.parentWindow.Object;return n=null,e},g=function(){try{i=new ActiveXObject("htmlfile")}catch(n){}var n,e;g="undefined"!=typeof document?document.domain&&i?m(i):((e=d("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(h("document.F=Object")),n.close(),n.F):m(i);for(var t=o.length;t--;)delete g.prototype[o[t]];return g()};s[u]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(p.prototype=a(n),t=new p,p.prototype=null,t[u]=n):t=g(),void 0===e?t:r.f(t,e)}},function(n,e,t){"use strict";var i=t(9),a=t(18),r=t(177),o=t(39),s=t(40),l=t(97),d=t(15),c=t(105),u=Object.getOwnPropertyDescriptor;e.f=i?u:function(n,e){if(n=s(n),e=l(e),c)try{return u(n,e)}catch(n){}if(d(n,e))return o(!a(r.f,n,e),n[e])}},function(n,e,t){"use strict";var i=t(178),a=t(98);n.exports=function(n){var e=i(n,"string");return a(e)?e:e+""}},function(n,e,t){"use strict";var i=t(41),a=t(3),r=t(42),o=t(99),s=Object;n.exports=o?function(n){return"symbol"==typeof n}:function(n){var e=i("Symbol");return a(e)&&r(e.prototype,s(n))}},function(n,e,t){"use strict";var i=t(100);n.exports=i&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var i=t(101),a=t(6),r=t(5).String;n.exports=!!Object.getOwnPropertySymbols&&!a((function(){var n=Symbol("symbol detection");return!r(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&i&&i<41}))},function(n,e,t){"use strict";var i,a,r=t(5),o=t(102),s=r.process,l=r.Deno,d=s&&s.versions||l&&l.version,c=d&&d.v8;c&&(a=(i=c.split("."))[0]>0&&i[0]<4?1:+(i[0]+i[1])),!a&&o&&(!(i=o.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=o.match(/Chrome\/(\d+)/))&&(a=+i[1]),n.exports=a},function(n,e,t){"use strict";var i=t(5).navigator,a=i&&i.userAgent;n.exports=a?String(a):""},function(n,e,t){"use strict";var i=t(65);n.exports=function(n,e){return i[n]||(i[n]=e||{})}},function(n,e,t){"use strict";var i=t(8),a=0,r=Math.random(),o=i(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++a+r,36)}},function(n,e,t){"use strict";var i=t(9),a=t(6),r=t(106);n.exports=!i&&!a((function(){return 7!==Object.defineProperty(r("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var i=t(5),a=t(14),r=i.document,o=a(r)&&a(r.createElement);n.exports=function(n){return o?r.createElement(n):{}}},function(n,e,t){"use strict";var i=t(9),a=t(6);n.exports=i&&a((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var i=t(8),a=t(6),r=t(3),o=t(15),s=t(9),l=t(180).CONFIGURABLE,d=t(181),c=t(109),u=c.enforce,p=c.get,h=String,m=Object.defineProperty,g=i("".slice),f=i("".replace),v=i([].join),b=s&&!a((function(){return 8!==m((function(){}),"length",{value:8}).length})),_=String(String).split("String"),y=n.exports=function(n,e,t){"Symbol("===g(h(e),0,7)&&(e="["+f(h(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!o(n,"name")||l&&n.name!==e)&&(s?m(n,"name",{value:e,configurable:!0}):n.name=e),b&&t&&o(t,"arity")&&n.length!==t.arity&&m(n,"length",{value:t.arity});try{t&&o(t,"constructor")&&t.constructor?s&&m(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var i=u(n);return o(i,"source")||(i.source=v(_,"string"==typeof e?e:"")),n};Function.prototype.toString=y((function(){return r(this)&&p(this).source||d(this)}),"toString")},function(n,e,t){"use strict";var i,a,r,o=t(182),s=t(5),l=t(14),d=t(28),c=t(15),u=t(65),p=t(67),h=t(68),m=s.TypeError,g=s.WeakMap;if(o||u.state){var f=u.state||(u.state=new g);f.get=f.get,f.has=f.has,f.set=f.set,i=function(n,e){if(f.has(n))throw new m("Object already initialized");return e.facade=n,f.set(n,e),e},a=function(n){return f.get(n)||{}},r=function(n){return f.has(n)}}else{var v=p("state");h[v]=!0,i=function(n,e){if(c(n,v))throw new m("Object already initialized");return e.facade=n,d(n,v,e),e},a=function(n){return c(n,v)?n[v]:{}},r=function(n){return c(n,v)}}n.exports={set:i,get:a,has:r,enforce:function(n){return r(n)?a(n):i(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=a(e)).type!==n)throw new m("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var i=t(15),a=t(183),r=t(96),o=t(22);n.exports=function(n,e,t){for(var s=a(e),l=o.f,d=r.f,c=0;c<s.length;c++){var u=s[c];i(n,u)||t&&i(t,u)||l(n,u,d(e,u))}}},function(n,e,t){"use strict";var i=t(8),a=t(15),r=t(40),o=t(185).indexOf,s=t(68),l=i([].push);n.exports=function(n,e){var t,i=r(n),d=0,c=[];for(t in i)!a(s,t)&&a(i,t)&&l(c,t);for(;e.length>d;)a(i,t=e[d++])&&(~o(c,t)||l(c,t));return c}},function(n,e,t){"use strict";var i=t(187);n.exports=function(n){var e=+n;return e!=e||0===e?0:i(e)}},function(n,e,t){"use strict";var i=t(15),a=t(3),r=t(36),o=t(67),s=t(192),l=o("IE_PROTO"),d=Object,c=d.prototype;n.exports=s?d.getPrototypeOf:function(n){var e=r(n);if(i(e,l))return e[l];var t=e.constructor;return a(t)&&e instanceof t?t.prototype:e instanceof d?c:null}},function(n,e,t){"use strict";var i,a,r,o=t(6),s=t(3),l=t(14),d=t(95),c=t(113),u=t(60),p=t(21),h=t(27),m=p("iterator"),g=!1;[].keys&&("next"in(r=[].keys())?(a=c(c(r)))!==Object.prototype&&(i=a):g=!0),!l(i)||o((function(){var n={};return i[m].call(n)!==n}))?i={}:h&&(i=d(i)),s(i[m])||u(i,m,(function(){return this})),n.exports={IteratorPrototype:i,BUGGY_SAFARI_ITERATORS:g}},function(n,e,t){"use strict";var i=t(18),a=t(95),r=t(28),o=t(197),s=t(21),l=t(109),d=t(43),c=t(114).IteratorPrototype,u=t(198),p=t(70),h=s("toStringTag"),m=l.set,g=function(n){var e=l.getterFor(n?"WrapForValidIterator":"IteratorHelper");return o(a(c),{next:function(){var t=e(this);if(n)return t.nextHandler();if(t.done)return u(void 0,!0);try{var i=t.nextHandler();return t.returnHandlerResult?i:u(i,t.done)}catch(n){throw t.done=!0,n}},return:function(){var t=e(this),a=t.iterator;if(t.done=!0,n){var r=d(a,"return");return r?i(r,a):u(void 0,!0)}if(t.inner)try{p(t.inner.iterator,"normal")}catch(n){return p(a,"throw",n)}return a&&p(a,"normal"),u(void 0,!0)}})},f=g(!0),v=g(!1);r(v,h,"Iterator Helper"),n.exports=function(n,e,t){var i=function(i,a){a?(a.iterator=i.iterator,a.next=i.next):a=i,a.type=e?"WrapForValidIterator":"IteratorHelper",a.returnHandlerResult=!!t,a.nextHandler=n,a.counter=0,a.done=!1,m(this,a)};return i.prototype=e?f:v,i}},function(n,e,t){"use strict";var i=t(4),a=t(70);n.exports=function(n,e,t,r){try{return r?e(i(t)[0],t[1]):e(t)}catch(e){a(n,"throw",e)}}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";var i=t(119),a=t(43),r=t(63),o=t(117),s=t(21)("iterator");n.exports=function(n){if(!r(n))return a(n,s)||a(n,"@@iterator")||o[i(n)]}},function(n,e,t){"use strict";var i=t(208),a=t(3),r=t(33),o=t(21)("toStringTag"),s=Object,l="Arguments"===r(function(){return arguments}());n.exports=i?r:function(n){var e,t,i;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),o))?t:l?r(e):"Object"===(i=r(e))&&a(e.callee)?"Arguments":i}},function(n,e,t){"use strict";var i=t(213),a=t(14),r=t(62),o=t(214);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=i(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,i){return r(t),o(i),a(t)?(e?n(t,i):t.__proto__=i,t):t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,i=e.length,a=n.length;++t<i;)n[a+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var i=t(44),a=t(239),r=t(240),o=t(241),s=t(242),l=t(243);function d(n){var e=this.__data__=new i(n);this.size=e.size}d.prototype.clear=a,d.prototype.delete=r,d.prototype.get=o,d.prototype.has=s,d.prototype.set=l,n.exports=d},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var i=t(32),a=t(73);n.exports=function(n){if(!a(n))return!1;var e=i(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var i=t(260),a=t(26);n.exports=function n(e,t,r,o,s){return e===t||(null==e||null==t||!a(e)&&!a(t)?e!=e&&t!=t:i(e,t,r,o,n,s))}},function(n,e,t){var i=t(129),a=t(263),r=t(130);n.exports=function(n,e,t,o,s,l){var d=1&t,c=n.length,u=e.length;if(c!=u&&!(d&&u>c))return!1;var p=l.get(n),h=l.get(e);if(p&&h)return p==e&&h==n;var m=-1,g=!0,f=2&t?new i:void 0;for(l.set(n,e),l.set(e,n);++m<c;){var v=n[m],b=e[m];if(o)var _=d?o(b,v,m,e,n,l):o(v,b,m,n,e,l);if(void 0!==_){if(_)continue;g=!1;break}if(f){if(!a(e,(function(n,e){if(!r(f,e)&&(v===n||s(v,n,t,o,l)))return f.push(e)}))){g=!1;break}}else if(v!==b&&!s(v,b,t,o,l)){g=!1;break}}return l.delete(n),l.delete(e),g}},function(n,e,t){var i=t(74),a=t(261),r=t(262);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new i;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=a,o.prototype.has=r,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var i=t(273),a=t(279),r=t(135);n.exports=function(n){return r(n)?i(n):a(n)}},function(n,e,t){(function(n){var i=t(19),a=t(275),r=e&&!e.nodeType&&e,o=r&&"object"==typeof n&&n&&!n.nodeType&&n,s=o&&o.exports===r?i.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;n.exports=l}).call(this,t(61)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var i=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==i||"symbol"!=i&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var i=t(276),a=t(277),r=t(278),o=r&&r.isTypedArray,s=o?a(o):i;n.exports=s},function(n,e,t){var i=t(125),a=t(76);n.exports=function(n){return null!=n&&a(n.length)&&!i(n)}},function(n,e,t){var i=t(23)(t(19),"Set");n.exports=i},function(n,e,t){var i=t(73);n.exports=function(n){return n==n&&!i(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var i=t(140),a=t(48);n.exports=function(n,e){for(var t=0,r=(e=i(e,n)).length;null!=n&&t<r;)n=n[a(e[t++])];return t&&t==r?n:void 0}},function(n,e,t){var i=t(17),a=t(77),r=t(290),o=t(293);n.exports=function(n,e){return i(n)?n:a(n,e)?[n]:r(o(n))}},function(n,e,t){"use strict";var i;!function(a){var r={},o=/d{1,4}|M{1,4}|yy(?:yy)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g,s="[^\\s]+",l=/\[([^]*?)\]/gm,d=function(){};function c(n,e){for(var t=[],i=0,a=n.length;i<a;i++)t.push(n[i].substr(0,e));return t}function u(n){return function(e,t,i){var a=i[n].indexOf(t.charAt(0).toUpperCase()+t.substr(1).toLowerCase());~a&&(e.month=a)}}function p(n,e){for(n=String(n),e=e||2;n.length<e;)n="0"+n;return n}var h=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],m=["January","February","March","April","May","June","July","August","September","October","November","December"],g=c(m,3),f=c(h,3);r.i18n={dayNamesShort:f,dayNames:h,monthNamesShort:g,monthNames:m,amPm:["am","pm"],DoFn:function(n){return n+["th","st","nd","rd"][n%10>3?0:(n-n%10!=10)*n%10]}};var v={D:function(n){return n.getDay()},DD:function(n){return p(n.getDay())},Do:function(n,e){return e.DoFn(n.getDate())},d:function(n){return n.getDate()},dd:function(n){return p(n.getDate())},ddd:function(n,e){return e.dayNamesShort[n.getDay()]},dddd:function(n,e){return e.dayNames[n.getDay()]},M:function(n){return n.getMonth()+1},MM:function(n){return p(n.getMonth()+1)},MMM:function(n,e){return e.monthNamesShort[n.getMonth()]},MMMM:function(n,e){return e.monthNames[n.getMonth()]},yy:function(n){return p(String(n.getFullYear()),4).substr(2)},yyyy:function(n){return p(n.getFullYear(),4)},h:function(n){return n.getHours()%12||12},hh:function(n){return p(n.getHours()%12||12)},H:function(n){return n.getHours()},HH:function(n){return p(n.getHours())},m:function(n){return n.getMinutes()},mm:function(n){return p(n.getMinutes())},s:function(n){return n.getSeconds()},ss:function(n){return p(n.getSeconds())},S:function(n){return Math.round(n.getMilliseconds()/100)},SS:function(n){return p(Math.round(n.getMilliseconds()/10),2)},SSS:function(n){return p(n.getMilliseconds(),3)},a:function(n,e){return n.getHours()<12?e.amPm[0]:e.amPm[1]},A:function(n,e){return n.getHours()<12?e.amPm[0].toUpperCase():e.amPm[1].toUpperCase()},ZZ:function(n){var e=n.getTimezoneOffset();return(e>0?"-":"+")+p(100*Math.floor(Math.abs(e)/60)+Math.abs(e)%60,4)}},b={d:["\\d\\d?",function(n,e){n.day=e}],Do:["\\d\\d?"+s,function(n,e){n.day=parseInt(e,10)}],M:["\\d\\d?",function(n,e){n.month=e-1}],yy:["\\d\\d?",function(n,e){var t=+(""+(new Date).getFullYear()).substr(0,2);n.year=""+(e>68?t-1:t)+e}],h:["\\d\\d?",function(n,e){n.hour=e}],m:["\\d\\d?",function(n,e){n.minute=e}],s:["\\d\\d?",function(n,e){n.second=e}],yyyy:["\\d{4}",function(n,e){n.year=e}],S:["\\d",function(n,e){n.millisecond=100*e}],SS:["\\d{2}",function(n,e){n.millisecond=10*e}],SSS:["\\d{3}",function(n,e){n.millisecond=e}],D:["\\d\\d?",d],ddd:[s,d],MMM:[s,u("monthNamesShort")],MMMM:[s,u("monthNames")],a:[s,function(n,e,t){var i=e.toLowerCase();i===t.amPm[0]?n.isPm=!1:i===t.amPm[1]&&(n.isPm=!0)}],ZZ:["[^\\s]*?[\\+\\-]\\d\\d:?\\d\\d|[^\\s]*?Z",function(n,e){var t,i=(e+"").match(/([+-]|\d\d)/gi);i&&(t=60*i[1]+parseInt(i[2],10),n.timezoneOffset="+"===i[0]?t:-t)}]};b.dd=b.d,b.dddd=b.ddd,b.DD=b.D,b.mm=b.m,b.hh=b.H=b.HH=b.h,b.MM=b.M,b.ss=b.s,b.A=b.a,r.masks={default:"ddd MMM dd yyyy HH:mm:ss",shortDate:"M/D/yy",mediumDate:"MMM d, yyyy",longDate:"MMMM d, yyyy",fullDate:"dddd, MMMM d, yyyy",shortTime:"HH:mm",mediumTime:"HH:mm:ss",longTime:"HH:mm:ss.SSS"},r.format=function(n,e,t){var i=t||r.i18n;if("number"==typeof n&&(n=new Date(n)),"[object Date]"!==Object.prototype.toString.call(n)||isNaN(n.getTime()))throw new Error("Invalid Date in fecha.format");e=r.masks[e]||e||r.masks.default;var a=[];return(e=(e=e.replace(l,(function(n,e){return a.push(e),"@@@"}))).replace(o,(function(e){return e in v?v[e](n,i):e.slice(1,e.length-1)}))).replace(/@@@/g,(function(){return a.shift()}))},r.parse=function(n,e,t){var i=t||r.i18n;if("string"!=typeof e)throw new Error("Invalid format in fecha.parse");if(e=r.masks[e]||e,n.length>1e3)return null;var a={},s=[],d=[];e=e.replace(l,(function(n,e){return d.push(e),"@@@"}));var c,u=(c=e,c.replace(/[|\\{()[^$+*?.-]/g,"\\$&")).replace(o,(function(n){if(b[n]){var e=b[n];return s.push(e[1]),"("+e[0]+")"}return n}));u=u.replace(/@@@/g,(function(){return d.shift()}));var p=n.match(new RegExp(u,"i"));if(!p)return null;for(var h=1;h<p.length;h++)s[h-1](a,p[h],i);var m,g=new Date;return!0===a.isPm&&null!=a.hour&&12!=+a.hour?a.hour=+a.hour+12:!1===a.isPm&&12==+a.hour&&(a.hour=0),null!=a.timezoneOffset?(a.minute=+(a.minute||0)-+a.timezoneOffset,m=new Date(Date.UTC(a.year||g.getFullYear(),a.month||0,a.day||1,a.hour||0,a.minute||0,a.second||0,a.millisecond||0))):m=new Date(a.year||g.getFullYear(),a.month||0,a.day||1,a.hour||0,a.minute||0,a.second||0,a.millisecond||0),m},n.exports?n.exports=r:void 0===(i=function(){return r}.call(e,t,e,n))||(n.exports=i)}()},function(n,e,t){"use strict";e.__esModule=!0,e.isDefined=e.isUndefined=e.isFunction=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};e.isString=function(n){return"[object String]"===Object.prototype.toString.call(n)},e.isObject=function(n){return"[object Object]"===Object.prototype.toString.call(n)},e.isHtmlElement=function(n){return n&&n.nodeType===Node.ELEMENT_NODE};var a,r=t(1),o=(a=r)&&a.__esModule?a:{default:a};var s=function(n){return n&&"[object Function]"==={}.toString.call(n)};"object"===("undefined"==typeof Int8Array?"undefined":i(Int8Array))||!o.default.prototype.$isServer&&"function"==typeof document.childNodes||(e.isFunction=s=function(n){return"function"==typeof n||!1}),e.isFunction=s;e.isUndefined=function(n){return void 0===n},e.isDefined=function(n){return null!=n}},function(n,e,t){"use strict";e.__esModule=!0,e.PopupManager=void 0;var i=l(t(1)),a=l(t(50)),r=l(t(326)),o=l(t(82)),s=t(20);function l(n){return n&&n.__esModule?n:{default:n}}var d=1,c=void 0;e.default={props:{visible:{type:Boolean,default:!1},openDelay:{},closeDelay:{},zIndex:{},modal:{type:Boolean,default:!1},modalFade:{type:Boolean,default:!0},modalClass:{},modalAppendToBody:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!1},closeOnClickModal:{type:Boolean,default:!1}},beforeMount:function(){this._popupId="popup-"+d++,r.default.register(this._popupId,this)},beforeDestroy:function(){r.default.deregister(this._popupId),r.default.closeModal(this._popupId),this.restoreBodyStyle()},data:function(){return{opened:!1,bodyPaddingRight:null,computedBodyPaddingRight:0,withoutHiddenClass:!0,rendered:!1}},watch:{visible:function(n){var e=this;if(n){if(this._opening)return;this.rendered?this.open():(this.rendered=!0,i.default.nextTick((function(){e.open()})))}else this.close()}},methods:{open:function(n){var e=this;this.rendered||(this.rendered=!0);var t=(0,a.default)({},this.$props||this,n);this._closeTimer&&(clearTimeout(this._closeTimer),this._closeTimer=null),clearTimeout(this._openTimer);var i=Number(t.openDelay);i>0?this._openTimer=setTimeout((function(){e._openTimer=null,e.doOpen(t)}),i):this.doOpen(t)},doOpen:function(n){if(!this.$isServer&&(!this.willOpen||this.willOpen())&&!this.opened){this._opening=!0;var e=this.$el,t=n.modal,i=n.zIndex;if(i&&(r.default.zIndex=i),t&&(this._closing&&(r.default.closeModal(this._popupId),this._closing=!1),r.default.openModal(this._popupId,r.default.nextZIndex(),this.modalAppendToBody?void 0:e,n.modalClass,n.modalFade),n.lockScroll)){this.withoutHiddenClass=!(0,s.hasClass)(document.body,"el-popup-parent--hidden"),this.withoutHiddenClass&&(this.bodyPaddingRight=document.body.style.paddingRight,this.computedBodyPaddingRight=parseInt((0,s.getStyle)(document.body,"paddingRight"),10)),c=(0,o.default)();var a=document.documentElement.clientHeight<document.body.scrollHeight,l=(0,s.getStyle)(document.body,"overflowY");c>0&&(a||"scroll"===l)&&this.withoutHiddenClass&&(document.body.style.paddingRight=this.computedBodyPaddingRight+c+"px"),(0,s.addClass)(document.body,"el-popup-parent--hidden")}"static"===getComputedStyle(e).position&&(e.style.position="absolute"),e.style.zIndex=r.default.nextZIndex(),this.opened=!0,this.onOpen&&this.onOpen(),this.doAfterOpen()}},doAfterOpen:function(){this._opening=!1},close:function(){var n=this;if(!this.willClose||this.willClose()){null!==this._openTimer&&(clearTimeout(this._openTimer),this._openTimer=null),clearTimeout(this._closeTimer);var e=Number(this.closeDelay);e>0?this._closeTimer=setTimeout((function(){n._closeTimer=null,n.doClose()}),e):this.doClose()}},doClose:function(){this._closing=!0,this.onClose&&this.onClose(),this.lockScroll&&setTimeout(this.restoreBodyStyle,200),this.opened=!1,this.doAfterClose()},doAfterClose:function(){r.default.closeModal(this._popupId),this._closing=!1},restoreBodyStyle:function(){this.modal&&this.withoutHiddenClass&&(document.body.style.paddingRight=this.bodyPaddingRight,(0,s.removeClass)(document.body,"el-popup-parent--hidden")),this.withoutHiddenClass=!0}}},e.PopupManager=r.default},function(n,e,t){"use strict";e.__esModule=!0;t(10);e.default={mounted:function(){},methods:{getMigratingConfig:function(){return{props:{},events:{}}}}}},function(n,e,t){"use strict";e.__esModule=!0;var i,a=t(1),r=(i=a)&&i.__esModule?i:{default:i},o=t(20);var s=[],l="@@clickoutsideContext",d=void 0,c=0;function u(n,e,t){return function(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!(t&&t.context&&i.target&&a.target)||n.contains(i.target)||n.contains(a.target)||n===i.target||t.context.popperElm&&(t.context.popperElm.contains(i.target)||t.context.popperElm.contains(a.target))||(e.expression&&n[l].methodName&&t.context[n[l].methodName]?t.context[n[l].methodName]():n[l].bindingFn&&n[l].bindingFn())}}!r.default.prototype.$isServer&&(0,o.on)(document,"mousedown",(function(n){return d=n})),!r.default.prototype.$isServer&&(0,o.on)(document,"mouseup",(function(n){s.forEach((function(e){return e[l].documentHandler(n,d)}))})),e.default={bind:function(n,e,t){s.push(n);var i=c++;n[l]={id:i,documentHandler:u(n,e,t),methodName:e.expression,bindingFn:e.value}},update:function(n,e,t){n[l].documentHandler=u(n,e,t),n[l].methodName=e.expression,n[l].bindingFn=e.value},unbind:function(n){for(var e=s.length,t=0;t<e;t++)if(s[t][l].id===n[l].id){s.splice(t,1);break}delete n[l]}}},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=91)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},4:function(n,e){n.exports=t(24)},91:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("label",{staticClass:"el-checkbox",class:[n.border&&n.checkboxSize?"el-checkbox--"+n.checkboxSize:"",{"is-disabled":n.isDisabled},{"is-bordered":n.border},{"is-checked":n.isChecked}],attrs:{id:n.id}},[t("span",{staticClass:"el-checkbox__input",class:{"is-disabled":n.isDisabled,"is-checked":n.isChecked,"is-indeterminate":n.indeterminate,"is-focus":n.focus},attrs:{tabindex:!!n.indeterminate&&0,role:!!n.indeterminate&&"checkbox","aria-checked":!!n.indeterminate&&"mixed"}},[t("span",{staticClass:"el-checkbox__inner"}),n.trueLabel||n.falseLabel?t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],staticClass:"el-checkbox__original",attrs:{type:"checkbox","aria-hidden":n.indeterminate?"true":"false",name:n.name,disabled:n.isDisabled,"true-value":n.trueLabel,"false-value":n.falseLabel},domProps:{checked:Array.isArray(n.model)?n._i(n.model,null)>-1:n._q(n.model,n.trueLabel)},on:{change:[function(e){var t=n.model,i=e.target,a=i.checked?n.trueLabel:n.falseLabel;if(Array.isArray(t)){var r=n._i(t,null);i.checked?r<0&&(n.model=t.concat([null])):r>-1&&(n.model=t.slice(0,r).concat(t.slice(r+1)))}else n.model=a},n.handleChange],focus:function(e){n.focus=!0},blur:function(e){n.focus=!1}}}):t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],staticClass:"el-checkbox__original",attrs:{type:"checkbox","aria-hidden":n.indeterminate?"true":"false",disabled:n.isDisabled,name:n.name},domProps:{value:n.label,checked:Array.isArray(n.model)?n._i(n.model,n.label)>-1:n.model},on:{change:[function(e){var t=n.model,i=e.target,a=!!i.checked;if(Array.isArray(t)){var r=n.label,o=n._i(t,r);i.checked?o<0&&(n.model=t.concat([r])):o>-1&&(n.model=t.slice(0,o).concat(t.slice(o+1)))}else n.model=a},n.handleChange],focus:function(e){n.focus=!0},blur:function(e){n.focus=!1}}})]),n.$slots.default||n.label?t("span",{staticClass:"el-checkbox__label"},[n._t("default"),n.$slots.default?n._e():[n._v(n._s(n.label))]],2):n._e()])};i._withStripped=!0;var a=t(4),r={name:"ElCheckbox",mixins:[t.n(a).a],inject:{elForm:{default:""},elFormItem:{default:""}},componentName:"ElCheckbox",data:function(){return{selfModel:!1,focus:!1,isLimitExceeded:!1}},computed:{model:{get:function(){return this.isGroup?this.store:void 0!==this.value?this.value:this.selfModel},set:function(n){this.isGroup?(this.isLimitExceeded=!1,void 0!==this._checkboxGroup.min&&n.length<this._checkboxGroup.min&&(this.isLimitExceeded=!0),void 0!==this._checkboxGroup.max&&n.length>this._checkboxGroup.max&&(this.isLimitExceeded=!0),!1===this.isLimitExceeded&&this.dispatch("ElCheckboxGroup","input",[n])):(this.$emit("input",n),this.selfModel=n)}},isChecked:function(){return"[object Boolean]"==={}.toString.call(this.model)?this.model:Array.isArray(this.model)?this.model.indexOf(this.label)>-1:null!==this.model&&void 0!==this.model?this.model===this.trueLabel:void 0},isGroup:function(){for(var n=this.$parent;n;){if("ElCheckboxGroup"===n.$options.componentName)return this._checkboxGroup=n,!0;n=n.$parent}return!1},store:function(){return this._checkboxGroup?this._checkboxGroup.value:this.value},isLimitDisabled:function(){var n=this._checkboxGroup,e=n.max,t=n.min;return!(!e&&!t)&&this.model.length>=e&&!this.isChecked||this.model.length<=t&&this.isChecked},isDisabled:function(){return this.isGroup?this._checkboxGroup.disabled||this.disabled||(this.elForm||{}).disabled||this.isLimitDisabled:this.disabled||(this.elForm||{}).disabled},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},checkboxSize:function(){var n=this.size||this._elFormItemSize||(this.$ELEMENT||{}).size;return this.isGroup&&this._checkboxGroup.checkboxGroupSize||n}},props:{value:{},label:{},indeterminate:Boolean,disabled:Boolean,checked:Boolean,name:String,trueLabel:[String,Number],falseLabel:[String,Number],id:String,controls:String,border:Boolean,size:String},methods:{addToStore:function(){Array.isArray(this.model)&&-1===this.model.indexOf(this.label)?this.model.push(this.label):this.model=this.trueLabel||!0},handleChange:function(n){var e=this;if(!this.isLimitExceeded){var t=void 0;t=n.target.checked?void 0===this.trueLabel||this.trueLabel:void 0!==this.falseLabel&&this.falseLabel,this.$emit("change",t,n),this.$nextTick((function(){e.isGroup&&e.dispatch("ElCheckboxGroup","change",[e._checkboxGroup.value])}))}}},created:function(){this.checked&&this.addToStore()},mounted:function(){this.indeterminate&&this.$el.setAttribute("aria-controls",this.controls)},watch:{value:function(n){this.dispatch("ElFormItem","el.form.change",n)}}},o=t(0),s=Object(o.a)(r,i,[],!1,null,null,null);s.options.__file="packages/checkbox/src/checkbox.vue";var l=s.exports;l.install=function(n){n.component(l.name,l)};e.default=l}})},function(n,e,t){var i=t(85),a=t(52);n.exports={throttle:i,debounce:a}},function(n,e){var t=/^(attrs|props|on|nativeOn|class|style|hook)$/;function i(n,e){return function(){n&&n.apply(this,arguments),e&&e.apply(this,arguments)}}n.exports=function(n){return n.reduce((function(n,e){var a,r,o,s,l;for(o in e)if(a=n[o],r=e[o],a&&t.test(o))if("class"===o&&("string"==typeof a&&(l=a,n[o]=a={},a[l]=!0),"string"==typeof r&&(l=r,e[o]=r={},r[l]=!0)),"on"===o||"nativeOn"===o||"hook"===o)for(s in r)a[s]=i(a[s],r[s]);else if(Array.isArray(a))n[o]=a.concat(r);else if(Array.isArray(r))n[o]=[a].concat(r);else for(s in r)a[s]=r[s];else n[o]=e[o];return n}),{})}},function(n,e){(function(e){n.exports=e}).call(this,{})},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=132)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},132:function(n,e,t){"use strict";t.r(e);var i={name:"ElTag",props:{text:String,closable:Boolean,type:String,hit:Boolean,disableTransitions:Boolean,color:String,size:String,effect:{type:String,default:"light",validator:function(n){return-1!==["dark","light","plain"].indexOf(n)}}},methods:{handleClose:function(n){n.stopPropagation(),this.$emit("close",n)},handleClick:function(n){this.$emit("click",n)}},computed:{tagSize:function(){return this.size||(this.$ELEMENT||{}).size}},render:function(n){var e=this.type,t=this.tagSize,i=this.hit,a=this.effect,r=n("span",{class:["el-tag",e?"el-tag--"+e:"",t?"el-tag--"+t:"",a?"el-tag--"+a:"",i&&"is-hit"],style:{backgroundColor:this.color},on:{click:this.handleClick}},[this.$slots.default,this.closable&&n("i",{class:"el-tag__close el-icon-close",on:{click:this.handleClose}})]);return this.disableTransitions?r:n("transition",{attrs:{name:"el-zoom-in-center"}},[r])}},a=t(0),r=Object(a.a)(i,void 0,void 0,!1,null,null,null);r.options.__file="packages/tag/src/tag.vue";var o=r.exports;o.install=function(n){n.component(o.name,o)};e.default=o}})},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e.default=n,e}(t(2));e.default=function(n,e,t,a,r,o){!n.required||t.hasOwnProperty(n.field)&&!i.isEmptyValue(e,o||n.type)||a.push(i.format(r.messages.required,n.fullField))}},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=88)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},4:function(n,e){n.exports=t(24)},88:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("label",{staticClass:"el-radio",class:[n.border&&n.radioSize?"el-radio--"+n.radioSize:"",{"is-disabled":n.isDisabled},{"is-focus":n.focus},{"is-bordered":n.border},{"is-checked":n.model===n.label}],attrs:{role:"radio","aria-checked":n.model===n.label,"aria-disabled":n.isDisabled,tabindex:n.tabIndex},on:{keydown:function(e){if(!("button"in e)&&n._k(e.keyCode,"space",32,e.key,[" ","Spacebar"]))return null;e.stopPropagation(),e.preventDefault(),n.model=n.isDisabled?n.model:n.label}}},[t("span",{staticClass:"el-radio__input",class:{"is-disabled":n.isDisabled,"is-checked":n.model===n.label}},[t("span",{staticClass:"el-radio__inner"}),t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],ref:"radio",staticClass:"el-radio__original",attrs:{type:"radio","aria-hidden":"true",name:n.name,disabled:n.isDisabled,tabindex:"-1",autocomplete:"off"},domProps:{value:n.label,checked:n._q(n.model,n.label)},on:{focus:function(e){n.focus=!0},blur:function(e){n.focus=!1},change:[function(e){n.model=n.label},n.handleChange]}})]),t("span",{staticClass:"el-radio__label",on:{keydown:function(n){n.stopPropagation()}}},[n._t("default"),n.$slots.default?n._e():[n._v(n._s(n.label))]],2)])};i._withStripped=!0;var a=t(4),r={name:"ElRadio",mixins:[t.n(a).a],inject:{elForm:{default:""},elFormItem:{default:""}},componentName:"ElRadio",props:{value:{},label:{},disabled:Boolean,name:String,border:Boolean,size:String},data:function(){return{focus:!1}},computed:{isGroup:function(){for(var n=this.$parent;n;){if("ElRadioGroup"===n.$options.componentName)return this._radioGroup=n,!0;n=n.$parent}return!1},model:{get:function(){return this.isGroup?this._radioGroup.value:this.value},set:function(n){this.isGroup?this.dispatch("ElRadioGroup","input",[n]):this.$emit("input",n),this.$refs.radio&&(this.$refs.radio.checked=this.model===this.label)}},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},radioSize:function(){var n=this.size||this._elFormItemSize||(this.$ELEMENT||{}).size;return this.isGroup&&this._radioGroup.radioGroupSize||n},isDisabled:function(){return this.isGroup?this._radioGroup.disabled||this.disabled||(this.elForm||{}).disabled:this.disabled||(this.elForm||{}).disabled},tabIndex:function(){return this.isDisabled||this.isGroup&&this.model!==this.label?-1:0}},methods:{handleChange:function(){var n=this;this.$nextTick((function(){n.$emit("change",n.model),n.isGroup&&n.dispatch("ElRadioGroup","handleChange",n.model)}))}}},o=t(0),s=Object(o.a)(r,i,[],!1,null,null,null);s.options.__file="packages/radio/src/radio.vue";var l=s.exports;l.install=function(n){n.component(l.name,l)};e.default=l}})},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var i=t(90),a=t(162),r=t(53),o=t(29),s=i("%Map%",!0),l=a("Map.prototype.get",!0),d=a("Map.prototype.set",!0),c=a("Map.prototype.has",!0),u=a("Map.prototype.delete",!0),p=a("Map.prototype.size",!0);n.exports=!!s&&function(){var n,e={assert:function(n){if(!e.has(n))throw new o("Side channel does not contain "+r(n))},delete:function(e){if(n){var t=u(n,e);return 0===p(n)&&(n=void 0),t}return!1},get:function(e){if(n)return l(n,e)},has:function(e){return!!n&&c(n,e)},set:function(e,t){n||(n=new s),d(n,e,t)}};return e}},function(n,e,t){"use strict";n.exports=Object},function(n,e,t){"use strict";var i=t(397);if(i)try{i([],"length")}catch(n){i=null}n.exports=i},function(n,e,t){"use strict";n.exports="undefined"!=typeof Reflect&&Reflect.getPrototypeOf||null},function(n,e,t){"use strict";var i=t(156);n.exports=i.getPrototypeOf||null},function(n,e,t){"use strict";var i=t(54),a=t(29),r=t(91),o=t(404);n.exports=function(n){if(n.length<1||"function"!=typeof n[0])throw new a("a function is required");return o(i,r,n)}},function(n,e,t){"use strict";n.exports=Function.prototype.apply},function(n,e,t){"use strict";var i=t(90),a=t(160),r=a([i("%String.prototype.indexOf%")]);n.exports=function(n,e){var t=i(n,!!e);return"function"==typeof t&&r(n,".prototype.")>-1?a([t]):t}},function(n,e,t){"use strict";var i=t(92),a=Object.prototype.hasOwnProperty,r=Array.isArray,o=function(){for(var n=[],e=0;e<256;++e)n.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return n}(),s=function(n,e){for(var t=e&&e.plainObjects?{__proto__:null}:{},i=0;i<n.length;++i)void 0!==n[i]&&(t[i]=n[i]);return t};n.exports={arrayToObject:s,assign:function(n,e){return Object.keys(e).reduce((function(n,t){return n[t]=e[t],n}),n)},combine:function(n,e){return[].concat(n,e)},compact:function(n){for(var e=[{obj:{o:n},prop:"o"}],t=[],i=0;i<e.length;++i)for(var a=e[i],o=a.obj[a.prop],s=Object.keys(o),l=0;l<s.length;++l){var d=s[l],c=o[d];"object"==typeof c&&null!==c&&-1===t.indexOf(c)&&(e.push({obj:o,prop:d}),t.push(c))}return function(n){for(;n.length>1;){var e=n.pop(),t=e.obj[e.prop];if(r(t)){for(var i=[],a=0;a<t.length;++a)void 0!==t[a]&&i.push(t[a]);e.obj[e.prop]=i}}}(e),n},decode:function(n,e,t){var i=n.replace(/\+/g," ");if("iso-8859-1"===t)return i.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(i)}catch(n){return i}},encode:function(n,e,t,a,r){if(0===n.length)return n;var s=n;if("symbol"==typeof n?s=Symbol.prototype.toString.call(n):"string"!=typeof n&&(s=String(n)),"iso-8859-1"===t)return escape(s).replace(/%u[0-9a-f]{4}/gi,(function(n){return"%26%23"+parseInt(n.slice(2),16)+"%3B"}));for(var l="",d=0;d<s.length;d+=1024){for(var c=s.length>=1024?s.slice(d,d+1024):s,u=[],p=0;p<c.length;++p){var h=c.charCodeAt(p);45===h||46===h||95===h||126===h||h>=48&&h<=57||h>=65&&h<=90||h>=97&&h<=122||r===i.RFC1738&&(40===h||41===h)?u[u.length]=c.charAt(p):h<128?u[u.length]=o[h]:h<2048?u[u.length]=o[192|h>>6]+o[128|63&h]:h<55296||h>=57344?u[u.length]=o[224|h>>12]+o[128|h>>6&63]+o[128|63&h]:(p+=1,h=65536+((1023&h)<<10|1023&c.charCodeAt(p)),u[u.length]=o[240|h>>18]+o[128|h>>12&63]+o[128|h>>6&63]+o[128|63&h])}l+=u.join("")}return l},isBuffer:function(n){return!(!n||"object"!=typeof n)&&!!(n.constructor&&n.constructor.isBuffer&&n.constructor.isBuffer(n))},isRegExp:function(n){return"[object RegExp]"===Object.prototype.toString.call(n)},maybeMap:function(n,e){if(r(n)){for(var t=[],i=0;i<n.length;i+=1)t.push(e(n[i]));return t}return e(n)},merge:function n(e,t,i){if(!t)return e;if("object"!=typeof t&&"function"!=typeof t){if(r(e))e.push(t);else{if(!e||"object"!=typeof e)return[e,t];(i&&(i.plainObjects||i.allowPrototypes)||!a.call(Object.prototype,t))&&(e[t]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(t);var o=e;return r(e)&&!r(t)&&(o=s(e,i)),r(e)&&r(t)?(t.forEach((function(t,r){if(a.call(e,r)){var o=e[r];o&&"object"==typeof o&&t&&"object"==typeof t?e[r]=n(o,t,i):e.push(t)}else e[r]=t})),e):Object.keys(t).reduce((function(e,r){var o=t[r];return a.call(e,r)?e[r]=n(e[r],o,i):e[r]=o,e}),o)}}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var i=t(226),a=t(231),r=t(302),o=t(310),s=t(319),l=t(173),d=r((function(n){var e=l(n);return s(e)&&(e=void 0),o(i(n,1,s,!0),a(e,2))}));n.exports=d},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var i=/["'&<>]/;n.exports=function(n){var e,t=""+n,a=i.exec(t);if(!a)return t;var r="",o=0,s=0;for(o=a.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==o&&(r+=t.substring(s,o)),s=o+1,r+=e}return s!==o?r+t.substring(s,o):r}},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=46)}([function(n,e){n.exports=t(322)},function(n,e){n.exports=t(20)},function(n,e){n.exports=t(10)},function(n,e){n.exports=t(24)},function(n,e){n.exports=t(81)},function(n,e){n.exports=t(49)},function(n,e){n.exports=t(1)},function(n,e){n.exports=t(50)},function(n,e){n.exports=t(83)},function(n,e){n.exports=t(144)},function(n,e){n.exports=t(145)},function(n,e){n.exports=t(143)},function(n,e){n.exports=t(80)},function(n,e){n.exports=t(328)},function(n,e){n.exports=t(146)},function(n,e){n.exports=t(84)},function(n,e){n.exports=t(142)},function(n,e){n.exports=t(52)},function(n,e){n.exports=t(86)},function(n,e){n.exports=t(51)},function(n,e){n.exports=t(141)},function(n,e){n.exports=t(330)},function(n,e){n.exports=t(331)},function(n,e){n.exports=t(87)},function(n,e){n.exports=t(148)},function(n,e){n.exports=t(85)},function(n,e){n.exports=t(332)},function(n,e){n.exports=t(88)},function(n,e){n.exports=t(333)},function(n,e){n.exports=t(334)},function(n,e){n.exports=t(150)},function(n,e){n.exports=t(82)},function(n,e){n.exports=t(335)},function(n,e){n.exports=t(336)},function(n,e){n.exports=t(337)},function(n,e){n.exports=t(89)},function(n,e){n.exports=t(147)},function(n,e){n.exports=t(338)},function(n,e){n.exports=t(339)},function(n,e){n.exports=t(340)},function(n,e){n.exports=t(345)},function(n,e){n.exports=t(346)},function(n,e){n.exports=t(368)},function(n,e){n.exports=t(369)},function(n,e){n.exports=t(152)},function(n,e){n.exports=t(370)},function(n,e,t){n.exports=t(47)},function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ul",{staticClass:"el-pager",on:{click:n.onPagerClick}},[n.pageCount>0?t("li",{staticClass:"number",class:{active:1===n.currentPage,disabled:n.disabled}},[n._v("1")]):n._e(),n.showPrevMore?t("li",{staticClass:"el-icon more btn-quickprev",class:[n.quickprevIconClass,{disabled:n.disabled}],on:{mouseenter:function(e){n.onMouseenter("left")},mouseleave:function(e){n.quickprevIconClass="el-icon-more"}}}):n._e(),n._l(n.pagers,(function(e){return t("li",{key:e,staticClass:"number",class:{active:n.currentPage===e,disabled:n.disabled}},[n._v(n._s(e))])})),n.showNextMore?t("li",{staticClass:"el-icon more btn-quicknext",class:[n.quicknextIconClass,{disabled:n.disabled}],on:{mouseenter:function(e){n.onMouseenter("right")},mouseleave:function(e){n.quicknextIconClass="el-icon-more"}}}):n._e(),n.pageCount>1?t("li",{staticClass:"number",class:{active:n.currentPage===n.pageCount,disabled:n.disabled}},[n._v(n._s(n.pageCount))]):n._e()],2)};function a(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}i._withStripped=!0;var r=a({name:"ElPager",props:{currentPage:Number,pageCount:Number,pagerCount:Number,disabled:Boolean},watch:{showPrevMore:function(n){n||(this.quickprevIconClass="el-icon-more")},showNextMore:function(n){n||(this.quicknextIconClass="el-icon-more")}},methods:{onPagerClick:function(n){var e=n.target;if("UL"!==e.tagName&&!this.disabled){var t=Number(n.target.textContent),i=this.pageCount,a=this.currentPage,r=this.pagerCount-2;-1!==e.className.indexOf("more")&&(-1!==e.className.indexOf("quickprev")?t=a-r:-1!==e.className.indexOf("quicknext")&&(t=a+r)),isNaN(t)||(t<1&&(t=1),t>i&&(t=i)),t!==a&&this.$emit("change",t)}},onMouseenter:function(n){this.disabled||("left"===n?this.quickprevIconClass="el-icon-d-arrow-left":this.quicknextIconClass="el-icon-d-arrow-right")}},computed:{pagers:function(){var n=this.pagerCount,e=(n-1)/2,t=Number(this.currentPage),i=Number(this.pageCount),a=!1,r=!1;i>n&&(t>n-e&&(a=!0),t<i-e&&(r=!0));var o=[];if(a&&!r)for(var s=i-(n-2);s<i;s++)o.push(s);else if(!a&&r)for(var l=2;l<n;l++)o.push(l);else if(a&&r)for(var d=Math.floor(n/2)-1,c=t-d;c<=t+d;c++)o.push(c);else for(var u=2;u<i;u++)o.push(u);return this.showPrevMore=a,this.showNextMore=r,o}},data:function(){return{current:null,showPrevMore:!1,showNextMore:!1,quicknextIconClass:"el-icon-more",quickprevIconClass:"el-icon-more"}}},i,[],!1,null,null,null);r.options.__file="packages/pagination/src/pager.vue";var o=r.exports,s=t(37),l=t.n(s),d=t(38),c=t.n(d),u=t(8),p=t.n(u),h=t(4),m=t.n(h),g=t(2),f={name:"ElPagination",props:{pageSize:{type:Number,default:10},small:Boolean,total:Number,pageCount:Number,pagerCount:{type:Number,validator:function(n){return(0|n)===n&&n>4&&n<22&&n%2==1},default:7},currentPage:{type:Number,default:1},layout:{default:"prev, pager, next, jumper, ->, total"},pageSizes:{type:Array,default:function(){return[10,20,30,40,50,100]}},popperClass:String,prevText:String,nextText:String,background:Boolean,disabled:Boolean,hideOnSinglePage:Boolean},data:function(){return{internalCurrentPage:1,internalPageSize:0,lastEmittedPage:-1,userChangePageSize:!1}},render:function(n){var e=this.layout;if(!e)return null;if(this.hideOnSinglePage&&(!this.internalPageCount||1===this.internalPageCount))return null;var t=n("div",{class:["el-pagination",{"is-background":this.background,"el-pagination--small":this.small}]}),i={prev:n("prev"),jumper:n("jumper"),pager:n("pager",{attrs:{currentPage:this.internalCurrentPage,pageCount:this.internalPageCount,pagerCount:this.pagerCount,disabled:this.disabled},on:{change:this.handleCurrentChange}}),next:n("next"),sizes:n("sizes",{attrs:{pageSizes:this.pageSizes}}),slot:n("slot",[this.$slots.default?this.$slots.default:""]),total:n("total")},a=e.split(",").map((function(n){return n.trim()})),r=n("div",{class:"el-pagination__rightwrapper"}),o=!1;return t.children=t.children||[],r.children=r.children||[],a.forEach((function(n){"->"!==n?o?r.children.push(i[n]):t.children.push(i[n]):o=!0})),o&&t.children.unshift(r),t},components:{Prev:{render:function(n){return n("button",{attrs:{type:"button",disabled:this.$parent.disabled||this.$parent.internalCurrentPage<=1},class:"btn-prev",on:{click:this.$parent.prev}},[this.$parent.prevText?n("span",[this.$parent.prevText]):n("i",{class:"el-icon el-icon-arrow-left"})])}},Next:{render:function(n){return n("button",{attrs:{type:"button",disabled:this.$parent.disabled||this.$parent.internalCurrentPage===this.$parent.internalPageCount||0===this.$parent.internalPageCount},class:"btn-next",on:{click:this.$parent.next}},[this.$parent.nextText?n("span",[this.$parent.nextText]):n("i",{class:"el-icon el-icon-arrow-right"})])}},Sizes:{mixins:[m.a],props:{pageSizes:Array},watch:{pageSizes:{immediate:!0,handler:function(n,e){Object(g.valueEquals)(n,e)||Array.isArray(n)&&(this.$parent.internalPageSize=n.indexOf(this.$parent.pageSize)>-1?this.$parent.pageSize:this.pageSizes[0])}}},render:function(n){var e=this;return n("span",{class:"el-pagination__sizes"},[n("el-select",{attrs:{value:this.$parent.internalPageSize,popperClass:this.$parent.popperClass||"",size:"mini",disabled:this.$parent.disabled},on:{input:this.handleChange}},[this.pageSizes.map((function(t){return n("el-option",{attrs:{value:t,label:t+e.t("el.pagination.pagesize")}})}))])])},components:{ElSelect:l.a,ElOption:c.a},methods:{handleChange:function(n){n!==this.$parent.internalPageSize&&(this.$parent.internalPageSize=n=parseInt(n,10),this.$parent.userChangePageSize=!0,this.$parent.$emit("update:pageSize",n),this.$parent.$emit("size-change",n))}}},Jumper:{mixins:[m.a],components:{ElInput:p.a},data:function(){return{userInput:null}},watch:{"$parent.internalCurrentPage":function(){this.userInput=null}},methods:{handleKeyup:function(n){var e=n.keyCode,t=n.target;13===e&&this.handleChange(t.value)},handleInput:function(n){this.userInput=n},handleChange:function(n){this.$parent.internalCurrentPage=this.$parent.getValidCurrentPage(n),this.$parent.emitChange(),this.userInput=null}},render:function(n){return n("span",{class:"el-pagination__jump"},[this.t("el.pagination.goto"),n("el-input",{class:"el-pagination__editor is-in-pagination",attrs:{min:1,max:this.$parent.internalPageCount,value:null!==this.userInput?this.userInput:this.$parent.internalCurrentPage,type:"number",disabled:this.$parent.disabled},nativeOn:{keyup:this.handleKeyup},on:{input:this.handleInput,change:this.handleChange}}),this.t("el.pagination.pageClassifier")])}},Total:{mixins:[m.a],render:function(n){return"number"==typeof this.$parent.total?n("span",{class:"el-pagination__total"},[this.t("el.pagination.total",{total:this.$parent.total})]):""}},Pager:o},methods:{handleCurrentChange:function(n){this.internalCurrentPage=this.getValidCurrentPage(n),this.userChangePageSize=!0,this.emitChange()},prev:function(){if(!this.disabled){var n=this.internalCurrentPage-1;this.internalCurrentPage=this.getValidCurrentPage(n),this.$emit("prev-click",this.internalCurrentPage),this.emitChange()}},next:function(){if(!this.disabled){var n=this.internalCurrentPage+1;this.internalCurrentPage=this.getValidCurrentPage(n),this.$emit("next-click",this.internalCurrentPage),this.emitChange()}},getValidCurrentPage:function(n){n=parseInt(n,10);var e=void 0;return"number"==typeof this.internalPageCount?n<1?e=1:n>this.internalPageCount&&(e=this.internalPageCount):(isNaN(n)||n<1)&&(e=1),(void 0===e&&isNaN(n)||0===e)&&(e=1),void 0===e?n:e},emitChange:function(){var n=this;this.$nextTick((function(){(n.internalCurrentPage!==n.lastEmittedPage||n.userChangePageSize)&&(n.$emit("current-change",n.internalCurrentPage),n.lastEmittedPage=n.internalCurrentPage,n.userChangePageSize=!1)}))}},computed:{internalPageCount:function(){return"number"==typeof this.total?Math.max(1,Math.ceil(this.total/this.internalPageSize)):"number"==typeof this.pageCount?Math.max(1,this.pageCount):null}},watch:{currentPage:{immediate:!0,handler:function(n){this.internalCurrentPage=this.getValidCurrentPage(n)}},pageSize:{immediate:!0,handler:function(n){this.internalPageSize=isNaN(n)?10:n}},internalCurrentPage:{immediate:!0,handler:function(n){this.$emit("update:currentPage",n),this.lastEmittedPage=-1}},internalPageCount:function(n){var e=this.internalCurrentPage;n>0&&0===e?this.internalCurrentPage=1:e>n&&(this.internalCurrentPage=0===n?1:n,this.userChangePageSize&&this.emitChange()),this.userChangePageSize=!1}},install:function(n){n.component(f.name,f)}},v=f,b=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"dialog-fade"},on:{"after-enter":n.afterEnter,"after-leave":n.afterLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-dialog__wrapper",on:{click:function(e){return e.target!==e.currentTarget?null:n.handleWrapperClick(e)}}},[t("div",{key:n.key,ref:"dialog",class:["el-dialog",{"is-fullscreen":n.fullscreen,"el-dialog--center":n.center},n.customClass],style:n.style,attrs:{role:"dialog","aria-modal":"true","aria-label":n.title||"dialog"}},[t("div",{staticClass:"el-dialog__header"},[n._t("title",[t("span",{staticClass:"el-dialog__title"},[n._v(n._s(n.title))])]),n.showClose?t("button",{staticClass:"el-dialog__headerbtn",attrs:{type:"button","aria-label":"Close"},on:{click:n.handleClose}},[t("i",{staticClass:"el-dialog__close el-icon el-icon-close"})]):n._e()],2),n.rendered?t("div",{staticClass:"el-dialog__body"},[n._t("default")],2):n._e(),n.$slots.footer?t("div",{staticClass:"el-dialog__footer"},[n._t("footer")],2):n._e()])])])};b._withStripped=!0;var _=t(11),y=t.n(_),x=t(9),k=t.n(x),T=t(3),w=t.n(T),I=a({name:"ElDialog",mixins:[y.a,w.a,k.a],props:{title:{type:String,default:""},modal:{type:Boolean,default:!0},modalAppendToBody:{type:Boolean,default:!0},appendToBody:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},closeOnClickModal:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},showClose:{type:Boolean,default:!0},width:String,fullscreen:Boolean,customClass:{type:String,default:""},top:{type:String,default:"15vh"},beforeClose:Function,center:{type:Boolean,default:!1},destroyOnClose:Boolean},data:function(){return{closed:!1,key:0}},watch:{visible:function(n){var e=this;n?(this.closed=!1,this.$emit("open"),this.$el.addEventListener("scroll",this.updatePopper),this.$nextTick((function(){e.$refs.dialog.scrollTop=0})),this.appendToBody&&document.body.appendChild(this.$el)):(this.$el.removeEventListener("scroll",this.updatePopper),this.closed||this.$emit("close"),this.destroyOnClose&&this.$nextTick((function(){e.key++})))}},computed:{style:function(){var n={};return this.fullscreen||(n.marginTop=this.top,this.width&&(n.width=this.width)),n}},methods:{getMigratingConfig:function(){return{props:{size:"size is removed."}}},handleWrapperClick:function(){this.closeOnClickModal&&this.handleClose()},handleClose:function(){"function"==typeof this.beforeClose?this.beforeClose(this.hide):this.hide()},hide:function(n){!1!==n&&(this.$emit("update:visible",!1),this.$emit("close"),this.closed=!0)},updatePopper:function(){this.broadcast("ElSelectDropdown","updatePopper"),this.broadcast("ElDropdownMenu","updatePopper")},afterEnter:function(){this.$emit("opened")},afterLeave:function(){this.$emit("closed")}},mounted:function(){this.visible&&(this.rendered=!0,this.open(),this.appendToBody&&document.body.appendChild(this.$el))},destroyed:function(){this.appendToBody&&this.$el&&this.$el.parentNode&&this.$el.parentNode.removeChild(this.$el)}},b,[],!1,null,null,null);I.options.__file="packages/dialog/src/component.vue";var C=I.exports;C.install=function(n){n.component(C.name,C)};var D=C,E=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.close,expression:"close"}],staticClass:"el-autocomplete",attrs:{"aria-haspopup":"listbox",role:"combobox","aria-expanded":n.suggestionVisible,"aria-owns":n.id}},[t("el-input",n._b({ref:"input",on:{input:n.handleInput,change:n.handleChange,focus:n.handleFocus,blur:n.handleBlur,clear:n.handleClear},nativeOn:{keydown:[function(e){if(!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"]))return null;e.preventDefault(),n.highlight(n.highlightedIndex-1)},function(e){if(!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"]))return null;e.preventDefault(),n.highlight(n.highlightedIndex+1)},function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.handleKeyEnter(e)},function(e){return!("button"in e)&&n._k(e.keyCode,"tab",9,e.key,"Tab")?null:n.close(e)}]}},"el-input",[n.$props,n.$attrs],!1),[n.$slots.prepend?t("template",{slot:"prepend"},[n._t("prepend")],2):n._e(),n.$slots.append?t("template",{slot:"append"},[n._t("append")],2):n._e(),n.$slots.prefix?t("template",{slot:"prefix"},[n._t("prefix")],2):n._e(),n.$slots.suffix?t("template",{slot:"suffix"},[n._t("suffix")],2):n._e()],2),t("el-autocomplete-suggestions",{ref:"suggestions",class:[n.popperClass?n.popperClass:""],attrs:{"visible-arrow":"","popper-options":n.popperOptions,"append-to-body":n.popperAppendToBody,placement:n.placement,id:n.id}},n._l(n.suggestions,(function(e,i){return t("li",{key:i,class:{highlighted:n.highlightedIndex===i},attrs:{id:n.id+"-item-"+i,role:"option","aria-selected":n.highlightedIndex===i},on:{click:function(t){n.select(e)}}},[n._t("default",[n._v("\n        "+n._s(e[n.valueKey])+"\n      ")],{item:e})],2)})),0)],1)};E._withStripped=!0;var S=t(17),M=t.n(S),A=t(10),O=t.n(A),P=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":n.doDestroy}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.showPopper,expression:"showPopper"}],staticClass:"el-autocomplete-suggestion el-popper",class:{"is-loading":!n.parent.hideLoading&&n.parent.loading},style:{width:n.dropdownWidth},attrs:{role:"region"}},[t("el-scrollbar",{attrs:{tag:"ul","wrap-class":"el-autocomplete-suggestion__wrap","view-class":"el-autocomplete-suggestion__list"}},[!n.parent.hideLoading&&n.parent.loading?t("li",[t("i",{staticClass:"el-icon-loading"})]):n._t("default")],2)],1)])};P._withStripped=!0;var j=t(5),z=t.n(j),R=t(18),$=t.n(R),L=a({components:{ElScrollbar:$.a},mixins:[z.a,w.a],componentName:"ElAutocompleteSuggestions",data:function(){return{parent:this.$parent,dropdownWidth:""}},props:{options:{default:function(){return{gpuAcceleration:!1}}},id:String},methods:{select:function(n){this.dispatch("ElAutocomplete","item-click",n)}},updated:function(){var n=this;this.$nextTick((function(e){n.popperJS&&n.updatePopper()}))},mounted:function(){this.$parent.popperElm=this.popperElm=this.$el,this.referenceElm=this.$parent.$refs.input.$refs.input||this.$parent.$refs.input.$refs.textarea,this.referenceList=this.$el.querySelector(".el-autocomplete-suggestion__list"),this.referenceList.setAttribute("role","listbox"),this.referenceList.setAttribute("id",this.id)},created:function(){var n=this;this.$on("visible",(function(e,t){n.dropdownWidth=t+"px",n.showPopper=e}))}},P,[],!1,null,null,null);L.options.__file="packages/autocomplete/src/autocomplete-suggestions.vue";var U=L.exports,N=t(23),q=t.n(N),B=a({name:"ElAutocomplete",mixins:[w.a,q()("input"),k.a],inheritAttrs:!1,componentName:"ElAutocomplete",components:{ElInput:p.a,ElAutocompleteSuggestions:U},directives:{Clickoutside:O.a},props:{valueKey:{type:String,default:"value"},popperClass:String,popperOptions:Object,placeholder:String,clearable:{type:Boolean,default:!1},disabled:Boolean,name:String,size:String,value:String,maxlength:Number,minlength:Number,autofocus:Boolean,fetchSuggestions:Function,triggerOnFocus:{type:Boolean,default:!0},customItem:String,selectWhenUnmatched:{type:Boolean,default:!1},prefixIcon:String,suffixIcon:String,label:String,debounce:{type:Number,default:300},placement:{type:String,default:"bottom-start"},hideLoading:Boolean,popperAppendToBody:{type:Boolean,default:!0},highlightFirstItem:{type:Boolean,default:!1}},data:function(){return{activated:!1,suggestions:[],loading:!1,highlightedIndex:-1,suggestionDisabled:!1}},computed:{suggestionVisible:function(){var n=this.suggestions;return(Array.isArray(n)&&n.length>0||this.loading)&&this.activated},id:function(){return"el-autocomplete-"+Object(g.generateId)()}},watch:{suggestionVisible:function(n){var e=this.getInput();e&&this.broadcast("ElAutocompleteSuggestions","visible",[n,e.offsetWidth])}},methods:{getMigratingConfig:function(){return{props:{"custom-item":"custom-item is removed, use scoped slot instead.",props:"props is removed, use value-key instead."}}},getData:function(n){var e=this;this.suggestionDisabled||(this.loading=!0,this.fetchSuggestions(n,(function(n){e.loading=!1,e.suggestionDisabled||(Array.isArray(n)?(e.suggestions=n,e.highlightedIndex=e.highlightFirstItem?0:-1):console.error("[Element Error][Autocomplete]autocomplete suggestions must be an array"))})))},handleInput:function(n){if(this.$emit("input",n),this.suggestionDisabled=!1,!this.triggerOnFocus&&!n)return this.suggestionDisabled=!0,void(this.suggestions=[]);this.debouncedGetData(n)},handleChange:function(n){this.$emit("change",n)},handleFocus:function(n){this.activated=!0,this.$emit("focus",n),this.triggerOnFocus&&this.debouncedGetData(this.value)},handleBlur:function(n){this.$emit("blur",n)},handleClear:function(){this.activated=!1,this.$emit("clear")},close:function(n){this.activated=!1},handleKeyEnter:function(n){var e=this;this.suggestionVisible&&this.highlightedIndex>=0&&this.highlightedIndex<this.suggestions.length?(n.preventDefault(),this.select(this.suggestions[this.highlightedIndex])):this.selectWhenUnmatched&&(this.$emit("select",{value:this.value}),this.$nextTick((function(n){e.suggestions=[],e.highlightedIndex=-1})))},select:function(n){var e=this;this.$emit("input",n[this.valueKey]),this.$emit("select",n),this.$nextTick((function(n){e.suggestions=[],e.highlightedIndex=-1}))},highlight:function(n){if(this.suggestionVisible&&!this.loading)if(n<0)this.highlightedIndex=-1;else{n>=this.suggestions.length&&(n=this.suggestions.length-1);var e=this.$refs.suggestions.$el.querySelector(".el-autocomplete-suggestion__wrap"),t=e.querySelectorAll(".el-autocomplete-suggestion__list li")[n],i=e.scrollTop,a=t.offsetTop;a+t.scrollHeight>i+e.clientHeight&&(e.scrollTop+=t.scrollHeight),a<i&&(e.scrollTop-=t.scrollHeight),this.highlightedIndex=n,this.getInput().setAttribute("aria-activedescendant",this.id+"-item-"+this.highlightedIndex)}},getInput:function(){return this.$refs.input.getInput()}},mounted:function(){var n=this;this.debouncedGetData=M()(this.debounce,this.getData),this.$on("item-click",(function(e){n.select(e)}));var e=this.getInput();e.setAttribute("role","textbox"),e.setAttribute("aria-autocomplete","list"),e.setAttribute("aria-controls","id"),e.setAttribute("aria-activedescendant",this.id+"-item-"+this.highlightedIndex)},beforeDestroy:function(){this.$refs.suggestions.$destroy()}},E,[],!1,null,null,null);B.options.__file="packages/autocomplete/src/autocomplete.vue";var F=B.exports;F.install=function(n){n.component(F.name,F)};var V=F,G=t(13),H=t.n(G),W=t(29),Q=t.n(W),K=a({name:"ElDropdown",componentName:"ElDropdown",mixins:[w.a,k.a],directives:{Clickoutside:O.a},components:{ElButton:H.a,ElButtonGroup:Q.a},provide:function(){return{dropdown:this}},props:{trigger:{type:String,default:"hover"},type:String,size:{type:String,default:""},splitButton:Boolean,hideOnClick:{type:Boolean,default:!0},placement:{type:String,default:"bottom-end"},visibleArrow:{default:!0},showTimeout:{type:Number,default:250},hideTimeout:{type:Number,default:150},tabindex:{type:Number,default:0},disabled:{type:Boolean,default:!1}},data:function(){return{timeout:null,visible:!1,triggerElm:null,menuItems:null,menuItemsArray:null,dropdownElm:null,focusing:!1,listId:"dropdown-menu-"+Object(g.generateId)()}},computed:{dropdownSize:function(){return this.size||(this.$ELEMENT||{}).size}},mounted:function(){this.$on("menu-item-click",this.handleMenuItemClick)},watch:{visible:function(n){this.broadcast("ElDropdownMenu","visible",n),this.$emit("visible-change",n)},focusing:function(n){var e=this.$el.querySelector(".el-dropdown-selfdefine");e&&(n?e.className+=" focusing":e.className=e.className.replace("focusing",""))}},methods:{getMigratingConfig:function(){return{props:{"menu-align":"menu-align is renamed to placement."}}},show:function(){var n=this;this.disabled||(clearTimeout(this.timeout),this.timeout=setTimeout((function(){n.visible=!0}),"click"===this.trigger?0:this.showTimeout))},hide:function(){var n=this;this.disabled||(this.removeTabindex(),this.tabindex>=0&&this.resetTabindex(this.triggerElm),clearTimeout(this.timeout),this.timeout=setTimeout((function(){n.visible=!1}),"click"===this.trigger?0:this.hideTimeout))},handleClick:function(){this.disabled||(this.visible?this.hide():this.show())},handleTriggerKeyDown:function(n){var e=n.keyCode;[38,40].indexOf(e)>-1?(this.removeTabindex(),this.resetTabindex(this.menuItems[0]),this.menuItems[0].focus(),n.preventDefault(),n.stopPropagation()):13===e?this.handleClick():[9,27].indexOf(e)>-1&&this.hide()},handleItemKeyDown:function(n){var e=n.keyCode,t=n.target,i=this.menuItemsArray.indexOf(t),a=this.menuItemsArray.length-1,r=void 0;[38,40].indexOf(e)>-1?(r=38===e?0!==i?i-1:0:i<a?i+1:a,this.removeTabindex(),this.resetTabindex(this.menuItems[r]),this.menuItems[r].focus(),n.preventDefault(),n.stopPropagation()):13===e?(this.triggerElmFocus(),t.click(),this.hideOnClick&&(this.visible=!1)):[9,27].indexOf(e)>-1&&(this.hide(),this.triggerElmFocus())},resetTabindex:function(n){this.removeTabindex(),n.setAttribute("tabindex","0")},removeTabindex:function(){this.triggerElm.setAttribute("tabindex","-1"),this.menuItemsArray.forEach((function(n){n.setAttribute("tabindex","-1")}))},initAria:function(){this.dropdownElm.setAttribute("id",this.listId),this.triggerElm.setAttribute("aria-haspopup","list"),this.triggerElm.setAttribute("aria-controls",this.listId),this.splitButton||(this.triggerElm.setAttribute("role","button"),this.triggerElm.setAttribute("tabindex",this.tabindex),this.triggerElm.setAttribute("class",(this.triggerElm.getAttribute("class")||"")+" el-dropdown-selfdefine"))},initEvent:function(){var n=this,e=this.trigger,t=this.show,i=this.hide,a=this.handleClick,r=this.splitButton,o=this.handleTriggerKeyDown,s=this.handleItemKeyDown;this.triggerElm=r?this.$refs.trigger.$el:this.$slots.default[0].elm;var l=this.dropdownElm;this.triggerElm.addEventListener("keydown",o),l.addEventListener("keydown",s,!0),r||(this.triggerElm.addEventListener("focus",(function(){n.focusing=!0})),this.triggerElm.addEventListener("blur",(function(){n.focusing=!1})),this.triggerElm.addEventListener("click",(function(){n.focusing=!1}))),"hover"===e?(this.triggerElm.addEventListener("mouseenter",t),this.triggerElm.addEventListener("mouseleave",i),l.addEventListener("mouseenter",t),l.addEventListener("mouseleave",i)):"click"===e&&this.triggerElm.addEventListener("click",a)},handleMenuItemClick:function(n,e){this.hideOnClick&&(this.visible=!1),this.$emit("command",n,e)},triggerElmFocus:function(){this.triggerElm.focus&&this.triggerElm.focus()},initDomOperation:function(){this.dropdownElm=this.popperElm,this.menuItems=this.dropdownElm.querySelectorAll("[tabindex='-1']"),this.menuItemsArray=[].slice.call(this.menuItems),this.initEvent(),this.initAria()}},render:function(n){var e=this,t=this.hide,i=this.splitButton,a=this.type,r=this.dropdownSize,o=this.disabled,s=null;if(i)s=n("el-button-group",[n("el-button",{attrs:{type:a,size:r,disabled:o},nativeOn:{click:function(n){e.$emit("click",n),t()}}},[this.$slots.default]),n("el-button",{ref:"trigger",attrs:{type:a,size:r,disabled:o},class:"el-dropdown__caret-button"},[n("i",{class:"el-dropdown__icon el-icon-arrow-down"})])]);else{var l=(s=this.$slots.default)[0].data||{},d=l.attrs,c=void 0===d?{}:d;o&&!c.disabled&&(c.disabled=!0,l.attrs=c)}var u=o?null:this.$slots.dropdown;return n("div",{class:"el-dropdown",directives:[{name:"clickoutside",value:t}],attrs:{"aria-disabled":o}},[s,u])}},void 0,void 0,!1,null,null,null);K.options.__file="packages/dropdown/src/dropdown.vue";var Y=K.exports;Y.install=function(n){n.component(Y.name,Y)};var X=Y,J=function(){var n=this.$createElement,e=this._self._c||n;return e("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":this.doDestroy}},[e("ul",{directives:[{name:"show",rawName:"v-show",value:this.showPopper,expression:"showPopper"}],staticClass:"el-dropdown-menu el-popper",class:[this.size&&"el-dropdown-menu--"+this.size]},[this._t("default")],2)])};J._withStripped=!0;var Z=a({name:"ElDropdownMenu",componentName:"ElDropdownMenu",mixins:[z.a],props:{visibleArrow:{type:Boolean,default:!0},arrowOffset:{type:Number,default:0}},data:function(){return{size:this.dropdown.dropdownSize}},inject:["dropdown"],created:function(){var n=this;this.$on("updatePopper",(function(){n.showPopper&&n.updatePopper()})),this.$on("visible",(function(e){n.showPopper=e}))},mounted:function(){this.dropdown.popperElm=this.popperElm=this.$el,this.referenceElm=this.dropdown.$el,this.dropdown.initDomOperation()},watch:{"dropdown.placement":{immediate:!0,handler:function(n){this.currentPlacement=n}}}},J,[],!1,null,null,null);Z.options.__file="packages/dropdown/src/dropdown-menu.vue";var nn=Z.exports;nn.install=function(n){n.component(nn.name,nn)};var en=nn,tn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("li",{staticClass:"el-dropdown-menu__item",class:{"is-disabled":n.disabled,"el-dropdown-menu__item--divided":n.divided},attrs:{"aria-disabled":n.disabled,tabindex:n.disabled?null:-1},on:{click:n.handleClick}},[n.icon?t("i",{class:n.icon}):n._e(),n._t("default")],2)};tn._withStripped=!0;var an=a({name:"ElDropdownItem",mixins:[w.a],props:{command:{},disabled:Boolean,divided:Boolean,icon:String},methods:{handleClick:function(n){this.dispatch("ElDropdown","menu-item-click",[this.command,this])}}},tn,[],!1,null,null,null);an.options.__file="packages/dropdown/src/dropdown-item.vue";var rn=an.exports;rn.install=function(n){n.component(rn.name,rn)};var on=rn,sn=sn||{};sn.Utils=sn.Utils||{},sn.Utils.focusFirstDescendant=function(n){for(var e=0;e<n.childNodes.length;e++){var t=n.childNodes[e];if(sn.Utils.attemptFocus(t)||sn.Utils.focusFirstDescendant(t))return!0}return!1},sn.Utils.focusLastDescendant=function(n){for(var e=n.childNodes.length-1;e>=0;e--){var t=n.childNodes[e];if(sn.Utils.attemptFocus(t)||sn.Utils.focusLastDescendant(t))return!0}return!1},sn.Utils.attemptFocus=function(n){if(!sn.Utils.isFocusable(n))return!1;sn.Utils.IgnoreUtilFocusChanges=!0;try{n.focus()}catch(n){}return sn.Utils.IgnoreUtilFocusChanges=!1,document.activeElement===n},sn.Utils.isFocusable=function(n){if(n.tabIndex>0||0===n.tabIndex&&null!==n.getAttribute("tabIndex"))return!0;if(n.disabled)return!1;switch(n.nodeName){case"A":return!!n.href&&"ignore"!==n.rel;case"INPUT":return"hidden"!==n.type&&"file"!==n.type;case"BUTTON":case"SELECT":case"TEXTAREA":return!0;default:return!1}},sn.Utils.triggerEvent=function(n,e){var t=void 0;t=/^mouse|click/.test(e)?"MouseEvents":/^key/.test(e)?"KeyboardEvent":"HTMLEvents";for(var i=document.createEvent(t),a=arguments.length,r=Array(a>2?a-2:0),o=2;o<a;o++)r[o-2]=arguments[o];return i.initEvent.apply(i,[e].concat(r)),n.dispatchEvent?n.dispatchEvent(i):n.fireEvent("on"+e,i),n},sn.Utils.keys={tab:9,enter:13,space:32,left:37,up:38,right:39,down:40,esc:27};var ln=sn.Utils,dn=function(n,e){this.domNode=e,this.parent=n,this.subMenuItems=[],this.subIndex=0,this.init()};dn.prototype.init=function(){this.subMenuItems=this.domNode.querySelectorAll("li"),this.addListeners()},dn.prototype.gotoSubIndex=function(n){n===this.subMenuItems.length?n=0:n<0&&(n=this.subMenuItems.length-1),this.subMenuItems[n].focus(),this.subIndex=n},dn.prototype.addListeners=function(){var n=this,e=ln.keys,t=this.parent.domNode;Array.prototype.forEach.call(this.subMenuItems,(function(i){i.addEventListener("keydown",(function(i){var a=!1;switch(i.keyCode){case e.down:n.gotoSubIndex(n.subIndex+1),a=!0;break;case e.up:n.gotoSubIndex(n.subIndex-1),a=!0;break;case e.tab:ln.triggerEvent(t,"mouseleave");break;case e.enter:case e.space:a=!0,i.currentTarget.click()}return a&&(i.preventDefault(),i.stopPropagation()),!1}))}))};var cn=dn,un=function(n){this.domNode=n,this.submenu=null,this.init()};un.prototype.init=function(){this.domNode.setAttribute("tabindex","0");var n=this.domNode.querySelector(".el-menu");n&&(this.submenu=new cn(this,n)),this.addListeners()},un.prototype.addListeners=function(){var n=this,e=ln.keys;this.domNode.addEventListener("keydown",(function(t){var i=!1;switch(t.keyCode){case e.down:ln.triggerEvent(t.currentTarget,"mouseenter"),n.submenu&&n.submenu.gotoSubIndex(0),i=!0;break;case e.up:ln.triggerEvent(t.currentTarget,"mouseenter"),n.submenu&&n.submenu.gotoSubIndex(n.submenu.subMenuItems.length-1),i=!0;break;case e.tab:ln.triggerEvent(t.currentTarget,"mouseleave");break;case e.enter:case e.space:i=!0,t.currentTarget.click()}i&&t.preventDefault()}))};var pn=un,hn=function(n){this.domNode=n,this.init()};hn.prototype.init=function(){var n=this.domNode.childNodes;[].filter.call(n,(function(n){return 1===n.nodeType})).forEach((function(n){new pn(n)}))};var mn=hn,gn=t(1),fn=a({name:"ElMenu",render:function(n){var e=n("ul",{attrs:{role:"menubar"},key:+this.collapse,style:{backgroundColor:this.backgroundColor||""},class:{"el-menu--horizontal":"horizontal"===this.mode,"el-menu--collapse":this.collapse,"el-menu":!0}},[this.$slots.default]);return this.collapseTransition?n("el-menu-collapse-transition",[e]):e},componentName:"ElMenu",mixins:[w.a,k.a],provide:function(){return{rootMenu:this}},components:{"el-menu-collapse-transition":{functional:!0,render:function(n,e){return n("transition",{props:{mode:"out-in"},on:{beforeEnter:function(n){n.style.opacity=.2},enter:function(n){Object(gn.addClass)(n,"el-opacity-transition"),n.style.opacity=1},afterEnter:function(n){Object(gn.removeClass)(n,"el-opacity-transition"),n.style.opacity=""},beforeLeave:function(n){n.dataset||(n.dataset={}),Object(gn.hasClass)(n,"el-menu--collapse")?(Object(gn.removeClass)(n,"el-menu--collapse"),n.dataset.oldOverflow=n.style.overflow,n.dataset.scrollWidth=n.clientWidth,Object(gn.addClass)(n,"el-menu--collapse")):(Object(gn.addClass)(n,"el-menu--collapse"),n.dataset.oldOverflow=n.style.overflow,n.dataset.scrollWidth=n.clientWidth,Object(gn.removeClass)(n,"el-menu--collapse")),n.style.width=n.scrollWidth+"px",n.style.overflow="hidden"},leave:function(n){Object(gn.addClass)(n,"horizontal-collapse-transition"),n.style.width=n.dataset.scrollWidth+"px"}}},e.children)}}},props:{mode:{type:String,default:"vertical"},defaultActive:{type:String,default:""},defaultOpeneds:Array,uniqueOpened:Boolean,router:Boolean,menuTrigger:{type:String,default:"hover"},collapse:Boolean,backgroundColor:String,textColor:String,activeTextColor:String,collapseTransition:{type:Boolean,default:!0}},data:function(){return{activeIndex:this.defaultActive,openedMenus:this.defaultOpeneds&&!this.collapse?this.defaultOpeneds.slice(0):[],items:{},submenus:{}}},computed:{hoverBackground:function(){return this.backgroundColor?this.mixColor(this.backgroundColor,.2):""},isMenuPopup:function(){return"horizontal"===this.mode||"vertical"===this.mode&&this.collapse}},watch:{defaultActive:function(n){this.items[n]||(this.activeIndex=null),this.updateActiveIndex(n)},defaultOpeneds:function(n){this.collapse||(this.openedMenus=n)},collapse:function(n){n&&(this.openedMenus=[]),this.broadcast("ElSubmenu","toggle-collapse",n)}},methods:{updateActiveIndex:function(n){var e=this.items[n]||this.items[this.activeIndex]||this.items[this.defaultActive];e?(this.activeIndex=e.index,this.initOpenedMenu()):this.activeIndex=null},getMigratingConfig:function(){return{props:{theme:"theme is removed."}}},getColorChannels:function(n){if(n=n.replace("#",""),/^[0-9a-fA-F]{3}$/.test(n)){n=n.split("");for(var e=2;e>=0;e--)n.splice(e,0,n[e]);n=n.join("")}return/^[0-9a-fA-F]{6}$/.test(n)?{red:parseInt(n.slice(0,2),16),green:parseInt(n.slice(2,4),16),blue:parseInt(n.slice(4,6),16)}:{red:255,green:255,blue:255}},mixColor:function(n,e){var t=this.getColorChannels(n),i=t.red,a=t.green,r=t.blue;return e>0?(i*=1-e,a*=1-e,r*=1-e):(i+=(255-i)*e,a+=(255-a)*e,r+=(255-r)*e),"rgb("+Math.round(i)+", "+Math.round(a)+", "+Math.round(r)+")"},addItem:function(n){this.$set(this.items,n.index,n)},removeItem:function(n){delete this.items[n.index]},addSubmenu:function(n){this.$set(this.submenus,n.index,n)},removeSubmenu:function(n){delete this.submenus[n.index]},openMenu:function(n,e){var t=this.openedMenus;-1===t.indexOf(n)&&(this.uniqueOpened&&(this.openedMenus=t.filter((function(n){return-1!==e.indexOf(n)}))),this.openedMenus.push(n))},closeMenu:function(n){var e=this.openedMenus.indexOf(n);-1!==e&&this.openedMenus.splice(e,1)},handleSubmenuClick:function(n){var e=n.index,t=n.indexPath;-1!==this.openedMenus.indexOf(e)?(this.closeMenu(e),this.$emit("close",e,t)):(this.openMenu(e,t),this.$emit("open",e,t))},handleItemClick:function(n){var e=this,t=n.index,i=n.indexPath,a=this.activeIndex,r=null!==n.index;r&&(this.activeIndex=n.index),this.$emit("select",t,i,n),("horizontal"===this.mode||this.collapse)&&(this.openedMenus=[]),this.router&&r&&this.routeToItem(n,(function(n){if(e.activeIndex=a,n){if("NavigationDuplicated"===n.name)return;console.error(n)}}))},initOpenedMenu:function(){var n=this,e=this.activeIndex,t=this.items[e];t&&"horizontal"!==this.mode&&!this.collapse&&t.indexPath.forEach((function(e){var t=n.submenus[e];t&&n.openMenu(e,t.indexPath)}))},routeToItem:function(n,e){var t=n.route||n.index;try{this.$router.push(t,(function(){}),e)}catch(n){console.error(n)}},open:function(n){var e=this,t=this.submenus[n.toString()].indexPath;t.forEach((function(n){return e.openMenu(n,t)}))},close:function(n){this.closeMenu(n)}},mounted:function(){this.initOpenedMenu(),this.$on("item-click",this.handleItemClick),this.$on("submenu-click",this.handleSubmenuClick),"horizontal"===this.mode&&new mn(this.$el),this.$watch("items",this.updateActiveIndex)}},void 0,void 0,!1,null,null,null);fn.options.__file="packages/menu/src/menu.vue";var vn=fn.exports;vn.install=function(n){n.component(vn.name,vn)};var bn=vn,_n=t(21),yn=t.n(_n),xn={inject:["rootMenu"],computed:{indexPath:function(){for(var n=[this.index],e=this.$parent;"ElMenu"!==e.$options.componentName;)e.index&&n.unshift(e.index),e=e.$parent;return n},parentMenu:function(){for(var n=this.$parent;n&&-1===["ElMenu","ElSubmenu"].indexOf(n.$options.componentName);)n=n.$parent;return n},paddingStyle:function(){if("vertical"!==this.rootMenu.mode)return{};var n=20,e=this.$parent;if(this.rootMenu.collapse)n=20;else for(;e&&"ElMenu"!==e.$options.componentName;)"ElSubmenu"===e.$options.componentName&&(n+=20),e=e.$parent;return{paddingLeft:n+"px"}}}},kn={props:{transformOrigin:{type:[Boolean,String],default:!1},offset:z.a.props.offset,boundariesPadding:z.a.props.boundariesPadding,popperOptions:z.a.props.popperOptions},data:z.a.data,methods:z.a.methods,beforeDestroy:z.a.beforeDestroy,deactivated:z.a.deactivated},Tn=a({name:"ElSubmenu",componentName:"ElSubmenu",mixins:[xn,w.a,kn],components:{ElCollapseTransition:yn.a},props:{index:{type:String,required:!0},showTimeout:{type:Number,default:300},hideTimeout:{type:Number,default:300},popperClass:String,disabled:Boolean,popperAppendToBody:{type:Boolean,default:void 0}},data:function(){return{popperJS:null,timeout:null,items:{},submenus:{},mouseInChild:!1}},watch:{opened:function(n){var e=this;this.isMenuPopup&&this.$nextTick((function(n){e.updatePopper()}))}},computed:{appendToBody:function(){return void 0===this.popperAppendToBody?this.isFirstLevel:this.popperAppendToBody},menuTransitionName:function(){return this.rootMenu.collapse?"el-zoom-in-left":"el-zoom-in-top"},opened:function(){return this.rootMenu.openedMenus.indexOf(this.index)>-1},active:function(){var n=!1,e=this.submenus,t=this.items;return Object.keys(t).forEach((function(e){t[e].active&&(n=!0)})),Object.keys(e).forEach((function(t){e[t].active&&(n=!0)})),n},hoverBackground:function(){return this.rootMenu.hoverBackground},backgroundColor:function(){return this.rootMenu.backgroundColor||""},activeTextColor:function(){return this.rootMenu.activeTextColor||""},textColor:function(){return this.rootMenu.textColor||""},mode:function(){return this.rootMenu.mode},isMenuPopup:function(){return this.rootMenu.isMenuPopup},titleStyle:function(){return"horizontal"!==this.mode?{color:this.textColor}:{borderBottomColor:this.active?this.rootMenu.activeTextColor?this.activeTextColor:"":"transparent",color:this.active?this.activeTextColor:this.textColor}},isFirstLevel:function(){for(var n=!0,e=this.$parent;e&&e!==this.rootMenu;){if(["ElSubmenu","ElMenuItemGroup"].indexOf(e.$options.componentName)>-1){n=!1;break}e=e.$parent}return n}},methods:{handleCollapseToggle:function(n){n?this.initPopper():this.doDestroy()},addItem:function(n){this.$set(this.items,n.index,n)},removeItem:function(n){delete this.items[n.index]},addSubmenu:function(n){this.$set(this.submenus,n.index,n)},removeSubmenu:function(n){delete this.submenus[n.index]},handleClick:function(){var n=this.rootMenu,e=this.disabled;"hover"===n.menuTrigger&&"horizontal"===n.mode||n.collapse&&"vertical"===n.mode||e||this.dispatch("ElMenu","submenu-click",this)},handleMouseenter:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.showTimeout;if("ActiveXObject"in window||"focus"!==n.type||n.relatedTarget){var i=this.rootMenu,a=this.disabled;"click"===i.menuTrigger&&"horizontal"===i.mode||!i.collapse&&"vertical"===i.mode||a||(this.dispatch("ElSubmenu","mouse-enter-child"),clearTimeout(this.timeout),this.timeout=setTimeout((function(){e.rootMenu.openMenu(e.index,e.indexPath)}),t),this.appendToBody&&this.$parent.$el.dispatchEvent(new MouseEvent("mouseenter")))}},handleMouseleave:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this.rootMenu;"click"===t.menuTrigger&&"horizontal"===t.mode||!t.collapse&&"vertical"===t.mode||(this.dispatch("ElSubmenu","mouse-leave-child"),clearTimeout(this.timeout),this.timeout=setTimeout((function(){!n.mouseInChild&&n.rootMenu.closeMenu(n.index)}),this.hideTimeout),this.appendToBody&&e&&"ElSubmenu"===this.$parent.$options.name&&this.$parent.handleMouseleave(!0))},handleTitleMouseenter:function(){if("horizontal"!==this.mode||this.rootMenu.backgroundColor){var n=this.$refs["submenu-title"];n&&(n.style.backgroundColor=this.rootMenu.hoverBackground)}},handleTitleMouseleave:function(){if("horizontal"!==this.mode||this.rootMenu.backgroundColor){var n=this.$refs["submenu-title"];n&&(n.style.backgroundColor=this.rootMenu.backgroundColor||"")}},updatePlacement:function(){this.currentPlacement="horizontal"===this.mode&&this.isFirstLevel?"bottom-start":"right-start"},initPopper:function(){this.referenceElm=this.$el,this.popperElm=this.$refs.menu,this.updatePlacement()}},created:function(){var n=this;this.$on("toggle-collapse",this.handleCollapseToggle),this.$on("mouse-enter-child",(function(){n.mouseInChild=!0,clearTimeout(n.timeout)})),this.$on("mouse-leave-child",(function(){n.mouseInChild=!1,clearTimeout(n.timeout)}))},mounted:function(){this.parentMenu.addSubmenu(this),this.rootMenu.addSubmenu(this),this.initPopper()},beforeDestroy:function(){this.parentMenu.removeSubmenu(this),this.rootMenu.removeSubmenu(this)},render:function(n){var e=this,t=this.active,i=this.opened,a=this.paddingStyle,r=this.titleStyle,o=this.backgroundColor,s=this.rootMenu,l=this.currentPlacement,d=this.menuTransitionName,c=this.mode,u=this.disabled,p=this.popperClass,h=this.$slots,m=this.isFirstLevel,g=n("transition",{attrs:{name:d}},[n("div",{ref:"menu",directives:[{name:"show",value:i}],class:["el-menu--"+c,p],on:{mouseenter:function(n){return e.handleMouseenter(n,100)},mouseleave:function(){return e.handleMouseleave(!0)},focus:function(n){return e.handleMouseenter(n,100)}}},[n("ul",{attrs:{role:"menu"},class:["el-menu el-menu--popup","el-menu--popup-"+l],style:{backgroundColor:s.backgroundColor||""}},[h.default])])]),f=n("el-collapse-transition",[n("ul",{attrs:{role:"menu"},class:"el-menu el-menu--inline",directives:[{name:"show",value:i}],style:{backgroundColor:s.backgroundColor||""}},[h.default])]),v="horizontal"===s.mode&&m||"vertical"===s.mode&&!s.collapse?"el-icon-arrow-down":"el-icon-arrow-right";return n("li",{class:{"el-submenu":!0,"is-active":t,"is-opened":i,"is-disabled":u},attrs:{role:"menuitem","aria-haspopup":"true","aria-expanded":i},on:{mouseenter:this.handleMouseenter,mouseleave:function(){return e.handleMouseleave(!1)},focus:this.handleMouseenter}},[n("div",{class:"el-submenu__title",ref:"submenu-title",on:{click:this.handleClick,mouseenter:this.handleTitleMouseenter,mouseleave:this.handleTitleMouseleave},style:[a,r,{backgroundColor:o}]},[h.title,n("i",{class:["el-submenu__icon-arrow",v]})]),this.isMenuPopup?g:f])}},void 0,void 0,!1,null,null,null);Tn.options.__file="packages/menu/src/submenu.vue";var wn=Tn.exports;wn.install=function(n){n.component(wn.name,wn)};var In=wn,Cn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("li",{staticClass:"el-menu-item",class:{"is-active":n.active,"is-disabled":n.disabled},style:[n.paddingStyle,n.itemStyle,{backgroundColor:n.backgroundColor}],attrs:{role:"menuitem",tabindex:"-1"},on:{click:n.handleClick,mouseenter:n.onMouseEnter,focus:n.onMouseEnter,blur:n.onMouseLeave,mouseleave:n.onMouseLeave}},["ElMenu"===n.parentMenu.$options.componentName&&n.rootMenu.collapse&&n.$slots.title?t("el-tooltip",{attrs:{effect:"dark",placement:"right"}},[t("div",{attrs:{slot:"content"},slot:"content"},[n._t("title")],2),t("div",{staticStyle:{position:"absolute",left:"0",top:"0",height:"100%",width:"100%",display:"inline-block","box-sizing":"border-box",padding:"0 20px"}},[n._t("default")],2)]):[n._t("default"),n._t("title")]],2)};Cn._withStripped=!0;var Dn=t(26),En=t.n(Dn),Sn=a({name:"ElMenuItem",componentName:"ElMenuItem",mixins:[xn,w.a],components:{ElTooltip:En.a},props:{index:{default:null,validator:function(n){return"string"==typeof n||null===n}},route:[String,Object],disabled:Boolean},computed:{active:function(){return this.index===this.rootMenu.activeIndex},hoverBackground:function(){return this.rootMenu.hoverBackground},backgroundColor:function(){return this.rootMenu.backgroundColor||""},activeTextColor:function(){return this.rootMenu.activeTextColor||""},textColor:function(){return this.rootMenu.textColor||""},mode:function(){return this.rootMenu.mode},itemStyle:function(){var n={color:this.active?this.activeTextColor:this.textColor};return"horizontal"!==this.mode||this.isNested||(n.borderBottomColor=this.active?this.rootMenu.activeTextColor?this.activeTextColor:"":"transparent"),n},isNested:function(){return this.parentMenu!==this.rootMenu}},methods:{onMouseEnter:function(){("horizontal"!==this.mode||this.rootMenu.backgroundColor)&&(this.$el.style.backgroundColor=this.hoverBackground)},onMouseLeave:function(){("horizontal"!==this.mode||this.rootMenu.backgroundColor)&&(this.$el.style.backgroundColor=this.backgroundColor)},handleClick:function(){this.disabled||(this.dispatch("ElMenu","item-click",this),this.$emit("click",this))}},mounted:function(){this.parentMenu.addItem(this),this.rootMenu.addItem(this)},beforeDestroy:function(){this.parentMenu.removeItem(this),this.rootMenu.removeItem(this)}},Cn,[],!1,null,null,null);Sn.options.__file="packages/menu/src/menu-item.vue";var Mn=Sn.exports;Mn.install=function(n){n.component(Mn.name,Mn)};var An=Mn,On=function(){var n=this.$createElement,e=this._self._c||n;return e("li",{staticClass:"el-menu-item-group"},[e("div",{staticClass:"el-menu-item-group__title",style:{paddingLeft:this.levelPadding+"px"}},[this.$slots.title?this._t("title"):[this._v(this._s(this.title))]],2),e("ul",[this._t("default")],2)])};On._withStripped=!0;var Pn=a({name:"ElMenuItemGroup",componentName:"ElMenuItemGroup",inject:["rootMenu"],props:{title:{type:String}},data:function(){return{paddingLeft:20}},computed:{levelPadding:function(){var n=20,e=this.$parent;if(this.rootMenu.collapse)return 20;for(;e&&"ElMenu"!==e.$options.componentName;)"ElSubmenu"===e.$options.componentName&&(n+=20),e=e.$parent;return n}}},On,[],!1,null,null,null);Pn.options.__file="packages/menu/src/menu-item-group.vue";var jn=Pn.exports;jn.install=function(n){n.component(jn.name,jn)};var zn=jn,Rn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{class:["textarea"===n.type?"el-textarea":"el-input",n.inputSize?"el-input--"+n.inputSize:"",{"is-disabled":n.inputDisabled,"is-exceed":n.inputExceed,"el-input-group":n.$slots.prepend||n.$slots.append,"el-input-group--append":n.$slots.append,"el-input-group--prepend":n.$slots.prepend,"el-input--prefix":n.$slots.prefix||n.prefixIcon,"el-input--suffix":n.$slots.suffix||n.suffixIcon||n.clearable||n.showPassword}],on:{mouseenter:function(e){n.hovering=!0},mouseleave:function(e){n.hovering=!1}}},["textarea"!==n.type?[n.$slots.prepend?t("div",{staticClass:"el-input-group__prepend"},[n._t("prepend")],2):n._e(),"textarea"!==n.type?t("input",n._b({ref:"input",staticClass:"el-input__inner",attrs:{tabindex:n.tabindex,type:n.showPassword?n.passwordVisible?"text":"password":n.type,disabled:n.inputDisabled,readonly:n.readonly,autocomplete:n.autoComplete||n.autocomplete,"aria-label":n.label},on:{compositionstart:n.handleCompositionStart,compositionupdate:n.handleCompositionUpdate,compositionend:n.handleCompositionEnd,input:n.handleInput,focus:n.handleFocus,blur:n.handleBlur,change:n.handleChange}},"input",n.$attrs,!1)):n._e(),n.$slots.prefix||n.prefixIcon?t("span",{staticClass:"el-input__prefix"},[n._t("prefix"),n.prefixIcon?t("i",{staticClass:"el-input__icon",class:n.prefixIcon}):n._e()],2):n._e(),n.getSuffixVisible()?t("span",{staticClass:"el-input__suffix"},[t("span",{staticClass:"el-input__suffix-inner"},[n.showClear&&n.showPwdVisible&&n.isWordLimitVisible?n._e():[n._t("suffix"),n.suffixIcon?t("i",{staticClass:"el-input__icon",class:n.suffixIcon}):n._e()],n.showClear?t("i",{staticClass:"el-input__icon el-icon-circle-close el-input__clear",on:{mousedown:function(n){n.preventDefault()},click:n.clear}}):n._e(),n.showPwdVisible?t("i",{staticClass:"el-input__icon el-icon-view el-input__clear",on:{click:n.handlePasswordVisible}}):n._e(),n.isWordLimitVisible?t("span",{staticClass:"el-input__count"},[t("span",{staticClass:"el-input__count-inner"},[n._v("\n            "+n._s(n.textLength)+"/"+n._s(n.upperLimit)+"\n          ")])]):n._e()],2),n.validateState?t("i",{staticClass:"el-input__icon",class:["el-input__validateIcon",n.validateIcon]}):n._e()]):n._e(),n.$slots.append?t("div",{staticClass:"el-input-group__append"},[n._t("append")],2):n._e()]:t("textarea",n._b({ref:"textarea",staticClass:"el-textarea__inner",style:n.textareaStyle,attrs:{tabindex:n.tabindex,disabled:n.inputDisabled,readonly:n.readonly,autocomplete:n.autoComplete||n.autocomplete,"aria-label":n.label},on:{compositionstart:n.handleCompositionStart,compositionupdate:n.handleCompositionUpdate,compositionend:n.handleCompositionEnd,input:n.handleInput,focus:n.handleFocus,blur:n.handleBlur,change:n.handleChange}},"textarea",n.$attrs,!1)),n.isWordLimitVisible&&"textarea"===n.type?t("span",{staticClass:"el-input__count"},[n._v(n._s(n.textLength)+"/"+n._s(n.upperLimit))]):n._e()],2)};Rn._withStripped=!0;var $n=void 0,Ln="\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n",Un=["letter-spacing","line-height","padding-top","padding-bottom","font-family","font-weight","font-size","text-rendering","text-transform","width","text-indent","padding-left","padding-right","border-width","box-sizing"];function Nn(n){var e=window.getComputedStyle(n),t=e.getPropertyValue("box-sizing"),i=parseFloat(e.getPropertyValue("padding-bottom"))+parseFloat(e.getPropertyValue("padding-top")),a=parseFloat(e.getPropertyValue("border-bottom-width"))+parseFloat(e.getPropertyValue("border-top-width"));return{contextStyle:Un.map((function(n){return n+":"+e.getPropertyValue(n)})).join(";"),paddingSize:i,borderSize:a,boxSizing:t}}function qn(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;$n||($n=document.createElement("textarea"),document.body.appendChild($n));var i=Nn(n),a=i.paddingSize,r=i.borderSize,o=i.boxSizing,s=i.contextStyle;$n.setAttribute("style",s+";"+Ln),$n.value=n.value||n.placeholder||"";var l=$n.scrollHeight,d={};"border-box"===o?l+=r:"content-box"===o&&(l-=a),$n.value="";var c=$n.scrollHeight-a;if(null!==e){var u=c*e;"border-box"===o&&(u=u+a+r),l=Math.max(u,l),d.minHeight=u+"px"}if(null!==t){var p=c*t;"border-box"===o&&(p=p+a+r),l=Math.min(p,l)}return d.height=l+"px",$n.parentNode&&$n.parentNode.removeChild($n),$n=null,d}var Bn=t(7),Fn=t.n(Bn),Vn=t(19),Gn=a({name:"ElInput",componentName:"ElInput",mixins:[w.a,k.a],inheritAttrs:!1,inject:{elForm:{default:""},elFormItem:{default:""}},data:function(){return{textareaCalcStyle:{},hovering:!1,focused:!1,isComposing:!1,passwordVisible:!1}},props:{value:[String,Number],size:String,resize:String,form:String,disabled:Boolean,readonly:Boolean,type:{type:String,default:"text"},autosize:{type:[Boolean,Object],default:!1},autocomplete:{type:String,default:"off"},autoComplete:{type:String,validator:function(n){return!0}},validateEvent:{type:Boolean,default:!0},suffixIcon:String,prefixIcon:String,label:String,clearable:{type:Boolean,default:!1},showPassword:{type:Boolean,default:!1},showWordLimit:{type:Boolean,default:!1},tabindex:String},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},validateState:function(){return this.elFormItem?this.elFormItem.validateState:""},needStatusIcon:function(){return!!this.elForm&&this.elForm.statusIcon},validateIcon:function(){return{validating:"el-icon-loading",success:"el-icon-circle-check",error:"el-icon-circle-close"}[this.validateState]},textareaStyle:function(){return Fn()({},this.textareaCalcStyle,{resize:this.resize})},inputSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},inputDisabled:function(){return this.disabled||(this.elForm||{}).disabled},nativeInputValue:function(){return null===this.value||void 0===this.value?"":String(this.value)},showClear:function(){return this.clearable&&!this.inputDisabled&&!this.readonly&&this.nativeInputValue&&(this.focused||this.hovering)},showPwdVisible:function(){return this.showPassword&&!this.inputDisabled&&!this.readonly&&(!!this.nativeInputValue||this.focused)},isWordLimitVisible:function(){return this.showWordLimit&&this.$attrs.maxlength&&("text"===this.type||"textarea"===this.type)&&!this.inputDisabled&&!this.readonly&&!this.showPassword},upperLimit:function(){return this.$attrs.maxlength},textLength:function(){return"number"==typeof this.value?String(this.value).length:(this.value||"").length},inputExceed:function(){return this.isWordLimitVisible&&this.textLength>this.upperLimit}},watch:{value:function(n){this.$nextTick(this.resizeTextarea),this.validateEvent&&this.dispatch("ElFormItem","el.form.change",[n])},nativeInputValue:function(){this.setNativeInputValue()},type:function(){var n=this;this.$nextTick((function(){n.setNativeInputValue(),n.resizeTextarea(),n.updateIconOffset()}))}},methods:{focus:function(){this.getInput().focus()},blur:function(){this.getInput().blur()},getMigratingConfig:function(){return{props:{icon:"icon is removed, use suffix-icon / prefix-icon instead.","on-icon-click":"on-icon-click is removed."},events:{click:"click is removed."}}},handleBlur:function(n){this.focused=!1,this.$emit("blur",n),this.validateEvent&&this.dispatch("ElFormItem","el.form.blur",[this.value])},select:function(){this.getInput().select()},resizeTextarea:function(){if(!this.$isServer){var n=this.autosize;if("textarea"===this.type)if(n){var e=n.minRows,t=n.maxRows;this.textareaCalcStyle=qn(this.$refs.textarea,e,t)}else this.textareaCalcStyle={minHeight:qn(this.$refs.textarea).minHeight}}},setNativeInputValue:function(){var n=this.getInput();n&&n.value!==this.nativeInputValue&&(n.value=this.nativeInputValue)},handleFocus:function(n){this.focused=!0,this.$emit("focus",n)},handleCompositionStart:function(n){this.$emit("compositionstart",n),this.isComposing=!0},handleCompositionUpdate:function(n){this.$emit("compositionupdate",n);var e=n.target.value,t=e[e.length-1]||"";this.isComposing=!Object(Vn.isKorean)(t)},handleCompositionEnd:function(n){this.$emit("compositionend",n),this.isComposing&&(this.isComposing=!1,this.handleInput(n))},handleInput:function(n){this.isComposing||n.target.value!==this.nativeInputValue&&(this.$emit("input",n.target.value),this.$nextTick(this.setNativeInputValue))},handleChange:function(n){this.$emit("change",n.target.value)},calcIconOffset:function(n){var e=[].slice.call(this.$el.querySelectorAll(".el-input__"+n)||[]);if(e.length){for(var t=null,i=0;i<e.length;i++)if(e[i].parentNode===this.$el){t=e[i];break}if(t){var a={suffix:"append",prefix:"prepend"}[n];this.$slots[a]?t.style.transform="translateX("+("suffix"===n?"-":"")+this.$el.querySelector(".el-input-group__"+a).offsetWidth+"px)":t.removeAttribute("style")}}},updateIconOffset:function(){this.calcIconOffset("prefix"),this.calcIconOffset("suffix")},clear:function(){this.$emit("input",""),this.$emit("change",""),this.$emit("clear")},handlePasswordVisible:function(){var n=this;this.passwordVisible=!this.passwordVisible,this.$nextTick((function(){n.focus()}))},getInput:function(){return this.$refs.input||this.$refs.textarea},getSuffixVisible:function(){return this.$slots.suffix||this.suffixIcon||this.showClear||this.showPassword||this.isWordLimitVisible||this.validateState&&this.needStatusIcon}},created:function(){this.$on("inputSelect",this.select)},mounted:function(){this.setNativeInputValue(),this.resizeTextarea(),this.updateIconOffset()},updated:function(){this.$nextTick(this.updateIconOffset)}},Rn,[],!1,null,null,null);Gn.options.__file="packages/input/src/input.vue";var Hn=Gn.exports;Hn.install=function(n){n.component(Hn.name,Hn)};var Wn=Hn,Qn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{class:["el-input-number",n.inputNumberSize?"el-input-number--"+n.inputNumberSize:"",{"is-disabled":n.inputNumberDisabled},{"is-without-controls":!n.controls},{"is-controls-right":n.controlsAtRight}],on:{dragstart:function(n){n.preventDefault()}}},[n.controls?t("span",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.decrease,expression:"decrease"}],staticClass:"el-input-number__decrease",class:{"is-disabled":n.minDisabled},attrs:{role:"button"},on:{keydown:function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.decrease(e)}}},[t("i",{class:"el-icon-"+(n.controlsAtRight?"arrow-down":"minus")})]):n._e(),n.controls?t("span",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.increase,expression:"increase"}],staticClass:"el-input-number__increase",class:{"is-disabled":n.maxDisabled},attrs:{role:"button"},on:{keydown:function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.increase(e)}}},[t("i",{class:"el-icon-"+(n.controlsAtRight?"arrow-up":"plus")})]):n._e(),t("el-input",{ref:"input",attrs:{value:n.displayValue,placeholder:n.placeholder,disabled:n.inputNumberDisabled,size:n.inputNumberSize,max:n.max,min:n.min,name:n.name,label:n.label},on:{blur:n.handleBlur,focus:n.handleFocus,input:n.handleInput,change:n.handleInputChange},nativeOn:{keydown:[function(e){return!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"])?null:(e.preventDefault(),n.increase(e))},function(e){return!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"])?null:(e.preventDefault(),n.decrease(e))}]}})],1)};Qn._withStripped=!0;var Kn={bind:function(n,e,t){var i=null,a=void 0,r=Object(g.isMac)()?100:200,o=function(){return t.context[e.expression].apply()},s=function(){Date.now()-a<r&&o(),clearInterval(i),i=null};Object(gn.on)(n,"mousedown",(function(n){0===n.button&&(a=Date.now(),Object(gn.once)(document,"mouseup",s),clearInterval(i),i=setInterval(o,r))}))}},Yn=a({name:"ElInputNumber",mixins:[q()("input")],inject:{elForm:{default:""},elFormItem:{default:""}},directives:{repeatClick:Kn},components:{ElInput:p.a},props:{step:{type:Number,default:1},stepStrictly:{type:Boolean,default:!1},max:{type:Number,default:1/0},min:{type:Number,default:-1/0},value:{},disabled:Boolean,size:String,controls:{type:Boolean,default:!0},controlsPosition:{type:String,default:""},name:String,label:String,placeholder:String,precision:{type:Number,validator:function(n){return n>=0&&n===parseInt(n,10)}}},data:function(){return{currentValue:0,userInput:null}},watch:{value:{immediate:!0,handler:function(n){var e=void 0===n?n:Number(n);if(void 0!==e){if(isNaN(e))return;if(this.stepStrictly){var t=this.getPrecision(this.step),i=Math.pow(10,t);e=Math.round(e/this.step)*i*this.step/i}void 0!==this.precision&&(e=this.toPrecision(e,this.precision))}e>=this.max&&(e=this.max),e<=this.min&&(e=this.min),this.currentValue=e,this.userInput=null,this.$emit("input",e)}}},computed:{minDisabled:function(){return this._decrease(this.value,this.step)<this.min},maxDisabled:function(){return this._increase(this.value,this.step)>this.max},numPrecision:function(){var n=this.value,e=this.step,t=this.getPrecision,i=this.precision,a=t(e);return void 0!==i?(a>i&&console.warn("[Element Warn][InputNumber]precision should not be less than the decimal places of step"),i):Math.max(t(n),a)},controlsAtRight:function(){return this.controls&&"right"===this.controlsPosition},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},inputNumberSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},inputNumberDisabled:function(){return this.disabled||!!(this.elForm||{}).disabled},displayValue:function(){if(null!==this.userInput)return this.userInput;var n=this.currentValue;if("number"==typeof n){if(this.stepStrictly){var e=this.getPrecision(this.step),t=Math.pow(10,e);n=Math.round(n/this.step)*t*this.step/t}void 0!==this.precision&&(n=n.toFixed(this.precision))}return n}},methods:{toPrecision:function(n,e){return void 0===e&&(e=this.numPrecision),parseFloat(Math.round(n*Math.pow(10,e))/Math.pow(10,e))},getPrecision:function(n){if(void 0===n)return 0;var e=n.toString(),t=e.indexOf("."),i=0;return-1!==t&&(i=e.length-t-1),i},_increase:function(n,e){if("number"!=typeof n&&void 0!==n)return this.currentValue;var t=Math.pow(10,this.numPrecision);return this.toPrecision((t*n+t*e)/t)},_decrease:function(n,e){if("number"!=typeof n&&void 0!==n)return this.currentValue;var t=Math.pow(10,this.numPrecision);return this.toPrecision((t*n-t*e)/t)},increase:function(){if(!this.inputNumberDisabled&&!this.maxDisabled){var n=this.value||0,e=this._increase(n,this.step);this.setCurrentValue(e)}},decrease:function(){if(!this.inputNumberDisabled&&!this.minDisabled){var n=this.value||0,e=this._decrease(n,this.step);this.setCurrentValue(e)}},handleBlur:function(n){this.$emit("blur",n)},handleFocus:function(n){this.$emit("focus",n)},setCurrentValue:function(n){var e=this.currentValue;"number"==typeof n&&void 0!==this.precision&&(n=this.toPrecision(n,this.precision)),n>=this.max&&(n=this.max),n<=this.min&&(n=this.min),e!==n&&(this.userInput=null,this.$emit("input",n),this.$emit("change",n,e),this.currentValue=n)},handleInput:function(n){this.userInput=n},handleInputChange:function(n){var e=""===n?void 0:Number(n);isNaN(e)&&""!==n||this.setCurrentValue(e),this.userInput=null},select:function(){this.$refs.input.select()}},mounted:function(){var n=this.$refs.input.$refs.input;n.setAttribute("role","spinbutton"),n.setAttribute("aria-valuemax",this.max),n.setAttribute("aria-valuemin",this.min),n.setAttribute("aria-valuenow",this.currentValue),n.setAttribute("aria-disabled",this.inputNumberDisabled)},updated:function(){this.$refs&&this.$refs.input&&this.$refs.input.$refs.input.setAttribute("aria-valuenow",this.currentValue)}},Qn,[],!1,null,null,null);Yn.options.__file="packages/input-number/src/input-number.vue";var Xn=Yn.exports;Xn.install=function(n){n.component(Xn.name,Xn)};var Jn=Xn,Zn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("label",{staticClass:"el-radio",class:[n.border&&n.radioSize?"el-radio--"+n.radioSize:"",{"is-disabled":n.isDisabled},{"is-focus":n.focus},{"is-bordered":n.border},{"is-checked":n.model===n.label}],attrs:{role:"radio","aria-checked":n.model===n.label,"aria-disabled":n.isDisabled,tabindex:n.tabIndex},on:{keydown:function(e){if(!("button"in e)&&n._k(e.keyCode,"space",32,e.key,[" ","Spacebar"]))return null;e.stopPropagation(),e.preventDefault(),n.model=n.isDisabled?n.model:n.label}}},[t("span",{staticClass:"el-radio__input",class:{"is-disabled":n.isDisabled,"is-checked":n.model===n.label}},[t("span",{staticClass:"el-radio__inner"}),t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],ref:"radio",staticClass:"el-radio__original",attrs:{type:"radio","aria-hidden":"true",name:n.name,disabled:n.isDisabled,tabindex:"-1",autocomplete:"off"},domProps:{value:n.label,checked:n._q(n.model,n.label)},on:{focus:function(e){n.focus=!0},blur:function(e){n.focus=!1},change:[function(e){n.model=n.label},n.handleChange]}})]),t("span",{staticClass:"el-radio__label",on:{keydown:function(n){n.stopPropagation()}}},[n._t("default"),n.$slots.default?n._e():[n._v(n._s(n.label))]],2)])};Zn._withStripped=!0;var ne=a({name:"ElRadio",mixins:[w.a],inject:{elForm:{default:""},elFormItem:{default:""}},componentName:"ElRadio",props:{value:{},label:{},disabled:Boolean,name:String,border:Boolean,size:String},data:function(){return{focus:!1}},computed:{isGroup:function(){for(var n=this.$parent;n;){if("ElRadioGroup"===n.$options.componentName)return this._radioGroup=n,!0;n=n.$parent}return!1},model:{get:function(){return this.isGroup?this._radioGroup.value:this.value},set:function(n){this.isGroup?this.dispatch("ElRadioGroup","input",[n]):this.$emit("input",n),this.$refs.radio&&(this.$refs.radio.checked=this.model===this.label)}},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},radioSize:function(){var n=this.size||this._elFormItemSize||(this.$ELEMENT||{}).size;return this.isGroup&&this._radioGroup.radioGroupSize||n},isDisabled:function(){return this.isGroup?this._radioGroup.disabled||this.disabled||(this.elForm||{}).disabled:this.disabled||(this.elForm||{}).disabled},tabIndex:function(){return this.isDisabled||this.isGroup&&this.model!==this.label?-1:0}},methods:{handleChange:function(){var n=this;this.$nextTick((function(){n.$emit("change",n.model),n.isGroup&&n.dispatch("ElRadioGroup","handleChange",n.model)}))}}},Zn,[],!1,null,null,null);ne.options.__file="packages/radio/src/radio.vue";var ee=ne.exports;ee.install=function(n){n.component(ee.name,ee)};var te=ee,ie=function(){var n=this.$createElement;return(this._self._c||n)(this._elTag,{tag:"component",staticClass:"el-radio-group",attrs:{role:"radiogroup"},on:{keydown:this.handleKeydown}},[this._t("default")],2)};ie._withStripped=!0;var ae=Object.freeze({LEFT:37,UP:38,RIGHT:39,DOWN:40}),re=a({name:"ElRadioGroup",componentName:"ElRadioGroup",inject:{elFormItem:{default:""}},mixins:[w.a],props:{value:{},size:String,fill:String,textColor:String,disabled:Boolean},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},_elTag:function(){var n=(this.$vnode.data||{}).tag;return n&&"component"!==n||(n="div"),n},radioGroupSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size}},created:function(){var n=this;this.$on("handleChange",(function(e){n.$emit("change",e)}))},mounted:function(){var n=this.$el.querySelectorAll("[type=radio]"),e=this.$el.querySelectorAll("[role=radio]")[0];![].some.call(n,(function(n){return n.checked}))&&e&&(e.tabIndex=0)},methods:{handleKeydown:function(n){var e=n.target,t="INPUT"===e.nodeName?"[type=radio]":"[role=radio]",i=this.$el.querySelectorAll(t),a=i.length,r=[].indexOf.call(i,e),o=this.$el.querySelectorAll("[role=radio]");switch(n.keyCode){case ae.LEFT:case ae.UP:n.stopPropagation(),n.preventDefault(),0===r?(o[a-1].click(),o[a-1].focus()):(o[r-1].click(),o[r-1].focus());break;case ae.RIGHT:case ae.DOWN:r===a-1?(n.stopPropagation(),n.preventDefault(),o[0].click(),o[0].focus()):(o[r+1].click(),o[r+1].focus())}}},watch:{value:function(n){this.dispatch("ElFormItem","el.form.change",[this.value])}}},ie,[],!1,null,null,null);re.options.__file="packages/radio/src/radio-group.vue";var oe=re.exports;oe.install=function(n){n.component(oe.name,oe)};var se=oe,le=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("label",{staticClass:"el-radio-button",class:[n.size?"el-radio-button--"+n.size:"",{"is-active":n.value===n.label},{"is-disabled":n.isDisabled},{"is-focus":n.focus}],attrs:{role:"radio","aria-checked":n.value===n.label,"aria-disabled":n.isDisabled,tabindex:n.tabIndex},on:{keydown:function(e){if(!("button"in e)&&n._k(e.keyCode,"space",32,e.key,[" ","Spacebar"]))return null;e.stopPropagation(),e.preventDefault(),n.value=n.isDisabled?n.value:n.label}}},[t("input",{directives:[{name:"model",rawName:"v-model",value:n.value,expression:"value"}],staticClass:"el-radio-button__orig-radio",attrs:{type:"radio",name:n.name,disabled:n.isDisabled,tabindex:"-1",autocomplete:"off"},domProps:{value:n.label,checked:n._q(n.value,n.label)},on:{change:[function(e){n.value=n.label},n.handleChange],focus:function(e){n.focus=!0},blur:function(e){n.focus=!1}}}),t("span",{staticClass:"el-radio-button__inner",style:n.value===n.label?n.activeStyle:null,on:{keydown:function(n){n.stopPropagation()}}},[n._t("default"),n.$slots.default?n._e():[n._v(n._s(n.label))]],2)])};le._withStripped=!0;var de=a({name:"ElRadioButton",mixins:[w.a],inject:{elForm:{default:""},elFormItem:{default:""}},props:{label:{},disabled:Boolean,name:String},data:function(){return{focus:!1}},computed:{value:{get:function(){return this._radioGroup.value},set:function(n){this._radioGroup.$emit("input",n)}},_radioGroup:function(){for(var n=this.$parent;n;){if("ElRadioGroup"===n.$options.componentName)return n;n=n.$parent}return!1},activeStyle:function(){return{backgroundColor:this._radioGroup.fill||"",borderColor:this._radioGroup.fill||"",boxShadow:this._radioGroup.fill?"-1px 0 0 0 "+this._radioGroup.fill:"",color:this._radioGroup.textColor||""}},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},size:function(){return this._radioGroup.radioGroupSize||this._elFormItemSize||(this.$ELEMENT||{}).size},isDisabled:function(){return this.disabled||this._radioGroup.disabled||(this.elForm||{}).disabled},tabIndex:function(){return this.isDisabled||this._radioGroup&&this.value!==this.label?-1:0}},methods:{handleChange:function(){var n=this;this.$nextTick((function(){n.dispatch("ElRadioGroup","handleChange",n.value)}))}}},le,[],!1,null,null,null);de.options.__file="packages/radio/src/radio-button.vue";var ce=de.exports;ce.install=function(n){n.component(ce.name,ce)};var ue=ce,pe=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("label",{staticClass:"el-checkbox",class:[n.border&&n.checkboxSize?"el-checkbox--"+n.checkboxSize:"",{"is-disabled":n.isDisabled},{"is-bordered":n.border},{"is-checked":n.isChecked}],attrs:{id:n.id}},[t("span",{staticClass:"el-checkbox__input",class:{"is-disabled":n.isDisabled,"is-checked":n.isChecked,"is-indeterminate":n.indeterminate,"is-focus":n.focus},attrs:{tabindex:!!n.indeterminate&&0,role:!!n.indeterminate&&"checkbox","aria-checked":!!n.indeterminate&&"mixed"}},[t("span",{staticClass:"el-checkbox__inner"}),n.trueLabel||n.falseLabel?t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],staticClass:"el-checkbox__original",attrs:{type:"checkbox","aria-hidden":n.indeterminate?"true":"false",name:n.name,disabled:n.isDisabled,"true-value":n.trueLabel,"false-value":n.falseLabel},domProps:{checked:Array.isArray(n.model)?n._i(n.model,null)>-1:n._q(n.model,n.trueLabel)},on:{change:[function(e){var t=n.model,i=e.target,a=i.checked?n.trueLabel:n.falseLabel;if(Array.isArray(t)){var r=n._i(t,null);i.checked?r<0&&(n.model=t.concat([null])):r>-1&&(n.model=t.slice(0,r).concat(t.slice(r+1)))}else n.model=a},n.handleChange],focus:function(e){n.focus=!0},blur:function(e){n.focus=!1}}}):t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],staticClass:"el-checkbox__original",attrs:{type:"checkbox","aria-hidden":n.indeterminate?"true":"false",disabled:n.isDisabled,name:n.name},domProps:{value:n.label,checked:Array.isArray(n.model)?n._i(n.model,n.label)>-1:n.model},on:{change:[function(e){var t=n.model,i=e.target,a=!!i.checked;if(Array.isArray(t)){var r=n.label,o=n._i(t,r);i.checked?o<0&&(n.model=t.concat([r])):o>-1&&(n.model=t.slice(0,o).concat(t.slice(o+1)))}else n.model=a},n.handleChange],focus:function(e){n.focus=!0},blur:function(e){n.focus=!1}}})]),n.$slots.default||n.label?t("span",{staticClass:"el-checkbox__label"},[n._t("default"),n.$slots.default?n._e():[n._v(n._s(n.label))]],2):n._e()])};pe._withStripped=!0;var he=a({name:"ElCheckbox",mixins:[w.a],inject:{elForm:{default:""},elFormItem:{default:""}},componentName:"ElCheckbox",data:function(){return{selfModel:!1,focus:!1,isLimitExceeded:!1}},computed:{model:{get:function(){return this.isGroup?this.store:void 0!==this.value?this.value:this.selfModel},set:function(n){this.isGroup?(this.isLimitExceeded=!1,void 0!==this._checkboxGroup.min&&n.length<this._checkboxGroup.min&&(this.isLimitExceeded=!0),void 0!==this._checkboxGroup.max&&n.length>this._checkboxGroup.max&&(this.isLimitExceeded=!0),!1===this.isLimitExceeded&&this.dispatch("ElCheckboxGroup","input",[n])):(this.$emit("input",n),this.selfModel=n)}},isChecked:function(){return"[object Boolean]"==={}.toString.call(this.model)?this.model:Array.isArray(this.model)?this.model.indexOf(this.label)>-1:null!==this.model&&void 0!==this.model?this.model===this.trueLabel:void 0},isGroup:function(){for(var n=this.$parent;n;){if("ElCheckboxGroup"===n.$options.componentName)return this._checkboxGroup=n,!0;n=n.$parent}return!1},store:function(){return this._checkboxGroup?this._checkboxGroup.value:this.value},isLimitDisabled:function(){var n=this._checkboxGroup,e=n.max,t=n.min;return!(!e&&!t)&&this.model.length>=e&&!this.isChecked||this.model.length<=t&&this.isChecked},isDisabled:function(){return this.isGroup?this._checkboxGroup.disabled||this.disabled||(this.elForm||{}).disabled||this.isLimitDisabled:this.disabled||(this.elForm||{}).disabled},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},checkboxSize:function(){var n=this.size||this._elFormItemSize||(this.$ELEMENT||{}).size;return this.isGroup&&this._checkboxGroup.checkboxGroupSize||n}},props:{value:{},label:{},indeterminate:Boolean,disabled:Boolean,checked:Boolean,name:String,trueLabel:[String,Number],falseLabel:[String,Number],id:String,controls:String,border:Boolean,size:String},methods:{addToStore:function(){Array.isArray(this.model)&&-1===this.model.indexOf(this.label)?this.model.push(this.label):this.model=this.trueLabel||!0},handleChange:function(n){var e=this;if(!this.isLimitExceeded){var t=void 0;t=n.target.checked?void 0===this.trueLabel||this.trueLabel:void 0!==this.falseLabel&&this.falseLabel,this.$emit("change",t,n),this.$nextTick((function(){e.isGroup&&e.dispatch("ElCheckboxGroup","change",[e._checkboxGroup.value])}))}}},created:function(){this.checked&&this.addToStore()},mounted:function(){this.indeterminate&&this.$el.setAttribute("aria-controls",this.controls)},watch:{value:function(n){this.dispatch("ElFormItem","el.form.change",n)}}},pe,[],!1,null,null,null);he.options.__file="packages/checkbox/src/checkbox.vue";var me=he.exports;me.install=function(n){n.component(me.name,me)};var ge=me,fe=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("label",{staticClass:"el-checkbox-button",class:[n.size?"el-checkbox-button--"+n.size:"",{"is-disabled":n.isDisabled},{"is-checked":n.isChecked},{"is-focus":n.focus}],attrs:{role:"checkbox","aria-checked":n.isChecked,"aria-disabled":n.isDisabled}},[n.trueLabel||n.falseLabel?t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],staticClass:"el-checkbox-button__original",attrs:{type:"checkbox",name:n.name,disabled:n.isDisabled,"true-value":n.trueLabel,"false-value":n.falseLabel},domProps:{checked:Array.isArray(n.model)?n._i(n.model,null)>-1:n._q(n.model,n.trueLabel)},on:{change:[function(e){var t=n.model,i=e.target,a=i.checked?n.trueLabel:n.falseLabel;if(Array.isArray(t)){var r=n._i(t,null);i.checked?r<0&&(n.model=t.concat([null])):r>-1&&(n.model=t.slice(0,r).concat(t.slice(r+1)))}else n.model=a},n.handleChange],focus:function(e){n.focus=!0},blur:function(e){n.focus=!1}}}):t("input",{directives:[{name:"model",rawName:"v-model",value:n.model,expression:"model"}],staticClass:"el-checkbox-button__original",attrs:{type:"checkbox",name:n.name,disabled:n.isDisabled},domProps:{value:n.label,checked:Array.isArray(n.model)?n._i(n.model,n.label)>-1:n.model},on:{change:[function(e){var t=n.model,i=e.target,a=!!i.checked;if(Array.isArray(t)){var r=n.label,o=n._i(t,r);i.checked?o<0&&(n.model=t.concat([r])):o>-1&&(n.model=t.slice(0,o).concat(t.slice(o+1)))}else n.model=a},n.handleChange],focus:function(e){n.focus=!0},blur:function(e){n.focus=!1}}}),n.$slots.default||n.label?t("span",{staticClass:"el-checkbox-button__inner",style:n.isChecked?n.activeStyle:null},[n._t("default",[n._v(n._s(n.label))])],2):n._e()])};fe._withStripped=!0;var ve=a({name:"ElCheckboxButton",mixins:[w.a],inject:{elForm:{default:""},elFormItem:{default:""}},data:function(){return{selfModel:!1,focus:!1,isLimitExceeded:!1}},props:{value:{},label:{},disabled:Boolean,checked:Boolean,name:String,trueLabel:[String,Number],falseLabel:[String,Number]},computed:{model:{get:function(){return this._checkboxGroup?this.store:void 0!==this.value?this.value:this.selfModel},set:function(n){this._checkboxGroup?(this.isLimitExceeded=!1,void 0!==this._checkboxGroup.min&&n.length<this._checkboxGroup.min&&(this.isLimitExceeded=!0),void 0!==this._checkboxGroup.max&&n.length>this._checkboxGroup.max&&(this.isLimitExceeded=!0),!1===this.isLimitExceeded&&this.dispatch("ElCheckboxGroup","input",[n])):void 0!==this.value?this.$emit("input",n):this.selfModel=n}},isChecked:function(){return"[object Boolean]"==={}.toString.call(this.model)?this.model:Array.isArray(this.model)?this.model.indexOf(this.label)>-1:null!==this.model&&void 0!==this.model?this.model===this.trueLabel:void 0},_checkboxGroup:function(){for(var n=this.$parent;n;){if("ElCheckboxGroup"===n.$options.componentName)return n;n=n.$parent}return!1},store:function(){return this._checkboxGroup?this._checkboxGroup.value:this.value},activeStyle:function(){return{backgroundColor:this._checkboxGroup.fill||"",borderColor:this._checkboxGroup.fill||"",color:this._checkboxGroup.textColor||"","box-shadow":"-1px 0 0 0 "+this._checkboxGroup.fill}},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},size:function(){return this._checkboxGroup.checkboxGroupSize||this._elFormItemSize||(this.$ELEMENT||{}).size},isLimitDisabled:function(){var n=this._checkboxGroup,e=n.max,t=n.min;return!(!e&&!t)&&this.model.length>=e&&!this.isChecked||this.model.length<=t&&this.isChecked},isDisabled:function(){return this._checkboxGroup?this._checkboxGroup.disabled||this.disabled||(this.elForm||{}).disabled||this.isLimitDisabled:this.disabled||(this.elForm||{}).disabled}},methods:{addToStore:function(){Array.isArray(this.model)&&-1===this.model.indexOf(this.label)?this.model.push(this.label):this.model=this.trueLabel||!0},handleChange:function(n){var e=this;if(!this.isLimitExceeded){var t=void 0;t=n.target.checked?void 0===this.trueLabel||this.trueLabel:void 0!==this.falseLabel&&this.falseLabel,this.$emit("change",t,n),this.$nextTick((function(){e._checkboxGroup&&e.dispatch("ElCheckboxGroup","change",[e._checkboxGroup.value])}))}}},created:function(){this.checked&&this.addToStore()}},fe,[],!1,null,null,null);ve.options.__file="packages/checkbox/src/checkbox-button.vue";var be=ve.exports;be.install=function(n){n.component(be.name,be)};var _e=be,ye=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-checkbox-group",attrs:{role:"group","aria-label":"checkbox-group"}},[this._t("default")],2)};ye._withStripped=!0;var xe=a({name:"ElCheckboxGroup",componentName:"ElCheckboxGroup",mixins:[w.a],inject:{elFormItem:{default:""}},props:{value:{},disabled:Boolean,min:Number,max:Number,size:String,fill:String,textColor:String},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},checkboxGroupSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size}},watch:{value:function(n){this.dispatch("ElFormItem","el.form.change",[n])}}},ye,[],!1,null,null,null);xe.options.__file="packages/checkbox/src/checkbox-group.vue";var ke=xe.exports;ke.install=function(n){n.component(ke.name,ke)};var Te=ke,we=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-switch",class:{"is-disabled":n.switchDisabled,"is-checked":n.checked},attrs:{role:"switch","aria-checked":n.checked,"aria-disabled":n.switchDisabled},on:{click:function(e){return e.preventDefault(),n.switchValue(e)}}},[t("input",{ref:"input",staticClass:"el-switch__input",attrs:{type:"checkbox",id:n.id,name:n.name,"true-value":n.activeValue,"false-value":n.inactiveValue,disabled:n.switchDisabled},on:{change:n.handleChange,keydown:function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.switchValue(e)}}}),n.inactiveIconClass||n.inactiveText?t("span",{class:["el-switch__label","el-switch__label--left",n.checked?"":"is-active"]},[n.inactiveIconClass?t("i",{class:[n.inactiveIconClass]}):n._e(),!n.inactiveIconClass&&n.inactiveText?t("span",{attrs:{"aria-hidden":n.checked}},[n._v(n._s(n.inactiveText))]):n._e()]):n._e(),t("span",{ref:"core",staticClass:"el-switch__core",style:{width:n.coreWidth+"px"}}),n.activeIconClass||n.activeText?t("span",{class:["el-switch__label","el-switch__label--right",n.checked?"is-active":""]},[n.activeIconClass?t("i",{class:[n.activeIconClass]}):n._e(),!n.activeIconClass&&n.activeText?t("span",{attrs:{"aria-hidden":!n.checked}},[n._v(n._s(n.activeText))]):n._e()]):n._e()])};we._withStripped=!0;var Ie=a({name:"ElSwitch",mixins:[q()("input"),k.a,w.a],inject:{elForm:{default:""}},props:{value:{type:[Boolean,String,Number],default:!1},disabled:{type:Boolean,default:!1},width:{type:Number,default:40},activeIconClass:{type:String,default:""},inactiveIconClass:{type:String,default:""},activeText:String,inactiveText:String,activeColor:{type:String,default:""},inactiveColor:{type:String,default:""},activeValue:{type:[Boolean,String,Number],default:!0},inactiveValue:{type:[Boolean,String,Number],default:!1},name:{type:String,default:""},validateEvent:{type:Boolean,default:!0},id:String},data:function(){return{coreWidth:this.width}},created:function(){~[this.activeValue,this.inactiveValue].indexOf(this.value)||this.$emit("input",this.inactiveValue)},computed:{checked:function(){return this.value===this.activeValue},switchDisabled:function(){return this.disabled||(this.elForm||{}).disabled}},watch:{checked:function(){this.$refs.input.checked=this.checked,(this.activeColor||this.inactiveColor)&&this.setBackgroundColor(),this.validateEvent&&this.dispatch("ElFormItem","el.form.change",[this.value])}},methods:{handleChange:function(n){var e=this,t=this.checked?this.inactiveValue:this.activeValue;this.$emit("input",t),this.$emit("change",t),this.$nextTick((function(){e.$refs.input&&(e.$refs.input.checked=e.checked)}))},setBackgroundColor:function(){var n=this.checked?this.activeColor:this.inactiveColor;this.$refs.core.style.borderColor=n,this.$refs.core.style.backgroundColor=n},switchValue:function(){!this.switchDisabled&&this.handleChange()},getMigratingConfig:function(){return{props:{"on-color":"on-color is renamed to active-color.","off-color":"off-color is renamed to inactive-color.","on-text":"on-text is renamed to active-text.","off-text":"off-text is renamed to inactive-text.","on-value":"on-value is renamed to active-value.","off-value":"off-value is renamed to inactive-value.","on-icon-class":"on-icon-class is renamed to active-icon-class.","off-icon-class":"off-icon-class is renamed to inactive-icon-class."}}}},mounted:function(){this.coreWidth=this.width||40,(this.activeColor||this.inactiveColor)&&this.setBackgroundColor(),this.$refs.input.checked=this.checked}},we,[],!1,null,null,null);Ie.options.__file="packages/switch/src/component.vue";var Ce=Ie.exports;Ce.install=function(n){n.component(Ce.name,Ce)};var De=Ce,Ee=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleClose,expression:"handleClose"}],staticClass:"el-select",class:[n.selectSize?"el-select--"+n.selectSize:""],on:{click:function(e){return e.stopPropagation(),n.toggleMenu(e)}}},[n.multiple?t("div",{ref:"tags",staticClass:"el-select__tags",style:{"max-width":n.inputWidth-32+"px",width:"100%"}},[n.collapseTags&&n.selected.length?t("span",[t("el-tag",{attrs:{closable:!n.selectDisabled,size:n.collapseTagSize,hit:n.selected[0].hitState,type:"info","disable-transitions":""},on:{close:function(e){n.deleteTag(e,n.selected[0])}}},[t("span",{staticClass:"el-select__tags-text"},[n._v(n._s(n.selected[0].currentLabel))])]),n.selected.length>1?t("el-tag",{attrs:{closable:!1,size:n.collapseTagSize,type:"info","disable-transitions":""}},[t("span",{staticClass:"el-select__tags-text"},[n._v("+ "+n._s(n.selected.length-1))])]):n._e()],1):n._e(),n.collapseTags?n._e():t("transition-group",{on:{"after-leave":n.resetInputHeight}},n._l(n.selected,(function(e){return t("el-tag",{key:n.getValueKey(e),attrs:{closable:!n.selectDisabled,size:n.collapseTagSize,hit:e.hitState,type:"info","disable-transitions":""},on:{close:function(t){n.deleteTag(t,e)}}},[t("span",{staticClass:"el-select__tags-text"},[n._v(n._s(e.currentLabel))])])})),1),n.filterable?t("input",{directives:[{name:"model",rawName:"v-model",value:n.query,expression:"query"}],ref:"input",staticClass:"el-select__input",class:[n.selectSize?"is-"+n.selectSize:""],style:{"flex-grow":"1",width:n.inputLength/(n.inputWidth-32)+"%","max-width":n.inputWidth-42+"px"},attrs:{type:"text",disabled:n.selectDisabled,autocomplete:n.autoComplete||n.autocomplete},domProps:{value:n.query},on:{focus:n.handleFocus,blur:function(e){n.softFocus=!1},keyup:n.managePlaceholder,keydown:[n.resetInputState,function(e){if(!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"]))return null;e.preventDefault(),n.handleNavigate("next")},function(e){if(!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"]))return null;e.preventDefault(),n.handleNavigate("prev")},function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:(e.preventDefault(),n.selectOption(e))},function(e){if(!("button"in e)&&n._k(e.keyCode,"esc",27,e.key,["Esc","Escape"]))return null;e.stopPropagation(),e.preventDefault(),n.visible=!1},function(e){return!("button"in e)&&n._k(e.keyCode,"delete",[8,46],e.key,["Backspace","Delete","Del"])?null:n.deletePrevTag(e)},function(e){if(!("button"in e)&&n._k(e.keyCode,"tab",9,e.key,"Tab"))return null;n.visible=!1}],compositionstart:n.handleComposition,compositionupdate:n.handleComposition,compositionend:n.handleComposition,input:[function(e){e.target.composing||(n.query=e.target.value)},n.debouncedQueryChange]}}):n._e()],1):n._e(),t("el-input",{ref:"reference",class:{"is-focus":n.visible},attrs:{type:"text",placeholder:n.currentPlaceholder,name:n.name,id:n.id,autocomplete:n.autoComplete||n.autocomplete,size:n.selectSize,disabled:n.selectDisabled,readonly:n.readonly,"validate-event":!1,tabindex:n.multiple&&n.filterable?"-1":null},on:{focus:n.handleFocus,blur:n.handleBlur,input:n.debouncedOnInputChange,compositionstart:n.handleComposition,compositionupdate:n.handleComposition,compositionend:n.handleComposition},nativeOn:{keydown:[function(e){if(!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"]))return null;e.stopPropagation(),e.preventDefault(),n.handleNavigate("next")},function(e){if(!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"]))return null;e.stopPropagation(),e.preventDefault(),n.handleNavigate("prev")},function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:(e.preventDefault(),n.selectOption(e))},function(e){if(!("button"in e)&&n._k(e.keyCode,"esc",27,e.key,["Esc","Escape"]))return null;e.stopPropagation(),e.preventDefault(),n.visible=!1},function(e){if(!("button"in e)&&n._k(e.keyCode,"tab",9,e.key,"Tab"))return null;n.visible=!1}],mouseenter:function(e){n.inputHovering=!0},mouseleave:function(e){n.inputHovering=!1}},model:{value:n.selectedLabel,callback:function(e){n.selectedLabel=e},expression:"selectedLabel"}},[n.$slots.prefix?t("template",{slot:"prefix"},[n._t("prefix")],2):n._e(),t("template",{slot:"suffix"},[t("i",{directives:[{name:"show",rawName:"v-show",value:!n.showClose,expression:"!showClose"}],class:["el-select__caret","el-input__icon","el-icon-"+n.iconClass]}),n.showClose?t("i",{staticClass:"el-select__caret el-input__icon el-icon-circle-close",on:{click:n.handleClearClick}}):n._e()])],2),t("transition",{attrs:{name:"el-zoom-in-top"},on:{"before-enter":n.handleMenuEnter,"after-leave":n.doDestroy}},[t("el-select-menu",{directives:[{name:"show",rawName:"v-show",value:n.visible&&!1!==n.emptyText,expression:"visible && emptyText !== false"}],ref:"popper",attrs:{"append-to-body":n.popperAppendToBody}},[t("el-scrollbar",{directives:[{name:"show",rawName:"v-show",value:n.options.length>0&&!n.loading,expression:"options.length > 0 && !loading"}],ref:"scrollbar",class:{"is-empty":!n.allowCreate&&n.query&&0===n.filteredOptionsCount},attrs:{tag:"ul","wrap-class":"el-select-dropdown__wrap","view-class":"el-select-dropdown__list"}},[n.showNewOption?t("el-option",{attrs:{value:n.query,created:""}}):n._e(),n._t("default")],2),n.emptyText&&(!n.allowCreate||n.loading||n.allowCreate&&0===n.options.length)?[n.$slots.empty?n._t("empty"):t("p",{staticClass:"el-select-dropdown__empty"},[n._v("\n          "+n._s(n.emptyText)+"\n        ")])]:n._e()],2)],1)],1)};Ee._withStripped=!0;var Se=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-select-dropdown el-popper",class:[{"is-multiple":this.$parent.multiple},this.popperClass],style:{minWidth:this.minWidth}},[this._t("default")],2)};Se._withStripped=!0;var Me=a({name:"ElSelectDropdown",componentName:"ElSelectDropdown",mixins:[z.a],props:{placement:{default:"bottom-start"},boundariesPadding:{default:0},popperOptions:{default:function(){return{gpuAcceleration:!1}}},visibleArrow:{default:!0},appendToBody:{type:Boolean,default:!0}},data:function(){return{minWidth:""}},computed:{popperClass:function(){return this.$parent.popperClass}},watch:{"$parent.inputWidth":function(){this.minWidth=this.$parent.$el.getBoundingClientRect().width+"px"}},mounted:function(){var n=this;this.referenceElm=this.$parent.$refs.reference.$el,this.$parent.popperElm=this.popperElm=this.$el,this.$on("updatePopper",(function(){n.$parent.visible&&n.updatePopper()})),this.$on("destroyPopper",this.destroyPopper)}},Se,[],!1,null,null,null);Me.options.__file="packages/select/src/select-dropdown.vue";var Ae=Me.exports,Oe=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("li",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-select-dropdown__item",class:{selected:n.itemSelected,"is-disabled":n.disabled||n.groupDisabled||n.limitReached,hover:n.hover},on:{mouseenter:n.hoverItem,click:function(e){return e.stopPropagation(),n.selectOptionClick(e)}}},[n._t("default",[t("span",[n._v(n._s(n.currentLabel))])])],2)};Oe._withStripped=!0;var Pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},je=a({mixins:[w.a],name:"ElOption",componentName:"ElOption",inject:["select"],props:{value:{required:!0},label:[String,Number],created:Boolean,disabled:{type:Boolean,default:!1}},data:function(){return{index:-1,groupDisabled:!1,visible:!0,hitState:!1,hover:!1}},computed:{isObject:function(){return"[object object]"===Object.prototype.toString.call(this.value).toLowerCase()},currentLabel:function(){return this.label||(this.isObject?"":this.value)},currentValue:function(){return this.value||this.label||""},itemSelected:function(){return this.select.multiple?this.contains(this.select.value,this.value):this.isEqual(this.value,this.select.value)},limitReached:function(){return!!this.select.multiple&&(!this.itemSelected&&(this.select.value||[]).length>=this.select.multipleLimit&&this.select.multipleLimit>0)}},watch:{currentLabel:function(){this.created||this.select.remote||this.dispatch("ElSelect","setSelected")},value:function(n,e){var t=this.select,i=t.remote,a=t.valueKey;if(!this.created&&!i){if(a&&"object"===(void 0===n?"undefined":Pe(n))&&"object"===(void 0===e?"undefined":Pe(e))&&n[a]===e[a])return;this.dispatch("ElSelect","setSelected")}}},methods:{isEqual:function(n,e){if(this.isObject){var t=this.select.valueKey;return Object(g.getValueByPath)(n,t)===Object(g.getValueByPath)(e,t)}return n===e},contains:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments[1];if(this.isObject){var t=this.select.valueKey;return n&&n.some((function(n){return Object(g.getValueByPath)(n,t)===Object(g.getValueByPath)(e,t)}))}return n&&n.indexOf(e)>-1},handleGroupDisabled:function(n){this.groupDisabled=n},hoverItem:function(){this.disabled||this.groupDisabled||(this.select.hoverIndex=this.select.options.indexOf(this))},selectOptionClick:function(){!0!==this.disabled&&!0!==this.groupDisabled&&this.dispatch("ElSelect","handleOptionClick",[this,!0])},queryChange:function(n){this.visible=new RegExp(Object(g.escapeRegexpString)(n),"i").test(this.currentLabel)||this.created,this.visible||this.select.filteredOptionsCount--}},created:function(){this.select.options.push(this),this.select.cachedOptions.push(this),this.select.optionsCount++,this.select.filteredOptionsCount++,this.$on("queryChange",this.queryChange),this.$on("handleGroupDisabled",this.handleGroupDisabled)},beforeDestroy:function(){var n=this.select,e=n.selected,t=n.multiple?e:[e],i=this.select.cachedOptions.indexOf(this),a=t.indexOf(this);i>-1&&a<0&&this.select.cachedOptions.splice(i,1),this.select.onOptionDestroy(this.select.options.indexOf(this))}},Oe,[],!1,null,null,null);je.options.__file="packages/select/src/option.vue";var ze=je.exports,Re=t(30),$e=t.n(Re),Le=t(15),Ue=t(27),Ne=t.n(Ue),qe=a({mixins:[w.a,m.a,q()("reference"),{data:function(){return{hoverOption:-1}},computed:{optionsAllDisabled:function(){return this.options.filter((function(n){return n.visible})).every((function(n){return n.disabled}))}},watch:{hoverIndex:function(n){var e=this;"number"==typeof n&&n>-1&&(this.hoverOption=this.options[n]||{}),this.options.forEach((function(n){n.hover=e.hoverOption===n}))}},methods:{navigateOptions:function(n){var e=this;if(this.visible){if(0!==this.options.length&&0!==this.filteredOptionsCount&&!this.optionsAllDisabled){"next"===n?(this.hoverIndex++,this.hoverIndex===this.options.length&&(this.hoverIndex=0)):"prev"===n&&(this.hoverIndex--,this.hoverIndex<0&&(this.hoverIndex=this.options.length-1));var t=this.options[this.hoverIndex];!0!==t.disabled&&!0!==t.groupDisabled&&t.visible||this.navigateOptions(n),this.$nextTick((function(){return e.scrollToOption(e.hoverOption)}))}}else this.visible=!0}}}],name:"ElSelect",componentName:"ElSelect",inject:{elForm:{default:""},elFormItem:{default:""}},provide:function(){return{select:this}},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},readonly:function(){return!this.filterable||this.multiple||!Object(g.isIE)()&&!Object(g.isEdge)()&&!this.visible},showClose:function(){var n=this.multiple?Array.isArray(this.value)&&this.value.length>0:void 0!==this.value&&null!==this.value&&""!==this.value;return this.clearable&&!this.selectDisabled&&this.inputHovering&&n},iconClass:function(){return this.remote&&this.filterable?"":this.visible?"arrow-up is-reverse":"arrow-up"},debounce:function(){return this.remote?300:0},emptyText:function(){return this.loading?this.loadingText||this.t("el.select.loading"):(!this.remote||""!==this.query||0!==this.options.length)&&(this.filterable&&this.query&&this.options.length>0&&0===this.filteredOptionsCount?this.noMatchText||this.t("el.select.noMatch"):0===this.options.length?this.noDataText||this.t("el.select.noData"):null)},showNewOption:function(){var n=this,e=this.options.filter((function(n){return!n.created})).some((function(e){return e.currentLabel===n.query}));return this.filterable&&this.allowCreate&&""!==this.query&&!e},selectSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},selectDisabled:function(){return this.disabled||(this.elForm||{}).disabled},collapseTagSize:function(){return["small","mini"].indexOf(this.selectSize)>-1?"mini":"small"},propPlaceholder:function(){return void 0!==this.placeholder?this.placeholder:this.t("el.select.placeholder")}},components:{ElInput:p.a,ElSelectMenu:Ae,ElOption:ze,ElTag:$e.a,ElScrollbar:$.a},directives:{Clickoutside:O.a},props:{name:String,id:String,value:{required:!0},autocomplete:{type:String,default:"off"},autoComplete:{type:String,validator:function(n){return!0}},automaticDropdown:Boolean,size:String,disabled:Boolean,clearable:Boolean,filterable:Boolean,allowCreate:Boolean,loading:Boolean,popperClass:String,remote:Boolean,loadingText:String,noMatchText:String,noDataText:String,remoteMethod:Function,filterMethod:Function,multiple:Boolean,multipleLimit:{type:Number,default:0},placeholder:{type:String,required:!1},defaultFirstOption:Boolean,reserveKeyword:Boolean,valueKey:{type:String,default:"value"},collapseTags:Boolean,popperAppendToBody:{type:Boolean,default:!0}},data:function(){return{options:[],cachedOptions:[],createdLabel:null,createdSelected:!1,selected:this.multiple?[]:{},inputLength:20,inputWidth:0,initialInputHeight:0,cachedPlaceHolder:"",optionsCount:0,filteredOptionsCount:0,visible:!1,softFocus:!1,selectedLabel:"",hoverIndex:-1,query:"",previousQuery:null,inputHovering:!1,currentPlaceholder:"",menuVisibleOnFocus:!1,isOnComposition:!1,isSilentBlur:!1}},watch:{selectDisabled:function(){var n=this;this.$nextTick((function(){n.resetInputHeight()}))},propPlaceholder:function(n){this.cachedPlaceHolder=this.currentPlaceholder=n},value:function(n,e){this.multiple&&(this.resetInputHeight(),n&&n.length>0||this.$refs.input&&""!==this.query?this.currentPlaceholder="":this.currentPlaceholder=this.cachedPlaceHolder,this.filterable&&!this.reserveKeyword&&(this.query="",this.handleQueryChange(this.query))),this.setSelected(),this.filterable&&!this.multiple&&(this.inputLength=20),Object(g.valueEquals)(n,e)||this.dispatch("ElFormItem","el.form.change",n)},visible:function(n){var e=this;n?(this.broadcast("ElSelectDropdown","updatePopper"),this.filterable&&(this.query=this.remote?"":this.selectedLabel,this.handleQueryChange(this.query),this.multiple?this.$refs.input.focus():(this.remote||(this.broadcast("ElOption","queryChange",""),this.broadcast("ElOptionGroup","queryChange")),this.selectedLabel&&(this.currentPlaceholder=this.selectedLabel,this.selectedLabel="")))):(this.broadcast("ElSelectDropdown","destroyPopper"),this.$refs.input&&this.$refs.input.blur(),this.query="",this.previousQuery=null,this.selectedLabel="",this.inputLength=20,this.menuVisibleOnFocus=!1,this.resetHoverIndex(),this.$nextTick((function(){e.$refs.input&&""===e.$refs.input.value&&0===e.selected.length&&(e.currentPlaceholder=e.cachedPlaceHolder)})),this.multiple||(this.selected&&(this.filterable&&this.allowCreate&&this.createdSelected&&this.createdLabel?this.selectedLabel=this.createdLabel:this.selectedLabel=this.selected.currentLabel,this.filterable&&(this.query=this.selectedLabel)),this.filterable&&(this.currentPlaceholder=this.cachedPlaceHolder))),this.$emit("visible-change",n)},options:function(){var n=this;if(!this.$isServer){this.$nextTick((function(){n.broadcast("ElSelectDropdown","updatePopper")})),this.multiple&&this.resetInputHeight();var e=this.$el.querySelectorAll("input");-1===[].indexOf.call(e,document.activeElement)&&this.setSelected(),this.defaultFirstOption&&(this.filterable||this.remote)&&this.filteredOptionsCount&&this.checkDefaultFirstOption()}}},methods:{handleNavigate:function(n){this.isOnComposition||this.navigateOptions(n)},handleComposition:function(n){var e=this,t=n.target.value;if("compositionend"===n.type)this.isOnComposition=!1,this.$nextTick((function(n){return e.handleQueryChange(t)}));else{var i=t[t.length-1]||"";this.isOnComposition=!Object(Vn.isKorean)(i)}},handleQueryChange:function(n){var e=this;this.previousQuery===n||this.isOnComposition||(null!==this.previousQuery||"function"!=typeof this.filterMethod&&"function"!=typeof this.remoteMethod?(this.previousQuery=n,this.$nextTick((function(){e.visible&&e.broadcast("ElSelectDropdown","updatePopper")})),this.hoverIndex=-1,this.multiple&&this.filterable&&this.$nextTick((function(){var n=15*e.$refs.input.value.length+20;e.inputLength=e.collapseTags?Math.min(50,n):n,e.managePlaceholder(),e.resetInputHeight()})),this.remote&&"function"==typeof this.remoteMethod?(this.hoverIndex=-1,this.remoteMethod(n)):"function"==typeof this.filterMethod?(this.filterMethod(n),this.broadcast("ElOptionGroup","queryChange")):(this.filteredOptionsCount=this.optionsCount,this.broadcast("ElOption","queryChange",n),this.broadcast("ElOptionGroup","queryChange")),this.defaultFirstOption&&(this.filterable||this.remote)&&this.filteredOptionsCount&&this.checkDefaultFirstOption()):this.previousQuery=n)},scrollToOption:function(n){var e=Array.isArray(n)&&n[0]?n[0].$el:n.$el;if(this.$refs.popper&&e){var t=this.$refs.popper.$el.querySelector(".el-select-dropdown__wrap");Ne()(t,e)}this.$refs.scrollbar&&this.$refs.scrollbar.handleScroll()},handleMenuEnter:function(){var n=this;this.$nextTick((function(){return n.scrollToOption(n.selected)}))},emitChange:function(n){Object(g.valueEquals)(this.value,n)||this.$emit("change",n)},getOption:function(n){for(var e=void 0,t="[object object]"===Object.prototype.toString.call(n).toLowerCase(),i="[object null]"===Object.prototype.toString.call(n).toLowerCase(),a="[object undefined]"===Object.prototype.toString.call(n).toLowerCase(),r=this.cachedOptions.length-1;r>=0;r--){var o=this.cachedOptions[r];if(t?Object(g.getValueByPath)(o.value,this.valueKey)===Object(g.getValueByPath)(n,this.valueKey):o.value===n){e=o;break}}if(e)return e;var s={value:n,currentLabel:t||i||a?"":String(n)};return this.multiple&&(s.hitState=!1),s},setSelected:function(){var n=this;if(!this.multiple){var e=this.getOption(this.value);return e.created?(this.createdLabel=e.currentLabel,this.createdSelected=!0):this.createdSelected=!1,this.selectedLabel=e.currentLabel,this.selected=e,void(this.filterable&&(this.query=this.selectedLabel))}var t=[];Array.isArray(this.value)&&this.value.forEach((function(e){t.push(n.getOption(e))})),this.selected=t,this.$nextTick((function(){n.resetInputHeight()}))},handleFocus:function(n){this.softFocus?this.softFocus=!1:((this.automaticDropdown||this.filterable)&&(this.filterable&&!this.visible&&(this.menuVisibleOnFocus=!0),this.visible=!0),this.$emit("focus",n))},blur:function(){this.visible=!1,this.$refs.reference.blur()},handleBlur:function(n){var e=this;setTimeout((function(){e.isSilentBlur?e.isSilentBlur=!1:e.$emit("blur",n)}),50),this.softFocus=!1},handleClearClick:function(n){this.deleteSelected(n)},doDestroy:function(){this.$refs.popper&&this.$refs.popper.doDestroy()},handleClose:function(){this.visible=!1},toggleLastOptionHitState:function(n){if(Array.isArray(this.selected)){var e=this.selected[this.selected.length-1];if(e)return!0===n||!1===n?(e.hitState=n,n):(e.hitState=!e.hitState,e.hitState)}},deletePrevTag:function(n){if(n.target.value.length<=0&&!this.toggleLastOptionHitState()){var e=this.value.slice();e.pop(),this.$emit("input",e),this.emitChange(e)}},managePlaceholder:function(){""!==this.currentPlaceholder&&(this.currentPlaceholder=this.$refs.input.value?"":this.cachedPlaceHolder)},resetInputState:function(n){8!==n.keyCode&&this.toggleLastOptionHitState(!1),this.inputLength=15*this.$refs.input.value.length+20,this.resetInputHeight()},resetInputHeight:function(){var n=this;this.collapseTags&&!this.filterable||this.$nextTick((function(){if(n.$refs.reference){var e=n.$refs.reference.$el.childNodes,t=[].filter.call(e,(function(n){return"INPUT"===n.tagName}))[0],i=n.$refs.tags,a=i?Math.round(i.getBoundingClientRect().height):0,r=n.initialInputHeight||40;t.style.height=0===n.selected.length?r+"px":Math.max(i?a+(a>r?6:0):0,r)+"px",n.visible&&!1!==n.emptyText&&n.broadcast("ElSelectDropdown","updatePopper")}}))},resetHoverIndex:function(){var n=this;setTimeout((function(){n.multiple?n.selected.length>0?n.hoverIndex=Math.min.apply(null,n.selected.map((function(e){return n.options.indexOf(e)}))):n.hoverIndex=-1:n.hoverIndex=n.options.indexOf(n.selected)}),300)},handleOptionSelect:function(n,e){var t=this;if(this.multiple){var i=(this.value||[]).slice(),a=this.getValueIndex(i,n.value);a>-1?i.splice(a,1):(this.multipleLimit<=0||i.length<this.multipleLimit)&&i.push(n.value),this.$emit("input",i),this.emitChange(i),n.created&&(this.query="",this.handleQueryChange(""),this.inputLength=20),this.filterable&&this.$refs.input.focus()}else this.$emit("input",n.value),this.emitChange(n.value),this.visible=!1;this.isSilentBlur=e,this.setSoftFocus(),this.visible||this.$nextTick((function(){t.scrollToOption(n)}))},setSoftFocus:function(){this.softFocus=!0;var n=this.$refs.input||this.$refs.reference;n&&n.focus()},getValueIndex:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments[1],t="[object object]"===Object.prototype.toString.call(e).toLowerCase();if(t){var i=this.valueKey,a=-1;return n.some((function(n,t){return Object(g.getValueByPath)(n,i)===Object(g.getValueByPath)(e,i)&&(a=t,!0)})),a}return n.indexOf(e)},toggleMenu:function(){this.selectDisabled||(this.menuVisibleOnFocus?this.menuVisibleOnFocus=!1:this.visible=!this.visible,this.visible&&(this.$refs.input||this.$refs.reference).focus())},selectOption:function(){this.visible?this.options[this.hoverIndex]&&this.handleOptionSelect(this.options[this.hoverIndex]):this.toggleMenu()},deleteSelected:function(n){n.stopPropagation();var e=this.multiple?[]:"";this.$emit("input",e),this.emitChange(e),this.visible=!1,this.$emit("clear")},deleteTag:function(n,e){var t=this.selected.indexOf(e);if(t>-1&&!this.selectDisabled){var i=this.value.slice();i.splice(t,1),this.$emit("input",i),this.emitChange(i),this.$emit("remove-tag",e.value)}n.stopPropagation()},onInputChange:function(){this.filterable&&this.query!==this.selectedLabel&&(this.query=this.selectedLabel,this.handleQueryChange(this.query))},onOptionDestroy:function(n){n>-1&&(this.optionsCount--,this.filteredOptionsCount--,this.options.splice(n,1))},resetInputWidth:function(){this.inputWidth=this.$refs.reference.$el.getBoundingClientRect().width},handleResize:function(){this.resetInputWidth(),this.multiple&&this.resetInputHeight()},checkDefaultFirstOption:function(){this.hoverIndex=-1;for(var n=!1,e=this.options.length-1;e>=0;e--)if(this.options[e].created){n=!0,this.hoverIndex=e;break}if(!n)for(var t=0;t!==this.options.length;++t){var i=this.options[t];if(this.query){if(!i.disabled&&!i.groupDisabled&&i.visible){this.hoverIndex=t;break}}else if(i.itemSelected){this.hoverIndex=t;break}}},getValueKey:function(n){return"[object object]"!==Object.prototype.toString.call(n.value).toLowerCase()?n.value:Object(g.getValueByPath)(n.value,this.valueKey)}},created:function(){var n=this;this.cachedPlaceHolder=this.currentPlaceholder=this.propPlaceholder,this.multiple&&!Array.isArray(this.value)&&this.$emit("input",[]),!this.multiple&&Array.isArray(this.value)&&this.$emit("input",""),this.debouncedOnInputChange=M()(this.debounce,(function(){n.onInputChange()})),this.debouncedQueryChange=M()(this.debounce,(function(e){n.handleQueryChange(e.target.value)})),this.$on("handleOptionClick",this.handleOptionSelect),this.$on("setSelected",this.setSelected)},mounted:function(){var n=this;this.multiple&&Array.isArray(this.value)&&this.value.length>0&&(this.currentPlaceholder=""),Object(Le.addResizeListener)(this.$el,this.handleResize);var e=this.$refs.reference;if(e&&e.$el){var t=e.$el.querySelector("input");this.initialInputHeight=t.getBoundingClientRect().height||{medium:36,small:32,mini:28}[this.selectSize]}this.remote&&this.multiple&&this.resetInputHeight(),this.$nextTick((function(){e&&e.$el&&(n.inputWidth=e.$el.getBoundingClientRect().width)})),this.setSelected()},beforeDestroy:function(){this.$el&&this.handleResize&&Object(Le.removeResizeListener)(this.$el,this.handleResize)}},Ee,[],!1,null,null,null);qe.options.__file="packages/select/src/select.vue";var Be=qe.exports;Be.install=function(n){n.component(Be.name,Be)};var Fe=Be;ze.install=function(n){n.component(ze.name,ze)};var Ve=ze,Ge=function(){var n=this.$createElement,e=this._self._c||n;return e("ul",{directives:[{name:"show",rawName:"v-show",value:this.visible,expression:"visible"}],staticClass:"el-select-group__wrap"},[e("li",{staticClass:"el-select-group__title"},[this._v(this._s(this.label))]),e("li",[e("ul",{staticClass:"el-select-group"},[this._t("default")],2)])])};Ge._withStripped=!0;var He=a({mixins:[w.a],name:"ElOptionGroup",componentName:"ElOptionGroup",props:{label:String,disabled:{type:Boolean,default:!1}},data:function(){return{visible:!0}},watch:{disabled:function(n){this.broadcast("ElOption","handleGroupDisabled",n)}},methods:{queryChange:function(){this.visible=this.$children&&Array.isArray(this.$children)&&this.$children.some((function(n){return!0===n.visible}))}},created:function(){this.$on("queryChange",this.queryChange)},mounted:function(){this.disabled&&this.broadcast("ElOption","handleGroupDisabled",this.disabled)}},Ge,[],!1,null,null,null);He.options.__file="packages/select/src/option-group.vue";var We=He.exports;We.install=function(n){n.component(We.name,We)};var Qe=We,Ke=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("button",{staticClass:"el-button",class:[n.type?"el-button--"+n.type:"",n.buttonSize?"el-button--"+n.buttonSize:"",{"is-disabled":n.buttonDisabled,"is-loading":n.loading,"is-plain":n.plain,"is-round":n.round,"is-circle":n.circle}],attrs:{disabled:n.buttonDisabled||n.loading,autofocus:n.autofocus,type:n.nativeType},on:{click:n.handleClick}},[n.loading?t("i",{staticClass:"el-icon-loading"}):n._e(),n.icon&&!n.loading?t("i",{class:n.icon}):n._e(),n.$slots.default?t("span",[n._t("default")],2):n._e()])};Ke._withStripped=!0;var Ye=a({name:"ElButton",inject:{elForm:{default:""},elFormItem:{default:""}},props:{type:{type:String,default:"default"},size:String,icon:{type:String,default:""},nativeType:{type:String,default:"button"},loading:Boolean,disabled:Boolean,plain:Boolean,autofocus:Boolean,round:Boolean,circle:Boolean},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},buttonSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},buttonDisabled:function(){return this.$options.propsData.hasOwnProperty("disabled")?this.disabled:(this.elForm||{}).disabled}},methods:{handleClick:function(n){this.$emit("click",n)}}},Ke,[],!1,null,null,null);Ye.options.__file="packages/button/src/button.vue";var Xe=Ye.exports;Xe.install=function(n){n.component(Xe.name,Xe)};var Je=Xe,Ze=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-button-group"},[this._t("default")],2)};Ze._withStripped=!0;var nt=a({name:"ElButtonGroup"},Ze,[],!1,null,null,null);nt.options.__file="packages/button/src/button-group.vue";var et=nt.exports;et.install=function(n){n.component(et.name,et)};var tt=et,it=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-table",class:[{"el-table--fit":n.fit,"el-table--striped":n.stripe,"el-table--border":n.border||n.isGroup,"el-table--hidden":n.isHidden,"el-table--group":n.isGroup,"el-table--fluid-height":n.maxHeight,"el-table--scrollable-x":n.layout.scrollX,"el-table--scrollable-y":n.layout.scrollY,"el-table--enable-row-hover":!n.store.states.isComplex,"el-table--enable-row-transition":0!==(n.store.states.data||[]).length&&(n.store.states.data||[]).length<100},n.tableSize?"el-table--"+n.tableSize:""],on:{mouseleave:function(e){n.handleMouseLeave(e)}}},[t("div",{ref:"hiddenColumns",staticClass:"hidden-columns"},[n._t("default")],2),n.showHeader?t("div",{directives:[{name:"mousewheel",rawName:"v-mousewheel",value:n.handleHeaderFooterMousewheel,expression:"handleHeaderFooterMousewheel"}],ref:"headerWrapper",staticClass:"el-table__header-wrapper"},[t("table-header",{ref:"tableHeader",style:{width:n.layout.bodyWidth?n.layout.bodyWidth+"px":""},attrs:{store:n.store,border:n.border,"default-sort":n.defaultSort}})],1):n._e(),t("div",{ref:"bodyWrapper",staticClass:"el-table__body-wrapper",class:[n.layout.scrollX?"is-scrolling-"+n.scrollPosition:"is-scrolling-none"],style:[n.bodyHeight]},[t("table-body",{style:{width:n.bodyWidth},attrs:{context:n.context,store:n.store,stripe:n.stripe,"row-class-name":n.rowClassName,"row-style":n.rowStyle,highlight:n.highlightCurrentRow}}),n.data&&0!==n.data.length?n._e():t("div",{ref:"emptyBlock",staticClass:"el-table__empty-block",style:n.emptyBlockStyle},[t("span",{staticClass:"el-table__empty-text"},[n._t("empty",[n._v(n._s(n.emptyText||n.t("el.table.emptyText")))])],2)]),n.$slots.append?t("div",{ref:"appendWrapper",staticClass:"el-table__append-wrapper"},[n._t("append")],2):n._e()],1),n.showSummary?t("div",{directives:[{name:"show",rawName:"v-show",value:n.data&&n.data.length>0,expression:"data && data.length > 0"},{name:"mousewheel",rawName:"v-mousewheel",value:n.handleHeaderFooterMousewheel,expression:"handleHeaderFooterMousewheel"}],ref:"footerWrapper",staticClass:"el-table__footer-wrapper"},[t("table-footer",{style:{width:n.layout.bodyWidth?n.layout.bodyWidth+"px":""},attrs:{store:n.store,border:n.border,"sum-text":n.sumText||n.t("el.table.sumText"),"summary-method":n.summaryMethod,"default-sort":n.defaultSort}})],1):n._e(),n.fixedColumns.length>0?t("div",{directives:[{name:"mousewheel",rawName:"v-mousewheel",value:n.handleFixedMousewheel,expression:"handleFixedMousewheel"}],ref:"fixedWrapper",staticClass:"el-table__fixed",style:[{width:n.layout.fixedWidth?n.layout.fixedWidth+"px":""},n.fixedHeight]},[n.showHeader?t("div",{ref:"fixedHeaderWrapper",staticClass:"el-table__fixed-header-wrapper"},[t("table-header",{ref:"fixedTableHeader",style:{width:n.bodyWidth},attrs:{fixed:"left",border:n.border,store:n.store}})],1):n._e(),t("div",{ref:"fixedBodyWrapper",staticClass:"el-table__fixed-body-wrapper",style:[{top:n.layout.headerHeight+"px"},n.fixedBodyHeight]},[t("table-body",{style:{width:n.bodyWidth},attrs:{fixed:"left",store:n.store,stripe:n.stripe,highlight:n.highlightCurrentRow,"row-class-name":n.rowClassName,"row-style":n.rowStyle}}),n.$slots.append?t("div",{staticClass:"el-table__append-gutter",style:{height:n.layout.appendHeight+"px"}}):n._e()],1),n.showSummary?t("div",{directives:[{name:"show",rawName:"v-show",value:n.data&&n.data.length>0,expression:"data && data.length > 0"}],ref:"fixedFooterWrapper",staticClass:"el-table__fixed-footer-wrapper"},[t("table-footer",{style:{width:n.bodyWidth},attrs:{fixed:"left",border:n.border,"sum-text":n.sumText||n.t("el.table.sumText"),"summary-method":n.summaryMethod,store:n.store}})],1):n._e()]):n._e(),n.rightFixedColumns.length>0?t("div",{directives:[{name:"mousewheel",rawName:"v-mousewheel",value:n.handleFixedMousewheel,expression:"handleFixedMousewheel"}],ref:"rightFixedWrapper",staticClass:"el-table__fixed-right",style:[{width:n.layout.rightFixedWidth?n.layout.rightFixedWidth+"px":"",right:n.layout.scrollY?(n.border?n.layout.gutterWidth:n.layout.gutterWidth||0)+"px":""},n.fixedHeight]},[n.showHeader?t("div",{ref:"rightFixedHeaderWrapper",staticClass:"el-table__fixed-header-wrapper"},[t("table-header",{ref:"rightFixedTableHeader",style:{width:n.bodyWidth},attrs:{fixed:"right",border:n.border,store:n.store}})],1):n._e(),t("div",{ref:"rightFixedBodyWrapper",staticClass:"el-table__fixed-body-wrapper",style:[{top:n.layout.headerHeight+"px"},n.fixedBodyHeight]},[t("table-body",{style:{width:n.bodyWidth},attrs:{fixed:"right",store:n.store,stripe:n.stripe,"row-class-name":n.rowClassName,"row-style":n.rowStyle,highlight:n.highlightCurrentRow}}),n.$slots.append?t("div",{staticClass:"el-table__append-gutter",style:{height:n.layout.appendHeight+"px"}}):n._e()],1),n.showSummary?t("div",{directives:[{name:"show",rawName:"v-show",value:n.data&&n.data.length>0,expression:"data && data.length > 0"}],ref:"rightFixedFooterWrapper",staticClass:"el-table__fixed-footer-wrapper"},[t("table-footer",{style:{width:n.bodyWidth},attrs:{fixed:"right",border:n.border,"sum-text":n.sumText||n.t("el.table.sumText"),"summary-method":n.summaryMethod,store:n.store}})],1):n._e()]):n._e(),n.rightFixedColumns.length>0?t("div",{ref:"rightFixedPatch",staticClass:"el-table__fixed-right-patch",style:{width:n.layout.scrollY?n.layout.gutterWidth+"px":"0",height:n.layout.headerHeight+"px"}}):n._e(),t("div",{directives:[{name:"show",rawName:"v-show",value:n.resizeProxyVisible,expression:"resizeProxyVisible"}],ref:"resizeProxy",staticClass:"el-table__column-resize-proxy"})])};it._withStripped=!0;var at=t(14),rt=t.n(at),ot=t(36),st=t(39),lt=t.n(st),dt="undefined"!=typeof navigator&&navigator.userAgent.toLowerCase().indexOf("firefox")>-1,ct={bind:function(n,e){var t,i;t=n,i=e.value,t&&t.addEventListener&&t.addEventListener(dt?"DOMMouseScroll":"mousewheel",(function(n){var e=lt()(n);i&&i.apply(this,[n,e])}))}},ut=t(6),pt=t.n(ut),ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},mt=function(n){for(var e=n.target;e&&"HTML"!==e.tagName.toUpperCase();){if("TD"===e.tagName.toUpperCase())return e;e=e.parentNode}return null},gt=function(n){return null!==n&&"object"===(void 0===n?"undefined":ht(n))},ft=function(n,e,t,i,a){if(!e&&!i&&(!a||Array.isArray(a)&&!a.length))return n;t="string"==typeof t?"descending"===t?-1:1:t&&t<0?-1:1;var r=i?null:function(t,i){return a?(Array.isArray(a)||(a=[a]),a.map((function(e){return"string"==typeof e?Object(g.getValueByPath)(t,e):e(t,i,n)}))):("$key"!==e&&gt(t)&&"$value"in t&&(t=t.$value),[gt(t)?Object(g.getValueByPath)(t,e):t])};return n.map((function(n,e){return{value:n,index:e,key:r?r(n,e):null}})).sort((function(n,e){var a=function(n,e){if(i)return i(n.value,e.value);for(var t=0,a=n.key.length;t<a;t++){if(n.key[t]<e.key[t])return-1;if(n.key[t]>e.key[t])return 1}return 0}(n,e);return a||(a=n.index-e.index),a*t})).map((function(n){return n.value}))},vt=function(n,e){var t=null;return n.columns.forEach((function(n){n.id===e&&(t=n)})),t},bt=function(n,e){var t=(e.className||"").match(/el-table_[^\s]+/gm);return t?vt(n,t[0]):null},_t=function(n,e){if(!n)throw new Error("row is required when get row identity");if("string"==typeof e){if(e.indexOf(".")<0)return n[e];for(var t=e.split("."),i=n,a=0;a<t.length;a++)i=i[t[a]];return i}if("function"==typeof e)return e.call(null,n)},yt=function(n,e){var t={};return(n||[]).forEach((function(n,i){t[_t(n,e)]={row:n,index:i}})),t};function xt(n,e){return Object.prototype.hasOwnProperty.call(n,e)}function kt(n){return void 0!==n&&(n=parseInt(n,10),isNaN(n)&&(n=null)),n}function Tt(n){return"number"==typeof n?n:"string"==typeof n?/^\d+(?:px)?$/.test(n)?parseInt(n,10):n:null}function wt(n,e,t){var i=!1,a=n.indexOf(e),r=-1!==a,o=function(){n.push(e),i=!0},s=function(){n.splice(a,1),i=!0};return"boolean"==typeof t?t&&!r?o():!t&&r&&s():r?s():o(),i}var It=function(n,e){var t=Object.getOwnPropertyNames(n),i=Object.getOwnPropertyNames(e);if(t.length!==i.length)return!1;for(var a=0;a<t.length;a++){var r=t[a];if(n[r]!==e[r])return!1}return!0},Ct={data:function(){return{states:{defaultExpandAll:!1,expandRows:[]}}},methods:{updateExpandRows:function(){var n=this.states,e=n.data,t=void 0===e?[]:e,i=n.rowKey,a=n.defaultExpandAll,r=n.expandRows;if(a)this.states.expandRows=t.slice();else if(i){var o=yt(r,i);this.states.expandRows=t.reduce((function(n,e){var t=_t(e,i);return o[t]&&n.push(e),n}),[])}else this.states.expandRows=[]},toggleRowExpansion:function(n,e){wt(this.states.expandRows,n,e)&&(this.table.$emit("expand-change",n,this.states.expandRows.slice()),this.scheduleLayout())},setExpandRowKeys:function(n){this.assertRowKey();var e=this.states,t=e.data,i=e.rowKey,a=yt(t,i);this.states.expandRows=n.reduce((function(n,e){var t=a[e];return t&&n.push(t.row),n}),[])},isRowExpanded:function(n){var e=this.states,t=e.expandRows,i=void 0===t?[]:t,a=e.rowKey;return a?!!yt(i,a)[_t(n,a)]:-1!==i.indexOf(n)}}},Dt={data:function(){return{states:{_currentRowKey:null,currentRow:null}}},methods:{setCurrentRowKey:function(n){this.assertRowKey(),this.states._currentRowKey=n,this.setCurrentRowByKey(n)},restoreCurrentRowKey:function(){this.states._currentRowKey=null},setCurrentRowByKey:function(n){var e=this.states,t=e.data,i=void 0===t?[]:t,a=e.rowKey,r=null;a&&(r=Object(g.arrayFind)(i,(function(e){return _t(e,a)===n}))),e.currentRow=r},updateCurrentRow:function(n){var e=this.states,t=this.table,i=e.currentRow;if(n&&n!==i)return e.currentRow=n,void t.$emit("current-change",n,i);!n&&i&&(e.currentRow=null,t.$emit("current-change",null,i))},updateCurrentRowData:function(){var n=this.states,e=this.table,t=n.rowKey,i=n._currentRowKey,a=n.data||[],r=n.currentRow;if(-1===a.indexOf(r)&&r){if(t){var o=_t(r,t);this.setCurrentRowByKey(o)}else n.currentRow=null;null===n.currentRow&&e.$emit("current-change",null,r)}else i&&(this.setCurrentRowByKey(i),this.restoreCurrentRowKey())}}},Et=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},St={data:function(){return{states:{expandRowKeys:[],treeData:{},indent:16,lazy:!1,lazyTreeNodeMap:{},lazyColumnIdentifier:"hasChildren",childrenColumnName:"children"}}},computed:{normalizedData:function(){if(!this.states.rowKey)return{};var n=this.states.data||[];return this.normalize(n)},normalizedLazyNode:function(){var n=this.states,e=n.rowKey,t=n.lazyTreeNodeMap,i=n.lazyColumnIdentifier,a=Object.keys(t),r={};return a.length?(a.forEach((function(n){if(t[n].length){var a={children:[]};t[n].forEach((function(n){var t=_t(n,e);a.children.push(t),n[i]&&!r[t]&&(r[t]={children:[]})})),r[n]=a}})),r):r}},watch:{normalizedData:"updateTreeData",normalizedLazyNode:"updateTreeData"},methods:{normalize:function(n){var e=this.states,t=e.childrenColumnName,i=e.lazyColumnIdentifier,a=e.rowKey,r=e.lazy,o={};return function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"hasChildren",a=function(n){return!(Array.isArray(n)&&n.length)};function r(n,o,s){e(n,o,s),o.forEach((function(n){if(n[i])e(n,null,s+1);else{var o=n[t];a(o)||r(n,o,s+1)}}))}n.forEach((function(n){if(n[i])e(n,null,0);else{var o=n[t];a(o)||r(n,o,0)}}))}(n,(function(n,e,t){var i=_t(n,a);Array.isArray(e)?o[i]={children:e.map((function(n){return _t(n,a)})),level:t}:r&&(o[i]={children:[],lazy:!0,level:t})}),t,i),o},updateTreeData:function(){var n=this.normalizedData,e=this.normalizedLazyNode,t=Object.keys(n),i={};if(t.length){var a=this.states,r=a.treeData,o=a.defaultExpandAll,s=a.expandRowKeys,l=a.lazy,d=[],c=function(n,e){var t=o||s&&-1!==s.indexOf(e);return!!(n&&n.expanded||t)};t.forEach((function(e){var t=r[e],a=Et({},n[e]);if(a.expanded=c(t,e),a.lazy){var o=t||{},s=o.loaded,l=void 0!==s&&s,u=o.loading,p=void 0!==u&&u;a.loaded=!!l,a.loading=!!p,d.push(e)}i[e]=a}));var u=Object.keys(e);l&&u.length&&d.length&&u.forEach((function(n){var t=r[n],a=e[n].children;if(-1!==d.indexOf(n)){if(0!==i[n].children.length)throw new Error("[ElTable]children must be an empty array.");i[n].children=a}else{var o=t||{},s=o.loaded,l=void 0!==s&&s,u=o.loading,p=void 0!==u&&u;i[n]={lazy:!0,loaded:!!l,loading:!!p,expanded:c(t,n),children:a,level:""}}}))}this.states.treeData=i,this.updateTableScrollY()},updateTreeExpandKeys:function(n){this.states.expandRowKeys=n,this.updateTreeData()},toggleTreeExpansion:function(n,e){this.assertRowKey();var t=this.states,i=t.rowKey,a=t.treeData,r=_t(n,i),o=r&&a[r];if(r&&o&&"expanded"in o){var s=o.expanded;e=void 0===e?!o.expanded:e,a[r].expanded=e,s!==e&&this.table.$emit("expand-change",n,e),this.updateTableScrollY()}},loadOrToggle:function(n){this.assertRowKey();var e=this.states,t=e.lazy,i=e.treeData,a=e.rowKey,r=_t(n,a),o=i[r];t&&o&&"loaded"in o&&!o.loaded?this.loadData(n,r,o):this.toggleTreeExpansion(n)},loadData:function(n,e,t){var i=this,a=this.table.load,r=this.states.treeData;a&&!r[e].loaded&&(r[e].loading=!0,a(n,t,(function(t){if(!Array.isArray(t))throw new Error("[ElTable] data must be an array");var a=i.states,r=a.lazyTreeNodeMap,o=a.treeData;o[e].loading=!1,o[e].loaded=!0,o[e].expanded=!0,t.length&&i.$set(r,e,t),i.table.$emit("expand-change",n,!0)})))}}},Mt=function n(e){var t=[];return e.forEach((function(e){e.children?t.push.apply(t,n(e.children)):t.push(e)})),t},At=pt.a.extend({data:function(){return{states:{rowKey:null,data:[],isComplex:!1,_columns:[],originColumns:[],columns:[],fixedColumns:[],rightFixedColumns:[],leafColumns:[],fixedLeafColumns:[],rightFixedLeafColumns:[],leafColumnsLength:0,fixedLeafColumnsLength:0,rightFixedLeafColumnsLength:0,isAllSelected:!1,selection:[],reserveSelection:!1,selectOnIndeterminate:!1,selectable:null,filters:{},filteredData:null,sortingColumn:null,sortProp:null,sortOrder:null,hoverRow:null}}},mixins:[Ct,Dt,St],methods:{assertRowKey:function(){if(!this.states.rowKey)throw new Error("[ElTable] prop row-key is required")},updateColumns:function(){var n=this.states,e=n._columns||[];n.fixedColumns=e.filter((function(n){return!0===n.fixed||"left"===n.fixed})),n.rightFixedColumns=e.filter((function(n){return"right"===n.fixed})),n.fixedColumns.length>0&&e[0]&&"selection"===e[0].type&&!e[0].fixed&&(e[0].fixed=!0,n.fixedColumns.unshift(e[0]));var t=e.filter((function(n){return!n.fixed}));n.originColumns=[].concat(n.fixedColumns).concat(t).concat(n.rightFixedColumns);var i=Mt(t),a=Mt(n.fixedColumns),r=Mt(n.rightFixedColumns);n.leafColumnsLength=i.length,n.fixedLeafColumnsLength=a.length,n.rightFixedLeafColumnsLength=r.length,n.columns=[].concat(a).concat(i).concat(r),n.isComplex=n.fixedColumns.length>0||n.rightFixedColumns.length>0},scheduleLayout:function(n){n&&this.updateColumns(),this.table.debouncedUpdateLayout()},isSelected:function(n){var e=this.states.selection;return(void 0===e?[]:e).indexOf(n)>-1},clearSelection:function(){var n=this.states;n.isAllSelected=!1,n.selection.length&&(n.selection=[],this.table.$emit("selection-change",[]))},cleanSelection:function(){var n=this.states,e=n.data,t=n.rowKey,i=n.selection,a=void 0;if(t){a=[];var r=yt(i,t),o=yt(e,t);for(var s in r)r.hasOwnProperty(s)&&!o[s]&&a.push(r[s].row)}else a=i.filter((function(n){return-1===e.indexOf(n)}));if(a.length){var l=i.filter((function(n){return-1===a.indexOf(n)}));n.selection=l,this.table.$emit("selection-change",l.slice())}},toggleRowSelection:function(n,e){var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=wt(this.states.selection,n,e);if(i){var a=(this.states.selection||[]).slice();t&&this.table.$emit("select",a,n),this.table.$emit("selection-change",a)}},_toggleAllSelection:function(){var n=this.states,e=n.data,t=void 0===e?[]:e,i=n.selection,a=n.selectOnIndeterminate?!n.isAllSelected:!(n.isAllSelected||i.length);n.isAllSelected=a;var r=!1;t.forEach((function(e,t){n.selectable?n.selectable.call(null,e,t)&&wt(i,e,a)&&(r=!0):wt(i,e,a)&&(r=!0)})),r&&this.table.$emit("selection-change",i?i.slice():[]),this.table.$emit("select-all",i)},updateSelectionByRowKey:function(){var n=this.states,e=n.selection,t=n.rowKey,i=n.data,a=yt(e,t);i.forEach((function(n){var i=_t(n,t),r=a[i];r&&(e[r.index]=n)}))},updateAllSelected:function(){var n=this.states,e=n.selection,t=n.rowKey,i=n.selectable,a=n.data||[];if(0!==a.length){var r=void 0;t&&(r=yt(e,t));for(var o,s=!0,l=0,d=0,c=a.length;d<c;d++){var u=a[d],p=i&&i.call(null,u,d);if(o=u,r?r[_t(o,t)]:-1!==e.indexOf(o))l++;else if(!i||p){s=!1;break}}0===l&&(s=!1),n.isAllSelected=s}else n.isAllSelected=!1},updateFilters:function(n,e){Array.isArray(n)||(n=[n]);var t=this.states,i={};return n.forEach((function(n){t.filters[n.id]=e,i[n.columnKey||n.id]=e})),i},updateSort:function(n,e,t){this.states.sortingColumn&&this.states.sortingColumn!==n&&(this.states.sortingColumn.order=null),this.states.sortingColumn=n,this.states.sortProp=e,this.states.sortOrder=t},execFilter:function(){var n=this,e=this.states,t=e._data,i=e.filters,a=t;Object.keys(i).forEach((function(t){var i=e.filters[t];if(i&&0!==i.length){var r=vt(n.states,t);r&&r.filterMethod&&(a=a.filter((function(n){return i.some((function(e){return r.filterMethod.call(null,e,n,r)}))})))}})),e.filteredData=a},execSort:function(){var n=this.states;n.data=function(n,e){var t=e.sortingColumn;return t&&"string"!=typeof t.sortable?ft(n,e.sortProp,e.sortOrder,t.sortMethod,t.sortBy):n}(n.filteredData,n)},execQuery:function(n){n&&n.filter||this.execFilter(),this.execSort()},clearFilter:function(n){var e=this.states,t=this.table.$refs,i=t.tableHeader,a=t.fixedTableHeader,r=t.rightFixedTableHeader,o={};i&&(o=Fn()(o,i.filterPanels)),a&&(o=Fn()(o,a.filterPanels)),r&&(o=Fn()(o,r.filterPanels));var s=Object.keys(o);if(s.length)if("string"==typeof n&&(n=[n]),Array.isArray(n)){var l=n.map((function(n){return function(n,e){for(var t=null,i=0;i<n.columns.length;i++){var a=n.columns[i];if(a.columnKey===e){t=a;break}}return t}(e,n)}));s.forEach((function(n){l.find((function(e){return e.id===n}))&&(o[n].filteredValue=[])})),this.commit("filterChange",{column:l,values:[],silent:!0,multi:!0})}else s.forEach((function(n){o[n].filteredValue=[]})),e.filters={},this.commit("filterChange",{column:{},values:[],silent:!0})},clearSort:function(){this.states.sortingColumn&&(this.updateSort(null,null,null),this.commit("changeSortCondition",{silent:!0}))},setExpandRowKeysAdapter:function(n){this.setExpandRowKeys(n),this.updateTreeExpandKeys(n)},toggleRowExpansionAdapter:function(n,e){this.states.columns.some((function(n){return"expand"===n.type}))?this.toggleRowExpansion(n,e):this.toggleTreeExpansion(n,e)}}});At.prototype.mutations={setData:function(n,e){var t=n._data!==e;n._data=e,this.execQuery(),this.updateCurrentRowData(),this.updateExpandRows(),n.reserveSelection?(this.assertRowKey(),this.updateSelectionByRowKey()):t?this.clearSelection():this.cleanSelection(),this.updateAllSelected(),this.updateTableScrollY()},insertColumn:function(n,e,t,i){var a=n._columns;i&&((a=i.children)||(a=i.children=[])),void 0!==t?a.splice(t,0,e):a.push(e),"selection"===e.type&&(n.selectable=e.selectable,n.reserveSelection=e.reserveSelection),this.table.$ready&&(this.updateColumns(),this.scheduleLayout())},removeColumn:function(n,e,t){var i=n._columns;t&&((i=t.children)||(i=t.children=[])),i&&i.splice(i.indexOf(e),1),this.table.$ready&&(this.updateColumns(),this.scheduleLayout())},sort:function(n,e){var t=e.prop,i=e.order,a=e.init;if(t){var r=Object(g.arrayFind)(n.columns,(function(n){return n.property===t}));r&&(r.order=i,this.updateSort(r,t,i),this.commit("changeSortCondition",{init:a}))}},changeSortCondition:function(n,e){var t=n.sortingColumn,i=n.sortProp,a=n.sortOrder;null===a&&(n.sortingColumn=null,n.sortProp=null);this.execQuery({filter:!0}),e&&(e.silent||e.init)||this.table.$emit("sort-change",{column:t,prop:i,order:a}),this.updateTableScrollY()},filterChange:function(n,e){var t=e.column,i=e.values,a=e.silent,r=this.updateFilters(t,i);this.execQuery(),a||this.table.$emit("filter-change",r),this.updateTableScrollY()},toggleAllSelection:function(){this.toggleAllSelection()},rowSelectedChanged:function(n,e){this.toggleRowSelection(e),this.updateAllSelected()},setHoverRow:function(n,e){n.hoverRow=e},setCurrentRow:function(n,e){this.updateCurrentRow(e)}},At.prototype.commit=function(n){var e=this.mutations;if(!e[n])throw new Error("Action not found: "+n);for(var t=arguments.length,i=Array(t>1?t-1:0),a=1;a<t;a++)i[a-1]=arguments[a];e[n].apply(this,[this.states].concat(i))},At.prototype.updateTableScrollY=function(){pt.a.nextTick(this.table.updateScrollY)};var Ot=At;function Pt(n){var e={};return Object.keys(n).forEach((function(t){var i=n[t],a=void 0;"string"==typeof i?a=function(){return this.store.states[i]}:"function"==typeof i?a=function(){return i.call(this,this.store.states)}:console.error("invalid value type"),a&&(e[t]=a)})),e}var jt=t(31),zt=t.n(jt);var Rt=function(){function n(e){for(var t in function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.observers=[],this.table=null,this.store=null,this.columns=null,this.fit=!0,this.showHeader=!0,this.height=null,this.scrollX=!1,this.scrollY=!1,this.bodyWidth=null,this.fixedWidth=null,this.rightFixedWidth=null,this.tableHeight=null,this.headerHeight=44,this.appendHeight=0,this.footerHeight=44,this.viewportHeight=null,this.bodyHeight=null,this.fixedBodyHeight=null,this.gutterWidth=zt()(),e)e.hasOwnProperty(t)&&(this[t]=e[t]);if(!this.table)throw new Error("table is required for Table Layout");if(!this.store)throw new Error("store is required for Table Layout")}return n.prototype.updateScrollY=function(){if(null===this.height)return!1;var n=this.table.bodyWrapper;if(this.table.$el&&n){var e=n.querySelector(".el-table__body"),t=this.scrollY,i=e.offsetHeight>this.bodyHeight;return this.scrollY=i,t!==i}return!1},n.prototype.setHeight=function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"height";if(!pt.a.prototype.$isServer){var i=this.table.$el;if(n=Tt(n),this.height=n,!i&&(n||0===n))return pt.a.nextTick((function(){return e.setHeight(n,t)}));"number"==typeof n?(i.style[t]=n+"px",this.updateElsHeight()):"string"==typeof n&&(i.style[t]=n,this.updateElsHeight())}},n.prototype.setMaxHeight=function(n){this.setHeight(n,"max-height")},n.prototype.getFlattenColumns=function(){var n=[];return this.table.columns.forEach((function(e){e.isColumnGroup?n.push.apply(n,e.columns):n.push(e)})),n},n.prototype.updateElsHeight=function(){var n=this;if(!this.table.$ready)return pt.a.nextTick((function(){return n.updateElsHeight()}));var e=this.table.$refs,t=e.headerWrapper,i=e.appendWrapper,a=e.footerWrapper;if(this.appendHeight=i?i.offsetHeight:0,!this.showHeader||t){var r=t?t.querySelector(".el-table__header tr"):null,o=this.headerDisplayNone(r),s=this.headerHeight=this.showHeader?t.offsetHeight:0;if(this.showHeader&&!o&&t.offsetWidth>0&&(this.table.columns||[]).length>0&&s<2)return pt.a.nextTick((function(){return n.updateElsHeight()}));var l=this.tableHeight=this.table.$el.clientHeight,d=this.footerHeight=a?a.offsetHeight:0;null!==this.height&&(this.bodyHeight=l-s-d+(a?1:0)),this.fixedBodyHeight=this.scrollX?this.bodyHeight-this.gutterWidth:this.bodyHeight;var c=!(this.store.states.data&&this.store.states.data.length);this.viewportHeight=this.scrollX?l-(c?0:this.gutterWidth):l,this.updateScrollY(),this.notifyObservers("scrollable")}},n.prototype.headerDisplayNone=function(n){if(!n)return!0;for(var e=n;"DIV"!==e.tagName;){if("none"===getComputedStyle(e).display)return!0;e=e.parentElement}return!1},n.prototype.updateColumnsWidth=function(){if(!pt.a.prototype.$isServer){var n=this.fit,e=this.table.$el.clientWidth,t=0,i=this.getFlattenColumns(),a=i.filter((function(n){return"number"!=typeof n.width}));if(i.forEach((function(n){"number"==typeof n.width&&n.realWidth&&(n.realWidth=null)})),a.length>0&&n){i.forEach((function(n){t+=n.width||n.minWidth||80}));var r=this.scrollY?this.gutterWidth:0;if(t<=e-r){this.scrollX=!1;var o=e-r-t;if(1===a.length)a[0].realWidth=(a[0].minWidth||80)+o;else{var s=o/a.reduce((function(n,e){return n+(e.minWidth||80)}),0),l=0;a.forEach((function(n,e){if(0!==e){var t=Math.floor((n.minWidth||80)*s);l+=t,n.realWidth=(n.minWidth||80)+t}})),a[0].realWidth=(a[0].minWidth||80)+o-l}}else this.scrollX=!0,a.forEach((function(n){n.realWidth=n.minWidth}));this.bodyWidth=Math.max(t,e),this.table.resizeState.width=this.bodyWidth}else i.forEach((function(n){n.width||n.minWidth?n.realWidth=n.width||n.minWidth:n.realWidth=80,t+=n.realWidth})),this.scrollX=t>e,this.bodyWidth=t;var d=this.store.states.fixedColumns;if(d.length>0){var c=0;d.forEach((function(n){c+=n.realWidth||n.width})),this.fixedWidth=c}var u=this.store.states.rightFixedColumns;if(u.length>0){var p=0;u.forEach((function(n){p+=n.realWidth||n.width})),this.rightFixedWidth=p}this.notifyObservers("columns")}},n.prototype.addObserver=function(n){this.observers.push(n)},n.prototype.removeObserver=function(n){var e=this.observers.indexOf(n);-1!==e&&this.observers.splice(e,1)},n.prototype.notifyObservers=function(n){var e=this;this.observers.forEach((function(t){switch(n){case"columns":t.onColumnsChange(e);break;case"scrollable":t.onScrollableChange(e);break;default:throw new Error("Table Layout don't have event "+n+".")}}))},n}(),$t={created:function(){this.tableLayout.addObserver(this)},destroyed:function(){this.tableLayout.removeObserver(this)},computed:{tableLayout:function(){var n=this.layout;if(!n&&this.table&&(n=this.table.layout),!n)throw new Error("Can not find table layout.");return n}},mounted:function(){this.onColumnsChange(this.tableLayout),this.onScrollableChange(this.tableLayout)},updated:function(){this.__updated__||(this.onColumnsChange(this.tableLayout),this.onScrollableChange(this.tableLayout),this.__updated__=!0)},methods:{onColumnsChange:function(n){var e=this.$el.querySelectorAll("colgroup > col");if(e.length){var t=n.getFlattenColumns(),i={};t.forEach((function(n){i[n.id]=n}));for(var a=0,r=e.length;a<r;a++){var o=e[a],s=o.getAttribute("name"),l=i[s];l&&o.setAttribute("width",l.realWidth||l.width)}}},onScrollableChange:function(n){for(var e=this.$el.querySelectorAll("colgroup > col[name=gutter]"),t=0,i=e.length;t<i;t++){e[t].setAttribute("width",n.scrollY?n.gutterWidth:"0")}for(var a=this.$el.querySelectorAll("th.gutter"),r=0,o=a.length;r<o;r++){var s=a[r];s.style.width=n.scrollY?n.gutterWidth+"px":"0",s.style.display=n.scrollY?"":"none"}}}},Lt=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},Ut={name:"ElTableRow",props:["columns","row","index","isSelected","isExpanded","store","context","firstDefaultColumnIndex","treeRowData","treeIndent","columnsHidden","getSpan","getColspanRealWidth","getCellStyle","getCellClass","handleCellMouseLeave","handleCellMouseEnter","fixed"],components:{ElCheckbox:rt.a},render:function(){var n=this,e=arguments[0],t=this.columns,i=this.row,a=this.index,r=this.store,o=this.context,s=this.firstDefaultColumnIndex,l=this.treeRowData,d=this.treeIndent,c=this.columnsHidden,u=void 0===c?[]:c,p=this.isSelected,h=this.isExpanded;return e("tr",[t.map((function(c,m){var g=n.getSpan(i,c,a,m),f=g.rowspan,v=g.colspan;if(!f||!v)return null;var b=Lt({},c);b.realWidth=n.getColspanRealWidth(t,v,m);var _={store:r,isSelected:p,isExpanded:h,_self:o,column:b,row:i,$index:a};return m===s&&l&&(_.treeNode={indent:l.level*d,level:l.level},"boolean"==typeof l.expanded&&(_.treeNode.expanded=l.expanded,"loading"in l&&(_.treeNode.loading=l.loading),"noLazyChildren"in l&&(_.treeNode.noLazyChildren=l.noLazyChildren))),e("td",{style:n.getCellStyle(a,m,i,c),class:n.getCellClass(a,m,i,c),attrs:{rowspan:f,colspan:v},on:{mouseenter:function(e){return n.handleCellMouseEnter(e,i)},mouseleave:n.handleCellMouseLeave}},[c.renderCell.call(n._renderProxy,n.$createElement,_,u[m])])}))])}},Nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},qt=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},Bt={name:"ElTableBody",mixins:[$t],components:{ElCheckbox:rt.a,ElTooltip:En.a,TableRow:Ut},props:{store:{required:!0},stripe:Boolean,context:{},rowClassName:[String,Function],rowStyle:[Object,Function],fixed:String,highlight:Boolean},render:function(n){var e=this,t=this.data||[];return n("table",{class:"el-table__body",attrs:{cellspacing:"0",cellpadding:"0",border:"0"}},[n("colgroup",[this.columns.map((function(e){return n("col",{attrs:{name:e.id},key:e.id})}))]),n("tbody",[t.reduce((function(n,t){return n.concat(e.wrappedRowRender(t,n.length))}),[]),n("el-tooltip",{attrs:{effect:this.table.tooltipEffect,placement:"top",content:this.tooltipContent},ref:"tooltip"})])])},computed:qt({table:function(){return this.$parent}},Pt({data:"data",columns:"columns",treeIndent:"indent",leftFixedLeafCount:"fixedLeafColumnsLength",rightFixedLeafCount:"rightFixedLeafColumnsLength",columnsCount:function(n){return n.columns.length},leftFixedCount:function(n){return n.fixedColumns.length},rightFixedCount:function(n){return n.rightFixedColumns.length},hasExpandColumn:function(n){return n.columns.some((function(n){return"expand"===n.type}))}}),{columnsHidden:function(){var n=this;return this.columns.map((function(e,t){return n.isColumnHidden(t)}))},firstDefaultColumnIndex:function(){return Object(g.arrayFindIndex)(this.columns,(function(n){return"default"===n.type}))}}),watch:{"store.states.hoverRow":function(n,e){var t=this;if(this.store.states.isComplex&&!this.$isServer){var i=window.requestAnimationFrame;i||(i=function(n){return setTimeout(n,16)}),i((function(){var i=t.$el.querySelectorAll(".el-table__row"),a=i[e],r=i[n];a&&Object(gn.removeClass)(a,"hover-row"),r&&Object(gn.addClass)(r,"hover-row")}))}}},data:function(){return{tooltipContent:""}},created:function(){this.activateTooltip=M()(50,(function(n){return n.handleShowPopper()}))},methods:{getKeyOfRow:function(n,e){var t=this.table.rowKey;return t?_t(n,t):e},isColumnHidden:function(n){return!0===this.fixed||"left"===this.fixed?n>=this.leftFixedLeafCount:"right"===this.fixed?n<this.columnsCount-this.rightFixedLeafCount:n<this.leftFixedLeafCount||n>=this.columnsCount-this.rightFixedLeafCount},getSpan:function(n,e,t,i){var a=1,r=1,o=this.table.spanMethod;if("function"==typeof o){var s=o({row:n,column:e,rowIndex:t,columnIndex:i});Array.isArray(s)?(a=s[0],r=s[1]):"object"===(void 0===s?"undefined":Nt(s))&&(a=s.rowspan,r=s.colspan)}return{rowspan:a,colspan:r}},getRowStyle:function(n,e){var t=this.table.rowStyle;return"function"==typeof t?t.call(null,{row:n,rowIndex:e}):t||null},getRowClass:function(n,e){var t=this.store.states.selection,i=["el-table__row"];if(this.table.highlightCurrentRow&&n===this.store.states.currentRow&&i.push("current-row"),this.table.highlightSelectionRow)for(var a=0;a<t.length;a++)It(n,t[a])&&i.push("selection-row");this.stripe&&e%2==1&&i.push("el-table__row--striped");var r=this.table.rowClassName;return"string"==typeof r?i.push(r):"function"==typeof r&&i.push(r.call(null,{row:n,rowIndex:e})),this.store.states.expandRows.indexOf(n)>-1&&i.push("expanded"),i},getCellStyle:function(n,e,t,i){var a=this.table.cellStyle;return"function"==typeof a?a.call(null,{rowIndex:n,columnIndex:e,row:t,column:i}):a},getCellClass:function(n,e,t,i){var a=[i.id,i.align,i.className];this.isColumnHidden(e)&&a.push("is-hidden");var r=this.table.cellClassName;return"string"==typeof r?a.push(r):"function"==typeof r&&a.push(r.call(null,{rowIndex:n,columnIndex:e,row:t,column:i})),a.push("el-table__cell"),a.join(" ")},getColspanRealWidth:function(n,e,t){return e<1?n[t].realWidth:n.map((function(n){return n.realWidth})).slice(t,t+e).reduce((function(n,e){return n+e}),-1)},handleCellMouseEnter:function(n,e){var t=this.table,i=mt(n);if(i){var a=bt(t,i),r=t.hoverState={cell:i,column:a,row:e};t.$emit("cell-mouse-enter",r.row,r.column,r.cell,n)}var o=n.target.querySelector(".cell");if(Object(gn.hasClass)(o,"el-tooltip")&&o.childNodes.length){var s=document.createRange();if(s.setStart(o,0),s.setEnd(o,o.childNodes.length),(s.getBoundingClientRect().width+((parseInt(Object(gn.getStyle)(o,"paddingLeft"),10)||0)+(parseInt(Object(gn.getStyle)(o,"paddingRight"),10)||0))>o.offsetWidth||o.scrollWidth>o.offsetWidth)&&this.$refs.tooltip){var l=this.$refs.tooltip;this.tooltipContent=i.innerText||i.textContent,l.referenceElm=i,l.$refs.popper&&(l.$refs.popper.style.display="none"),l.doDestroy(),l.setExpectedState(!0),this.activateTooltip(l)}}},handleCellMouseLeave:function(n){var e=this.$refs.tooltip;if(e&&(e.setExpectedState(!1),e.handleClosePopper()),mt(n)){var t=this.table.hoverState||{};this.table.$emit("cell-mouse-leave",t.row,t.column,t.cell,n)}},handleMouseEnter:M()(30,(function(n){this.store.commit("setHoverRow",n)})),handleMouseLeave:M()(30,(function(){this.store.commit("setHoverRow",null)})),handleContextMenu:function(n,e){this.handleEvent(n,e,"contextmenu")},handleDoubleClick:function(n,e){this.handleEvent(n,e,"dblclick")},handleClick:function(n,e){this.store.commit("setCurrentRow",e),this.handleEvent(n,e,"click")},handleEvent:function(n,e,t){var i=this.table,a=mt(n),r=void 0;a&&(r=bt(i,a))&&i.$emit("cell-"+t,e,r,a,n),i.$emit("row-"+t,e,r,n)},rowRender:function(n,e,t){var i=this,a=this.$createElement,r=this.treeIndent,o=this.columns,s=this.firstDefaultColumnIndex,l=this.getRowClass(n,e),d=!0;return t&&(l.push("el-table__row--level-"+t.level),d=t.display),a(Ut,{style:[d?null:{display:"none"},this.getRowStyle(n,e)],class:l,key:this.getKeyOfRow(n,e),nativeOn:{dblclick:function(e){return i.handleDoubleClick(e,n)},click:function(e){return i.handleClick(e,n)},contextmenu:function(e){return i.handleContextMenu(e,n)},mouseenter:function(n){return i.handleMouseEnter(e)},mouseleave:this.handleMouseLeave},attrs:{columns:o,row:n,index:e,store:this.store,context:this.context||this.table.$vnode.context,firstDefaultColumnIndex:s,treeRowData:t,treeIndent:r,columnsHidden:this.columnsHidden,getSpan:this.getSpan,getColspanRealWidth:this.getColspanRealWidth,getCellStyle:this.getCellStyle,getCellClass:this.getCellClass,handleCellMouseEnter:this.handleCellMouseEnter,handleCellMouseLeave:this.handleCellMouseLeave,isSelected:this.store.isSelected(n),isExpanded:this.store.states.expandRows.indexOf(n)>-1,fixed:this.fixed}})},wrappedRowRender:function(n,e){var t=this,i=this.$createElement,a=this.store,r=a.isRowExpanded,o=a.assertRowKey,s=a.states,l=s.treeData,d=s.lazyTreeNodeMap,c=s.childrenColumnName,u=s.rowKey;if(this.hasExpandColumn&&r(n)){var p=this.table.renderExpanded,h=this.rowRender(n,e);return p?[[h,i("tr",{key:"expanded-row__"+h.key},[i("td",{attrs:{colspan:this.columnsCount},class:"el-table__cell el-table__expanded-cell"},[p(this.$createElement,{row:n,$index:e,store:this.store})])])]]:(console.error("[Element Error]renderExpanded is required."),h)}if(Object.keys(l).length){o();var m=_t(n,u),g=l[m],f=null;g&&(f={expanded:g.expanded,level:g.level,display:!0},"boolean"==typeof g.lazy&&("boolean"==typeof g.loaded&&g.loaded&&(f.noLazyChildren=!(g.children&&g.children.length)),f.loading=g.loading));var v=[this.rowRender(n,e,f)];if(g){var b=0;g.display=!0,function n(i,a){i&&i.length&&a&&i.forEach((function(i){var r={display:a.display&&a.expanded,level:a.level+1},o=_t(i,u);if(null==o)throw new Error("for nested data item, row-key is required.");if((g=qt({},l[o]))&&(r.expanded=g.expanded,g.level=g.level||r.level,g.display=!(!g.expanded||!r.display),"boolean"==typeof g.lazy&&("boolean"==typeof g.loaded&&g.loaded&&(r.noLazyChildren=!(g.children&&g.children.length)),r.loading=g.loading)),b++,v.push(t.rowRender(i,e+b,r)),g){var s=d[o]||i[c];n(s,g)}}))}(d[m]||n[c],g)}return v}return this.rowRender(n,e)}}},Ft=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"}},[n.multiple?t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleOutsideClick,expression:"handleOutsideClick"},{name:"show",rawName:"v-show",value:n.showPopper,expression:"showPopper"}],staticClass:"el-table-filter"},[t("div",{staticClass:"el-table-filter__content"},[t("el-scrollbar",{attrs:{"wrap-class":"el-table-filter__wrap"}},[t("el-checkbox-group",{staticClass:"el-table-filter__checkbox-group",model:{value:n.filteredValue,callback:function(e){n.filteredValue=e},expression:"filteredValue"}},n._l(n.filters,(function(e){return t("el-checkbox",{key:e.value,attrs:{label:e.value}},[n._v(n._s(e.text))])})),1)],1)],1),t("div",{staticClass:"el-table-filter__bottom"},[t("button",{class:{"is-disabled":0===n.filteredValue.length},attrs:{disabled:0===n.filteredValue.length},on:{click:n.handleConfirm}},[n._v(n._s(n.t("el.table.confirmFilter")))]),t("button",{on:{click:n.handleReset}},[n._v(n._s(n.t("el.table.resetFilter")))])])]):t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleOutsideClick,expression:"handleOutsideClick"},{name:"show",rawName:"v-show",value:n.showPopper,expression:"showPopper"}],staticClass:"el-table-filter"},[t("ul",{staticClass:"el-table-filter__list"},[t("li",{staticClass:"el-table-filter__list-item",class:{"is-active":void 0===n.filterValue||null===n.filterValue},on:{click:function(e){n.handleSelect(null)}}},[n._v(n._s(n.t("el.table.clearFilter")))]),n._l(n.filters,(function(e){return t("li",{key:e.value,staticClass:"el-table-filter__list-item",class:{"is-active":n.isActive(e)},attrs:{label:e.value},on:{click:function(t){n.handleSelect(e.value)}}},[n._v(n._s(e.text))])}))],2)])])};Ft._withStripped=!0;var Vt=[];!pt.a.prototype.$isServer&&document.addEventListener("click",(function(n){Vt.forEach((function(e){var t=n.target;e&&e.$el&&(t===e.$el||e.$el.contains(t)||e.handleOutsideClick&&e.handleOutsideClick(n))}))}));var Gt=function(n){n&&Vt.push(n)},Ht=function(n){-1!==Vt.indexOf(n)&&Vt.splice(n,1)},Wt=t(32),Qt=t.n(Wt),Kt=a({name:"ElTableFilterPanel",mixins:[z.a,m.a],directives:{Clickoutside:O.a},components:{ElCheckbox:rt.a,ElCheckboxGroup:Qt.a,ElScrollbar:$.a},props:{placement:{type:String,default:"bottom-end"}},methods:{isActive:function(n){return n.value===this.filterValue},handleOutsideClick:function(){var n=this;setTimeout((function(){n.showPopper=!1}),16)},handleConfirm:function(){this.confirmFilter(this.filteredValue),this.handleOutsideClick()},handleReset:function(){this.filteredValue=[],this.confirmFilter(this.filteredValue),this.handleOutsideClick()},handleSelect:function(n){this.filterValue=n,null!=n?this.confirmFilter(this.filteredValue):this.confirmFilter([]),this.handleOutsideClick()},confirmFilter:function(n){this.table.store.commit("filterChange",{column:this.column,values:n}),this.table.store.updateAllSelected()}},data:function(){return{table:null,cell:null,column:null}},computed:{filters:function(){return this.column&&this.column.filters},filterValue:{get:function(){return(this.column.filteredValue||[])[0]},set:function(n){this.filteredValue&&(null!=n?this.filteredValue.splice(0,1,n):this.filteredValue.splice(0,1))}},filteredValue:{get:function(){return this.column&&this.column.filteredValue||[]},set:function(n){this.column&&(this.column.filteredValue=n)}},multiple:function(){return!this.column||this.column.filterMultiple}},mounted:function(){var n=this;this.popperElm=this.$el,this.referenceElm=this.cell,this.table.bodyWrapper.addEventListener("scroll",(function(){n.updatePopper()})),this.$watch("showPopper",(function(e){n.column&&(n.column.filterOpened=e),e?Gt(n):Ht(n)}))},watch:{showPopper:function(n){!0===n&&parseInt(this.popperJS._popper.style.zIndex,10)<_.PopupManager.zIndex&&(this.popperJS._popper.style.zIndex=_.PopupManager.nextZIndex())}}},Ft,[],!1,null,null,null);Kt.options.__file="packages/table/src/filter-panel.vue";var Yt=Kt.exports,Xt=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},Jt=function(n){var e=1;n.forEach((function(n){n.level=1,function n(t,i){if(i&&(t.level=i.level+1,e<t.level&&(e=t.level)),t.children){var a=0;t.children.forEach((function(e){n(e,t),a+=e.colSpan})),t.colSpan=a}else t.colSpan=1}(n)}));for(var t=[],i=0;i<e;i++)t.push([]);return function n(e){var t=[];return e.forEach((function(e){e.children?(t.push(e),t.push.apply(t,n(e.children))):t.push(e)})),t}(n).forEach((function(n){n.children?n.rowSpan=1:n.rowSpan=e-n.level+1,t[n.level-1].push(n)})),t},Zt={name:"ElTableHeader",mixins:[$t],render:function(n){var e=this,t=this.store.states.originColumns,i=Jt(t,this.columns),a=i.length>1;return a&&(this.$parent.isGroup=!0),n("table",{class:"el-table__header",attrs:{cellspacing:"0",cellpadding:"0",border:"0"}},[n("colgroup",[this.columns.map((function(e){return n("col",{attrs:{name:e.id},key:e.id})})),this.hasGutter?n("col",{attrs:{name:"gutter"}}):""]),n("thead",{class:[{"is-group":a,"has-gutter":this.hasGutter}]},[this._l(i,(function(t,i){return n("tr",{style:e.getHeaderRowStyle(i),class:e.getHeaderRowClass(i)},[t.map((function(a,r){return n("th",{attrs:{colspan:a.colSpan,rowspan:a.rowSpan},on:{mousemove:function(n){return e.handleMouseMove(n,a)},mouseout:e.handleMouseOut,mousedown:function(n){return e.handleMouseDown(n,a)},click:function(n){return e.handleHeaderClick(n,a)},contextmenu:function(n){return e.handleHeaderContextMenu(n,a)}},style:e.getHeaderCellStyle(i,r,t,a),class:e.getHeaderCellClass(i,r,t,a),key:a.id},[n("div",{class:["cell",a.filteredValue&&a.filteredValue.length>0?"highlight":"",a.labelClassName]},[a.renderHeader?a.renderHeader.call(e._renderProxy,n,{column:a,$index:r,store:e.store,_self:e.$parent.$vnode.context}):a.label,a.sortable?n("span",{class:"caret-wrapper",on:{click:function(n){return e.handleSortClick(n,a)}}},[n("i",{class:"sort-caret ascending",on:{click:function(n){return e.handleSortClick(n,a,"ascending")}}}),n("i",{class:"sort-caret descending",on:{click:function(n){return e.handleSortClick(n,a,"descending")}}})]):"",a.filterable?n("span",{class:"el-table__column-filter-trigger",on:{click:function(n){return e.handleFilterClick(n,a)}}},[n("i",{class:["el-icon-arrow-down",a.filterOpened?"el-icon-arrow-up":""]})]):""])])})),e.hasGutter?n("th",{class:"el-table__cell gutter"}):""])}))])])},props:{fixed:String,store:{required:!0},border:Boolean,defaultSort:{type:Object,default:function(){return{prop:"",order:""}}}},components:{ElCheckbox:rt.a},computed:Xt({table:function(){return this.$parent},hasGutter:function(){return!this.fixed&&this.tableLayout.gutterWidth}},Pt({columns:"columns",isAllSelected:"isAllSelected",leftFixedLeafCount:"fixedLeafColumnsLength",rightFixedLeafCount:"rightFixedLeafColumnsLength",columnsCount:function(n){return n.columns.length},leftFixedCount:function(n){return n.fixedColumns.length},rightFixedCount:function(n){return n.rightFixedColumns.length}})),created:function(){this.filterPanels={}},mounted:function(){var n=this;this.$nextTick((function(){var e=n.defaultSort,t=e.prop,i=e.order;n.store.commit("sort",{prop:t,order:i,init:!0})}))},beforeDestroy:function(){var n=this.filterPanels;for(var e in n)n.hasOwnProperty(e)&&n[e]&&n[e].$destroy(!0)},methods:{isCellHidden:function(n,e){for(var t=0,i=0;i<n;i++)t+=e[i].colSpan;var a=t+e[n].colSpan-1;return!0===this.fixed||"left"===this.fixed?a>=this.leftFixedLeafCount:"right"===this.fixed?t<this.columnsCount-this.rightFixedLeafCount:a<this.leftFixedLeafCount||t>=this.columnsCount-this.rightFixedLeafCount},getHeaderRowStyle:function(n){var e=this.table.headerRowStyle;return"function"==typeof e?e.call(null,{rowIndex:n}):e},getHeaderRowClass:function(n){var e=[],t=this.table.headerRowClassName;return"string"==typeof t?e.push(t):"function"==typeof t&&e.push(t.call(null,{rowIndex:n})),e.join(" ")},getHeaderCellStyle:function(n,e,t,i){var a=this.table.headerCellStyle;return"function"==typeof a?a.call(null,{rowIndex:n,columnIndex:e,row:t,column:i}):a},getHeaderCellClass:function(n,e,t,i){var a=[i.id,i.order,i.headerAlign,i.className,i.labelClassName];0===n&&this.isCellHidden(e,t)&&a.push("is-hidden"),i.children||a.push("is-leaf"),i.sortable&&a.push("is-sortable");var r=this.table.headerCellClassName;return"string"==typeof r?a.push(r):"function"==typeof r&&a.push(r.call(null,{rowIndex:n,columnIndex:e,row:t,column:i})),a.push("el-table__cell"),a.join(" ")},toggleAllSelection:function(){this.store.commit("toggleAllSelection")},handleFilterClick:function(n,e){n.stopPropagation();var t=n.target,i="TH"===t.tagName?t:t.parentNode;if(!Object(gn.hasClass)(i,"noclick")){i=i.querySelector(".el-table__column-filter-trigger")||i;var a=this.$parent,r=this.filterPanels[e.id];r&&e.filterOpened?r.showPopper=!1:(r||(r=new pt.a(Yt),this.filterPanels[e.id]=r,e.filterPlacement&&(r.placement=e.filterPlacement),r.table=a,r.cell=i,r.column=e,!this.$isServer&&r.$mount(document.createElement("div"))),setTimeout((function(){r.showPopper=!0}),16))}},handleHeaderClick:function(n,e){!e.filters&&e.sortable?this.handleSortClick(n,e):e.filterable&&!e.sortable&&this.handleFilterClick(n,e),this.$parent.$emit("header-click",e,n)},handleHeaderContextMenu:function(n,e){this.$parent.$emit("header-contextmenu",e,n)},handleMouseDown:function(n,e){var t=this;if(!this.$isServer&&!(e.children&&e.children.length>0)&&this.draggingColumn&&this.border){this.dragging=!0,this.$parent.resizeProxyVisible=!0;var i=this.$parent,a=i.$el.getBoundingClientRect().left,r=this.$el.querySelector("th."+e.id),o=r.getBoundingClientRect(),s=o.left-a+30;Object(gn.addClass)(r,"noclick"),this.dragState={startMouseLeft:n.clientX,startLeft:o.right-a,startColumnLeft:o.left-a,tableLeft:a};var l=i.$refs.resizeProxy;l.style.left=this.dragState.startLeft+"px",document.onselectstart=function(){return!1},document.ondragstart=function(){return!1};var d=function(n){var e=n.clientX-t.dragState.startMouseLeft,i=t.dragState.startLeft+e;l.style.left=Math.max(s,i)+"px"};document.addEventListener("mousemove",d),document.addEventListener("mouseup",(function a(){if(t.dragging){var o=t.dragState,s=o.startColumnLeft,c=o.startLeft,u=parseInt(l.style.left,10)-s;e.width=e.realWidth=u,i.$emit("header-dragend",e.width,c-s,e,n),t.store.scheduleLayout(),document.body.style.cursor="",t.dragging=!1,t.draggingColumn=null,t.dragState={},i.resizeProxyVisible=!1}document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",a),document.onselectstart=null,document.ondragstart=null,setTimeout((function(){Object(gn.removeClass)(r,"noclick")}),0)}))}},handleMouseMove:function(n,e){if(!(e.children&&e.children.length>0)){for(var t=n.target;t&&"TH"!==t.tagName;)t=t.parentNode;if(e&&e.resizable&&!this.dragging&&this.border){var i=t.getBoundingClientRect(),a=document.body.style;i.width>12&&i.right-n.pageX<8?(a.cursor="col-resize",Object(gn.hasClass)(t,"is-sortable")&&(t.style.cursor="col-resize"),this.draggingColumn=e):this.dragging||(a.cursor="",Object(gn.hasClass)(t,"is-sortable")&&(t.style.cursor="pointer"),this.draggingColumn=null)}}},handleMouseOut:function(){this.$isServer||(document.body.style.cursor="")},toggleOrder:function(n){var e=n.order,t=n.sortOrders;if(""===e)return t[0];var i=t.indexOf(e||null);return t[i>t.length-2?0:i+1]},handleSortClick:function(n,e,t){n.stopPropagation();for(var i=e.order===t?null:t||this.toggleOrder(e),a=n.target;a&&"TH"!==a.tagName;)a=a.parentNode;if(a&&"TH"===a.tagName&&Object(gn.hasClass)(a,"noclick"))Object(gn.removeClass)(a,"noclick");else if(e.sortable){var r=this.store.states,o=r.sortProp,s=void 0,l=r.sortingColumn;(l!==e||l===e&&null===l.order)&&(l&&(l.order=null),r.sortingColumn=e,o=e.property),s=e.order=i||null,r.sortProp=o,r.sortOrder=s,this.store.commit("changeSortCondition")}}},data:function(){return{draggingColumn:null,dragging:!1,dragState:{}}}},ni=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},ei={name:"ElTableFooter",mixins:[$t],render:function(n){var e=this,t=[];return this.summaryMethod?t=this.summaryMethod({columns:this.columns,data:this.store.states.data}):this.columns.forEach((function(n,i){if(0!==i){var a=e.store.states.data.map((function(e){return Number(e[n.property])})),r=[],o=!0;a.forEach((function(n){if(!isNaN(n)){o=!1;var e=(""+n).split(".")[1];r.push(e?e.length:0)}}));var s=Math.max.apply(null,r);t[i]=o?"":a.reduce((function(n,e){var t=Number(e);return isNaN(t)?n:parseFloat((n+e).toFixed(Math.min(s,20)))}),0)}else t[i]=e.sumText})),n("table",{class:"el-table__footer",attrs:{cellspacing:"0",cellpadding:"0",border:"0"}},[n("colgroup",[this.columns.map((function(e){return n("col",{attrs:{name:e.id},key:e.id})})),this.hasGutter?n("col",{attrs:{name:"gutter"}}):""]),n("tbody",{class:[{"has-gutter":this.hasGutter}]},[n("tr",[this.columns.map((function(i,a){return n("td",{key:a,attrs:{colspan:i.colSpan,rowspan:i.rowSpan},class:[].concat(e.getRowClasses(i,a),["el-table__cell"])},[n("div",{class:["cell",i.labelClassName]},[t[a]])])})),this.hasGutter?n("th",{class:"el-table__cell gutter"}):""])])])},props:{fixed:String,store:{required:!0},summaryMethod:Function,sumText:String,border:Boolean,defaultSort:{type:Object,default:function(){return{prop:"",order:""}}}},computed:ni({table:function(){return this.$parent},hasGutter:function(){return!this.fixed&&this.tableLayout.gutterWidth}},Pt({columns:"columns",isAllSelected:"isAllSelected",leftFixedLeafCount:"fixedLeafColumnsLength",rightFixedLeafCount:"rightFixedLeafColumnsLength",columnsCount:function(n){return n.columns.length},leftFixedCount:function(n){return n.fixedColumns.length},rightFixedCount:function(n){return n.rightFixedColumns.length}})),methods:{isCellHidden:function(n,e,t){if(!0===this.fixed||"left"===this.fixed)return n>=this.leftFixedLeafCount;if("right"===this.fixed){for(var i=0,a=0;a<n;a++)i+=e[a].colSpan;return i<this.columnsCount-this.rightFixedLeafCount}return!(this.fixed||!t.fixed)||(n<this.leftFixedCount||n>=this.columnsCount-this.rightFixedCount)},getRowClasses:function(n,e){var t=[n.id,n.align,n.labelClassName];return n.className&&t.push(n.className),this.isCellHidden(e,this.columns,n)&&t.push("is-hidden"),n.children||t.push("is-leaf"),t}}},ti=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},ii=1,ai=a({name:"ElTable",mixins:[m.a,k.a],directives:{Mousewheel:ct},props:{data:{type:Array,default:function(){return[]}},size:String,width:[String,Number],height:[String,Number],maxHeight:[String,Number],fit:{type:Boolean,default:!0},stripe:Boolean,border:Boolean,rowKey:[String,Function],context:{},showHeader:{type:Boolean,default:!0},showSummary:Boolean,sumText:String,summaryMethod:Function,rowClassName:[String,Function],rowStyle:[Object,Function],cellClassName:[String,Function],cellStyle:[Object,Function],headerRowClassName:[String,Function],headerRowStyle:[Object,Function],headerCellClassName:[String,Function],headerCellStyle:[Object,Function],highlightCurrentRow:Boolean,highlightSelectionRow:{type:Boolean,default:!1},currentRowKey:[String,Number],emptyText:String,expandRowKeys:Array,defaultExpandAll:Boolean,defaultSort:Object,tooltipEffect:String,spanMethod:Function,selectOnIndeterminate:{type:Boolean,default:!0},indent:{type:Number,default:16},treeProps:{type:Object,default:function(){return{hasChildren:"hasChildren",children:"children"}}},lazy:Boolean,load:Function},components:{TableHeader:Zt,TableFooter:ei,TableBody:Bt,ElCheckbox:rt.a},methods:{getMigratingConfig:function(){return{events:{expand:"expand is renamed to expand-change"}}},setCurrentRow:function(n){this.store.commit("setCurrentRow",n)},toggleRowSelection:function(n,e){this.store.toggleRowSelection(n,e,!1),this.store.updateAllSelected()},toggleRowExpansion:function(n,e){this.store.toggleRowExpansionAdapter(n,e)},clearSelection:function(){this.store.clearSelection()},clearFilter:function(n){this.store.clearFilter(n)},clearSort:function(){this.store.clearSort()},handleMouseLeave:function(){this.store.commit("setHoverRow",null),this.hoverState&&(this.hoverState=null)},updateScrollY:function(){this.layout.updateScrollY()&&(this.layout.notifyObservers("scrollable"),this.layout.updateColumnsWidth())},handleFixedMousewheel:function(n,e){var t=this.bodyWrapper;if(Math.abs(e.spinY)>0){var i=t.scrollTop;e.pixelY<0&&0!==i&&n.preventDefault(),e.pixelY>0&&t.scrollHeight-t.clientHeight>i&&n.preventDefault(),t.scrollTop+=Math.ceil(e.pixelY/5)}else t.scrollLeft+=Math.ceil(e.pixelX/5)},handleHeaderFooterMousewheel:function(n,e){var t=e.pixelX,i=e.pixelY;Math.abs(t)>=Math.abs(i)&&(this.bodyWrapper.scrollLeft+=e.pixelX/5)},syncPostion:function(){var n=this.bodyWrapper,e=n.scrollLeft,t=n.scrollTop,i=n.offsetWidth,a=n.scrollWidth,r=this.$refs,o=r.headerWrapper,s=r.footerWrapper,l=r.fixedBodyWrapper,d=r.rightFixedBodyWrapper;o&&(o.scrollLeft=e),s&&(s.scrollLeft=e),l&&(l.scrollTop=t),d&&(d.scrollTop=t);var c=a-i-1;this.scrollPosition=e>=c?"right":0===e?"left":"middle"},throttleSyncPostion:Object(ot.throttle)(16,(function(){this.syncPostion()})),onScroll:function(n){var e=window.requestAnimationFrame;e?e(this.syncPostion):this.throttleSyncPostion()},bindEvents:function(){this.bodyWrapper.addEventListener("scroll",this.onScroll,{passive:!0}),this.fit&&Object(Le.addResizeListener)(this.$el,this.resizeListener)},unbindEvents:function(){this.bodyWrapper.removeEventListener("scroll",this.onScroll,{passive:!0}),this.fit&&Object(Le.removeResizeListener)(this.$el,this.resizeListener)},resizeListener:function(){if(this.$ready){var n=!1,e=this.$el,t=this.resizeState,i=t.width,a=t.height,r=e.offsetWidth;i!==r&&(n=!0);var o=e.offsetHeight;(this.height||this.shouldUpdateHeight)&&a!==o&&(n=!0),n&&(this.resizeState.width=r,this.resizeState.height=o,this.doLayout())}},doLayout:function(){this.shouldUpdateHeight&&this.layout.updateElsHeight(),this.layout.updateColumnsWidth()},sort:function(n,e){this.store.commit("sort",{prop:n,order:e})},toggleAllSelection:function(){this.store.commit("toggleAllSelection")}},computed:ti({tableSize:function(){return this.size||(this.$ELEMENT||{}).size},bodyWrapper:function(){return this.$refs.bodyWrapper},shouldUpdateHeight:function(){return this.height||this.maxHeight||this.fixedColumns.length>0||this.rightFixedColumns.length>0},bodyWidth:function(){var n=this.layout,e=n.bodyWidth,t=n.scrollY,i=n.gutterWidth;return e?e-(t?i:0)+"px":""},bodyHeight:function(){var n=this.layout,e=n.headerHeight,t=void 0===e?0:e,i=n.bodyHeight,a=n.footerHeight,r=void 0===a?0:a;if(this.height)return{height:i?i+"px":""};if(this.maxHeight){var o=Tt(this.maxHeight);if("number"==typeof o)return{"max-height":o-r-(this.showHeader?t:0)+"px"}}return{}},fixedBodyHeight:function(){if(this.height)return{height:this.layout.fixedBodyHeight?this.layout.fixedBodyHeight+"px":""};if(this.maxHeight){var n=Tt(this.maxHeight);if("number"==typeof n)return n=this.layout.scrollX?n-this.layout.gutterWidth:n,this.showHeader&&(n-=this.layout.headerHeight),{"max-height":(n-=this.layout.footerHeight)+"px"}}return{}},fixedHeight:function(){return this.maxHeight?this.showSummary?{bottom:0}:{bottom:this.layout.scrollX&&this.data.length?this.layout.gutterWidth+"px":""}:this.showSummary?{height:this.layout.tableHeight?this.layout.tableHeight+"px":""}:{height:this.layout.viewportHeight?this.layout.viewportHeight+"px":""}},emptyBlockStyle:function(){if(this.data&&this.data.length)return null;var n="100%";return this.layout.appendHeight&&(n="calc(100% - "+this.layout.appendHeight+"px)"),{width:this.bodyWidth,height:n}}},Pt({selection:"selection",columns:"columns",tableData:"data",fixedColumns:"fixedColumns",rightFixedColumns:"rightFixedColumns"})),watch:{height:{immediate:!0,handler:function(n){this.layout.setHeight(n)}},maxHeight:{immediate:!0,handler:function(n){this.layout.setMaxHeight(n)}},currentRowKey:{immediate:!0,handler:function(n){this.rowKey&&this.store.setCurrentRowKey(n)}},data:{immediate:!0,handler:function(n){this.store.commit("setData",n)}},expandRowKeys:{immediate:!0,handler:function(n){n&&this.store.setExpandRowKeysAdapter(n)}}},created:function(){var n=this;this.tableId="el-table_"+ii++,this.debouncedUpdateLayout=Object(ot.debounce)(50,(function(){return n.doLayout()}))},mounted:function(){var n=this;this.bindEvents(),this.store.updateColumns(),this.doLayout(),this.resizeState={width:this.$el.offsetWidth,height:this.$el.offsetHeight},this.store.states.columns.forEach((function(e){e.filteredValue&&e.filteredValue.length&&n.store.commit("filterChange",{column:e,values:e.filteredValue,silent:!0})})),this.$ready=!0},destroyed:function(){this.unbindEvents()},data:function(){var n=this.treeProps,e=n.hasChildren,t=void 0===e?"hasChildren":e,i=n.children,a=void 0===i?"children":i;return this.store=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!n)throw new Error("Table is required.");var t=new Ot;return t.table=n,t.toggleAllSelection=M()(10,t._toggleAllSelection),Object.keys(e).forEach((function(n){t.states[n]=e[n]})),t}(this,{rowKey:this.rowKey,defaultExpandAll:this.defaultExpandAll,selectOnIndeterminate:this.selectOnIndeterminate,indent:this.indent,lazy:this.lazy,lazyColumnIdentifier:t,childrenColumnName:a}),{layout:new Rt({store:this.store,table:this,fit:this.fit,showHeader:this.showHeader}),isHidden:!1,renderExpanded:null,resizeProxyVisible:!1,resizeState:{width:null,height:null},isGroup:!1,scrollPosition:"left"}}},it,[],!1,null,null,null);ai.options.__file="packages/table/src/table.vue";var ri=ai.exports;ri.install=function(n){n.component(ri.name,ri)};var oi=ri,si={default:{order:""},selection:{width:48,minWidth:48,realWidth:48,order:"",className:"el-table-column--selection"},expand:{width:48,minWidth:48,realWidth:48,order:""},index:{width:48,minWidth:48,realWidth:48,order:""}},li={selection:{renderHeader:function(n,e){var t=e.store;return n("el-checkbox",{attrs:{disabled:t.states.data&&0===t.states.data.length,indeterminate:t.states.selection.length>0&&!this.isAllSelected,value:this.isAllSelected},on:{input:this.toggleAllSelection}})},renderCell:function(n,e){var t=e.row,i=e.column,a=e.isSelected,r=e.store,o=e.$index;return n("el-checkbox",{nativeOn:{click:function(n){return n.stopPropagation()}},attrs:{value:a,disabled:!!i.selectable&&!i.selectable.call(null,t,o)},on:{input:function(){r.commit("rowSelectedChanged",t)}}})},sortable:!1,resizable:!1},index:{renderHeader:function(n,e){return e.column.label||"#"},renderCell:function(n,e){var t=e.$index,i=t+1,a=e.column.index;return"number"==typeof a?i=t+a:"function"==typeof a&&(i=a(t)),n("div",[i])},sortable:!1},expand:{renderHeader:function(n,e){return e.column.label||""},renderCell:function(n,e){var t=e.row,i=e.store,a=["el-table__expand-icon"];e.isExpanded&&a.push("el-table__expand-icon--expanded");return n("div",{class:a,on:{click:function(n){n.stopPropagation(),i.toggleRowExpansion(t)}}},[n("i",{class:"el-icon el-icon-arrow-right"})])},sortable:!1,resizable:!1,className:"el-table__expand-column"}};function di(n,e){var t=e.row,i=e.column,a=e.$index,r=i.property,o=r&&Object(g.getPropByPath)(t,r).v;return i&&i.formatter?i.formatter(t,i,o,a):o}var ci=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},ui=1,pi={name:"ElTableColumn",props:{type:{type:String,default:"default"},label:String,className:String,labelClassName:String,property:String,prop:String,width:{},minWidth:{},renderHeader:Function,sortable:{type:[Boolean,String],default:!1},sortMethod:Function,sortBy:[String,Function,Array],resizable:{type:Boolean,default:!0},columnKey:String,align:String,headerAlign:String,showTooltipWhenOverflow:Boolean,showOverflowTooltip:Boolean,fixed:[Boolean,String],formatter:Function,selectable:Function,reserveSelection:Boolean,filterMethod:Function,filteredValue:Array,filters:Array,filterPlacement:String,filterMultiple:{type:Boolean,default:!0},index:[Number,Function],sortOrders:{type:Array,default:function(){return["ascending","descending",null]},validator:function(n){return n.every((function(n){return["ascending","descending",null].indexOf(n)>-1}))}}},data:function(){return{isSubColumn:!1,columns:[]}},computed:{owner:function(){for(var n=this.$parent;n&&!n.tableId;)n=n.$parent;return n},columnOrTableParent:function(){for(var n=this.$parent;n&&!n.tableId&&!n.columnId;)n=n.$parent;return n},realWidth:function(){return kt(this.width)},realMinWidth:function(){return void 0!==(n=this.minWidth)&&(n=kt(n),isNaN(n)&&(n=80)),n;var n},realAlign:function(){return this.align?"is-"+this.align:null},realHeaderAlign:function(){return this.headerAlign?"is-"+this.headerAlign:this.realAlign}},methods:{getPropsData:function(){for(var n=this,e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];return t.reduce((function(e,t){return Array.isArray(t)&&t.forEach((function(t){e[t]=n[t]})),e}),{})},getColumnElIndex:function(n,e){return[].indexOf.call(n,e)},setColumnWidth:function(n){return this.realWidth&&(n.width=this.realWidth),this.realMinWidth&&(n.minWidth=this.realMinWidth),n.minWidth||(n.minWidth=80),n.realWidth=void 0===n.width?n.minWidth:n.width,n},setColumnForcedProps:function(n){var e=n.type,t=li[e]||{};return Object.keys(t).forEach((function(e){var i=t[e];void 0!==i&&(n[e]="className"===e?n[e]+" "+i:i)})),n},setColumnRenders:function(n){var e=this;this.$createElement;this.renderHeader?console.warn("[Element Warn][TableColumn]Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header."):"selection"!==n.type&&(n.renderHeader=function(t,i){var a=e.$scopedSlots.header;return a?a(i):n.label});var t=n.renderCell;return"expand"===n.type?(n.renderCell=function(n,e){return n("div",{class:"cell"},[t(n,e)])},this.owner.renderExpanded=function(n,t){return e.$scopedSlots.default?e.$scopedSlots.default(t):e.$slots.default}):(t=t||di,n.renderCell=function(i,a){var r=null;r=e.$scopedSlots.default?e.$scopedSlots.default(a):t(i,a);var o=function(n,e){var t=e.row,i=e.treeNode,a=e.store;if(!i)return null;var r=[];if(i.indent&&r.push(n("span",{class:"el-table__indent",style:{"padding-left":i.indent+"px"}})),"boolean"!=typeof i.expanded||i.noLazyChildren)r.push(n("span",{class:"el-table__placeholder"}));else{var o=["el-table__expand-icon",i.expanded?"el-table__expand-icon--expanded":""],s=["el-icon-arrow-right"];i.loading&&(s=["el-icon-loading"]),r.push(n("div",{class:o,on:{click:function(n){n.stopPropagation(),a.loadOrToggle(t)}}},[n("i",{class:s})]))}return r}(i,a),s={class:"cell",style:{}};return n.showOverflowTooltip&&(s.class+=" el-tooltip",s.style={width:(a.column.realWidth||a.column.width)-1+"px"}),i("div",s,[o,r])}),n},registerNormalWatchers:function(){var n=this,e={prop:"property",realAlign:"align",realHeaderAlign:"headerAlign",realWidth:"width"},t=["label","property","filters","filterMultiple","sortable","index","formatter","className","labelClassName","showOverflowTooltip"].reduce((function(n,e){return n[e]=e,n}),e);Object.keys(t).forEach((function(t){var i=e[t];n.$watch(t,(function(e){n.columnConfig[i]=e}))}))},registerComplexWatchers:function(){var n=this,e={realWidth:"width",realMinWidth:"minWidth"},t=["fixed"].reduce((function(n,e){return n[e]=e,n}),e);Object.keys(t).forEach((function(t){var i=e[t];n.$watch(t,(function(e){n.columnConfig[i]=e;var t="fixed"===i;n.owner.store.scheduleLayout(t)}))}))}},components:{ElCheckbox:rt.a},beforeCreate:function(){this.row={},this.column={},this.$index=0,this.columnId=""},created:function(){var n=this.columnOrTableParent;this.isSubColumn=this.owner!==n,this.columnId=(n.tableId||n.columnId)+"_column_"+ui++;var e=this.type||"default",t=""===this.sortable||this.sortable,i=ci({},si[e],{id:this.columnId,type:e,property:this.prop||this.property,align:this.realAlign,headerAlign:this.realHeaderAlign,showOverflowTooltip:this.showOverflowTooltip||this.showTooltipWhenOverflow,filterable:this.filters||this.filterMethod,filteredValue:[],filterPlacement:"",isColumnGroup:!1,filterOpened:!1,sortable:t,index:this.index}),a=this.getPropsData(["columnKey","label","className","labelClassName","type","renderHeader","formatter","fixed","resizable"],["sortMethod","sortBy","sortOrders"],["selectable","reserveSelection"],["filterMethod","filters","filterMultiple","filterOpened","filteredValue","filterPlacement"]);a=function(n,e){var t={},i=void 0;for(i in n)t[i]=n[i];for(i in e)if(xt(e,i)){var a=e[i];void 0!==a&&(t[i]=a)}return t}(i,a),a=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return 0===e.length?function(n){return n}:1===e.length?e[0]:e.reduce((function(n,e){return function(){return n(e.apply(void 0,arguments))}}))}(this.setColumnRenders,this.setColumnWidth,this.setColumnForcedProps)(a),this.columnConfig=a,this.registerNormalWatchers(),this.registerComplexWatchers()},mounted:function(){var n=this.owner,e=this.columnOrTableParent,t=this.isSubColumn?e.$el.children:e.$refs.hiddenColumns.children,i=this.getColumnElIndex(t,this.$el);n.store.commit("insertColumn",this.columnConfig,i,this.isSubColumn?e.columnConfig:null)},destroyed:function(){if(this.$parent){var n=this.$parent;this.owner.store.commit("removeColumn",this.columnConfig,this.isSubColumn?n.columnConfig:null)}},render:function(n){return n("div",this.$slots.default)},install:function(n){n.component(pi.name,pi)}},hi=pi,mi=function(){var n=this,e=n.$createElement,t=n._self._c||e;return n.ranged?t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleClose,expression:"handleClose"}],ref:"reference",staticClass:"el-date-editor el-range-editor el-input__inner",class:["el-date-editor--"+n.type,n.pickerSize?"el-range-editor--"+n.pickerSize:"",n.pickerDisabled?"is-disabled":"",n.pickerVisible?"is-active":""],on:{click:n.handleRangeClick,mouseenter:n.handleMouseEnter,mouseleave:function(e){n.showClose=!1},keydown:n.handleKeydown}},[t("i",{class:["el-input__icon","el-range__icon",n.triggerClass]}),t("input",n._b({staticClass:"el-range-input",attrs:{autocomplete:"off",placeholder:n.startPlaceholder,disabled:n.pickerDisabled,readonly:!n.editable||n.readonly,name:n.name&&n.name[0]},domProps:{value:n.displayValue&&n.displayValue[0]},on:{input:n.handleStartInput,change:n.handleStartChange,focus:n.handleFocus}},"input",n.firstInputId,!1)),n._t("range-separator",[t("span",{staticClass:"el-range-separator"},[n._v(n._s(n.rangeSeparator))])]),t("input",n._b({staticClass:"el-range-input",attrs:{autocomplete:"off",placeholder:n.endPlaceholder,disabled:n.pickerDisabled,readonly:!n.editable||n.readonly,name:n.name&&n.name[1]},domProps:{value:n.displayValue&&n.displayValue[1]},on:{input:n.handleEndInput,change:n.handleEndChange,focus:n.handleFocus}},"input",n.secondInputId,!1)),n.haveTrigger?t("i",{staticClass:"el-input__icon el-range__close-icon",class:[n.showClose?""+n.clearIcon:""],on:{click:n.handleClickIcon}}):n._e()],2):t("el-input",n._b({directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleClose,expression:"handleClose"}],ref:"reference",staticClass:"el-date-editor",class:"el-date-editor--"+n.type,attrs:{readonly:!n.editable||n.readonly||"dates"===n.type||"week"===n.type||"years"===n.type||"months"===n.type,disabled:n.pickerDisabled,size:n.pickerSize,name:n.name,placeholder:n.placeholder,value:n.displayValue,validateEvent:!1},on:{focus:n.handleFocus,input:function(e){return n.userInput=e},change:n.handleChange},nativeOn:{keydown:function(e){return n.handleKeydown(e)},mouseenter:function(e){return n.handleMouseEnter(e)},mouseleave:function(e){n.showClose=!1}}},"el-input",n.firstInputId,!1),[t("i",{staticClass:"el-input__icon",class:n.triggerClass,attrs:{slot:"prefix"},on:{click:n.handleFocus},slot:"prefix"}),n.haveTrigger?t("i",{staticClass:"el-input__icon",class:[n.showClose?""+n.clearIcon:""],attrs:{slot:"suffix"},on:{click:n.handleClickIcon},slot:"suffix"}):n._e()])};mi._withStripped=!0;var gi=t(0),fi={props:{appendToBody:z.a.props.appendToBody,offset:z.a.props.offset,boundariesPadding:z.a.props.boundariesPadding,arrowOffset:z.a.props.arrowOffset,transformOrigin:z.a.props.transformOrigin},methods:z.a.methods,data:function(){return Fn()({visibleArrow:!0},z.a.data)},beforeDestroy:z.a.beforeDestroy},vi={date:"yyyy-MM-dd",month:"yyyy-MM",months:"yyyy-MM",datetime:"yyyy-MM-dd HH:mm:ss",time:"HH:mm:ss",week:"yyyywWW",timerange:"HH:mm:ss",daterange:"yyyy-MM-dd",monthrange:"yyyy-MM",datetimerange:"yyyy-MM-dd HH:mm:ss",year:"yyyy",years:"yyyy"},bi=["date","datetime","time","time-select","week","month","year","daterange","monthrange","timerange","datetimerange","dates","months","years"],_i=function(n,e){return"timestamp"===e?n.getTime():Object(gi.formatDate)(n,e)},yi=function(n,e){return"timestamp"===e?new Date(Number(n)):Object(gi.parseDate)(n,e)},xi=function(n,e){if(Array.isArray(n)&&2===n.length){var t=n[0],i=n[1];if(t&&i)return[_i(t,e),_i(i,e)]}return""},ki=function(n,e,t){if(Array.isArray(n)||(n=n.split(t)),2===n.length){var i=n[0],a=n[1];return[yi(i,e),yi(a,e)]}return[]},Ti={default:{formatter:function(n){return n?""+n:""},parser:function(n){return void 0===n||""===n?null:n}},week:{formatter:function(n,e){var t=Object(gi.getWeekNumber)(n),i=n.getMonth(),a=new Date(n);1===t&&11===i&&(a.setHours(0,0,0,0),a.setDate(a.getDate()+3-(a.getDay()+6)%7));var r=Object(gi.formatDate)(a,e);return r=/WW/.test(r)?r.replace(/WW/,t<10?"0"+t:t):r.replace(/W/,t)},parser:function(n,e){return Ti.date.parser(n,e)}},date:{formatter:_i,parser:yi},datetime:{formatter:_i,parser:yi},daterange:{formatter:xi,parser:ki},monthrange:{formatter:xi,parser:ki},datetimerange:{formatter:xi,parser:ki},timerange:{formatter:xi,parser:ki},time:{formatter:_i,parser:yi},month:{formatter:_i,parser:yi},year:{formatter:_i,parser:yi},number:{formatter:function(n){return n?""+n:""},parser:function(n){var e=Number(n);return isNaN(n)?null:e}},dates:{formatter:function(n,e){return n.map((function(n){return _i(n,e)}))},parser:function(n,e){return("string"==typeof n?n.split(", "):n).map((function(n){return n instanceof Date?n:yi(n,e)}))}},months:{formatter:function(n,e){return n.map((function(n){return _i(n,e)}))},parser:function(n,e){return("string"==typeof n?n.split(", "):n).map((function(n){return n instanceof Date?n:yi(n,e)}))}},years:{formatter:function(n,e){return n.map((function(n){return _i(n,e)}))},parser:function(n,e){return("string"==typeof n?n.split(", "):n).map((function(n){return n instanceof Date?n:yi(n,e)}))}}},wi={left:"bottom-start",center:"bottom",right:"bottom-end"},Ii=function(n,e,t){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"-";if(!n)return null;var a=(Ti[t]||Ti.default).parser,r=e||vi[t];return a(n,r,i)},Ci=function(n,e,t){return n?(0,(Ti[t]||Ti.default).formatter)(n,e||vi[t]):null},Di=function(n,e){var t=function(n,e){var t=n instanceof Date,i=e instanceof Date;return t&&i?n.getTime()===e.getTime():!t&&!i&&n===e},i=n instanceof Array,a=e instanceof Array;return i&&a?n.length===e.length&&n.every((function(n,i){return t(n,e[i])})):!i&&!a&&t(n,e)},Ei=function(n){return"string"==typeof n||n instanceof String},Si=function(n){return null==n||Ei(n)||Array.isArray(n)&&2===n.length&&n.every(Ei)},Mi=a({mixins:[w.a,fi],inject:{elForm:{default:""},elFormItem:{default:""}},props:{size:String,format:String,valueFormat:String,readonly:Boolean,placeholder:String,startPlaceholder:String,endPlaceholder:String,prefixIcon:String,clearIcon:{type:String,default:"el-icon-circle-close"},name:{default:"",validator:Si},disabled:Boolean,clearable:{type:Boolean,default:!0},id:{default:"",validator:Si},popperClass:String,editable:{type:Boolean,default:!0},align:{type:String,default:"left"},value:{},defaultValue:{},defaultTime:{},rangeSeparator:{default:"-"},pickerOptions:{},unlinkPanels:Boolean,validateEvent:{type:Boolean,default:!0}},components:{ElInput:p.a},directives:{Clickoutside:O.a},data:function(){return{pickerVisible:!1,showClose:!1,userInput:null,valueOnOpen:null,unwatchPickerOptions:null}},watch:{pickerVisible:function(n){this.readonly||this.pickerDisabled||(n?(this.showPicker(),this.valueOnOpen=Array.isArray(this.value)?[].concat(this.value):this.value):(this.hidePicker(),this.emitChange(this.value),this.userInput=null,this.validateEvent&&this.dispatch("ElFormItem","el.form.blur"),this.$emit("blur",this),this.blur()))},parsedValue:{immediate:!0,handler:function(n){this.picker&&(this.picker.value=n)}},defaultValue:function(n){this.picker&&(this.picker.defaultValue=n)},value:function(n,e){Di(n,e)||this.pickerVisible||!this.validateEvent||this.dispatch("ElFormItem","el.form.change",n)}},computed:{ranged:function(){return this.type.indexOf("range")>-1},reference:function(){var n=this.$refs.reference;return n.$el||n},refInput:function(){return this.reference?[].slice.call(this.reference.querySelectorAll("input")):[]},valueIsEmpty:function(){var n=this.value;if(Array.isArray(n)){for(var e=0,t=n.length;e<t;e++)if(n[e])return!1}else if(n)return!1;return!0},triggerClass:function(){return this.prefixIcon||(-1!==this.type.indexOf("time")?"el-icon-time":"el-icon-date")},selectionMode:function(){return"week"===this.type?"week":"month"===this.type?"month":"year"===this.type?"year":"dates"===this.type?"dates":"months"===this.type?"months":"years"===this.type?"years":"day"},haveTrigger:function(){return void 0!==this.showTrigger?this.showTrigger:-1!==bi.indexOf(this.type)},displayValue:function(){var n=Ci(this.parsedValue,this.format,this.type,this.rangeSeparator);return Array.isArray(this.userInput)?[this.userInput[0]||n&&n[0]||"",this.userInput[1]||n&&n[1]||""]:null!==this.userInput?this.userInput:n?"dates"===this.type||"years"===this.type||"months"===this.type?n.join(", "):n:""},parsedValue:function(){return this.value?"time-select"===this.type||Object(gi.isDateObject)(this.value)||Array.isArray(this.value)&&this.value.every(gi.isDateObject)?this.value:this.valueFormat?Ii(this.value,this.valueFormat,this.type,this.rangeSeparator)||this.value:Array.isArray(this.value)?this.value.map((function(n){return new Date(n)})):new Date(this.value):this.value},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},pickerSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},pickerDisabled:function(){return this.disabled||(this.elForm||{}).disabled},firstInputId:function(){var n={},e=void 0;return(e=this.ranged?this.id&&this.id[0]:this.id)&&(n.id=e),n},secondInputId:function(){var n={},e=void 0;return this.ranged&&(e=this.id&&this.id[1]),e&&(n.id=e),n}},created:function(){this.popperOptions={boundariesPadding:0,gpuAcceleration:!1},this.placement=wi[this.align]||wi.left,this.$on("fieldReset",this.handleFieldReset)},methods:{focus:function(){this.ranged?this.handleFocus():this.$refs.reference.focus()},blur:function(){this.refInput.forEach((function(n){return n.blur()}))},parseValue:function(n){var e=Object(gi.isDateObject)(n)||Array.isArray(n)&&n.every(gi.isDateObject);return this.valueFormat&&!e&&Ii(n,this.valueFormat,this.type,this.rangeSeparator)||n},formatToValue:function(n){var e=Object(gi.isDateObject)(n)||Array.isArray(n)&&n.every(gi.isDateObject);return this.valueFormat&&e?Ci(n,this.valueFormat,this.type,this.rangeSeparator):n},parseString:function(n){var e=Array.isArray(n)?this.type:this.type.replace("range","");return Ii(n,this.format,e)},formatToString:function(n){var e=Array.isArray(n)?this.type:this.type.replace("range","");return Ci(n,this.format,e)},handleMouseEnter:function(){this.readonly||this.pickerDisabled||!this.valueIsEmpty&&this.clearable&&(this.showClose=!0)},handleChange:function(){if(this.userInput){var n=this.parseString(this.displayValue);n&&(this.picker.value=n,this.isValidValue(n)&&(this.emitInput(n),this.userInput=null))}""===this.userInput&&(this.emitInput(null),this.emitChange(null),this.userInput=null)},handleStartInput:function(n){this.userInput?this.userInput=[n.target.value,this.userInput[1]]:this.userInput=[n.target.value,null]},handleEndInput:function(n){this.userInput?this.userInput=[this.userInput[0],n.target.value]:this.userInput=[null,n.target.value]},handleStartChange:function(n){var e=this.parseString(this.userInput&&this.userInput[0]);if(e){this.userInput=[this.formatToString(e),this.displayValue[1]];var t=[e,this.picker.value&&this.picker.value[1]];this.picker.value=t,this.isValidValue(t)&&(this.emitInput(t),this.userInput=null)}},handleEndChange:function(n){var e=this.parseString(this.userInput&&this.userInput[1]);if(e){this.userInput=[this.displayValue[0],this.formatToString(e)];var t=[this.picker.value&&this.picker.value[0],e];this.picker.value=t,this.isValidValue(t)&&(this.emitInput(t),this.userInput=null)}},handleClickIcon:function(n){this.readonly||this.pickerDisabled||(this.showClose?(this.valueOnOpen=this.value,n.stopPropagation(),this.emitInput(null),this.emitChange(null),this.showClose=!1,this.picker&&"function"==typeof this.picker.handleClear&&this.picker.handleClear()):this.pickerVisible=!this.pickerVisible)},handleClose:function(){if(this.pickerVisible&&(this.pickerVisible=!1,"dates"===this.type||"years"===this.type||"months"===this.type)){var n=Ii(this.valueOnOpen,this.valueFormat,this.type,this.rangeSeparator)||this.valueOnOpen;this.emitInput(n)}},handleFieldReset:function(n){this.userInput=""===n?null:n},handleFocus:function(){var n=this.type;-1===bi.indexOf(n)||this.pickerVisible||(this.pickerVisible=!0),this.$emit("focus",this)},handleKeydown:function(n){var e=this,t=n.keyCode;return 27===t?(this.pickerVisible=!1,void n.stopPropagation()):9!==t?13===t?((""===this.userInput||this.isValidValue(this.parseString(this.displayValue)))&&(this.handleChange(),this.pickerVisible=this.picker.visible=!1,this.blur()),void n.stopPropagation()):void(this.userInput?n.stopPropagation():this.picker&&this.picker.handleKeydown&&this.picker.handleKeydown(n)):void(this.ranged?setTimeout((function(){-1===e.refInput.indexOf(document.activeElement)&&(e.pickerVisible=!1,e.blur(),n.stopPropagation())}),0):(this.handleChange(),this.pickerVisible=this.picker.visible=!1,this.blur(),n.stopPropagation()))},handleRangeClick:function(){var n=this.type;-1===bi.indexOf(n)||this.pickerVisible||(this.pickerVisible=!0),this.$emit("focus",this)},hidePicker:function(){this.picker&&(this.picker.resetView&&this.picker.resetView(),this.pickerVisible=this.picker.visible=!1,this.destroyPopper())},showPicker:function(){var n=this;this.$isServer||(this.picker||this.mountPicker(),this.pickerVisible=this.picker.visible=!0,this.updatePopper(),this.picker.value=this.parsedValue,this.picker.resetView&&this.picker.resetView(),this.$nextTick((function(){n.picker.adjustSpinners&&n.picker.adjustSpinners()})))},mountPicker:function(){var n=this;this.picker=new pt.a(this.panel).$mount(),this.picker.defaultValue=this.defaultValue,this.picker.defaultTime=this.defaultTime,this.picker.popperClass=this.popperClass,this.popperElm=this.picker.$el,this.picker.width=this.reference.getBoundingClientRect().width,this.picker.showTime="datetime"===this.type||"datetimerange"===this.type,this.picker.selectionMode=this.selectionMode,this.picker.unlinkPanels=this.unlinkPanels,this.picker.arrowControl=this.arrowControl||this.timeArrowControl||!1,this.$watch("format",(function(e){n.picker.format=e}));var e=function(){var e=n.pickerOptions;if(e&&e.selectableRange){var t=e.selectableRange,i=Ti.datetimerange.parser,a=vi.timerange;t=Array.isArray(t)?t:[t],n.picker.selectableRange=t.map((function(e){return i(e,a,n.rangeSeparator)}))}for(var r in e)e.hasOwnProperty(r)&&"selectableRange"!==r&&(n.picker[r]=e[r]);n.format&&(n.picker.format=n.format)};e(),this.unwatchPickerOptions=this.$watch("pickerOptions",(function(){return e()}),{deep:!0}),this.$el.appendChild(this.picker.$el),this.picker.resetView&&this.picker.resetView(),this.picker.$on("dodestroy",this.doDestroy),this.picker.$on("pick",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];n.userInput=null,n.pickerVisible=n.picker.visible=t,n.emitInput(e),n.picker.resetView&&n.picker.resetView()})),this.picker.$on("select-range",(function(e,t,i){0!==n.refInput.length&&(i&&"min"!==i?"max"===i&&(n.refInput[1].setSelectionRange(e,t),n.refInput[1].focus()):(n.refInput[0].setSelectionRange(e,t),n.refInput[0].focus()))}))},unmountPicker:function(){this.picker&&(this.picker.$destroy(),this.picker.$off(),"function"==typeof this.unwatchPickerOptions&&this.unwatchPickerOptions(),this.picker.$el.parentNode.removeChild(this.picker.$el))},emitChange:function(n){Di(n,this.valueOnOpen)||(this.$emit("change",n),this.valueOnOpen=n,this.validateEvent&&this.dispatch("ElFormItem","el.form.change",n))},emitInput:function(n){var e=this.formatToValue(n);Di(this.value,e)||this.$emit("input",e)},isValidValue:function(n){return this.picker||this.mountPicker(),!this.picker.isValidValue||n&&this.picker.isValidValue(n)}}},mi,[],!1,null,null,null);Mi.options.__file="packages/date-picker/src/picker.vue";var Ai=Mi.exports,Oi=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-enter":n.handleEnter,"after-leave":n.handleLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-picker-panel el-date-picker el-popper",class:[{"has-sidebar":n.$slots.sidebar||n.shortcuts,"has-time":n.showTime},n.popperClass]},[t("div",{staticClass:"el-picker-panel__body-wrapper"},[n._t("sidebar"),n.shortcuts?t("div",{staticClass:"el-picker-panel__sidebar"},n._l(n.shortcuts,(function(e,i){return t("button",{key:i,staticClass:"el-picker-panel__shortcut",attrs:{type:"button"},on:{click:function(t){n.handleShortcutClick(e)}}},[n._v(n._s(e.text))])})),0):n._e(),t("div",{staticClass:"el-picker-panel__body"},[n.showTime?t("div",{staticClass:"el-date-picker__time-header"},[t("span",{staticClass:"el-date-picker__editor-wrap"},[t("el-input",{attrs:{placeholder:n.t("el.datepicker.selectDate"),value:n.visibleDate,size:"small"},on:{input:function(e){return n.userInputDate=e},change:n.handleVisibleDateChange}})],1),t("span",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleTimePickClose,expression:"handleTimePickClose"}],staticClass:"el-date-picker__editor-wrap"},[t("el-input",{ref:"input",attrs:{placeholder:n.t("el.datepicker.selectTime"),value:n.visibleTime,size:"small"},on:{focus:function(e){n.timePickerVisible=!0},input:function(e){return n.userInputTime=e},change:n.handleVisibleTimeChange}}),t("time-picker",{ref:"timepicker",attrs:{"time-arrow-control":n.arrowControl,visible:n.timePickerVisible},on:{pick:n.handleTimePick,mounted:n.proxyTimePickerDataProperties}})],1)]):n._e(),t("div",{directives:[{name:"show",rawName:"v-show",value:"time"!==n.currentView,expression:"currentView !== 'time'"}],staticClass:"el-date-picker__header",class:{"el-date-picker__header--bordered":"year"===n.currentView||"month"===n.currentView}},[t("button",{staticClass:"el-picker-panel__icon-btn el-date-picker__prev-btn el-icon-d-arrow-left",attrs:{type:"button","aria-label":n.t("el.datepicker.prevYear")},on:{click:n.prevYear}}),t("button",{directives:[{name:"show",rawName:"v-show",value:"date"===n.currentView,expression:"currentView === 'date'"}],staticClass:"el-picker-panel__icon-btn el-date-picker__prev-btn el-icon-arrow-left",attrs:{type:"button","aria-label":n.t("el.datepicker.prevMonth")},on:{click:n.prevMonth}}),t("span",{staticClass:"el-date-picker__header-label",attrs:{role:"button"},on:{click:n.showYearPicker}},[n._v(n._s(n.yearLabel))]),t("span",{directives:[{name:"show",rawName:"v-show",value:"date"===n.currentView,expression:"currentView === 'date'"}],staticClass:"el-date-picker__header-label",class:{active:"month"===n.currentView},attrs:{role:"button"},on:{click:n.showMonthPicker}},[n._v(n._s(n.t("el.datepicker.month"+(n.month+1))))]),t("button",{staticClass:"el-picker-panel__icon-btn el-date-picker__next-btn el-icon-d-arrow-right",attrs:{type:"button","aria-label":n.t("el.datepicker.nextYear")},on:{click:n.nextYear}}),t("button",{directives:[{name:"show",rawName:"v-show",value:"date"===n.currentView,expression:"currentView === 'date'"}],staticClass:"el-picker-panel__icon-btn el-date-picker__next-btn el-icon-arrow-right",attrs:{type:"button","aria-label":n.t("el.datepicker.nextMonth")},on:{click:n.nextMonth}})]),t("div",{staticClass:"el-picker-panel__content"},[t("date-table",{directives:[{name:"show",rawName:"v-show",value:"date"===n.currentView,expression:"currentView === 'date'"}],attrs:{"selection-mode":n.selectionMode,"first-day-of-week":n.firstDayOfWeek,value:n.value,"default-value":n.defaultValue?new Date(n.defaultValue):null,date:n.date,"cell-class-name":n.cellClassName,"disabled-date":n.disabledDate},on:{pick:n.handleDatePick}}),t("year-table",{directives:[{name:"show",rawName:"v-show",value:"year"===n.currentView,expression:"currentView === 'year'"}],attrs:{"selection-mode":n.selectionMode,value:n.value,"default-value":n.defaultValue?new Date(n.defaultValue):null,date:n.date,"disabled-date":n.disabledDate},on:{pick:n.handleYearPick}}),t("month-table",{directives:[{name:"show",rawName:"v-show",value:"month"===n.currentView,expression:"currentView === 'month'"}],attrs:{"selection-mode":n.selectionMode,value:n.value,"default-value":n.defaultValue?new Date(n.defaultValue):null,date:n.date,"disabled-date":n.disabledDate},on:{pick:n.handleMonthPick}})],1)])],2),t("div",{directives:[{name:"show",rawName:"v-show",value:n.footerVisible&&("date"===n.currentView||"month"===n.currentView||"year"===n.currentView),expression:"footerVisible && (currentView === 'date' || currentView === 'month' || currentView === 'year')"}],staticClass:"el-picker-panel__footer"},[t("el-button",{directives:[{name:"show",rawName:"v-show",value:"dates"!==n.selectionMode&&"months"!==n.selectionMode&&"years"!==n.selectionMode,expression:"selectionMode !== 'dates' && selectionMode !== 'months' && selectionMode !== 'years'"}],staticClass:"el-picker-panel__link-btn",attrs:{size:"mini",type:"text"},on:{click:n.changeToNow}},[n._v("\n        "+n._s(n.t("el.datepicker.now"))+"\n      ")]),t("el-button",{staticClass:"el-picker-panel__link-btn",attrs:{plain:"",size:"mini"},on:{click:n.confirm}},[n._v("\n        "+n._s(n.t("el.datepicker.confirm"))+"\n      ")])],1)])])};Oi._withStripped=!0;var Pi=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":function(e){n.$emit("dodestroy")}}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-time-panel el-popper",class:n.popperClass},[t("div",{staticClass:"el-time-panel__content",class:{"has-seconds":n.showSeconds}},[t("time-spinner",{ref:"spinner",attrs:{"arrow-control":n.useArrow,"show-seconds":n.showSeconds,"am-pm-mode":n.amPmMode,date:n.date},on:{change:n.handleChange,"select-range":n.setSelectionRange}})],1),t("div",{staticClass:"el-time-panel__footer"},[t("button",{staticClass:"el-time-panel__btn cancel",attrs:{type:"button"},on:{click:n.handleCancel}},[n._v(n._s(n.t("el.datepicker.cancel")))]),t("button",{staticClass:"el-time-panel__btn",class:{confirm:!n.disabled},attrs:{type:"button"},on:{click:function(e){n.handleConfirm()}}},[n._v(n._s(n.t("el.datepicker.confirm")))])])])])};Pi._withStripped=!0;var ji=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-time-spinner",class:{"has-seconds":n.showSeconds}},[n.arrowControl?n._e():[t("el-scrollbar",{ref:"hours",staticClass:"el-time-spinner__wrapper",attrs:{"wrap-style":"max-height: inherit;","view-class":"el-time-spinner__list",noresize:"",tag:"ul"},nativeOn:{mouseenter:function(e){n.emitSelectRange("hours")},mousemove:function(e){n.adjustCurrentSpinner("hours")}}},n._l(n.hoursList,(function(e,i){return t("li",{key:i,staticClass:"el-time-spinner__item",class:{active:i===n.hours,disabled:e},on:{click:function(t){n.handleClick("hours",{value:i,disabled:e})}}},[n._v(n._s(("0"+(n.amPmMode?i%12||12:i)).slice(-2))+n._s(n.amPm(i)))])})),0),t("el-scrollbar",{ref:"minutes",staticClass:"el-time-spinner__wrapper",attrs:{"wrap-style":"max-height: inherit;","view-class":"el-time-spinner__list",noresize:"",tag:"ul"},nativeOn:{mouseenter:function(e){n.emitSelectRange("minutes")},mousemove:function(e){n.adjustCurrentSpinner("minutes")}}},n._l(n.minutesList,(function(e,i){return t("li",{key:i,staticClass:"el-time-spinner__item",class:{active:i===n.minutes,disabled:!e},on:{click:function(e){n.handleClick("minutes",{value:i,disabled:!1})}}},[n._v(n._s(("0"+i).slice(-2)))])})),0),t("el-scrollbar",{directives:[{name:"show",rawName:"v-show",value:n.showSeconds,expression:"showSeconds"}],ref:"seconds",staticClass:"el-time-spinner__wrapper",attrs:{"wrap-style":"max-height: inherit;","view-class":"el-time-spinner__list",noresize:"",tag:"ul"},nativeOn:{mouseenter:function(e){n.emitSelectRange("seconds")},mousemove:function(e){n.adjustCurrentSpinner("seconds")}}},n._l(60,(function(e,i){return t("li",{key:i,staticClass:"el-time-spinner__item",class:{active:i===n.seconds},on:{click:function(e){n.handleClick("seconds",{value:i,disabled:!1})}}},[n._v(n._s(("0"+i).slice(-2)))])})),0)],n.arrowControl?[t("div",{staticClass:"el-time-spinner__wrapper is-arrow",on:{mouseenter:function(e){n.emitSelectRange("hours")}}},[t("i",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.decrease,expression:"decrease"}],staticClass:"el-time-spinner__arrow el-icon-arrow-up"}),t("i",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.increase,expression:"increase"}],staticClass:"el-time-spinner__arrow el-icon-arrow-down"}),t("ul",{ref:"hours",staticClass:"el-time-spinner__list"},n._l(n.arrowHourList,(function(e,i){return t("li",{key:i,staticClass:"el-time-spinner__item",class:{active:e===n.hours,disabled:n.hoursList[e]}},[n._v(n._s(void 0===e?"":("0"+(n.amPmMode?e%12||12:e)).slice(-2)+n.amPm(e)))])})),0)]),t("div",{staticClass:"el-time-spinner__wrapper is-arrow",on:{mouseenter:function(e){n.emitSelectRange("minutes")}}},[t("i",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.decrease,expression:"decrease"}],staticClass:"el-time-spinner__arrow el-icon-arrow-up"}),t("i",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.increase,expression:"increase"}],staticClass:"el-time-spinner__arrow el-icon-arrow-down"}),t("ul",{ref:"minutes",staticClass:"el-time-spinner__list"},n._l(n.arrowMinuteList,(function(e,i){return t("li",{key:i,staticClass:"el-time-spinner__item",class:{active:e===n.minutes}},[n._v("\n          "+n._s(void 0===e?"":("0"+e).slice(-2))+"\n        ")])})),0)]),n.showSeconds?t("div",{staticClass:"el-time-spinner__wrapper is-arrow",on:{mouseenter:function(e){n.emitSelectRange("seconds")}}},[t("i",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.decrease,expression:"decrease"}],staticClass:"el-time-spinner__arrow el-icon-arrow-up"}),t("i",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.increase,expression:"increase"}],staticClass:"el-time-spinner__arrow el-icon-arrow-down"}),t("ul",{ref:"seconds",staticClass:"el-time-spinner__list"},n._l(n.arrowSecondList,(function(e,i){return t("li",{key:i,staticClass:"el-time-spinner__item",class:{active:e===n.seconds}},[n._v("\n          "+n._s(void 0===e?"":("0"+e).slice(-2))+"\n        ")])})),0)]):n._e()]:n._e()],2)};ji._withStripped=!0;var zi=a({components:{ElScrollbar:$.a},directives:{repeatClick:Kn},props:{date:{},defaultValue:{},showSeconds:{type:Boolean,default:!0},arrowControl:Boolean,amPmMode:{type:String,default:""}},computed:{hours:function(){return this.date.getHours()},minutes:function(){return this.date.getMinutes()},seconds:function(){return this.date.getSeconds()},hoursList:function(){return Object(gi.getRangeHours)(this.selectableRange)},minutesList:function(){return Object(gi.getRangeMinutes)(this.selectableRange,this.hours)},arrowHourList:function(){var n=this.hours;return[n>0?n-1:void 0,n,n<23?n+1:void 0]},arrowMinuteList:function(){var n=this.minutes;return[n>0?n-1:void 0,n,n<59?n+1:void 0]},arrowSecondList:function(){var n=this.seconds;return[n>0?n-1:void 0,n,n<59?n+1:void 0]}},data:function(){return{selectableRange:[],currentScrollbar:null}},mounted:function(){var n=this;this.$nextTick((function(){!n.arrowControl&&n.bindScrollEvent()}))},methods:{increase:function(){this.scrollDown(1)},decrease:function(){this.scrollDown(-1)},modifyDateField:function(n,e){switch(n){case"hours":this.$emit("change",Object(gi.modifyTime)(this.date,e,this.minutes,this.seconds));break;case"minutes":this.$emit("change",Object(gi.modifyTime)(this.date,this.hours,e,this.seconds));break;case"seconds":this.$emit("change",Object(gi.modifyTime)(this.date,this.hours,this.minutes,e))}},handleClick:function(n,e){var t=e.value;e.disabled||(this.modifyDateField(n,t),this.emitSelectRange(n),this.adjustSpinner(n,t))},emitSelectRange:function(n){"hours"===n?this.$emit("select-range",0,2):"minutes"===n?this.$emit("select-range",3,5):"seconds"===n&&this.$emit("select-range",6,8),this.currentScrollbar=n},bindScrollEvent:function(){var n=this,e=function(e){n.$refs[e].wrap.onscroll=function(t){n.handleScroll(e,t)}};e("hours"),e("minutes"),e("seconds")},handleScroll:function(n){var e=Math.min(Math.round((this.$refs[n].wrap.scrollTop-(.5*this.scrollBarHeight(n)-10)/this.typeItemHeight(n)+3)/this.typeItemHeight(n)),"hours"===n?23:59);this.modifyDateField(n,e)},adjustSpinners:function(){this.adjustSpinner("hours",this.hours),this.adjustSpinner("minutes",this.minutes),this.adjustSpinner("seconds",this.seconds)},adjustCurrentSpinner:function(n){this.adjustSpinner(n,this[n])},adjustSpinner:function(n,e){if(!this.arrowControl){var t=this.$refs[n].wrap;t&&(t.scrollTop=Math.max(0,e*this.typeItemHeight(n)))}},scrollDown:function(n){var e=this;this.currentScrollbar||this.emitSelectRange("hours");var t=this.currentScrollbar,i=this.hoursList,a=this[t];if("hours"===this.currentScrollbar){var r=Math.abs(n);n=n>0?1:-1;for(var o=i.length;o--&&r;)i[a=(a+n+i.length)%i.length]||r--;if(i[a])return}else a=(a+n+60)%60;this.modifyDateField(t,a),this.adjustSpinner(t,a),this.$nextTick((function(){return e.emitSelectRange(e.currentScrollbar)}))},amPm:function(n){if(!("a"===this.amPmMode.toLowerCase()))return"";var e=n<12?" am":" pm";return"A"===this.amPmMode&&(e=e.toUpperCase()),e},typeItemHeight:function(n){return this.$refs[n].$el.querySelector("li").offsetHeight},scrollBarHeight:function(n){return this.$refs[n].$el.offsetHeight}}},ji,[],!1,null,null,null);zi.options.__file="packages/date-picker/src/basic/time-spinner.vue";var Ri=zi.exports,$i=a({mixins:[m.a],components:{TimeSpinner:Ri},props:{visible:Boolean,timeArrowControl:Boolean},watch:{visible:function(n){var e=this;n?(this.oldValue=this.value,this.$nextTick((function(){return e.$refs.spinner.emitSelectRange("hours")}))):this.needInitAdjust=!0},value:function(n){var e=this,t=void 0;n instanceof Date?t=Object(gi.limitTimeRange)(n,this.selectableRange,this.format):n||(t=this.defaultValue?new Date(this.defaultValue):new Date),this.date=t,this.visible&&this.needInitAdjust&&(this.$nextTick((function(n){return e.adjustSpinners()})),this.needInitAdjust=!1)},selectableRange:function(n){this.$refs.spinner.selectableRange=n},defaultValue:function(n){Object(gi.isDate)(this.value)||(this.date=n?new Date(n):new Date)}},data:function(){return{popperClass:"",format:"HH:mm:ss",value:"",defaultValue:null,date:new Date,oldValue:new Date,selectableRange:[],selectionRange:[0,2],disabled:!1,arrowControl:!1,needInitAdjust:!0}},computed:{showSeconds:function(){return-1!==(this.format||"").indexOf("ss")},useArrow:function(){return this.arrowControl||this.timeArrowControl||!1},amPmMode:function(){return-1!==(this.format||"").indexOf("A")?"A":-1!==(this.format||"").indexOf("a")?"a":""}},methods:{handleCancel:function(){this.$emit("pick",this.oldValue,!1)},handleChange:function(n){this.visible&&(this.date=Object(gi.clearMilliseconds)(n),this.isValidValue(this.date)&&this.$emit("pick",this.date,!0))},setSelectionRange:function(n,e){this.$emit("select-range",n,e),this.selectionRange=[n,e]},handleConfirm:function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=arguments[1];if(!e){var t=Object(gi.clearMilliseconds)(Object(gi.limitTimeRange)(this.date,this.selectableRange,this.format));this.$emit("pick",t,n,e)}},handleKeydown:function(n){var e=n.keyCode,t={38:-1,40:1,37:-1,39:1};if(37===e||39===e){var i=t[e];return this.changeSelectionRange(i),void n.preventDefault()}if(38===e||40===e){var a=t[e];return this.$refs.spinner.scrollDown(a),void n.preventDefault()}},isValidValue:function(n){return Object(gi.timeWithinRange)(n,this.selectableRange,this.format)},adjustSpinners:function(){return this.$refs.spinner.adjustSpinners()},changeSelectionRange:function(n){var e=[0,3].concat(this.showSeconds?[6]:[]),t=["hours","minutes"].concat(this.showSeconds?["seconds"]:[]),i=(e.indexOf(this.selectionRange[0])+n+e.length)%e.length;this.$refs.spinner.emitSelectRange(t[i])}},mounted:function(){var n=this;this.$nextTick((function(){return n.handleConfirm(!0,!0)})),this.$emit("mounted")}},Pi,[],!1,null,null,null);$i.options.__file="packages/date-picker/src/panel/time.vue";var Li=$i.exports,Ui=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("table",{staticClass:"el-year-table",on:{click:n.handleYearTableClick}},[t("tbody",[t("tr",[t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+0)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear))])]),t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+1)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+1))])]),t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+2)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+2))])]),t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+3)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+3))])])]),t("tr",[t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+4)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+4))])]),t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+5)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+5))])]),t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+6)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+6))])]),t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+7)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+7))])])]),t("tr",[t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+8)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+8))])]),t("td",{staticClass:"available",class:n.getCellStyle(n.startYear+9)},[t("a",{staticClass:"cell"},[n._v(n._s(n.startYear+9))])]),t("td"),t("td")])])])};Ui._withStripped=!0;var Ni=a({props:{disabledDate:{},value:{},defaultValue:{validator:function(n){return null===n||n instanceof Date&&Object(gi.isDate)(n)}},date:{},selectionMode:{}},computed:{startYear:function(){return 10*Math.floor(this.date.getFullYear()/10)}},methods:{getCellStyle:function(n){var e={},t=new Date;return e.disabled="function"==typeof this.disabledDate&&function(n){var e=Object(gi.getDayCountOfYear)(n),t=new Date(n,0,1);return Object(gi.range)(e).map((function(n){return Object(gi.nextDate)(t,n)}))}(n).every(this.disabledDate),e.current=Object(g.arrayFindIndex)(Object(g.coerceTruthyValueToArray)(this.value),(function(e){return e.getFullYear()===n}))>=0,e.today=t.getFullYear()===n,e.default=this.defaultValue&&this.defaultValue.getFullYear()===n,e},handleYearTableClick:function(n){var e=n.target;if("A"===e.tagName){if(Object(gn.hasClass)(e.parentNode,"disabled"))return;var t=e.textContent||e.innerText;if("years"===this.selectionMode){var i=this.value||[],a=Object(g.arrayFindIndex)(i,(function(n){return n.getFullYear()===Number(t)})),r=a>-1?[].concat(i.slice(0,a),i.slice(a+1)):[].concat(i,[new Date(t)]);this.$emit("pick",r)}else this.$emit("pick",Number(t))}}}},Ui,[],!1,null,null,null);Ni.options.__file="packages/date-picker/src/basic/year-table.vue";var qi=Ni.exports,Bi=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("table",{staticClass:"el-month-table",on:{click:n.handleMonthTableClick,mousemove:n.handleMouseMove}},[t("tbody",n._l(n.rows,(function(e,i){return t("tr",{key:i},n._l(e,(function(e,i){return t("td",{key:i,class:n.getCellStyle(e)},[t("div",[t("a",{staticClass:"cell"},[n._v(n._s(n.t("el.datepicker.months."+n.months[e.text])))])])])})),0)})),0)])};Bi._withStripped=!0;var Fi=function(n){return new Date(n.getFullYear(),n.getMonth())},Vi=function(n){return"number"==typeof n||"string"==typeof n?Fi(new Date(n)).getTime():n instanceof Date?Fi(n).getTime():NaN},Gi=a({props:{disabledDate:{},value:{},selectionMode:{default:"month"},minDate:{},maxDate:{},defaultValue:{validator:function(n){return null===n||Object(gi.isDate)(n)||Array.isArray(n)&&n.every(gi.isDate)}},date:{},rangeState:{default:function(){return{endDate:null,selecting:!1}}}},mixins:[m.a],watch:{"rangeState.endDate":function(n){this.markRange(this.minDate,n)},minDate:function(n,e){Vi(n)!==Vi(e)&&this.markRange(this.minDate,this.maxDate)},maxDate:function(n,e){Vi(n)!==Vi(e)&&this.markRange(this.minDate,this.maxDate)}},data:function(){return{months:["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],tableRows:[[],[],[]],lastRow:null,lastColumn:null}},methods:{cellMatchesDate:function(n,e){var t=new Date(e);return this.date.getFullYear()===t.getFullYear()&&Number(n.text)===t.getMonth()},getCellStyle:function(n){var e=this,t={},i=this.date.getFullYear(),a=new Date,r=n.text,o=this.defaultValue?Array.isArray(this.defaultValue)?this.defaultValue:[this.defaultValue]:[];return t.disabled="function"==typeof this.disabledDate&&function(n,e){var t=Object(gi.getDayCountOfMonth)(n,e),i=new Date(n,e,1);return Object(gi.range)(t).map((function(n){return Object(gi.nextDate)(i,n)}))}(i,r).every(this.disabledDate),t.current=Object(g.arrayFindIndex)(Object(g.coerceTruthyValueToArray)(this.value),(function(n){return n.getFullYear()===i&&n.getMonth()===r}))>=0,t.today=a.getFullYear()===i&&a.getMonth()===r,t.default=o.some((function(t){return e.cellMatchesDate(n,t)})),n.inRange&&(t["in-range"]=!0,n.start&&(t["start-date"]=!0),n.end&&(t["end-date"]=!0)),t},getMonthOfCell:function(n){var e=this.date.getFullYear();return new Date(e,n,1)},markRange:function(n,e){n=Vi(n),e=Vi(e)||n;var t=[Math.min(n,e),Math.max(n,e)];n=t[0],e=t[1];for(var i=this.rows,a=0,r=i.length;a<r;a++)for(var o=i[a],s=0,l=o.length;s<l;s++){var d=o[s],c=4*a+s,u=new Date(this.date.getFullYear(),c).getTime();d.inRange=n&&u>=n&&u<=e,d.start=n&&u===n,d.end=e&&u===e}},handleMouseMove:function(n){if(this.rangeState.selecting){var e=n.target;if("A"===e.tagName&&(e=e.parentNode.parentNode),"DIV"===e.tagName&&(e=e.parentNode),"TD"===e.tagName){var t=e.parentNode.rowIndex,i=e.cellIndex;this.rows[t][i].disabled||t===this.lastRow&&i===this.lastColumn||(this.lastRow=t,this.lastColumn=i,this.$emit("changerange",{minDate:this.minDate,maxDate:this.maxDate,rangeState:{selecting:!0,endDate:this.getMonthOfCell(4*t+i)}}))}}},handleMonthTableClick:function(n){var e=n.target;if("A"===e.tagName&&(e=e.parentNode.parentNode),"DIV"===e.tagName&&(e=e.parentNode),"TD"===e.tagName&&!Object(gn.hasClass)(e,"disabled")){var t,i,a,r=e.cellIndex,o=4*e.parentNode.rowIndex+r,s=this.getMonthOfCell(o);if("range"===this.selectionMode)this.rangeState.selecting?(s>=this.minDate?this.$emit("pick",{minDate:this.minDate,maxDate:s}):this.$emit("pick",{minDate:s,maxDate:this.minDate}),this.rangeState.selecting=!1):(this.$emit("pick",{minDate:s,maxDate:null}),this.rangeState.selecting=!0);else if("months"===this.selectionMode){var l=this.value||[],d=this.date.getFullYear(),c=Object(g.arrayFindIndex)(l,(function(n){return n.getFullYear()===d&&n.getMonth()===o}))>=0?(t=l,(a="function"==typeof(i=function(n){return n.getTime()===s.getTime()})?Object(g.arrayFindIndex)(t,i):t.indexOf(i))>=0?[].concat(t.slice(0,a),t.slice(a+1)):t):[].concat(l,[s]);this.$emit("pick",c)}else this.$emit("pick",o)}}},computed:{rows:function(){for(var n=this,e=this.tableRows,t=this.disabledDate,i=[],a=Vi(new Date),r=0;r<3;r++)for(var o=e[r],s=function(e){var s=o[e];s||(s={row:r,column:e,type:"normal",inRange:!1,start:!1,end:!1}),s.type="normal";var l=4*r+e,d=new Date(n.date.getFullYear(),l).getTime();s.inRange=d>=Vi(n.minDate)&&d<=Vi(n.maxDate),s.start=n.minDate&&d===Vi(n.minDate),s.end=n.maxDate&&d===Vi(n.maxDate),d===a&&(s.type="today"),s.text=l;var c=new Date(d);s.disabled="function"==typeof t&&t(c),s.selected=Object(g.arrayFind)(i,(function(n){return n.getTime()===c.getTime()})),n.$set(o,e,s)},l=0;l<4;l++)s(l);return e}}},Bi,[],!1,null,null,null);Gi.options.__file="packages/date-picker/src/basic/month-table.vue";var Hi=Gi.exports,Wi=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("table",{staticClass:"el-date-table",class:{"is-week-mode":"week"===n.selectionMode},attrs:{cellspacing:"0",cellpadding:"0"},on:{click:n.handleClick,mousemove:n.handleMouseMove}},[t("tbody",[t("tr",[n.showWeekNumber?t("th",[n._v(n._s(n.t("el.datepicker.week")))]):n._e(),n._l(n.WEEKS,(function(e,i){return t("th",{key:i},[n._v(n._s(n.t("el.datepicker.weeks."+e)))])}))],2),n._l(n.rows,(function(e,i){return t("tr",{key:i,staticClass:"el-date-table__row",class:{current:n.isWeekActive(e[1])}},n._l(e,(function(e,i){return t("td",{key:i,class:n.getCellClasses(e)},[t("div",[t("span",[n._v("\n          "+n._s(e.text)+"\n        ")])])])})),0)}))],2)])};Wi._withStripped=!0;var Qi=["sun","mon","tue","wed","thu","fri","sat"],Ki=function(n){return"number"==typeof n||"string"==typeof n?Object(gi.clearTime)(new Date(n)).getTime():n instanceof Date?Object(gi.clearTime)(n).getTime():NaN},Yi=a({mixins:[m.a],props:{firstDayOfWeek:{default:7,type:Number,validator:function(n){return n>=1&&n<=7}},value:{},defaultValue:{validator:function(n){return null===n||Object(gi.isDate)(n)||Array.isArray(n)&&n.every(gi.isDate)}},date:{},selectionMode:{default:"day"},showWeekNumber:{type:Boolean,default:!1},disabledDate:{},cellClassName:{},minDate:{},maxDate:{},rangeState:{default:function(){return{endDate:null,selecting:!1}}}},computed:{offsetDay:function(){var n=this.firstDayOfWeek;return n>3?7-n:-n},WEEKS:function(){var n=this.firstDayOfWeek;return Qi.concat(Qi).slice(n,n+7)},year:function(){return this.date.getFullYear()},month:function(){return this.date.getMonth()},startDate:function(){return Object(gi.getStartDateOfMonth)(this.year,this.month)},rows:function(){var n=this,e=new Date(this.year,this.month,1),t=Object(gi.getFirstDayOfMonth)(e),i=Object(gi.getDayCountOfMonth)(e.getFullYear(),e.getMonth()),a=Object(gi.getDayCountOfMonth)(e.getFullYear(),0===e.getMonth()?11:e.getMonth()-1);t=0===t?7:t;for(var r=this.offsetDay,o=this.tableRows,s=1,l=this.startDate,d=this.disabledDate,c=this.cellClassName,u="dates"===this.selectionMode?Object(g.coerceTruthyValueToArray)(this.value):[],p=Ki(new Date),h=0;h<6;h++){var m=o[h];this.showWeekNumber&&(m[0]||(m[0]={type:"week",text:Object(gi.getWeekNumber)(Object(gi.nextDate)(l,7*h+1))}));for(var f=function(e){var o=m[n.showWeekNumber?e+1:e];o||(o={row:h,column:e,type:"normal",inRange:!1,start:!1,end:!1}),o.type="normal";var f=7*h+e,v=Object(gi.nextDate)(l,f-r).getTime();if(o.inRange=v>=Ki(n.minDate)&&v<=Ki(n.maxDate),o.start=n.minDate&&v===Ki(n.minDate),o.end=n.maxDate&&v===Ki(n.maxDate),v===p&&(o.type="today"),h>=0&&h<=1){var b=t+r<0?7+t+r:t+r;e+7*h>=b?o.text=s++:(o.text=a-(b-e%7)+1+7*h,o.type="prev-month")}else s<=i?o.text=s++:(o.text=s++-i,o.type="next-month");var _=new Date(v);o.disabled="function"==typeof d&&d(_),o.selected=Object(g.arrayFind)(u,(function(n){return n.getTime()===_.getTime()})),o.customClass="function"==typeof c&&c(_),n.$set(m,n.showWeekNumber?e+1:e,o)},v=0;v<7;v++)f(v);if("week"===this.selectionMode){var b=this.showWeekNumber?1:0,_=this.showWeekNumber?7:6,y=this.isWeekActive(m[b+1]);m[b].inRange=y,m[b].start=y,m[_].inRange=y,m[_].end=y}}return o}},watch:{"rangeState.endDate":function(n){this.markRange(this.minDate,n)},minDate:function(n,e){Ki(n)!==Ki(e)&&this.markRange(this.minDate,this.maxDate)},maxDate:function(n,e){Ki(n)!==Ki(e)&&this.markRange(this.minDate,this.maxDate)}},data:function(){return{tableRows:[[],[],[],[],[],[]],lastRow:null,lastColumn:null}},methods:{cellMatchesDate:function(n,e){var t=new Date(e);return this.year===t.getFullYear()&&this.month===t.getMonth()&&Number(n.text)===t.getDate()},getCellClasses:function(n){var e=this,t=this.selectionMode,i=this.defaultValue?Array.isArray(this.defaultValue)?this.defaultValue:[this.defaultValue]:[],a=[];return"normal"!==n.type&&"today"!==n.type||n.disabled?a.push(n.type):(a.push("available"),"today"===n.type&&a.push("today")),"normal"===n.type&&i.some((function(t){return e.cellMatchesDate(n,t)}))&&a.push("default"),"day"!==t||"normal"!==n.type&&"today"!==n.type||!this.cellMatchesDate(n,this.value)||a.push("current"),!n.inRange||"normal"!==n.type&&"today"!==n.type&&"week"!==this.selectionMode||(a.push("in-range"),n.start&&a.push("start-date"),n.end&&a.push("end-date")),n.disabled&&a.push("disabled"),n.selected&&a.push("selected"),n.customClass&&a.push(n.customClass),a.join(" ")},getDateOfCell:function(n,e){var t=7*n+(e-(this.showWeekNumber?1:0))-this.offsetDay;return Object(gi.nextDate)(this.startDate,t)},isWeekActive:function(n){if("week"!==this.selectionMode)return!1;var e=new Date(this.year,this.month,1),t=e.getFullYear(),i=e.getMonth();if("prev-month"===n.type&&(e.setMonth(0===i?11:i-1),e.setFullYear(0===i?t-1:t)),"next-month"===n.type&&(e.setMonth(11===i?0:i+1),e.setFullYear(11===i?t+1:t)),e.setDate(parseInt(n.text,10)),Object(gi.isDate)(this.value)){var a=(this.value.getDay()-this.firstDayOfWeek+7)%7-1;return Object(gi.prevDate)(this.value,a).getTime()===e.getTime()}return!1},markRange:function(n,e){n=Ki(n),e=Ki(e)||n;var t=[Math.min(n,e),Math.max(n,e)];n=t[0],e=t[1];for(var i=this.startDate,a=this.rows,r=0,o=a.length;r<o;r++)for(var s=a[r],l=0,d=s.length;l<d;l++)if(!this.showWeekNumber||0!==l){var c=s[l],u=7*r+l+(this.showWeekNumber?-1:0),p=Object(gi.nextDate)(i,u-this.offsetDay).getTime();c.inRange=n&&p>=n&&p<=e,c.start=n&&p===n,c.end=e&&p===e}},handleMouseMove:function(n){if(this.rangeState.selecting){var e=n.target;if("SPAN"===e.tagName&&(e=e.parentNode.parentNode),"DIV"===e.tagName&&(e=e.parentNode),"TD"===e.tagName){var t=e.parentNode.rowIndex-1,i=e.cellIndex;this.rows[t][i].disabled||t===this.lastRow&&i===this.lastColumn||(this.lastRow=t,this.lastColumn=i,this.$emit("changerange",{minDate:this.minDate,maxDate:this.maxDate,rangeState:{selecting:!0,endDate:this.getDateOfCell(t,i)}}))}}},handleClick:function(n){var e=n.target;if("SPAN"===e.tagName&&(e=e.parentNode.parentNode),"DIV"===e.tagName&&(e=e.parentNode),"TD"===e.tagName){var t=e.parentNode.rowIndex-1,i="week"===this.selectionMode?1:e.cellIndex,a=this.rows[t][i];if(!a.disabled&&"week"!==a.type){var r,o,s,l=this.getDateOfCell(t,i);if("range"===this.selectionMode)this.rangeState.selecting?(l>=this.minDate?this.$emit("pick",{minDate:this.minDate,maxDate:l}):this.$emit("pick",{minDate:l,maxDate:this.minDate}),this.rangeState.selecting=!1):(this.$emit("pick",{minDate:l,maxDate:null}),this.rangeState.selecting=!0);else if("day"===this.selectionMode)this.$emit("pick",l);else if("week"===this.selectionMode){var d=Object(gi.getWeekNumber)(l),c=l.getFullYear()+"w"+d;this.$emit("pick",{year:l.getFullYear(),week:d,value:c,date:l})}else if("dates"===this.selectionMode){var u=this.value||[],p=a.selected?(r=u,(s="function"==typeof(o=function(n){return n.getTime()===l.getTime()})?Object(g.arrayFindIndex)(r,o):r.indexOf(o))>=0?[].concat(r.slice(0,s),r.slice(s+1)):r):[].concat(u,[l]);this.$emit("pick",p)}}}}}},Wi,[],!1,null,null,null);Yi.options.__file="packages/date-picker/src/basic/date-table.vue";var Xi=Yi.exports,Ji=a({mixins:[m.a],directives:{Clickoutside:O.a},watch:{showTime:function(n){var e=this;n&&this.$nextTick((function(n){var t=e.$refs.input.$el;t&&(e.pickerWidth=t.getBoundingClientRect().width+10)}))},value:function(n){"dates"===this.selectionMode&&this.value||"months"===this.selectionMode&&this.value||"years"===this.selectionMode&&this.value||(Object(gi.isDate)(n)?this.date=new Date(n):this.date=this.getDefaultValue())},defaultValue:function(n){Object(gi.isDate)(this.value)||(this.date=n?new Date(n):new Date)},timePickerVisible:function(n){var e=this;n&&this.$nextTick((function(){return e.$refs.timepicker.adjustSpinners()}))},selectionMode:function(n){"month"===n?"year"===this.currentView&&"month"===this.currentView||(this.currentView="month"):"dates"===n?this.currentView="date":"years"===n?this.currentView="year":"months"===n&&(this.currentView="month")}},methods:{proxyTimePickerDataProperties:function(){var n,e=this,t=function(n){e.$refs.timepicker.value=n},i=function(n){e.$refs.timepicker.date=n},a=function(n){e.$refs.timepicker.selectableRange=n};this.$watch("value",t),this.$watch("date",i),this.$watch("selectableRange",a),n=this.timeFormat,e.$refs.timepicker.format=n,t(this.value),i(this.date),a(this.selectableRange)},handleClear:function(){this.date=this.getDefaultValue(),this.$emit("pick",null)},emit:function(n){for(var e=this,t=arguments.length,i=Array(t>1?t-1:0),a=1;a<t;a++)i[a-1]=arguments[a];if(n)if(Array.isArray(n)){var r=n.map((function(n){return e.showTime?Object(gi.clearMilliseconds)(n):Object(gi.clearTime)(n)}));this.$emit.apply(this,["pick",r].concat(i))}else this.$emit.apply(this,["pick",this.showTime?Object(gi.clearMilliseconds)(n):Object(gi.clearTime)(n)].concat(i));else this.$emit.apply(this,["pick",n].concat(i));this.userInputDate=null,this.userInputTime=null},showMonthPicker:function(){this.currentView="month"},showYearPicker:function(){this.currentView="year"},prevMonth:function(){this.date=Object(gi.prevMonth)(this.date)},nextMonth:function(){this.date=Object(gi.nextMonth)(this.date)},prevYear:function(){"year"===this.currentView?this.date=Object(gi.prevYear)(this.date,10):this.date=Object(gi.prevYear)(this.date)},nextYear:function(){"year"===this.currentView?this.date=Object(gi.nextYear)(this.date,10):this.date=Object(gi.nextYear)(this.date)},handleShortcutClick:function(n){n.onClick&&n.onClick(this)},handleTimePick:function(n,e,t){if(Object(gi.isDate)(n)){var i=this.value?Object(gi.modifyTime)(this.value,n.getHours(),n.getMinutes(),n.getSeconds()):Object(gi.modifyWithTimeString)(this.getDefaultValue(),this.defaultTime);this.date=i,this.emit(this.date,!0)}else this.emit(n,!0);t||(this.timePickerVisible=e)},handleTimePickClose:function(){this.timePickerVisible=!1},handleMonthPick:function(n){"month"===this.selectionMode?(this.date=Object(gi.modifyDate)(this.date,this.year,n,1),this.emit(this.date)):"months"===this.selectionMode?this.emit(n,!0):(this.date=Object(gi.changeYearMonthAndClampDate)(this.date,this.year,n),this.currentView="date")},handleDatePick:function(n){if("day"===this.selectionMode){var e=this.value?Object(gi.modifyDate)(this.value,n.getFullYear(),n.getMonth(),n.getDate()):Object(gi.modifyWithTimeString)(n,this.defaultTime);this.checkDateWithinRange(e)||(e=Object(gi.modifyDate)(this.selectableRange[0][0],n.getFullYear(),n.getMonth(),n.getDate())),this.date=e,this.emit(this.date,this.showTime)}else"week"===this.selectionMode?this.emit(n.date):"dates"===this.selectionMode&&this.emit(n,!0)},handleYearPick:function(n){"year"===this.selectionMode?(this.date=Object(gi.modifyDate)(this.date,n,0,1),this.emit(this.date)):"years"===this.selectionMode?this.emit(n,!0):(this.date=Object(gi.changeYearMonthAndClampDate)(this.date,n,this.month),this.currentView="month")},changeToNow:function(){this.disabledDate&&this.disabledDate(new Date)||!this.checkDateWithinRange(new Date)||(this.date=new Date,this.emit(this.date))},confirm:function(){if("dates"===this.selectionMode||"months"===this.selectionMode||"years"===this.selectionMode)this.emit(this.value);else{var n=this.value?this.value:Object(gi.modifyWithTimeString)(this.getDefaultValue(),this.defaultTime);this.date=new Date(n),this.emit(n)}},resetView:function(){"month"===this.selectionMode||"months"===this.selectionMode?this.currentView="month":"year"===this.selectionMode||"years"===this.selectionMode?this.currentView="year":this.currentView="date"},handleEnter:function(){document.body.addEventListener("keydown",this.handleKeydown)},handleLeave:function(){this.$emit("dodestroy"),document.body.removeEventListener("keydown",this.handleKeydown)},handleKeydown:function(n){var e=n.keyCode;this.visible&&!this.timePickerVisible&&(-1!==[38,40,37,39].indexOf(e)&&(this.handleKeyControl(e),n.stopPropagation(),n.preventDefault()),13===e&&null===this.userInputDate&&null===this.userInputTime&&this.emit(this.date,!1))},handleKeyControl:function(n){for(var e={year:{38:-4,40:4,37:-1,39:1,offset:function(n,e){return n.setFullYear(n.getFullYear()+e)}},month:{38:-4,40:4,37:-1,39:1,offset:function(n,e){return n.setMonth(n.getMonth()+e)}},week:{38:-1,40:1,37:-1,39:1,offset:function(n,e){return n.setDate(n.getDate()+7*e)}},day:{38:-7,40:7,37:-1,39:1,offset:function(n,e){return n.setDate(n.getDate()+e)}}},t=this.selectionMode,i=this.date.getTime(),a=new Date(this.date.getTime());Math.abs(i-a.getTime())<=31536e6;){var r=e[t];if(r.offset(a,r[n]),"function"!=typeof this.disabledDate||!this.disabledDate(a)){this.date=a,this.$emit("pick",a,!0);break}}},handleVisibleTimeChange:function(n){var e=Object(gi.parseDate)(n,this.timeFormat);e&&this.checkDateWithinRange(e)&&(this.date=Object(gi.modifyDate)(e,this.year,this.month,this.monthDate),this.userInputTime=null,this.$refs.timepicker.value=this.date,this.timePickerVisible=!1,this.emit(this.date,!0))},handleVisibleDateChange:function(n){var e=Object(gi.parseDate)(n,this.dateFormat);if(e){if("function"==typeof this.disabledDate&&this.disabledDate(e))return;this.date=Object(gi.modifyTime)(e,this.date.getHours(),this.date.getMinutes(),this.date.getSeconds()),this.userInputDate=null,this.resetView(),this.emit(this.date,!0)}},isValidValue:function(n){return n&&!isNaN(n)&&("function"!=typeof this.disabledDate||!this.disabledDate(n))&&this.checkDateWithinRange(n)},getDefaultValue:function(){return this.defaultValue?new Date(this.defaultValue):new Date},checkDateWithinRange:function(n){return!(this.selectableRange.length>0)||Object(gi.timeWithinRange)(n,this.selectableRange,this.format||"HH:mm:ss")}},components:{TimePicker:Li,YearTable:qi,MonthTable:Hi,DateTable:Xi,ElInput:p.a,ElButton:H.a},data:function(){return{popperClass:"",date:new Date,value:"",defaultValue:null,defaultTime:null,showTime:!1,selectionMode:"day",shortcuts:"",visible:!1,currentView:"date",disabledDate:"",cellClassName:"",selectableRange:[],firstDayOfWeek:7,showWeekNumber:!1,timePickerVisible:!1,format:"",arrowControl:!1,userInputDate:null,userInputTime:null}},computed:{year:function(){return this.date.getFullYear()},month:function(){return this.date.getMonth()},week:function(){return Object(gi.getWeekNumber)(this.date)},monthDate:function(){return this.date.getDate()},footerVisible:function(){return this.showTime||"dates"===this.selectionMode||"months"===this.selectionMode||"years"===this.selectionMode},visibleTime:function(){return null!==this.userInputTime?this.userInputTime:Object(gi.formatDate)(this.value||this.defaultValue,this.timeFormat)},visibleDate:function(){return null!==this.userInputDate?this.userInputDate:Object(gi.formatDate)(this.value||this.defaultValue,this.dateFormat)},yearLabel:function(){var n=this.t("el.datepicker.year");if("year"===this.currentView){var e=10*Math.floor(this.year/10);return n?e+" "+n+" - "+(e+9)+" "+n:e+" - "+(e+9)}return this.year+" "+n},timeFormat:function(){return this.format?Object(gi.extractTimeFormat)(this.format):"HH:mm:ss"},dateFormat:function(){return this.format?Object(gi.extractDateFormat)(this.format):"yyyy-MM-dd"}}},Oi,[],!1,null,null,null);Ji.options.__file="packages/date-picker/src/panel/date.vue";var Zi=Ji.exports,na=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":function(e){n.$emit("dodestroy")}}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-picker-panel el-date-range-picker el-popper",class:[{"has-sidebar":n.$slots.sidebar||n.shortcuts,"has-time":n.showTime},n.popperClass]},[t("div",{staticClass:"el-picker-panel__body-wrapper"},[n._t("sidebar"),n.shortcuts?t("div",{staticClass:"el-picker-panel__sidebar"},n._l(n.shortcuts,(function(e,i){return t("button",{key:i,staticClass:"el-picker-panel__shortcut",attrs:{type:"button"},on:{click:function(t){n.handleShortcutClick(e)}}},[n._v(n._s(e.text))])})),0):n._e(),t("div",{staticClass:"el-picker-panel__body"},[n.showTime?t("div",{staticClass:"el-date-range-picker__time-header"},[t("span",{staticClass:"el-date-range-picker__editors-wrap"},[t("span",{staticClass:"el-date-range-picker__time-picker-wrap"},[t("el-input",{ref:"minInput",staticClass:"el-date-range-picker__editor",attrs:{size:"small",disabled:n.rangeState.selecting,placeholder:n.t("el.datepicker.startDate"),value:n.minVisibleDate},on:{input:function(e){return n.handleDateInput(e,"min")},change:function(e){return n.handleDateChange(e,"min")}}})],1),t("span",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleMinTimeClose,expression:"handleMinTimeClose"}],staticClass:"el-date-range-picker__time-picker-wrap"},[t("el-input",{staticClass:"el-date-range-picker__editor",attrs:{size:"small",disabled:n.rangeState.selecting,placeholder:n.t("el.datepicker.startTime"),value:n.minVisibleTime},on:{focus:function(e){n.minTimePickerVisible=!0},input:function(e){return n.handleTimeInput(e,"min")},change:function(e){return n.handleTimeChange(e,"min")}}}),t("time-picker",{ref:"minTimePicker",attrs:{"time-arrow-control":n.arrowControl,visible:n.minTimePickerVisible},on:{pick:n.handleMinTimePick,mounted:function(e){n.$refs.minTimePicker.format=n.timeFormat}}})],1)]),t("span",{staticClass:"el-icon-arrow-right"}),t("span",{staticClass:"el-date-range-picker__editors-wrap is-right"},[t("span",{staticClass:"el-date-range-picker__time-picker-wrap"},[t("el-input",{staticClass:"el-date-range-picker__editor",attrs:{size:"small",disabled:n.rangeState.selecting,placeholder:n.t("el.datepicker.endDate"),value:n.maxVisibleDate,readonly:!n.minDate},on:{input:function(e){return n.handleDateInput(e,"max")},change:function(e){return n.handleDateChange(e,"max")}}})],1),t("span",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleMaxTimeClose,expression:"handleMaxTimeClose"}],staticClass:"el-date-range-picker__time-picker-wrap"},[t("el-input",{staticClass:"el-date-range-picker__editor",attrs:{size:"small",disabled:n.rangeState.selecting,placeholder:n.t("el.datepicker.endTime"),value:n.maxVisibleTime,readonly:!n.minDate},on:{focus:function(e){n.minDate&&(n.maxTimePickerVisible=!0)},input:function(e){return n.handleTimeInput(e,"max")},change:function(e){return n.handleTimeChange(e,"max")}}}),t("time-picker",{ref:"maxTimePicker",attrs:{"time-arrow-control":n.arrowControl,visible:n.maxTimePickerVisible},on:{pick:n.handleMaxTimePick,mounted:function(e){n.$refs.maxTimePicker.format=n.timeFormat}}})],1)])]):n._e(),t("div",{staticClass:"el-picker-panel__content el-date-range-picker__content is-left"},[t("div",{staticClass:"el-date-range-picker__header"},[t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-left",attrs:{type:"button"},on:{click:n.leftPrevYear}}),t("button",{staticClass:"el-picker-panel__icon-btn el-icon-arrow-left",attrs:{type:"button"},on:{click:n.leftPrevMonth}}),n.unlinkPanels?t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-right",class:{"is-disabled":!n.enableYearArrow},attrs:{type:"button",disabled:!n.enableYearArrow},on:{click:n.leftNextYear}}):n._e(),n.unlinkPanels?t("button",{staticClass:"el-picker-panel__icon-btn el-icon-arrow-right",class:{"is-disabled":!n.enableMonthArrow},attrs:{type:"button",disabled:!n.enableMonthArrow},on:{click:n.leftNextMonth}}):n._e(),t("div",[n._v(n._s(n.leftLabel))])]),t("date-table",{attrs:{"selection-mode":"range",date:n.leftDate,"default-value":n.defaultValue,"min-date":n.minDate,"max-date":n.maxDate,"range-state":n.rangeState,"disabled-date":n.disabledDate,"cell-class-name":n.cellClassName,"first-day-of-week":n.firstDayOfWeek},on:{changerange:n.handleChangeRange,pick:n.handleRangePick}})],1),t("div",{staticClass:"el-picker-panel__content el-date-range-picker__content is-right"},[t("div",{staticClass:"el-date-range-picker__header"},[n.unlinkPanels?t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-left",class:{"is-disabled":!n.enableYearArrow},attrs:{type:"button",disabled:!n.enableYearArrow},on:{click:n.rightPrevYear}}):n._e(),n.unlinkPanels?t("button",{staticClass:"el-picker-panel__icon-btn el-icon-arrow-left",class:{"is-disabled":!n.enableMonthArrow},attrs:{type:"button",disabled:!n.enableMonthArrow},on:{click:n.rightPrevMonth}}):n._e(),t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-right",attrs:{type:"button"},on:{click:n.rightNextYear}}),t("button",{staticClass:"el-picker-panel__icon-btn el-icon-arrow-right",attrs:{type:"button"},on:{click:n.rightNextMonth}}),t("div",[n._v(n._s(n.rightLabel))])]),t("date-table",{attrs:{"selection-mode":"range",date:n.rightDate,"default-value":n.defaultValue,"min-date":n.minDate,"max-date":n.maxDate,"range-state":n.rangeState,"disabled-date":n.disabledDate,"cell-class-name":n.cellClassName,"first-day-of-week":n.firstDayOfWeek},on:{changerange:n.handleChangeRange,pick:n.handleRangePick}})],1)])],2),n.showTime?t("div",{staticClass:"el-picker-panel__footer"},[t("el-button",{staticClass:"el-picker-panel__link-btn",attrs:{size:"mini",type:"text"},on:{click:n.handleClear}},[n._v("\n        "+n._s(n.t("el.datepicker.clear"))+"\n      ")]),t("el-button",{staticClass:"el-picker-panel__link-btn",attrs:{plain:"",size:"mini",disabled:n.btnDisabled},on:{click:function(e){n.handleConfirm(!1)}}},[n._v("\n        "+n._s(n.t("el.datepicker.confirm"))+"\n      ")])],1):n._e()])])};na._withStripped=!0;var ea=function(n){return Array.isArray(n)?[new Date(n[0]),new Date(n[1])]:n?[new Date(n),Object(gi.nextDate)(new Date(n),1)]:[new Date,Object(gi.nextDate)(new Date,1)]},ta=a({mixins:[m.a],directives:{Clickoutside:O.a},computed:{btnDisabled:function(){return!(this.minDate&&this.maxDate&&!this.selecting&&this.isValidValue([this.minDate,this.maxDate]))},leftLabel:function(){return this.leftDate.getFullYear()+" "+this.t("el.datepicker.year")+" "+this.t("el.datepicker.month"+(this.leftDate.getMonth()+1))},rightLabel:function(){return this.rightDate.getFullYear()+" "+this.t("el.datepicker.year")+" "+this.t("el.datepicker.month"+(this.rightDate.getMonth()+1))},leftYear:function(){return this.leftDate.getFullYear()},leftMonth:function(){return this.leftDate.getMonth()},leftMonthDate:function(){return this.leftDate.getDate()},rightYear:function(){return this.rightDate.getFullYear()},rightMonth:function(){return this.rightDate.getMonth()},rightMonthDate:function(){return this.rightDate.getDate()},minVisibleDate:function(){return null!==this.dateUserInput.min?this.dateUserInput.min:this.minDate?Object(gi.formatDate)(this.minDate,this.dateFormat):""},maxVisibleDate:function(){return null!==this.dateUserInput.max?this.dateUserInput.max:this.maxDate||this.minDate?Object(gi.formatDate)(this.maxDate||this.minDate,this.dateFormat):""},minVisibleTime:function(){return null!==this.timeUserInput.min?this.timeUserInput.min:this.minDate?Object(gi.formatDate)(this.minDate,this.timeFormat):""},maxVisibleTime:function(){return null!==this.timeUserInput.max?this.timeUserInput.max:this.maxDate||this.minDate?Object(gi.formatDate)(this.maxDate||this.minDate,this.timeFormat):""},timeFormat:function(){return this.format?Object(gi.extractTimeFormat)(this.format):"HH:mm:ss"},dateFormat:function(){return this.format?Object(gi.extractDateFormat)(this.format):"yyyy-MM-dd"},enableMonthArrow:function(){var n=(this.leftMonth+1)%12,e=this.leftMonth+1>=12?1:0;return this.unlinkPanels&&new Date(this.leftYear+e,n)<new Date(this.rightYear,this.rightMonth)},enableYearArrow:function(){return this.unlinkPanels&&12*this.rightYear+this.rightMonth-(12*this.leftYear+this.leftMonth+1)>=12}},data:function(){return{popperClass:"",value:[],defaultValue:null,defaultTime:null,minDate:"",maxDate:"",leftDate:new Date,rightDate:Object(gi.nextMonth)(new Date),rangeState:{endDate:null,selecting:!1,row:null,column:null},showTime:!1,shortcuts:"",visible:"",disabledDate:"",cellClassName:"",firstDayOfWeek:7,minTimePickerVisible:!1,maxTimePickerVisible:!1,format:"",arrowControl:!1,unlinkPanels:!1,dateUserInput:{min:null,max:null},timeUserInput:{min:null,max:null}}},watch:{minDate:function(n){var e=this;this.dateUserInput.min=null,this.timeUserInput.min=null,this.$nextTick((function(){if(e.$refs.maxTimePicker&&e.maxDate&&e.maxDate<e.minDate){e.$refs.maxTimePicker.selectableRange=[[Object(gi.parseDate)(Object(gi.formatDate)(e.minDate,"HH:mm:ss"),"HH:mm:ss"),Object(gi.parseDate)("23:59:59","HH:mm:ss")]]}})),n&&this.$refs.minTimePicker&&(this.$refs.minTimePicker.date=n,this.$refs.minTimePicker.value=n)},maxDate:function(n){this.dateUserInput.max=null,this.timeUserInput.max=null,n&&this.$refs.maxTimePicker&&(this.$refs.maxTimePicker.date=n,this.$refs.maxTimePicker.value=n)},minTimePickerVisible:function(n){var e=this;n&&this.$nextTick((function(){e.$refs.minTimePicker.date=e.minDate,e.$refs.minTimePicker.value=e.minDate,e.$refs.minTimePicker.adjustSpinners()}))},maxTimePickerVisible:function(n){var e=this;n&&this.$nextTick((function(){e.$refs.maxTimePicker.date=e.maxDate,e.$refs.maxTimePicker.value=e.maxDate,e.$refs.maxTimePicker.adjustSpinners()}))},value:function(n){if(n){if(Array.isArray(n))if(this.minDate=Object(gi.isDate)(n[0])?new Date(n[0]):null,this.maxDate=Object(gi.isDate)(n[1])?new Date(n[1]):null,this.minDate)if(this.leftDate=this.minDate,this.unlinkPanels&&this.maxDate){var e=this.minDate.getFullYear(),t=this.minDate.getMonth(),i=this.maxDate.getFullYear(),a=this.maxDate.getMonth();this.rightDate=e===i&&t===a?Object(gi.nextMonth)(this.maxDate):this.maxDate}else this.rightDate=Object(gi.nextMonth)(this.leftDate);else this.leftDate=ea(this.defaultValue)[0],this.rightDate=Object(gi.nextMonth)(this.leftDate)}else this.minDate=null,this.maxDate=null},defaultValue:function(n){if(!Array.isArray(this.value)){var e=ea(n),t=e[0],i=e[1];this.leftDate=t,this.rightDate=n&&n[1]&&this.unlinkPanels?i:Object(gi.nextMonth)(this.leftDate)}}},methods:{handleClear:function(){this.minDate=null,this.maxDate=null,this.leftDate=ea(this.defaultValue)[0],this.rightDate=Object(gi.nextMonth)(this.leftDate),this.$emit("pick",null)},handleChangeRange:function(n){this.minDate=n.minDate,this.maxDate=n.maxDate,this.rangeState=n.rangeState},handleDateInput:function(n,e){if(this.dateUserInput[e]=n,n.length===this.dateFormat.length){var t=Object(gi.parseDate)(n,this.dateFormat);if(t){if("function"==typeof this.disabledDate&&this.disabledDate(new Date(t)))return;"min"===e?(this.minDate=Object(gi.modifyDate)(this.minDate||new Date,t.getFullYear(),t.getMonth(),t.getDate()),this.leftDate=new Date(t),this.unlinkPanels||(this.rightDate=Object(gi.nextMonth)(this.leftDate))):(this.maxDate=Object(gi.modifyDate)(this.maxDate||new Date,t.getFullYear(),t.getMonth(),t.getDate()),this.rightDate=new Date(t),this.unlinkPanels||(this.leftDate=Object(gi.prevMonth)(t)))}}},handleDateChange:function(n,e){var t=Object(gi.parseDate)(n,this.dateFormat);t&&("min"===e?(this.minDate=Object(gi.modifyDate)(this.minDate,t.getFullYear(),t.getMonth(),t.getDate()),this.minDate>this.maxDate&&(this.maxDate=this.minDate)):(this.maxDate=Object(gi.modifyDate)(this.maxDate,t.getFullYear(),t.getMonth(),t.getDate()),this.maxDate<this.minDate&&(this.minDate=this.maxDate)))},handleTimeInput:function(n,e){var t=this;if(this.timeUserInput[e]=n,n.length===this.timeFormat.length){var i=Object(gi.parseDate)(n,this.timeFormat);i&&("min"===e?(this.minDate=Object(gi.modifyTime)(this.minDate,i.getHours(),i.getMinutes(),i.getSeconds()),this.$nextTick((function(n){return t.$refs.minTimePicker.adjustSpinners()}))):(this.maxDate=Object(gi.modifyTime)(this.maxDate,i.getHours(),i.getMinutes(),i.getSeconds()),this.$nextTick((function(n){return t.$refs.maxTimePicker.adjustSpinners()}))))}},handleTimeChange:function(n,e){var t=Object(gi.parseDate)(n,this.timeFormat);t&&("min"===e?(this.minDate=Object(gi.modifyTime)(this.minDate,t.getHours(),t.getMinutes(),t.getSeconds()),this.minDate>this.maxDate&&(this.maxDate=this.minDate),this.$refs.minTimePicker.value=this.minDate,this.minTimePickerVisible=!1):(this.maxDate=Object(gi.modifyTime)(this.maxDate,t.getHours(),t.getMinutes(),t.getSeconds()),this.maxDate<this.minDate&&(this.minDate=this.maxDate),this.$refs.maxTimePicker.value=this.minDate,this.maxTimePickerVisible=!1))},handleRangePick:function(n){var e=this,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=this.defaultTime||[],a=Object(gi.modifyWithTimeString)(n.minDate,i[0]),r=Object(gi.modifyWithTimeString)(n.maxDate,i[1]);this.maxDate===r&&this.minDate===a||(this.onPick&&this.onPick(n),this.maxDate=r,this.minDate=a,setTimeout((function(){e.maxDate=r,e.minDate=a}),10),t&&!this.showTime&&this.handleConfirm())},handleShortcutClick:function(n){n.onClick&&n.onClick(this)},handleMinTimePick:function(n,e,t){this.minDate=this.minDate||new Date,n&&(this.minDate=Object(gi.modifyTime)(this.minDate,n.getHours(),n.getMinutes(),n.getSeconds())),t||(this.minTimePickerVisible=e),(!this.maxDate||this.maxDate&&this.maxDate.getTime()<this.minDate.getTime())&&(this.maxDate=new Date(this.minDate))},handleMinTimeClose:function(){this.minTimePickerVisible=!1},handleMaxTimePick:function(n,e,t){this.maxDate&&n&&(this.maxDate=Object(gi.modifyTime)(this.maxDate,n.getHours(),n.getMinutes(),n.getSeconds())),t||(this.maxTimePickerVisible=e),this.maxDate&&this.minDate&&this.minDate.getTime()>this.maxDate.getTime()&&(this.minDate=new Date(this.maxDate))},handleMaxTimeClose:function(){this.maxTimePickerVisible=!1},leftPrevYear:function(){this.leftDate=Object(gi.prevYear)(this.leftDate),this.unlinkPanels||(this.rightDate=Object(gi.nextMonth)(this.leftDate))},leftPrevMonth:function(){this.leftDate=Object(gi.prevMonth)(this.leftDate),this.unlinkPanels||(this.rightDate=Object(gi.nextMonth)(this.leftDate))},rightNextYear:function(){this.unlinkPanels?this.rightDate=Object(gi.nextYear)(this.rightDate):(this.leftDate=Object(gi.nextYear)(this.leftDate),this.rightDate=Object(gi.nextMonth)(this.leftDate))},rightNextMonth:function(){this.unlinkPanels?this.rightDate=Object(gi.nextMonth)(this.rightDate):(this.leftDate=Object(gi.nextMonth)(this.leftDate),this.rightDate=Object(gi.nextMonth)(this.leftDate))},leftNextYear:function(){this.leftDate=Object(gi.nextYear)(this.leftDate)},leftNextMonth:function(){this.leftDate=Object(gi.nextMonth)(this.leftDate)},rightPrevYear:function(){this.rightDate=Object(gi.prevYear)(this.rightDate)},rightPrevMonth:function(){this.rightDate=Object(gi.prevMonth)(this.rightDate)},handleConfirm:function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.isValidValue([this.minDate,this.maxDate])&&this.$emit("pick",[this.minDate,this.maxDate],n)},isValidValue:function(n){return Array.isArray(n)&&n&&n[0]&&n[1]&&Object(gi.isDate)(n[0])&&Object(gi.isDate)(n[1])&&n[0].getTime()<=n[1].getTime()&&("function"!=typeof this.disabledDate||!this.disabledDate(n[0])&&!this.disabledDate(n[1]))},resetView:function(){this.minDate&&null==this.maxDate&&(this.rangeState.selecting=!1),this.minDate=this.value&&Object(gi.isDate)(this.value[0])?new Date(this.value[0]):null,this.maxDate=this.value&&Object(gi.isDate)(this.value[0])?new Date(this.value[1]):null}},components:{TimePicker:Li,DateTable:Xi,ElInput:p.a,ElButton:H.a}},na,[],!1,null,null,null);ta.options.__file="packages/date-picker/src/panel/date-range.vue";var ia=ta.exports,aa=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":function(e){n.$emit("dodestroy")}}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-picker-panel el-date-range-picker el-popper",class:[{"has-sidebar":n.$slots.sidebar||n.shortcuts},n.popperClass]},[t("div",{staticClass:"el-picker-panel__body-wrapper"},[n._t("sidebar"),n.shortcuts?t("div",{staticClass:"el-picker-panel__sidebar"},n._l(n.shortcuts,(function(e,i){return t("button",{key:i,staticClass:"el-picker-panel__shortcut",attrs:{type:"button"},on:{click:function(t){n.handleShortcutClick(e)}}},[n._v(n._s(e.text))])})),0):n._e(),t("div",{staticClass:"el-picker-panel__body"},[t("div",{staticClass:"el-picker-panel__content el-date-range-picker__content is-left"},[t("div",{staticClass:"el-date-range-picker__header"},[t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-left",attrs:{type:"button"},on:{click:n.leftPrevYear}}),n.unlinkPanels?t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-right",class:{"is-disabled":!n.enableYearArrow},attrs:{type:"button",disabled:!n.enableYearArrow},on:{click:n.leftNextYear}}):n._e(),t("div",[n._v(n._s(n.leftLabel))])]),t("month-table",{attrs:{"selection-mode":"range",date:n.leftDate,"default-value":n.defaultValue,"min-date":n.minDate,"max-date":n.maxDate,"range-state":n.rangeState,"disabled-date":n.disabledDate},on:{changerange:n.handleChangeRange,pick:n.handleRangePick}})],1),t("div",{staticClass:"el-picker-panel__content el-date-range-picker__content is-right"},[t("div",{staticClass:"el-date-range-picker__header"},[n.unlinkPanels?t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-left",class:{"is-disabled":!n.enableYearArrow},attrs:{type:"button",disabled:!n.enableYearArrow},on:{click:n.rightPrevYear}}):n._e(),t("button",{staticClass:"el-picker-panel__icon-btn el-icon-d-arrow-right",attrs:{type:"button"},on:{click:n.rightNextYear}}),t("div",[n._v(n._s(n.rightLabel))])]),t("month-table",{attrs:{"selection-mode":"range",date:n.rightDate,"default-value":n.defaultValue,"min-date":n.minDate,"max-date":n.maxDate,"range-state":n.rangeState,"disabled-date":n.disabledDate},on:{changerange:n.handleChangeRange,pick:n.handleRangePick}})],1)])],2)])])};aa._withStripped=!0;var ra=function(n){return Array.isArray(n)?[new Date(n[0]),new Date(n[1])]:n?[new Date(n),Object(gi.nextMonth)(new Date(n))]:[new Date,Object(gi.nextMonth)(new Date)]},oa=a({mixins:[m.a],directives:{Clickoutside:O.a},computed:{btnDisabled:function(){return!(this.minDate&&this.maxDate&&!this.selecting&&this.isValidValue([this.minDate,this.maxDate]))},leftLabel:function(){return this.leftDate.getFullYear()+" "+this.t("el.datepicker.year")},rightLabel:function(){return this.rightDate.getFullYear()+" "+this.t("el.datepicker.year")},leftYear:function(){return this.leftDate.getFullYear()},rightYear:function(){return this.rightDate.getFullYear()===this.leftDate.getFullYear()?this.leftDate.getFullYear()+1:this.rightDate.getFullYear()},enableYearArrow:function(){return this.unlinkPanels&&this.rightYear>this.leftYear+1}},data:function(){return{popperClass:"",value:[],defaultValue:null,defaultTime:null,minDate:"",maxDate:"",leftDate:new Date,rightDate:Object(gi.nextYear)(new Date),rangeState:{endDate:null,selecting:!1,row:null,column:null},shortcuts:"",visible:"",disabledDate:"",format:"",arrowControl:!1,unlinkPanels:!1}},watch:{value:function(n){if(n){if(Array.isArray(n))if(this.minDate=Object(gi.isDate)(n[0])?new Date(n[0]):null,this.maxDate=Object(gi.isDate)(n[1])?new Date(n[1]):null,this.minDate)if(this.leftDate=this.minDate,this.unlinkPanels&&this.maxDate){var e=this.minDate.getFullYear(),t=this.maxDate.getFullYear();this.rightDate=e===t?Object(gi.nextYear)(this.maxDate):this.maxDate}else this.rightDate=Object(gi.nextYear)(this.leftDate);else this.leftDate=ra(this.defaultValue)[0],this.rightDate=Object(gi.nextYear)(this.leftDate)}else this.minDate=null,this.maxDate=null},defaultValue:function(n){if(!Array.isArray(this.value)){var e=ra(n),t=e[0],i=e[1];this.leftDate=t,this.rightDate=n&&n[1]&&t.getFullYear()!==i.getFullYear()&&this.unlinkPanels?i:Object(gi.nextYear)(this.leftDate)}}},methods:{handleClear:function(){this.minDate=null,this.maxDate=null,this.leftDate=ra(this.defaultValue)[0],this.rightDate=Object(gi.nextYear)(this.leftDate),this.$emit("pick",null)},handleChangeRange:function(n){this.minDate=n.minDate,this.maxDate=n.maxDate,this.rangeState=n.rangeState},handleRangePick:function(n){var e=this,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=this.defaultTime||[],a=Object(gi.modifyWithTimeString)(n.minDate,i[0]),r=Object(gi.modifyWithTimeString)(n.maxDate,i[1]);this.maxDate===r&&this.minDate===a||(this.onPick&&this.onPick(n),this.maxDate=r,this.minDate=a,setTimeout((function(){e.maxDate=r,e.minDate=a}),10),t&&this.handleConfirm())},handleShortcutClick:function(n){n.onClick&&n.onClick(this)},leftPrevYear:function(){this.leftDate=Object(gi.prevYear)(this.leftDate),this.unlinkPanels||(this.rightDate=Object(gi.prevYear)(this.rightDate))},rightNextYear:function(){this.unlinkPanels||(this.leftDate=Object(gi.nextYear)(this.leftDate)),this.rightDate=Object(gi.nextYear)(this.rightDate)},leftNextYear:function(){this.leftDate=Object(gi.nextYear)(this.leftDate)},rightPrevYear:function(){this.rightDate=Object(gi.prevYear)(this.rightDate)},handleConfirm:function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.isValidValue([this.minDate,this.maxDate])&&this.$emit("pick",[this.minDate,this.maxDate],n)},isValidValue:function(n){return Array.isArray(n)&&n&&n[0]&&n[1]&&Object(gi.isDate)(n[0])&&Object(gi.isDate)(n[1])&&n[0].getTime()<=n[1].getTime()&&("function"!=typeof this.disabledDate||!this.disabledDate(n[0])&&!this.disabledDate(n[1]))},resetView:function(){this.minDate=this.value&&Object(gi.isDate)(this.value[0])?new Date(this.value[0]):null,this.maxDate=this.value&&Object(gi.isDate)(this.value[0])?new Date(this.value[1]):null}},components:{MonthTable:Hi,ElInput:p.a,ElButton:H.a}},aa,[],!1,null,null,null);oa.options.__file="packages/date-picker/src/panel/month-range.vue";var sa=oa.exports,la=function(n){return"daterange"===n||"datetimerange"===n?ia:"monthrange"===n?sa:Zi},da={mixins:[Ai],name:"ElDatePicker",props:{type:{type:String,default:"date"},timeArrowControl:Boolean},watch:{type:function(n){this.picker?(this.unmountPicker(),this.panel=la(n),this.mountPicker()):this.panel=la(n)}},created:function(){this.panel=la(this.type)},install:function(n){n.component(da.name,da)}},ca=da,ua=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"before-enter":n.handleMenuEnter,"after-leave":function(e){n.$emit("dodestroy")}}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],ref:"popper",staticClass:"el-picker-panel time-select el-popper",class:n.popperClass,style:{width:n.width+"px"}},[t("el-scrollbar",{attrs:{noresize:"","wrap-class":"el-picker-panel__content"}},n._l(n.items,(function(e){return t("div",{key:e.value,staticClass:"time-select-item",class:{selected:n.value===e.value,disabled:e.disabled,default:e.value===n.defaultValue},attrs:{disabled:e.disabled},on:{click:function(t){n.handleClick(e)}}},[n._v(n._s(e.value))])})),0)],1)])};ua._withStripped=!0;var pa=function(n){var e=(n||"").split(":");return e.length>=2?{hours:parseInt(e[0],10),minutes:parseInt(e[1],10)}:null},ha=function(n,e){var t=pa(n),i=pa(e),a=t.minutes+60*t.hours,r=i.minutes+60*i.hours;return a===r?0:a>r?1:-1},ma=function(n,e){var t=pa(n),i=pa(e),a={hours:t.hours,minutes:t.minutes};return a.minutes+=i.minutes,a.hours+=i.hours,a.hours+=Math.floor(a.minutes/60),a.minutes=a.minutes%60,function(n){return(n.hours<10?"0"+n.hours:n.hours)+":"+(n.minutes<10?"0"+n.minutes:n.minutes)}(a)},ga=a({components:{ElScrollbar:$.a},watch:{value:function(n){var e=this;n&&this.$nextTick((function(){return e.scrollToOption()}))}},methods:{handleClick:function(n){n.disabled||this.$emit("pick",n.value)},handleClear:function(){this.$emit("pick",null)},scrollToOption:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:".selected",e=this.$refs.popper.querySelector(".el-picker-panel__content");Ne()(e,e.querySelector(n))},handleMenuEnter:function(){var n=this,e=-1!==this.items.map((function(n){return n.value})).indexOf(this.value),t=-1!==this.items.map((function(n){return n.value})).indexOf(this.defaultValue),i=(e?".selected":t&&".default")||".time-select-item:not(.disabled)";this.$nextTick((function(){return n.scrollToOption(i)}))},scrollDown:function(n){for(var e=this.items,t=e.length,i=e.length,a=e.map((function(n){return n.value})).indexOf(this.value);i--;)if(!e[a=(a+n+t)%t].disabled)return void this.$emit("pick",e[a].value,!0)},isValidValue:function(n){return-1!==this.items.filter((function(n){return!n.disabled})).map((function(n){return n.value})).indexOf(n)},handleKeydown:function(n){var e=n.keyCode;if(38===e||40===e){var t={40:1,38:-1}[e.toString()];return this.scrollDown(t),void n.stopPropagation()}}},data:function(){return{popperClass:"",start:"09:00",end:"18:00",step:"00:30",value:"",defaultValue:"",visible:!1,minTime:"",maxTime:"",width:0}},computed:{items:function(){var n=this.start,e=this.end,t=this.step,i=[];if(n&&e&&t)for(var a=n;ha(a,e)<=0;)i.push({value:a,disabled:ha(a,this.minTime||"-1:-1")<=0||ha(a,this.maxTime||"100:100")>=0}),a=ma(a,t);return i}}},ua,[],!1,null,null,null);ga.options.__file="packages/date-picker/src/panel/time-select.vue";var fa=ga.exports,va={mixins:[Ai],name:"ElTimeSelect",componentName:"ElTimeSelect",props:{type:{type:String,default:"time-select"}},beforeCreate:function(){this.panel=fa},install:function(n){n.component(va.name,va)}},ba=va,_a=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":function(e){n.$emit("dodestroy")}}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-time-range-picker el-picker-panel el-popper",class:n.popperClass},[t("div",{staticClass:"el-time-range-picker__content"},[t("div",{staticClass:"el-time-range-picker__cell"},[t("div",{staticClass:"el-time-range-picker__header"},[n._v(n._s(n.t("el.datepicker.startTime")))]),t("div",{staticClass:"el-time-range-picker__body el-time-panel__content",class:{"has-seconds":n.showSeconds,"is-arrow":n.arrowControl}},[t("time-spinner",{ref:"minSpinner",attrs:{"show-seconds":n.showSeconds,"am-pm-mode":n.amPmMode,"arrow-control":n.arrowControl,date:n.minDate},on:{change:n.handleMinChange,"select-range":n.setMinSelectionRange}})],1)]),t("div",{staticClass:"el-time-range-picker__cell"},[t("div",{staticClass:"el-time-range-picker__header"},[n._v(n._s(n.t("el.datepicker.endTime")))]),t("div",{staticClass:"el-time-range-picker__body el-time-panel__content",class:{"has-seconds":n.showSeconds,"is-arrow":n.arrowControl}},[t("time-spinner",{ref:"maxSpinner",attrs:{"show-seconds":n.showSeconds,"am-pm-mode":n.amPmMode,"arrow-control":n.arrowControl,date:n.maxDate},on:{change:n.handleMaxChange,"select-range":n.setMaxSelectionRange}})],1)])]),t("div",{staticClass:"el-time-panel__footer"},[t("button",{staticClass:"el-time-panel__btn cancel",attrs:{type:"button"},on:{click:function(e){n.handleCancel()}}},[n._v(n._s(n.t("el.datepicker.cancel")))]),t("button",{staticClass:"el-time-panel__btn confirm",attrs:{type:"button",disabled:n.btnDisabled},on:{click:function(e){n.handleConfirm()}}},[n._v(n._s(n.t("el.datepicker.confirm")))])])])])};_a._withStripped=!0;var ya=Object(gi.parseDate)("00:00:00","HH:mm:ss"),xa=Object(gi.parseDate)("23:59:59","HH:mm:ss"),ka=function(n){return Object(gi.modifyDate)(xa,n.getFullYear(),n.getMonth(),n.getDate())},Ta=function(n,e){return new Date(Math.min(n.getTime()+e,ka(n).getTime()))},wa=a({mixins:[m.a],components:{TimeSpinner:Ri},computed:{showSeconds:function(){return-1!==(this.format||"").indexOf("ss")},offset:function(){return this.showSeconds?11:8},spinner:function(){return this.selectionRange[0]<this.offset?this.$refs.minSpinner:this.$refs.maxSpinner},btnDisabled:function(){return this.minDate.getTime()>this.maxDate.getTime()},amPmMode:function(){return-1!==(this.format||"").indexOf("A")?"A":-1!==(this.format||"").indexOf("a")?"a":""}},data:function(){return{popperClass:"",minDate:new Date,maxDate:new Date,value:[],oldValue:[new Date,new Date],defaultValue:null,format:"HH:mm:ss",visible:!1,selectionRange:[0,2],arrowControl:!1}},watch:{value:function(n){Array.isArray(n)?(this.minDate=new Date(n[0]),this.maxDate=new Date(n[1])):Array.isArray(this.defaultValue)?(this.minDate=new Date(this.defaultValue[0]),this.maxDate=new Date(this.defaultValue[1])):this.defaultValue?(this.minDate=new Date(this.defaultValue),this.maxDate=Ta(new Date(this.defaultValue),36e5)):(this.minDate=new Date,this.maxDate=Ta(new Date,36e5))},visible:function(n){var e=this;n&&(this.oldValue=this.value,this.$nextTick((function(){return e.$refs.minSpinner.emitSelectRange("hours")})))}},methods:{handleClear:function(){this.$emit("pick",null)},handleCancel:function(){this.$emit("pick",this.oldValue)},handleMinChange:function(n){this.minDate=Object(gi.clearMilliseconds)(n),this.handleChange()},handleMaxChange:function(n){this.maxDate=Object(gi.clearMilliseconds)(n),this.handleChange()},handleChange:function(){var n;this.isValidValue([this.minDate,this.maxDate])&&(this.$refs.minSpinner.selectableRange=[[(n=this.minDate,Object(gi.modifyDate)(ya,n.getFullYear(),n.getMonth(),n.getDate())),this.maxDate]],this.$refs.maxSpinner.selectableRange=[[this.minDate,ka(this.maxDate)]],this.$emit("pick",[this.minDate,this.maxDate],!0))},setMinSelectionRange:function(n,e){this.$emit("select-range",n,e,"min"),this.selectionRange=[n,e]},setMaxSelectionRange:function(n,e){this.$emit("select-range",n,e,"max"),this.selectionRange=[n+this.offset,e+this.offset]},handleConfirm:function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=this.$refs.minSpinner.selectableRange,t=this.$refs.maxSpinner.selectableRange;this.minDate=Object(gi.limitTimeRange)(this.minDate,e,this.format),this.maxDate=Object(gi.limitTimeRange)(this.maxDate,t,this.format),this.$emit("pick",[this.minDate,this.maxDate],n)},adjustSpinners:function(){this.$refs.minSpinner.adjustSpinners(),this.$refs.maxSpinner.adjustSpinners()},changeSelectionRange:function(n){var e=this.showSeconds?[0,3,6,11,14,17]:[0,3,8,11],t=["hours","minutes"].concat(this.showSeconds?["seconds"]:[]),i=(e.indexOf(this.selectionRange[0])+n+e.length)%e.length,a=e.length/2;i<a?this.$refs.minSpinner.emitSelectRange(t[i]):this.$refs.maxSpinner.emitSelectRange(t[i-a])},isValidValue:function(n){return Array.isArray(n)&&Object(gi.timeWithinRange)(this.minDate,this.$refs.minSpinner.selectableRange)&&Object(gi.timeWithinRange)(this.maxDate,this.$refs.maxSpinner.selectableRange)},handleKeydown:function(n){var e=n.keyCode,t={38:-1,40:1,37:-1,39:1};if(37===e||39===e){var i=t[e];return this.changeSelectionRange(i),void n.preventDefault()}if(38===e||40===e){var a=t[e];return this.spinner.scrollDown(a),void n.preventDefault()}}}},_a,[],!1,null,null,null);wa.options.__file="packages/date-picker/src/panel/time-range.vue";var Ia=wa.exports,Ca={mixins:[Ai],name:"ElTimePicker",props:{isRange:Boolean,arrowControl:Boolean},data:function(){return{type:""}},watch:{isRange:function(n){this.picker?(this.unmountPicker(),this.type=n?"timerange":"time",this.panel=n?Ia:Li,this.mountPicker()):(this.type=n?"timerange":"time",this.panel=n?Ia:Li)}},created:function(){this.type=this.isRange?"timerange":"time",this.panel=this.isRange?Ia:Li},install:function(n){n.component(Ca.name,Ca)}},Da=Ca,Ea=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("span",[t("transition",{attrs:{name:n.transition},on:{"after-enter":n.handleAfterEnter,"after-leave":n.handleAfterLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:!n.disabled&&n.showPopper,expression:"!disabled && showPopper"}],ref:"popper",staticClass:"el-popover el-popper",class:[n.popperClass,n.content&&"el-popover--plain"],style:{width:n.width+"px"},attrs:{role:"tooltip",id:n.tooltipId,"aria-hidden":n.disabled||!n.showPopper?"true":"false"}},[n.title?t("div",{staticClass:"el-popover__title",domProps:{textContent:n._s(n.title)}}):n._e(),n._t("default",[n._v(n._s(n.content))])],2)]),t("span",{ref:"wrapper",staticClass:"el-popover__reference-wrapper"},[n._t("reference")],2)],1)};Ea._withStripped=!0;var Sa=a({name:"ElPopover",mixins:[z.a],props:{trigger:{type:String,default:"click",validator:function(n){return["click","focus","hover","manual"].indexOf(n)>-1}},openDelay:{type:Number,default:0},closeDelay:{type:Number,default:200},title:String,disabled:Boolean,content:String,reference:{},popperClass:String,width:{},visibleArrow:{default:!0},arrowOffset:{type:Number,default:0},transition:{type:String,default:"fade-in-linear"},tabindex:{type:Number,default:0}},computed:{tooltipId:function(){return"el-popover-"+Object(g.generateId)()}},watch:{showPopper:function(n){this.disabled||(n?this.$emit("show"):this.$emit("hide"))}},mounted:function(){var n=this,e=this.referenceElm=this.reference||this.$refs.reference,t=this.popper||this.$refs.popper;!e&&this.$refs.wrapper.children&&(e=this.referenceElm=this.$refs.wrapper.children[0]),e&&(Object(gn.addClass)(e,"el-popover__reference"),e.setAttribute("aria-describedby",this.tooltipId),e.setAttribute("tabindex",this.tabindex),t.setAttribute("tabindex",0),"click"!==this.trigger&&(Object(gn.on)(e,"focusin",(function(){n.handleFocus();var t=e.__vue__;t&&"function"==typeof t.focus&&t.focus()})),Object(gn.on)(t,"focusin",this.handleFocus),Object(gn.on)(e,"focusout",this.handleBlur),Object(gn.on)(t,"focusout",this.handleBlur)),Object(gn.on)(e,"keydown",this.handleKeydown),Object(gn.on)(e,"click",this.handleClick)),"click"===this.trigger?(Object(gn.on)(e,"click",this.doToggle),Object(gn.on)(document,"click",this.handleDocumentClick)):"hover"===this.trigger?(Object(gn.on)(e,"mouseenter",this.handleMouseEnter),Object(gn.on)(t,"mouseenter",this.handleMouseEnter),Object(gn.on)(e,"mouseleave",this.handleMouseLeave),Object(gn.on)(t,"mouseleave",this.handleMouseLeave)):"focus"===this.trigger&&(this.tabindex<0&&console.warn("[Element Warn][Popover]a negative taindex means that the element cannot be focused by tab key"),e.querySelector("input, textarea")?(Object(gn.on)(e,"focusin",this.doShow),Object(gn.on)(e,"focusout",this.doClose)):(Object(gn.on)(e,"mousedown",this.doShow),Object(gn.on)(e,"mouseup",this.doClose)))},beforeDestroy:function(){this.cleanup()},deactivated:function(){this.cleanup()},methods:{doToggle:function(){this.showPopper=!this.showPopper},doShow:function(){this.showPopper=!0},doClose:function(){this.showPopper=!1},handleFocus:function(){Object(gn.addClass)(this.referenceElm,"focusing"),"click"!==this.trigger&&"focus"!==this.trigger||(this.showPopper=!0)},handleClick:function(){Object(gn.removeClass)(this.referenceElm,"focusing")},handleBlur:function(){Object(gn.removeClass)(this.referenceElm,"focusing"),"click"!==this.trigger&&"focus"!==this.trigger||(this.showPopper=!1)},handleMouseEnter:function(){var n=this;clearTimeout(this._timer),this.openDelay?this._timer=setTimeout((function(){n.showPopper=!0}),this.openDelay):this.showPopper=!0},handleKeydown:function(n){27===n.keyCode&&"manual"!==this.trigger&&this.doClose()},handleMouseLeave:function(){var n=this;clearTimeout(this._timer),this.closeDelay?this._timer=setTimeout((function(){n.showPopper=!1}),this.closeDelay):this.showPopper=!1},handleDocumentClick:function(n){var e=this.reference||this.$refs.reference,t=this.popper||this.$refs.popper;!e&&this.$refs.wrapper.children&&(e=this.referenceElm=this.$refs.wrapper.children[0]),this.$el&&e&&!this.$el.contains(n.target)&&!e.contains(n.target)&&t&&!t.contains(n.target)&&(this.showPopper=!1)},handleAfterEnter:function(){this.$emit("after-enter")},handleAfterLeave:function(){this.$emit("after-leave"),this.doDestroy()},cleanup:function(){(this.openDelay||this.closeDelay)&&clearTimeout(this._timer)}},destroyed:function(){var n=this.reference;Object(gn.off)(n,"click",this.doToggle),Object(gn.off)(n,"mouseup",this.doClose),Object(gn.off)(n,"mousedown",this.doShow),Object(gn.off)(n,"focusin",this.doShow),Object(gn.off)(n,"focusout",this.doClose),Object(gn.off)(n,"mousedown",this.doShow),Object(gn.off)(n,"mouseup",this.doClose),Object(gn.off)(n,"mouseleave",this.handleMouseLeave),Object(gn.off)(n,"mouseenter",this.handleMouseEnter),Object(gn.off)(document,"click",this.handleDocumentClick)}},Ea,[],!1,null,null,null);Sa.options.__file="packages/popover/src/main.vue";var Ma=Sa.exports,Aa=function(n,e,t){var i=e.expression?e.value:e.arg,a=t.context.$refs[i];a&&(Array.isArray(a)?a[0].$refs.reference=n:a.$refs.reference=n)},Oa={bind:function(n,e,t){Aa(n,e,t)},inserted:function(n,e,t){Aa(n,e,t)}};pt.a.directive("popover",Oa),Ma.install=function(n){n.directive("popover",Oa),n.component(Ma.name,Ma)},Ma.directive=Oa;var Pa=Ma,ja={name:"ElTooltip",mixins:[z.a],props:{openDelay:{type:Number,default:0},disabled:Boolean,manual:Boolean,effect:{type:String,default:"dark"},arrowOffset:{type:Number,default:0},popperClass:String,content:String,visibleArrow:{default:!0},transition:{type:String,default:"el-fade-in-linear"},popperOptions:{default:function(){return{boundariesPadding:10,gpuAcceleration:!1}}},enterable:{type:Boolean,default:!0},hideAfter:{type:Number,default:0},tabindex:{type:Number,default:0}},data:function(){return{tooltipId:"el-tooltip-"+Object(g.generateId)(),timeoutPending:null,focusing:!1}},beforeCreate:function(){var n=this;this.$isServer||(this.popperVM=new pt.a({data:{node:""},render:function(n){return this.node}}).$mount(),this.debounceClose=M()(200,(function(){return n.handleClosePopper()})))},render:function(n){var e=this;this.popperVM&&(this.popperVM.node=n("transition",{attrs:{name:this.transition},on:{afterLeave:this.doDestroy}},[n("div",{on:{mouseleave:function(){e.setExpectedState(!1),e.debounceClose()},mouseenter:function(){e.setExpectedState(!0)}},ref:"popper",attrs:{role:"tooltip",id:this.tooltipId,"aria-hidden":this.disabled||!this.showPopper?"true":"false"},directives:[{name:"show",value:!this.disabled&&this.showPopper}],class:["el-tooltip__popper","is-"+this.effect,this.popperClass]},[this.$slots.content||this.content])]));var t=this.getFirstElement();if(!t)return null;var i=t.data=t.data||{};return i.staticClass=this.addTooltipClass(i.staticClass),t},mounted:function(){var n=this;this.referenceElm=this.$el,1===this.$el.nodeType&&(this.$el.setAttribute("aria-describedby",this.tooltipId),this.$el.setAttribute("tabindex",this.tabindex),Object(gn.on)(this.referenceElm,"mouseenter",this.show),Object(gn.on)(this.referenceElm,"mouseleave",this.hide),Object(gn.on)(this.referenceElm,"focus",(function(){if(n.$slots.default&&n.$slots.default.length){var e=n.$slots.default[0].componentInstance;e&&e.focus?e.focus():n.handleFocus()}else n.handleFocus()})),Object(gn.on)(this.referenceElm,"blur",this.handleBlur),Object(gn.on)(this.referenceElm,"click",this.removeFocusing)),this.value&&this.popperVM&&this.popperVM.$nextTick((function(){n.value&&n.updatePopper()}))},watch:{focusing:function(n){n?Object(gn.addClass)(this.referenceElm,"focusing"):Object(gn.removeClass)(this.referenceElm,"focusing")}},methods:{show:function(){this.setExpectedState(!0),this.handleShowPopper()},hide:function(){this.setExpectedState(!1),this.debounceClose()},handleFocus:function(){this.focusing=!0,this.show()},handleBlur:function(){this.focusing=!1,this.hide()},removeFocusing:function(){this.focusing=!1},addTooltipClass:function(n){return n?"el-tooltip "+n.replace("el-tooltip",""):"el-tooltip"},handleShowPopper:function(){var n=this;this.expectedState&&!this.manual&&(clearTimeout(this.timeout),this.timeout=setTimeout((function(){n.showPopper=!0}),this.openDelay),this.hideAfter>0&&(this.timeoutPending=setTimeout((function(){n.showPopper=!1}),this.hideAfter)))},handleClosePopper:function(){this.enterable&&this.expectedState||this.manual||(clearTimeout(this.timeout),this.timeoutPending&&clearTimeout(this.timeoutPending),this.showPopper=!1,this.disabled&&this.doDestroy())},setExpectedState:function(n){!1===n&&clearTimeout(this.timeoutPending),this.expectedState=n},getFirstElement:function(){var n=this.$slots.default;if(!Array.isArray(n))return null;for(var e=null,t=0;t<n.length;t++)if(n[t]&&n[t].tag){e=n[t];break}return e}},beforeDestroy:function(){this.popperVM&&this.popperVM.$destroy()},destroyed:function(){var n=this.referenceElm;1===n.nodeType&&(Object(gn.off)(n,"mouseenter",this.show),Object(gn.off)(n,"mouseleave",this.hide),Object(gn.off)(n,"focus",this.handleFocus),Object(gn.off)(n,"blur",this.handleBlur),Object(gn.off)(n,"click",this.removeFocusing))},install:function(n){n.component(ja.name,ja)}},za=ja,Ra=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"msgbox-fade"}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-message-box__wrapper",attrs:{tabindex:"-1",role:"dialog","aria-modal":"true","aria-label":n.title||"dialog"},on:{click:function(e){return e.target!==e.currentTarget?null:n.handleWrapperClick(e)}}},[t("div",{staticClass:"el-message-box",class:[n.customClass,n.center&&"el-message-box--center"]},[null!==n.title?t("div",{staticClass:"el-message-box__header"},[t("div",{staticClass:"el-message-box__title"},[n.icon&&n.center?t("div",{class:["el-message-box__status",n.icon]}):n._e(),t("span",[n._v(n._s(n.title))])]),n.showClose?t("button",{staticClass:"el-message-box__headerbtn",attrs:{type:"button","aria-label":"Close"},on:{click:function(e){n.handleAction(n.distinguishCancelAndClose?"close":"cancel")},keydown:function(e){if(!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter"))return null;n.handleAction(n.distinguishCancelAndClose?"close":"cancel")}}},[t("i",{staticClass:"el-message-box__close el-icon-close"})]):n._e()]):n._e(),t("div",{staticClass:"el-message-box__content"},[t("div",{staticClass:"el-message-box__container"},[n.icon&&!n.center&&""!==n.message?t("div",{class:["el-message-box__status",n.icon]}):n._e(),""!==n.message?t("div",{staticClass:"el-message-box__message"},[n._t("default",[n.dangerouslyUseHTMLString?t("p",{domProps:{innerHTML:n._s(n.message)}}):t("p",[n._v(n._s(n.message))])])],2):n._e()]),t("div",{directives:[{name:"show",rawName:"v-show",value:n.showInput,expression:"showInput"}],staticClass:"el-message-box__input"},[t("el-input",{ref:"input",attrs:{type:n.inputType,placeholder:n.inputPlaceholder},nativeOn:{keydown:function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.handleInputEnter(e)}},model:{value:n.inputValue,callback:function(e){n.inputValue=e},expression:"inputValue"}}),t("div",{staticClass:"el-message-box__errormsg",style:{visibility:n.editorErrorMessage?"visible":"hidden"}},[n._v(n._s(n.editorErrorMessage))])],1)]),t("div",{staticClass:"el-message-box__btns"},[n.showCancelButton?t("el-button",{class:[n.cancelButtonClasses],attrs:{loading:n.cancelButtonLoading,round:n.roundButton,size:"small"},on:{keydown:function(e){if(!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter"))return null;n.handleAction("cancel")}},nativeOn:{click:function(e){n.handleAction("cancel")}}},[n._v("\n          "+n._s(n.cancelButtonText||n.t("el.messagebox.cancel"))+"\n        ")]):n._e(),t("el-button",{directives:[{name:"show",rawName:"v-show",value:n.showConfirmButton,expression:"showConfirmButton"}],ref:"confirm",class:[n.confirmButtonClasses],attrs:{loading:n.confirmButtonLoading,round:n.roundButton,size:"small"},on:{keydown:function(e){if(!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter"))return null;n.handleAction("confirm")}},nativeOn:{click:function(e){n.handleAction("confirm")}}},[n._v("\n          "+n._s(n.confirmButtonText||n.t("el.messagebox.confirm"))+"\n        ")])],1)])])])};Ra._withStripped=!0;var $a=t(12),La=t.n($a),Ua=t(40),Na=t.n(Ua),qa=void 0,Ba={success:"success",info:"info",warning:"warning",error:"error"},Fa=a({mixins:[y.a,m.a],props:{modal:{default:!0},lockScroll:{default:!0},showClose:{type:Boolean,default:!0},closeOnClickModal:{default:!0},closeOnPressEscape:{default:!0},closeOnHashChange:{default:!0},center:{default:!1,type:Boolean},roundButton:{default:!1,type:Boolean}},components:{ElInput:p.a,ElButton:H.a},computed:{icon:function(){var n=this.type;return this.iconClass||(n&&Ba[n]?"el-icon-"+Ba[n]:"")},confirmButtonClasses:function(){return"el-button--primary "+this.confirmButtonClass},cancelButtonClasses:function(){return""+this.cancelButtonClass}},methods:{getSafeClose:function(){var n=this,e=this.uid;return function(){n.$nextTick((function(){e===n.uid&&n.doClose()}))}},doClose:function(){var n=this;this.visible&&(this.visible=!1,this._closing=!0,this.onClose&&this.onClose(),qa.closeDialog(),this.lockScroll&&setTimeout(this.restoreBodyStyle,200),this.opened=!1,this.doAfterClose(),setTimeout((function(){n.action&&n.callback(n.action,n)})))},handleWrapperClick:function(){this.closeOnClickModal&&this.handleAction(this.distinguishCancelAndClose?"close":"cancel")},handleInputEnter:function(){if("textarea"!==this.inputType)return this.handleAction("confirm")},handleAction:function(n){("prompt"!==this.$type||"confirm"!==n||this.validate())&&(this.action=n,"function"==typeof this.beforeClose?(this.close=this.getSafeClose(),this.beforeClose(n,this,this.close)):this.doClose())},validate:function(){if("prompt"===this.$type){var n=this.inputPattern;if(n&&!n.test(this.inputValue||""))return this.editorErrorMessage=this.inputErrorMessage||Object($a.t)("el.messagebox.error"),Object(gn.addClass)(this.getInputElement(),"invalid"),!1;var e=this.inputValidator;if("function"==typeof e){var t=e(this.inputValue);if(!1===t)return this.editorErrorMessage=this.inputErrorMessage||Object($a.t)("el.messagebox.error"),Object(gn.addClass)(this.getInputElement(),"invalid"),!1;if("string"==typeof t)return this.editorErrorMessage=t,Object(gn.addClass)(this.getInputElement(),"invalid"),!1}}return this.editorErrorMessage="",Object(gn.removeClass)(this.getInputElement(),"invalid"),!0},getFirstFocus:function(){var n=this.$el.querySelector(".el-message-box__btns .el-button"),e=this.$el.querySelector(".el-message-box__btns .el-message-box__title");return n||e},getInputElement:function(){var n=this.$refs.input.$refs;return n.input||n.textarea},handleClose:function(){this.handleAction("close")}},watch:{inputValue:{immediate:!0,handler:function(n){var e=this;this.$nextTick((function(t){"prompt"===e.$type&&null!==n&&e.validate()}))}},visible:function(n){var e=this;n&&(this.uid++,"alert"!==this.$type&&"confirm"!==this.$type||this.$nextTick((function(){e.$refs.confirm.$el.focus()})),this.focusAfterClosed=document.activeElement,qa=new Na.a(this.$el,this.focusAfterClosed,this.getFirstFocus())),"prompt"===this.$type&&(n?setTimeout((function(){e.$refs.input&&e.$refs.input.$el&&e.getInputElement().focus()}),500):(this.editorErrorMessage="",Object(gn.removeClass)(this.getInputElement(),"invalid")))}},mounted:function(){var n=this;this.$nextTick((function(){n.closeOnHashChange&&window.addEventListener("hashchange",n.close)}))},beforeDestroy:function(){this.closeOnHashChange&&window.removeEventListener("hashchange",this.close),setTimeout((function(){qa.closeDialog()}))},data:function(){return{uid:1,title:void 0,message:"",type:"",iconClass:"",customClass:"",showInput:!1,inputValue:null,inputPlaceholder:"",inputType:"text",inputPattern:null,inputValidator:null,inputErrorMessage:"",showConfirmButton:!0,showCancelButton:!1,action:"",confirmButtonText:"",cancelButtonText:"",confirmButtonLoading:!1,cancelButtonLoading:!1,confirmButtonClass:"",confirmButtonDisabled:!1,cancelButtonClass:"",editorErrorMessage:null,callback:null,dangerouslyUseHTMLString:!1,focusAfterClosed:null,isOnComposition:!1,distinguishCancelAndClose:!1}}},Ra,[],!1,null,null,null);Fa.options.__file="packages/message-box/src/main.vue";var Va=Fa.exports,Ga=t(22),Ha="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Wa={title:null,message:"",type:"",iconClass:"",showInput:!1,showClose:!0,modalFade:!0,lockScroll:!0,closeOnClickModal:!0,closeOnPressEscape:!0,closeOnHashChange:!0,inputValue:null,inputPlaceholder:"",inputType:"text",inputPattern:null,inputValidator:null,inputErrorMessage:"",showConfirmButton:!0,showCancelButton:!1,confirmButtonPosition:"right",confirmButtonHighlight:!1,cancelButtonHighlight:!1,confirmButtonText:"",cancelButtonText:"",confirmButtonClass:"",cancelButtonClass:"",customClass:"",beforeClose:null,dangerouslyUseHTMLString:!1,center:!1,roundButton:!1,distinguishCancelAndClose:!1},Qa=pt.a.extend(Va),Ka=void 0,Ya=void 0,Xa=[],Ja=function(n){if(Ka){var e=Ka.callback;"function"==typeof e&&(Ya.showInput?e(Ya.inputValue,n):e(n)),Ka.resolve&&("confirm"===n?Ya.showInput?Ka.resolve({value:Ya.inputValue,action:n}):Ka.resolve(n):!Ka.reject||"cancel"!==n&&"close"!==n||Ka.reject(n))}},Za=function n(){if(Ya||((Ya=new Qa({el:document.createElement("div")})).callback=Ja),Ya.action="",(!Ya.visible||Ya.closeTimer)&&Xa.length>0){var e=(Ka=Xa.shift()).options;for(var t in e)e.hasOwnProperty(t)&&(Ya[t]=e[t]);void 0===e.callback&&(Ya.callback=Ja);var i=Ya.callback;Ya.callback=function(e,t){i(e,t),n()},Object(Ga.isVNode)(Ya.message)?(Ya.$slots.default=[Ya.message],Ya.message=null):delete Ya.$slots.default,["modal","showClose","closeOnClickModal","closeOnPressEscape","closeOnHashChange"].forEach((function(n){void 0===Ya[n]&&(Ya[n]=!0)})),document.body.appendChild(Ya.$el),pt.a.nextTick((function(){Ya.visible=!0}))}},nr=function n(e,t){if(!pt.a.prototype.$isServer){if("string"==typeof e||Object(Ga.isVNode)(e)?(e={message:e},"string"==typeof arguments[1]&&(e.title=arguments[1])):e.callback&&!t&&(t=e.callback),"undefined"!=typeof Promise)return new Promise((function(i,a){Xa.push({options:Fn()({},Wa,n.defaults,e),callback:t,resolve:i,reject:a}),Za()}));Xa.push({options:Fn()({},Wa,n.defaults,e),callback:t}),Za()}};nr.setDefaults=function(n){nr.defaults=n},nr.alert=function(n,e,t){return"object"===(void 0===e?"undefined":Ha(e))?(t=e,e=""):void 0===e&&(e=""),nr(Fn()({title:e,message:n,$type:"alert",closeOnPressEscape:!1,closeOnClickModal:!1},t))},nr.confirm=function(n,e,t){return"object"===(void 0===e?"undefined":Ha(e))?(t=e,e=""):void 0===e&&(e=""),nr(Fn()({title:e,message:n,$type:"confirm",showCancelButton:!0},t))},nr.prompt=function(n,e,t){return"object"===(void 0===e?"undefined":Ha(e))?(t=e,e=""):void 0===e&&(e=""),nr(Fn()({title:e,message:n,showCancelButton:!0,showInput:!0,$type:"prompt"},t))},nr.close=function(){Ya.doClose(),Ya.visible=!1,Xa=[],Ka=null};var er=nr,tr=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-breadcrumb",attrs:{"aria-label":"Breadcrumb",role:"navigation"}},[this._t("default")],2)};tr._withStripped=!0;var ir=a({name:"ElBreadcrumb",props:{separator:{type:String,default:"/"},separatorClass:{type:String,default:""}},provide:function(){return{elBreadcrumb:this}},mounted:function(){var n=this.$el.querySelectorAll(".el-breadcrumb__item");n.length&&n[n.length-1].setAttribute("aria-current","page")}},tr,[],!1,null,null,null);ir.options.__file="packages/breadcrumb/src/breadcrumb.vue";var ar=ir.exports;ar.install=function(n){n.component(ar.name,ar)};var rr=ar,or=function(){var n=this.$createElement,e=this._self._c||n;return e("span",{staticClass:"el-breadcrumb__item"},[e("span",{ref:"link",class:["el-breadcrumb__inner",this.to?"is-link":""],attrs:{role:"link"}},[this._t("default")],2),this.separatorClass?e("i",{staticClass:"el-breadcrumb__separator",class:this.separatorClass}):e("span",{staticClass:"el-breadcrumb__separator",attrs:{role:"presentation"}},[this._v(this._s(this.separator))])])};or._withStripped=!0;var sr=a({name:"ElBreadcrumbItem",props:{to:{},replace:Boolean},data:function(){return{separator:"",separatorClass:""}},inject:["elBreadcrumb"],mounted:function(){var n=this;this.separator=this.elBreadcrumb.separator,this.separatorClass=this.elBreadcrumb.separatorClass;var e=this.$refs.link;e.setAttribute("role","link"),e.addEventListener("click",(function(e){var t=n.to,i=n.$router;t&&i&&(n.replace?i.replace(t):i.push(t))}))}},or,[],!1,null,null,null);sr.options.__file="packages/breadcrumb/src/breadcrumb-item.vue";var lr=sr.exports;lr.install=function(n){n.component(lr.name,lr)};var dr=lr,cr=function(){var n=this.$createElement;return(this._self._c||n)("form",{staticClass:"el-form",class:[this.labelPosition?"el-form--label-"+this.labelPosition:"",{"el-form--inline":this.inline}]},[this._t("default")],2)};cr._withStripped=!0;var ur=a({name:"ElForm",componentName:"ElForm",provide:function(){return{elForm:this}},props:{model:Object,rules:Object,labelPosition:String,labelWidth:String,labelSuffix:{type:String,default:""},inline:Boolean,inlineMessage:Boolean,statusIcon:Boolean,showMessage:{type:Boolean,default:!0},size:String,disabled:Boolean,validateOnRuleChange:{type:Boolean,default:!0},hideRequiredAsterisk:{type:Boolean,default:!1}},watch:{rules:function(){this.fields.forEach((function(n){n.removeValidateEvents(),n.addValidateEvents()})),this.validateOnRuleChange&&this.validate((function(){}))}},computed:{autoLabelWidth:function(){if(!this.potentialLabelWidthArr.length)return 0;var n=Math.max.apply(Math,this.potentialLabelWidthArr);return n?n+"px":""}},data:function(){return{fields:[],potentialLabelWidthArr:[]}},created:function(){var n=this;this.$on("el.form.addField",(function(e){e&&n.fields.push(e)})),this.$on("el.form.removeField",(function(e){e.prop&&n.fields.splice(n.fields.indexOf(e),1)}))},methods:{resetFields:function(){this.model?this.fields.forEach((function(n){n.resetField()})):console.warn("[Element Warn][Form]model is required for resetFields to work.")},clearValidate:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=n.length?"string"==typeof n?this.fields.filter((function(e){return n===e.prop})):this.fields.filter((function(e){return n.indexOf(e.prop)>-1})):this.fields;e.forEach((function(n){n.clearValidate()}))},validate:function(n){var e=this;if(this.model){var t=void 0;"function"!=typeof n&&window.Promise&&(t=new window.Promise((function(e,t){n=function(n,i){n?e(n):t(i)}})));var i=!0,a=0;0===this.fields.length&&n&&n(!0);var r={};return this.fields.forEach((function(t){t.validate("",(function(t,o){t&&(i=!1),r=Fn()({},r,o),"function"==typeof n&&++a===e.fields.length&&n(i,r)}))})),t||void 0}console.warn("[Element Warn][Form]model is required for validate to work!")},validateField:function(n,e){n=[].concat(n);var t=this.fields.filter((function(e){return-1!==n.indexOf(e.prop)}));t.length?t.forEach((function(n){n.validate("",e)})):console.warn("[Element Warn]please pass correct props!")},getLabelWidthIndex:function(n){var e=this.potentialLabelWidthArr.indexOf(n);if(-1===e)throw new Error("[ElementForm]unpected width ",n);return e},registerLabelWidth:function(n,e){if(n&&e){var t=this.getLabelWidthIndex(e);this.potentialLabelWidthArr.splice(t,1,n)}else n&&this.potentialLabelWidthArr.push(n)},deregisterLabelWidth:function(n){var e=this.getLabelWidthIndex(n);this.potentialLabelWidthArr.splice(e,1)}}},cr,[],!1,null,null,null);ur.options.__file="packages/form/src/form.vue";var pr=ur.exports;pr.install=function(n){n.component(pr.name,pr)};var hr=pr,mr=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-form-item",class:[{"el-form-item--feedback":n.elForm&&n.elForm.statusIcon,"is-error":"error"===n.validateState,"is-validating":"validating"===n.validateState,"is-success":"success"===n.validateState,"is-required":n.isRequired||n.required,"is-no-asterisk":n.elForm&&n.elForm.hideRequiredAsterisk},n.sizeClass?"el-form-item--"+n.sizeClass:""]},[t("label-wrap",{attrs:{"is-auto-width":n.labelStyle&&"auto"===n.labelStyle.width,"update-all":"auto"===n.form.labelWidth}},[n.label||n.$slots.label?t("label",{staticClass:"el-form-item__label",style:n.labelStyle,attrs:{for:n.labelFor}},[n._t("label",[n._v(n._s(n.label+n.form.labelSuffix))])],2):n._e()]),t("div",{staticClass:"el-form-item__content",style:n.contentStyle},[n._t("default"),t("transition",{attrs:{name:"el-zoom-in-top"}},["error"===n.validateState&&n.showMessage&&n.form.showMessage?n._t("error",[t("div",{staticClass:"el-form-item__error",class:{"el-form-item__error--inline":"boolean"==typeof n.inlineMessage?n.inlineMessage:n.elForm&&n.elForm.inlineMessage||!1}},[n._v("\n          "+n._s(n.validateMessage)+"\n        ")])],{error:n.validateMessage}):n._e()],2)],2)],1)};mr._withStripped=!0;var gr=t(41),fr=t.n(gr),vr=a({props:{isAutoWidth:Boolean,updateAll:Boolean},inject:["elForm","elFormItem"],render:function(){var n=arguments[0],e=this.$slots.default;if(!e)return null;if(this.isAutoWidth){var t=this.elForm.autoLabelWidth,i={};if(t&&"auto"!==t){var a=parseInt(t,10)-this.computedWidth;a&&(i.marginLeft=a+"px")}return n("div",{class:"el-form-item__label-wrap",style:i},[e])}return e[0]},methods:{getLabelWidth:function(){if(this.$el&&this.$el.firstElementChild){var n=window.getComputedStyle(this.$el.firstElementChild).width;return Math.ceil(parseFloat(n))}return 0},updateLabelWidth:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"update";this.$slots.default&&this.isAutoWidth&&this.$el.firstElementChild&&("update"===n?this.computedWidth=this.getLabelWidth():"remove"===n&&this.elForm.deregisterLabelWidth(this.computedWidth))}},watch:{computedWidth:function(n,e){this.updateAll&&(this.elForm.registerLabelWidth(n,e),this.elFormItem.updateComputedLabelWidth(n))}},data:function(){return{computedWidth:0}},mounted:function(){this.updateLabelWidth("update")},updated:function(){this.updateLabelWidth("update")},beforeDestroy:function(){this.updateLabelWidth("remove")}},void 0,void 0,!1,null,null,null);vr.options.__file="packages/form/src/label-wrap.vue";var br=vr.exports,_r=a({name:"ElFormItem",componentName:"ElFormItem",mixins:[w.a],provide:function(){return{elFormItem:this}},inject:["elForm"],props:{label:String,labelWidth:String,prop:String,required:{type:Boolean,default:void 0},rules:[Object,Array],error:String,validateStatus:String,for:String,inlineMessage:{type:[String,Boolean],default:""},showMessage:{type:Boolean,default:!0},size:String},components:{LabelWrap:br},watch:{error:{immediate:!0,handler:function(n){this.validateMessage=n,this.validateState=n?"error":""}},validateStatus:function(n){this.validateState=n},rules:function(n){n&&0!==n.length||void 0!==this.required||this.clearValidate()}},computed:{labelFor:function(){return this.for||this.prop},labelStyle:function(){var n={};if("top"===this.form.labelPosition)return n;var e=this.labelWidth||this.form.labelWidth;return e&&(n.width=e),n},contentStyle:function(){var n={},e=this.label;if("top"===this.form.labelPosition||this.form.inline)return n;if(!e&&!this.labelWidth&&this.isNested)return n;var t=this.labelWidth||this.form.labelWidth;return"auto"===t?"auto"===this.labelWidth?n.marginLeft=this.computedLabelWidth:"auto"===this.form.labelWidth&&(n.marginLeft=this.elForm.autoLabelWidth):n.marginLeft=t,n},form:function(){for(var n=this.$parent,e=n.$options.componentName;"ElForm"!==e;)"ElFormItem"===e&&(this.isNested=!0),e=(n=n.$parent).$options.componentName;return n},fieldValue:function(){var n=this.form.model;if(n&&this.prop){var e=this.prop;return-1!==e.indexOf(":")&&(e=e.replace(/:/,".")),Object(g.getPropByPath)(n,e,!0).v}},isRequired:function(){var n=this.getRules(),e=!1;return n&&n.length&&n.every((function(n){return!n.required||(e=!0,!1)})),e},_formSize:function(){return this.elForm.size},elFormItemSize:function(){return this.size||this._formSize},sizeClass:function(){return this.elFormItemSize||(this.$ELEMENT||{}).size}},data:function(){return{validateState:"",validateMessage:"",validateDisabled:!1,validator:{},isNested:!1,computedLabelWidth:""}},methods:{validate:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:g.noop;this.validateDisabled=!1;var i=this.getFilteredRule(n);if((!i||0===i.length)&&void 0===this.required)return t(),!0;this.validateState="validating";var a={};i&&i.length>0&&i.forEach((function(n){delete n.trigger})),a[this.prop]=i;var r=new fr.a(a),o={};o[this.prop]=this.fieldValue,r.validate(o,{firstFields:!0},(function(n,i){e.validateState=n?"error":"success",e.validateMessage=n?n[0].message:"",t(e.validateMessage,i),e.elForm&&e.elForm.$emit("validate",e.prop,!n,e.validateMessage||null)}))},clearValidate:function(){this.validateState="",this.validateMessage="",this.validateDisabled=!1},resetField:function(){var n=this;this.validateState="",this.validateMessage="";var e=this.form.model,t=this.fieldValue,i=this.prop;-1!==i.indexOf(":")&&(i=i.replace(/:/,"."));var a=Object(g.getPropByPath)(e,i,!0);this.validateDisabled=!0,Array.isArray(t)?a.o[a.k]=[].concat(this.initialValue):a.o[a.k]=this.initialValue,this.$nextTick((function(){n.validateDisabled=!1})),this.broadcast("ElTimeSelect","fieldReset",this.initialValue)},getRules:function(){var n=this.form.rules,e=this.rules,t=void 0!==this.required?{required:!!this.required}:[],i=Object(g.getPropByPath)(n,this.prop||"");return n=n?i.o[this.prop||""]||i.v:[],[].concat(e||n||[]).concat(t)},getFilteredRule:function(n){return this.getRules().filter((function(e){return!e.trigger||""===n||(Array.isArray(e.trigger)?e.trigger.indexOf(n)>-1:e.trigger===n)})).map((function(n){return Fn()({},n)}))},onFieldBlur:function(){this.validate("blur")},onFieldChange:function(){this.validateDisabled?this.validateDisabled=!1:this.validate("change")},updateComputedLabelWidth:function(n){this.computedLabelWidth=n?n+"px":""},addValidateEvents:function(){(this.getRules().length||void 0!==this.required)&&(this.$on("el.form.blur",this.onFieldBlur),this.$on("el.form.change",this.onFieldChange))},removeValidateEvents:function(){this.$off()}},mounted:function(){if(this.prop){this.dispatch("ElForm","el.form.addField",[this]);var n=this.fieldValue;Array.isArray(n)&&(n=[].concat(n)),Object.defineProperty(this,"initialValue",{value:n}),this.addValidateEvents()}},beforeDestroy:function(){this.dispatch("ElForm","el.form.removeField",[this])}},mr,[],!1,null,null,null);_r.options.__file="packages/form/src/form-item.vue";var yr=_r.exports;yr.install=function(n){n.component(yr.name,yr)};var xr=yr,kr=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-tabs__active-bar",class:"is-"+this.rootTabs.tabPosition,style:this.barStyle})};kr._withStripped=!0;var Tr=a({name:"TabBar",props:{tabs:Array},inject:["rootTabs"],computed:{barStyle:{get:function(){var n=this,e={},t=0,i=0,a=-1!==["top","bottom"].indexOf(this.rootTabs.tabPosition)?"width":"height",r="width"===a?"x":"y",o=function(n){return n.toLowerCase().replace(/( |^)[a-z]/g,(function(n){return n.toUpperCase()}))};this.tabs.every((function(e,r){var s=Object(g.arrayFind)(n.$parent.$refs.tabs||[],(function(n){return n.id.replace("tab-","")===e.paneName}));if(!s)return!1;if(e.active){i=s["client"+o(a)];var l=window.getComputedStyle(s);return"width"===a&&n.tabs.length>1&&(i-=parseFloat(l.paddingLeft)+parseFloat(l.paddingRight)),"width"===a&&(t+=parseFloat(l.paddingLeft)),!1}return t+=s["client"+o(a)],!0}));var s="translate"+o(r)+"("+t+"px)";return e[a]=i+"px",e.transform=s,e.msTransform=s,e.webkitTransform=s,e}}}},kr,[],!1,null,null,null);Tr.options.__file="packages/tabs/src/tab-bar.vue";var wr=Tr.exports;function Ir(){}var Cr=function(n){return n.toLowerCase().replace(/( |^)[a-z]/g,(function(n){return n.toUpperCase()}))},Dr=a({name:"TabNav",components:{TabBar:wr},inject:["rootTabs"],props:{panes:Array,currentName:String,editable:Boolean,onTabClick:{type:Function,default:Ir},onTabRemove:{type:Function,default:Ir},type:String,stretch:Boolean},data:function(){return{scrollable:!1,navOffset:0,isFocus:!1,focusable:!0}},computed:{navStyle:function(){return{transform:"translate"+(-1!==["top","bottom"].indexOf(this.rootTabs.tabPosition)?"X":"Y")+"(-"+this.navOffset+"px)"}},sizeName:function(){return-1!==["top","bottom"].indexOf(this.rootTabs.tabPosition)?"width":"height"}},methods:{scrollPrev:function(){var n=this.$refs.navScroll["offset"+Cr(this.sizeName)],e=this.navOffset;if(e){var t=e>n?e-n:0;this.navOffset=t}},scrollNext:function(){var n=this.$refs.nav["offset"+Cr(this.sizeName)],e=this.$refs.navScroll["offset"+Cr(this.sizeName)],t=this.navOffset;if(!(n-t<=e)){var i=n-t>2*e?t+e:n-e;this.navOffset=i}},scrollToActiveTab:function(){if(this.scrollable){var n=this.$refs.nav,e=this.$el.querySelector(".is-active");if(e){var t=this.$refs.navScroll,i=-1!==["top","bottom"].indexOf(this.rootTabs.tabPosition),a=e.getBoundingClientRect(),r=t.getBoundingClientRect(),o=i?n.offsetWidth-r.width:n.offsetHeight-r.height,s=this.navOffset,l=s;i?(a.left<r.left&&(l=s-(r.left-a.left)),a.right>r.right&&(l=s+a.right-r.right)):(a.top<r.top&&(l=s-(r.top-a.top)),a.bottom>r.bottom&&(l=s+(a.bottom-r.bottom))),l=Math.max(l,0),this.navOffset=Math.min(l,o)}}},update:function(){if(this.$refs.nav){var n=this.sizeName,e=this.$refs.nav["offset"+Cr(n)],t=this.$refs.navScroll["offset"+Cr(n)],i=this.navOffset;if(t<e){var a=this.navOffset;this.scrollable=this.scrollable||{},this.scrollable.prev=a,this.scrollable.next=a+t<e,e-a<t&&(this.navOffset=e-t)}else this.scrollable=!1,i>0&&(this.navOffset=0)}},changeTab:function(n){var e=n.keyCode,t=void 0,i=void 0,a=void 0;-1!==[37,38,39,40].indexOf(e)&&(a=n.currentTarget.querySelectorAll("[role=tab]"),i=Array.prototype.indexOf.call(a,n.target),a[t=37===e||38===e?0===i?a.length-1:i-1:i<a.length-1?i+1:0].focus(),a[t].click(),this.setFocus())},setFocus:function(){this.focusable&&(this.isFocus=!0)},removeFocus:function(){this.isFocus=!1},visibilityChangeHandler:function(){var n=this,e=document.visibilityState;"hidden"===e?this.focusable=!1:"visible"===e&&setTimeout((function(){n.focusable=!0}),50)},windowBlurHandler:function(){this.focusable=!1},windowFocusHandler:function(){var n=this;setTimeout((function(){n.focusable=!0}),50)}},updated:function(){this.update()},render:function(n){var e=this,t=this.type,i=this.panes,a=this.editable,r=this.stretch,o=this.onTabClick,s=this.onTabRemove,l=this.navStyle,d=this.scrollable,c=this.scrollNext,u=this.scrollPrev,p=this.changeTab,h=this.setFocus,m=this.removeFocus,g=d?[n("span",{class:["el-tabs__nav-prev",d.prev?"":"is-disabled"],on:{click:u}},[n("i",{class:"el-icon-arrow-left"})]),n("span",{class:["el-tabs__nav-next",d.next?"":"is-disabled"],on:{click:c}},[n("i",{class:"el-icon-arrow-right"})])]:null,f=this._l(i,(function(t,i){var r,l=t.name||t.index||i,d=t.isClosable||a;t.index=""+i;var c=d?n("span",{class:"el-icon-close",on:{click:function(n){s(t,n)}}}):null,u=t.$slots.label||t.label,p=t.active?0:-1;return n("div",{class:(r={"el-tabs__item":!0},r["is-"+e.rootTabs.tabPosition]=!0,r["is-active"]=t.active,r["is-disabled"]=t.disabled,r["is-closable"]=d,r["is-focus"]=e.isFocus,r),attrs:{id:"tab-"+l,"aria-controls":"pane-"+l,role:"tab","aria-selected":t.active,tabindex:p},key:"tab-"+l,ref:"tabs",refInFor:!0,on:{focus:function(){h()},blur:function(){m()},click:function(n){m(),o(t,l,n)},keydown:function(n){!d||46!==n.keyCode&&8!==n.keyCode||s(t,n)}}},[u,c])}));return n("div",{class:["el-tabs__nav-wrap",d?"is-scrollable":"","is-"+this.rootTabs.tabPosition]},[g,n("div",{class:["el-tabs__nav-scroll"],ref:"navScroll"},[n("div",{class:["el-tabs__nav","is-"+this.rootTabs.tabPosition,r&&-1!==["top","bottom"].indexOf(this.rootTabs.tabPosition)?"is-stretch":""],ref:"nav",style:l,attrs:{role:"tablist"},on:{keydown:p}},[t?null:n("tab-bar",{attrs:{tabs:i}}),f])])])},mounted:function(){var n=this;Object(Le.addResizeListener)(this.$el,this.update),document.addEventListener("visibilitychange",this.visibilityChangeHandler),window.addEventListener("blur",this.windowBlurHandler),window.addEventListener("focus",this.windowFocusHandler),setTimeout((function(){n.scrollToActiveTab()}),0)},beforeDestroy:function(){this.$el&&this.update&&Object(Le.removeResizeListener)(this.$el,this.update),document.removeEventListener("visibilitychange",this.visibilityChangeHandler),window.removeEventListener("blur",this.windowBlurHandler),window.removeEventListener("focus",this.windowFocusHandler)}},void 0,void 0,!1,null,null,null);Dr.options.__file="packages/tabs/src/tab-nav.vue";var Er=a({name:"ElTabs",components:{TabNav:Dr.exports},props:{type:String,activeName:String,closable:Boolean,addable:Boolean,value:{},editable:Boolean,tabPosition:{type:String,default:"top"},beforeLeave:Function,stretch:Boolean},provide:function(){return{rootTabs:this}},data:function(){return{currentName:this.value||this.activeName,panes:[]}},watch:{activeName:function(n){this.setCurrentName(n)},value:function(n){this.setCurrentName(n)},currentName:function(n){var e=this;this.$refs.nav&&this.$nextTick((function(){e.$refs.nav.$nextTick((function(n){e.$refs.nav.scrollToActiveTab()}))}))}},methods:{calcPaneInstances:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.$slots.default){var t=this.$slots.default.filter((function(n){return n.tag&&n.componentOptions&&"ElTabPane"===n.componentOptions.Ctor.options.name})),i=t.map((function(n){return n.componentInstance})),a=!(i.length===this.panes.length&&i.every((function(e,t){return e===n.panes[t]})));(e||a)&&(this.panes=i)}else 0!==this.panes.length&&(this.panes=[])},handleTabClick:function(n,e,t){n.disabled||(this.setCurrentName(e),this.$emit("tab-click",n,t))},handleTabRemove:function(n,e){n.disabled||(e.stopPropagation(),this.$emit("edit",n.name,"remove"),this.$emit("tab-remove",n.name))},handleTabAdd:function(){this.$emit("edit",null,"add"),this.$emit("tab-add")},setCurrentName:function(n){var e=this,t=function(){e.currentName=n,e.$emit("input",n)};if(this.currentName!==n&&this.beforeLeave){var i=this.beforeLeave(n,this.currentName);i&&i.then?i.then((function(){t(),e.$refs.nav&&e.$refs.nav.removeFocus()}),(function(){})):!1!==i&&t()}else t()}},render:function(n){var e,t=this.type,i=this.handleTabClick,a=this.handleTabRemove,r=this.handleTabAdd,o=this.currentName,s=this.panes,l=this.editable,d=this.addable,c=this.tabPosition,u=this.stretch,p=l||d?n("span",{class:"el-tabs__new-tab",on:{click:r,keydown:function(n){13===n.keyCode&&r()}},attrs:{tabindex:"0"}},[n("i",{class:"el-icon-plus"})]):null,h=n("div",{class:["el-tabs__header","is-"+c]},[p,n("tab-nav",{props:{currentName:o,onTabClick:i,onTabRemove:a,editable:l,type:t,panes:s,stretch:u},ref:"nav"})]),m=n("div",{class:"el-tabs__content"},[this.$slots.default]);return n("div",{class:(e={"el-tabs":!0,"el-tabs--card":"card"===t},e["el-tabs--"+c]=!0,e["el-tabs--border-card"]="border-card"===t,e)},["bottom"!==c?[h,m]:[m,h]])},created:function(){this.currentName||this.setCurrentName("0"),this.$on("tab-nav-update",this.calcPaneInstances.bind(null,!0))},mounted:function(){this.calcPaneInstances()},updated:function(){this.calcPaneInstances()}},void 0,void 0,!1,null,null,null);Er.options.__file="packages/tabs/src/tabs.vue";var Sr=Er.exports;Sr.install=function(n){n.component(Sr.name,Sr)};var Mr=Sr,Ar=function(){var n=this,e=n.$createElement,t=n._self._c||e;return!n.lazy||n.loaded||n.active?t("div",{directives:[{name:"show",rawName:"v-show",value:n.active,expression:"active"}],staticClass:"el-tab-pane",attrs:{role:"tabpanel","aria-hidden":!n.active,id:"pane-"+n.paneName,"aria-labelledby":"tab-"+n.paneName}},[n._t("default")],2):n._e()};Ar._withStripped=!0;var Or=a({name:"ElTabPane",componentName:"ElTabPane",props:{label:String,labelContent:Function,name:String,closable:Boolean,disabled:Boolean,lazy:Boolean},data:function(){return{index:null,loaded:!1}},computed:{isClosable:function(){return this.closable||this.$parent.closable},active:function(){var n=this.$parent.currentName===(this.name||this.index);return n&&(this.loaded=!0),n},paneName:function(){return this.name||this.index}},updated:function(){this.$parent.$emit("tab-nav-update")}},Ar,[],!1,null,null,null);Or.options.__file="packages/tabs/src/tab-pane.vue";var Pr=Or.exports;Pr.install=function(n){n.component(Pr.name,Pr)};var jr=Pr,zr=a({name:"ElTag",props:{text:String,closable:Boolean,type:String,hit:Boolean,disableTransitions:Boolean,color:String,size:String,effect:{type:String,default:"light",validator:function(n){return-1!==["dark","light","plain"].indexOf(n)}}},methods:{handleClose:function(n){n.stopPropagation(),this.$emit("close",n)},handleClick:function(n){this.$emit("click",n)}},computed:{tagSize:function(){return this.size||(this.$ELEMENT||{}).size}},render:function(n){var e=this.type,t=this.tagSize,i=this.hit,a=this.effect,r=n("span",{class:["el-tag",e?"el-tag--"+e:"",t?"el-tag--"+t:"",a?"el-tag--"+a:"",i&&"is-hit"],style:{backgroundColor:this.color},on:{click:this.handleClick}},[this.$slots.default,this.closable&&n("i",{class:"el-tag__close el-icon-close",on:{click:this.handleClose}})]);return this.disableTransitions?r:n("transition",{attrs:{name:"el-zoom-in-center"}},[r])}},void 0,void 0,!1,null,null,null);zr.options.__file="packages/tag/src/tag.vue";var Rr=zr.exports;Rr.install=function(n){n.component(Rr.name,Rr)};var $r=Rr,Lr=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-tree",class:{"el-tree--highlight-current":n.highlightCurrent,"is-dragging":!!n.dragState.draggingNode,"is-drop-not-allow":!n.dragState.allowDrop,"is-drop-inner":"inner"===n.dragState.dropType},attrs:{role:"tree"}},[n._l(n.root.childNodes,(function(e){return t("el-tree-node",{key:n.getNodeKey(e),attrs:{node:e,props:n.props,"render-after-expand":n.renderAfterExpand,"show-checkbox":n.showCheckbox,"render-content":n.renderContent},on:{"node-expand":n.handleNodeExpand}})})),n.isEmpty?t("div",{staticClass:"el-tree__empty-block"},[t("span",{staticClass:"el-tree__empty-text"},[n._v(n._s(n.emptyText))])]):n._e(),t("div",{directives:[{name:"show",rawName:"v-show",value:n.dragState.showDropIndicator,expression:"dragState.showDropIndicator"}],ref:"dropIndicator",staticClass:"el-tree__drop-indicator"})],2)};Lr._withStripped=!0;var Ur="$treeNodeId",Nr=function(n,e){e&&!e[Ur]&&Object.defineProperty(e,Ur,{value:n.id,enumerable:!1,configurable:!1,writable:!1})},qr=function(n,e){return n?e[n]:e[Ur]},Br=function(){function n(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}();var Fr=function(n){for(var e=!0,t=!0,i=!0,a=0,r=n.length;a<r;a++){var o=n[a];(!0!==o.checked||o.indeterminate)&&(e=!1,o.disabled||(i=!1)),(!1!==o.checked||o.indeterminate)&&(t=!1)}return{all:e,none:t,allWithoutDisable:i,half:!e&&!t}},Vr=function n(e){if(0!==e.childNodes.length&&!e.loading){var t=Fr(e.childNodes),i=t.all,a=t.none,r=t.half;i?(e.checked=!0,e.indeterminate=!1):r?(e.checked=!1,e.indeterminate=!0):a&&(e.checked=!1,e.indeterminate=!1);var o=e.parent;o&&0!==o.level&&(e.store.checkStrictly||n(o))}},Gr=function(n,e){var t=n.store.props,i=n.data||{},a=t[e];if("function"==typeof a)return a(i,n);if("string"==typeof a)return i[a];if(void 0===a){var r=i[e];return void 0===r?"":r}},Hr=0,Wr=function(){function n(e){for(var t in function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.id=Hr++,this.text=null,this.checked=!1,this.indeterminate=!1,this.data=null,this.expanded=!1,this.parent=null,this.visible=!0,this.isCurrent=!1,e)e.hasOwnProperty(t)&&(this[t]=e[t]);this.level=0,this.loaded=!1,this.childNodes=[],this.loading=!1,this.parent&&(this.level=this.parent.level+1);var i=this.store;if(!i)throw new Error("[Node]store is required!");i.registerNode(this);var a=i.props;if(a&&void 0!==a.isLeaf){var r=Gr(this,"isLeaf");"boolean"==typeof r&&(this.isLeafByUser=r)}if(!0!==i.lazy&&this.data?(this.setData(this.data),i.defaultExpandAll&&(this.expanded=!0)):this.level>0&&i.lazy&&i.defaultExpandAll&&this.expand(),Array.isArray(this.data)||Nr(this,this.data),this.data){var o=i.defaultExpandedKeys,s=i.key;s&&o&&-1!==o.indexOf(this.key)&&this.expand(null,i.autoExpandParent),s&&void 0!==i.currentNodeKey&&this.key===i.currentNodeKey&&(i.currentNode=this,i.currentNode.isCurrent=!0),i.lazy&&i._initDefaultCheckedNode(this),this.updateLeafState()}}return n.prototype.setData=function(n){Array.isArray(n)||Nr(this,n),this.data=n,this.childNodes=[];for(var e=void 0,t=0,i=(e=0===this.level&&this.data instanceof Array?this.data:Gr(this,"children")||[]).length;t<i;t++)this.insertChild({data:e[t]})},n.prototype.contains=function(n){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=function t(i){for(var a=i.childNodes||[],r=!1,o=0,s=a.length;o<s;o++){var l=a[o];if(l===n||e&&t(l)){r=!0;break}}return r};return t(this)},n.prototype.remove=function(){var n=this.parent;n&&n.removeChild(this)},n.prototype.insertChild=function(e,t,i){if(!e)throw new Error("insertChild error: child is required.");if(!(e instanceof n)){if(!i){var a=this.getChildren(!0)||[];-1===a.indexOf(e.data)&&(void 0===t||t<0?a.push(e.data):a.splice(t,0,e.data))}Fn()(e,{parent:this,store:this.store}),e=new n(e)}e.level=this.level+1,void 0===t||t<0?this.childNodes.push(e):this.childNodes.splice(t,0,e),this.updateLeafState()},n.prototype.insertBefore=function(n,e){var t=void 0;e&&(t=this.childNodes.indexOf(e)),this.insertChild(n,t)},n.prototype.insertAfter=function(n,e){var t=void 0;e&&-1!==(t=this.childNodes.indexOf(e))&&(t+=1),this.insertChild(n,t)},n.prototype.removeChild=function(n){var e=this.getChildren()||[],t=e.indexOf(n.data);t>-1&&e.splice(t,1);var i=this.childNodes.indexOf(n);i>-1&&(this.store&&this.store.deregisterNode(n),n.parent=null,this.childNodes.splice(i,1)),this.updateLeafState()},n.prototype.removeChildByData=function(n){for(var e=null,t=0;t<this.childNodes.length;t++)if(this.childNodes[t].data===n){e=this.childNodes[t];break}e&&this.removeChild(e)},n.prototype.expand=function(n,e){var t=this,i=function(){if(e)for(var i=t.parent;i.level>0;)i.expanded=!0,i=i.parent;t.expanded=!0,n&&n()};this.shouldLoadData()?this.loadData((function(n){n instanceof Array&&(t.checked?t.setChecked(!0,!0):t.store.checkStrictly||Vr(t),i())})):i()},n.prototype.doCreateChildren=function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};n.forEach((function(n){e.insertChild(Fn()({data:n},t),void 0,!0)}))},n.prototype.collapse=function(){this.expanded=!1},n.prototype.shouldLoadData=function(){return!0===this.store.lazy&&this.store.load&&!this.loaded},n.prototype.updateLeafState=function(){if(!0!==this.store.lazy||!0===this.loaded||void 0===this.isLeafByUser){var n=this.childNodes;!this.store.lazy||!0===this.store.lazy&&!0===this.loaded?this.isLeaf=!n||0===n.length:this.isLeaf=!1}else this.isLeaf=this.isLeafByUser},n.prototype.setChecked=function(n,e,t,i){var a=this;if(this.indeterminate="half"===n,this.checked=!0===n,!this.store.checkStrictly){if(!this.shouldLoadData()||this.store.checkDescendants){var r=Fr(this.childNodes),o=r.all,s=r.allWithoutDisable;this.isLeaf||o||!s||(this.checked=!1,n=!1);var l=function(){if(e){for(var t=a.childNodes,r=0,o=t.length;r<o;r++){var s=t[r];i=i||!1!==n;var l=s.disabled?s.checked:i;s.setChecked(l,e,!0,i)}var d=Fr(t),c=d.half,u=d.all;u||(a.checked=u,a.indeterminate=c)}};if(this.shouldLoadData())return void this.loadData((function(){l(),Vr(a)}),{checked:!1!==n});l()}var d=this.parent;d&&0!==d.level&&(t||Vr(d))}},n.prototype.getChildren=function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(0===this.level)return this.data;var e=this.data;if(!e)return null;var t=this.store.props,i="children";return t&&(i=t.children||"children"),void 0===e[i]&&(e[i]=null),n&&!e[i]&&(e[i]=[]),e[i]},n.prototype.updateChildren=function(){var n=this,e=this.getChildren()||[],t=this.childNodes.map((function(n){return n.data})),i={},a=[];e.forEach((function(n,e){var r=n[Ur];!!r&&Object(g.arrayFindIndex)(t,(function(n){return n[Ur]===r}))>=0?i[r]={index:e,data:n}:a.push({index:e,data:n})})),this.store.lazy||t.forEach((function(e){i[e[Ur]]||n.removeChildByData(e)})),a.forEach((function(e){var t=e.index,i=e.data;n.insertChild({data:i},t)})),this.updateLeafState()},n.prototype.loadData=function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!0!==this.store.lazy||!this.store.load||this.loaded||this.loading&&!Object.keys(t).length)n&&n.call(this);else{this.loading=!0;var i=function(i){e.childNodes=[],e.doCreateChildren(i,t),e.loaded=!0,e.loading=!1,e.updateLeafState(),n&&n.call(e,i)};this.store.load(this,i)}},Br(n,[{key:"label",get:function(){return Gr(this,"label")}},{key:"key",get:function(){var n=this.store.key;return this.data?this.data[n]:null}},{key:"disabled",get:function(){return Gr(this,"disabled")}},{key:"nextSibling",get:function(){var n=this.parent;if(n){var e=n.childNodes.indexOf(this);if(e>-1)return n.childNodes[e+1]}return null}},{key:"previousSibling",get:function(){var n=this.parent;if(n){var e=n.childNodes.indexOf(this);if(e>-1)return e>0?n.childNodes[e-1]:null}return null}}]),n}(),Qr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};var Kr=function(){function n(e){var t=this;for(var i in function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.currentNode=null,this.currentNodeKey=null,e)e.hasOwnProperty(i)&&(this[i]=e[i]);(this.nodesMap={},this.root=new Wr({data:this.data,store:this}),this.lazy&&this.load)?(0,this.load)(this.root,(function(n){t.root.doCreateChildren(n),t._initDefaultCheckedNodes()})):this._initDefaultCheckedNodes()}return n.prototype.filter=function(n){var e=this.filterNodeMethod,t=this.lazy;!function i(a){var r=a.root?a.root.childNodes:a.childNodes;if(r.forEach((function(t){t.visible=e.call(t,n,t.data,t),i(t)})),!a.visible&&r.length){var o;o=!r.some((function(n){return n.visible})),a.root?a.root.visible=!1===o:a.visible=!1===o}n&&(!a.visible||a.isLeaf||t||a.expand())}(this)},n.prototype.setData=function(n){n!==this.root.data?(this.root.setData(n),this._initDefaultCheckedNodes()):this.root.updateChildren()},n.prototype.getNode=function(n){if(n instanceof Wr)return n;var e="object"!==(void 0===n?"undefined":Qr(n))?n:qr(this.key,n);return this.nodesMap[e]||null},n.prototype.insertBefore=function(n,e){var t=this.getNode(e);t.parent.insertBefore({data:n},t)},n.prototype.insertAfter=function(n,e){var t=this.getNode(e);t.parent.insertAfter({data:n},t)},n.prototype.remove=function(n){var e=this.getNode(n);e&&e.parent&&(e===this.currentNode&&(this.currentNode=null),e.parent.removeChild(e))},n.prototype.append=function(n,e){var t=e?this.getNode(e):this.root;t&&t.insertChild({data:n})},n.prototype._initDefaultCheckedNodes=function(){var n=this,e=this.defaultCheckedKeys||[],t=this.nodesMap;e.forEach((function(e){var i=t[e];i&&i.setChecked(!0,!n.checkStrictly)}))},n.prototype._initDefaultCheckedNode=function(n){-1!==(this.defaultCheckedKeys||[]).indexOf(n.key)&&n.setChecked(!0,!this.checkStrictly)},n.prototype.setDefaultCheckedKey=function(n){n!==this.defaultCheckedKeys&&(this.defaultCheckedKeys=n,this._initDefaultCheckedNodes())},n.prototype.registerNode=function(n){this.key&&n&&n.data&&(void 0!==n.key&&(this.nodesMap[n.key]=n))},n.prototype.deregisterNode=function(n){var e=this;this.key&&n&&n.data&&(n.childNodes.forEach((function(n){e.deregisterNode(n)})),delete this.nodesMap[n.key])},n.prototype.getCheckedNodes=function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=[],i=function i(a){(a.root?a.root.childNodes:a.childNodes).forEach((function(a){(a.checked||e&&a.indeterminate)&&(!n||n&&a.isLeaf)&&t.push(a.data),i(a)}))};return i(this),t},n.prototype.getCheckedKeys=function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this.getCheckedNodes(e).map((function(e){return(e||{})[n.key]}))},n.prototype.getHalfCheckedNodes=function(){var n=[];return function e(t){(t.root?t.root.childNodes:t.childNodes).forEach((function(t){t.indeterminate&&n.push(t.data),e(t)}))}(this),n},n.prototype.getHalfCheckedKeys=function(){var n=this;return this.getHalfCheckedNodes().map((function(e){return(e||{})[n.key]}))},n.prototype._getAllNodes=function(){var n=[],e=this.nodesMap;for(var t in e)e.hasOwnProperty(t)&&n.push(e[t]);return n},n.prototype.updateChildren=function(n,e){var t=this.nodesMap[n];if(t){for(var i=t.childNodes,a=i.length-1;a>=0;a--){var r=i[a];this.remove(r.data)}for(var o=0,s=e.length;o<s;o++){var l=e[o];this.append(l,t.data)}}},n.prototype._setCheckedKeys=function(n){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=arguments[2],i=this._getAllNodes().sort((function(n,e){return e.level-n.level})),a=Object.create(null),r=Object.keys(t);i.forEach((function(n){return n.setChecked(!1,!1)}));for(var o=0,s=i.length;o<s;o++){var l=i[o],d=l.data[n].toString(),c=r.indexOf(d)>-1;if(c){for(var u=l.parent;u&&u.level>0;)a[u.data[n]]=!0,u=u.parent;l.isLeaf||this.checkStrictly?l.setChecked(!0,!1):(l.setChecked(!0,!0),e&&function(){l.setChecked(!1,!1);!function n(e){e.childNodes.forEach((function(e){e.isLeaf||e.setChecked(!1,!1),n(e)}))}(l)}())}else l.checked&&!a[d]&&l.setChecked(!1,!1)}},n.prototype.setCheckedNodes=function(n){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=this.key,i={};n.forEach((function(n){i[(n||{})[t]]=!0})),this._setCheckedKeys(t,e,i)},n.prototype.setCheckedKeys=function(n){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.defaultCheckedKeys=n;var t=this.key,i={};n.forEach((function(n){i[n]=!0})),this._setCheckedKeys(t,e,i)},n.prototype.setDefaultExpandedKeys=function(n){var e=this;n=n||[],this.defaultExpandedKeys=n,n.forEach((function(n){var t=e.getNode(n);t&&t.expand(null,e.autoExpandParent)}))},n.prototype.setChecked=function(n,e,t){var i=this.getNode(n);i&&i.setChecked(!!e,t)},n.prototype.getCurrentNode=function(){return this.currentNode},n.prototype.setCurrentNode=function(n){var e=this.currentNode;e&&(e.isCurrent=!1),this.currentNode=n,this.currentNode.isCurrent=!0},n.prototype.setUserCurrentNode=function(n){var e=n[this.key],t=this.nodesMap[e];this.setCurrentNode(t)},n.prototype.setCurrentNodeKey=function(n){if(null==n)return this.currentNode&&(this.currentNode.isCurrent=!1),void(this.currentNode=null);var e=this.getNode(n);e&&this.setCurrentNode(e)},n}(),Yr=function(){var n=this,e=this,t=e.$createElement,i=e._self._c||t;return i("div",{directives:[{name:"show",rawName:"v-show",value:e.node.visible,expression:"node.visible"}],ref:"node",staticClass:"el-tree-node",class:{"is-expanded":e.expanded,"is-current":e.node.isCurrent,"is-hidden":!e.node.visible,"is-focusable":!e.node.disabled,"is-checked":!e.node.disabled&&e.node.checked},attrs:{role:"treeitem",tabindex:"-1","aria-expanded":e.expanded,"aria-disabled":e.node.disabled,"aria-checked":e.node.checked,draggable:e.tree.draggable},on:{click:function(n){return n.stopPropagation(),e.handleClick(n)},contextmenu:function(e){return n.handleContextMenu(e)},dragstart:function(n){return n.stopPropagation(),e.handleDragStart(n)},dragover:function(n){return n.stopPropagation(),e.handleDragOver(n)},dragend:function(n){return n.stopPropagation(),e.handleDragEnd(n)},drop:function(n){return n.stopPropagation(),e.handleDrop(n)}}},[i("div",{staticClass:"el-tree-node__content",style:{"padding-left":(e.node.level-1)*e.tree.indent+"px"}},[i("span",{class:[{"is-leaf":e.node.isLeaf,expanded:!e.node.isLeaf&&e.expanded},"el-tree-node__expand-icon",e.tree.iconClass?e.tree.iconClass:"el-icon-caret-right"],on:{click:function(n){return n.stopPropagation(),e.handleExpandIconClick(n)}}}),e.showCheckbox?i("el-checkbox",{attrs:{indeterminate:e.node.indeterminate,disabled:!!e.node.disabled},on:{change:e.handleCheckChange},nativeOn:{click:function(n){n.stopPropagation()}},model:{value:e.node.checked,callback:function(n){e.$set(e.node,"checked",n)},expression:"node.checked"}}):e._e(),e.node.loading?i("span",{staticClass:"el-tree-node__loading-icon el-icon-loading"}):e._e(),i("node-content",{attrs:{node:e.node}})],1),i("el-collapse-transition",[!e.renderAfterExpand||e.childNodeRendered?i("div",{directives:[{name:"show",rawName:"v-show",value:e.expanded,expression:"expanded"}],staticClass:"el-tree-node__children",attrs:{role:"group","aria-expanded":e.expanded}},e._l(e.node.childNodes,(function(n){return i("el-tree-node",{key:e.getNodeKey(n),attrs:{"render-content":e.renderContent,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,node:n},on:{"node-expand":e.handleChildNodeExpand}})})),1):e._e()])],1)};Yr._withStripped=!0;var Xr=a({name:"ElTreeNode",componentName:"ElTreeNode",mixins:[w.a],props:{node:{default:function(){return{}}},props:{},renderContent:Function,renderAfterExpand:{type:Boolean,default:!0},showCheckbox:{type:Boolean,default:!1}},components:{ElCollapseTransition:yn.a,ElCheckbox:rt.a,NodeContent:{props:{node:{required:!0}},render:function(n){var e=this.$parent,t=e.tree,i=this.node,a=i.data,r=i.store;return e.renderContent?e.renderContent.call(e._renderProxy,n,{_self:t.$vnode.context,node:i,data:a,store:r}):t.$scopedSlots.default?t.$scopedSlots.default({node:i,data:a}):n("span",{class:"el-tree-node__label"},[i.label])}}},data:function(){return{tree:null,expanded:!1,childNodeRendered:!1,oldChecked:null,oldIndeterminate:null}},watch:{"node.indeterminate":function(n){this.handleSelectChange(this.node.checked,n)},"node.checked":function(n){this.handleSelectChange(n,this.node.indeterminate)},"node.expanded":function(n){var e=this;this.$nextTick((function(){return e.expanded=n})),n&&(this.childNodeRendered=!0)}},methods:{getNodeKey:function(n){return qr(this.tree.nodeKey,n.data)},handleSelectChange:function(n,e){this.oldChecked!==n&&this.oldIndeterminate!==e&&this.tree.$emit("check-change",this.node.data,n,e),this.oldChecked=n,this.indeterminate=e},handleClick:function(){var n=this.tree.store;n.setCurrentNode(this.node),this.tree.$emit("current-change",n.currentNode?n.currentNode.data:null,n.currentNode),this.tree.currentNode=this,this.tree.expandOnClickNode&&this.handleExpandIconClick(),this.tree.checkOnClickNode&&!this.node.disabled&&this.handleCheckChange(null,{target:{checked:!this.node.checked}}),this.tree.$emit("node-click",this.node.data,this.node,this)},handleContextMenu:function(n){this.tree._events["node-contextmenu"]&&this.tree._events["node-contextmenu"].length>0&&(n.stopPropagation(),n.preventDefault()),this.tree.$emit("node-contextmenu",n,this.node.data,this.node,this)},handleExpandIconClick:function(){this.node.isLeaf||(this.expanded?(this.tree.$emit("node-collapse",this.node.data,this.node,this),this.node.collapse()):(this.node.expand(),this.$emit("node-expand",this.node.data,this.node,this)))},handleCheckChange:function(n,e){var t=this;this.node.setChecked(e.target.checked,!this.tree.checkStrictly),this.$nextTick((function(){var n=t.tree.store;t.tree.$emit("check",t.node.data,{checkedNodes:n.getCheckedNodes(),checkedKeys:n.getCheckedKeys(),halfCheckedNodes:n.getHalfCheckedNodes(),halfCheckedKeys:n.getHalfCheckedKeys()})}))},handleChildNodeExpand:function(n,e,t){this.broadcast("ElTreeNode","tree-node-expand",e),this.tree.$emit("node-expand",n,e,t)},handleDragStart:function(n){this.tree.draggable&&this.tree.$emit("tree-node-drag-start",n,this)},handleDragOver:function(n){this.tree.draggable&&(this.tree.$emit("tree-node-drag-over",n,this),n.preventDefault())},handleDrop:function(n){n.preventDefault()},handleDragEnd:function(n){this.tree.draggable&&this.tree.$emit("tree-node-drag-end",n,this)}},created:function(){var n=this,e=this.$parent;e.isTree?this.tree=e:this.tree=e.tree;var t=this.tree;t||console.warn("Can not find node's tree.");var i=(t.props||{}).children||"children";this.$watch("node.data."+i,(function(){n.node.updateChildren()})),this.node.expanded&&(this.expanded=!0,this.childNodeRendered=!0),this.tree.accordion&&this.$on("tree-node-expand",(function(e){n.node!==e&&n.node.collapse()}))}},Yr,[],!1,null,null,null);Xr.options.__file="packages/tree/src/tree-node.vue";var Jr=Xr.exports,Zr=a({name:"ElTree",mixins:[w.a],components:{ElTreeNode:Jr},data:function(){return{store:null,root:null,currentNode:null,treeItems:null,checkboxItems:[],dragState:{showDropIndicator:!1,draggingNode:null,dropNode:null,allowDrop:!0}}},props:{data:{type:Array},emptyText:{type:String,default:function(){return Object($a.t)("el.tree.emptyText")}},renderAfterExpand:{type:Boolean,default:!0},nodeKey:String,checkStrictly:Boolean,defaultExpandAll:Boolean,expandOnClickNode:{type:Boolean,default:!0},checkOnClickNode:Boolean,checkDescendants:{type:Boolean,default:!1},autoExpandParent:{type:Boolean,default:!0},defaultCheckedKeys:Array,defaultExpandedKeys:Array,currentNodeKey:[String,Number],renderContent:Function,showCheckbox:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},allowDrag:Function,allowDrop:Function,props:{default:function(){return{children:"children",label:"label",disabled:"disabled"}}},lazy:{type:Boolean,default:!1},highlightCurrent:Boolean,load:Function,filterNodeMethod:Function,accordion:Boolean,indent:{type:Number,default:18},iconClass:String},computed:{children:{set:function(n){this.data=n},get:function(){return this.data}},treeItemArray:function(){return Array.prototype.slice.call(this.treeItems)},isEmpty:function(){var n=this.root.childNodes;return!n||0===n.length||n.every((function(n){return!n.visible}))}},watch:{defaultCheckedKeys:function(n){this.store.setDefaultCheckedKey(n)},defaultExpandedKeys:function(n){this.store.defaultExpandedKeys=n,this.store.setDefaultExpandedKeys(n)},data:function(n){this.store.setData(n)},checkboxItems:function(n){Array.prototype.forEach.call(n,(function(n){n.setAttribute("tabindex",-1)}))},checkStrictly:function(n){this.store.checkStrictly=n}},methods:{filter:function(n){if(!this.filterNodeMethod)throw new Error("[Tree] filterNodeMethod is required when filter");this.store.filter(n)},getNodeKey:function(n){return qr(this.nodeKey,n.data)},getNodePath:function(n){if(!this.nodeKey)throw new Error("[Tree] nodeKey is required in getNodePath");var e=this.store.getNode(n);if(!e)return[];for(var t=[e.data],i=e.parent;i&&i!==this.root;)t.push(i.data),i=i.parent;return t.reverse()},getCheckedNodes:function(n,e){return this.store.getCheckedNodes(n,e)},getCheckedKeys:function(n){return this.store.getCheckedKeys(n)},getCurrentNode:function(){var n=this.store.getCurrentNode();return n?n.data:null},getCurrentKey:function(){if(!this.nodeKey)throw new Error("[Tree] nodeKey is required in getCurrentKey");var n=this.getCurrentNode();return n?n[this.nodeKey]:null},setCheckedNodes:function(n,e){if(!this.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedNodes");this.store.setCheckedNodes(n,e)},setCheckedKeys:function(n,e){if(!this.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedKeys");this.store.setCheckedKeys(n,e)},setChecked:function(n,e,t){this.store.setChecked(n,e,t)},getHalfCheckedNodes:function(){return this.store.getHalfCheckedNodes()},getHalfCheckedKeys:function(){return this.store.getHalfCheckedKeys()},setCurrentNode:function(n){if(!this.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentNode");this.store.setUserCurrentNode(n)},setCurrentKey:function(n){if(!this.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentKey");this.store.setCurrentNodeKey(n)},getNode:function(n){return this.store.getNode(n)},remove:function(n){this.store.remove(n)},append:function(n,e){this.store.append(n,e)},insertBefore:function(n,e){this.store.insertBefore(n,e)},insertAfter:function(n,e){this.store.insertAfter(n,e)},handleNodeExpand:function(n,e,t){this.broadcast("ElTreeNode","tree-node-expand",e),this.$emit("node-expand",n,e,t)},updateKeyChildren:function(n,e){if(!this.nodeKey)throw new Error("[Tree] nodeKey is required in updateKeyChild");this.store.updateChildren(n,e)},initTabIndex:function(){this.treeItems=this.$el.querySelectorAll(".is-focusable[role=treeitem]"),this.checkboxItems=this.$el.querySelectorAll("input[type=checkbox]");var n=this.$el.querySelectorAll(".is-checked[role=treeitem]");n.length?n[0].setAttribute("tabindex",0):this.treeItems[0]&&this.treeItems[0].setAttribute("tabindex",0)},handleKeydown:function(n){var e=n.target;if(-1!==e.className.indexOf("el-tree-node")){var t=n.keyCode;this.treeItems=this.$el.querySelectorAll(".is-focusable[role=treeitem]");var i=this.treeItemArray.indexOf(e),a=void 0;[38,40].indexOf(t)>-1&&(n.preventDefault(),a=38===t?0!==i?i-1:0:i<this.treeItemArray.length-1?i+1:0,this.treeItemArray[a].focus()),[37,39].indexOf(t)>-1&&(n.preventDefault(),e.click());var r=e.querySelector('[type="checkbox"]');[13,32].indexOf(t)>-1&&r&&(n.preventDefault(),r.click())}}},created:function(){var n=this;this.isTree=!0,this.store=new Kr({key:this.nodeKey,data:this.data,lazy:this.lazy,props:this.props,load:this.load,currentNodeKey:this.currentNodeKey,checkStrictly:this.checkStrictly,checkDescendants:this.checkDescendants,defaultCheckedKeys:this.defaultCheckedKeys,defaultExpandedKeys:this.defaultExpandedKeys,autoExpandParent:this.autoExpandParent,defaultExpandAll:this.defaultExpandAll,filterNodeMethod:this.filterNodeMethod}),this.root=this.store.root;var e=this.dragState;this.$on("tree-node-drag-start",(function(t,i){if("function"==typeof n.allowDrag&&!n.allowDrag(i.node))return t.preventDefault(),!1;t.dataTransfer.effectAllowed="move";try{t.dataTransfer.setData("text/plain","")}catch(n){}e.draggingNode=i,n.$emit("node-drag-start",i.node,t)})),this.$on("tree-node-drag-over",(function(t,i){var a=function(n,e){for(var t=n;t&&"BODY"!==t.tagName;){if(t.__vue__&&t.__vue__.$options.name===e)return t.__vue__;t=t.parentNode}return null}(t.target,"ElTreeNode"),r=e.dropNode;r&&r!==a&&Object(gn.removeClass)(r.$el,"is-drop-inner");var o=e.draggingNode;if(o&&a){var s=!0,l=!0,d=!0,c=!0;"function"==typeof n.allowDrop&&(s=n.allowDrop(o.node,a.node,"prev"),c=l=n.allowDrop(o.node,a.node,"inner"),d=n.allowDrop(o.node,a.node,"next")),t.dataTransfer.dropEffect=l?"move":"none",(s||l||d)&&r!==a&&(r&&n.$emit("node-drag-leave",o.node,r.node,t),n.$emit("node-drag-enter",o.node,a.node,t)),(s||l||d)&&(e.dropNode=a),a.node.nextSibling===o.node&&(d=!1),a.node.previousSibling===o.node&&(s=!1),a.node.contains(o.node,!1)&&(l=!1),(o.node===a.node||o.node.contains(a.node))&&(s=!1,l=!1,d=!1);var u=a.$el.getBoundingClientRect(),p=n.$el.getBoundingClientRect(),h=void 0,m=s?l?.25:d?.45:1:-1,g=d?l?.75:s?.55:0:1,f=-9999,v=t.clientY-u.top;h=v<u.height*m?"before":v>u.height*g?"after":l?"inner":"none";var b=a.$el.querySelector(".el-tree-node__expand-icon").getBoundingClientRect(),_=n.$refs.dropIndicator;"before"===h?f=b.top-p.top:"after"===h&&(f=b.bottom-p.top),_.style.top=f+"px",_.style.left=b.right-p.left+"px","inner"===h?Object(gn.addClass)(a.$el,"is-drop-inner"):Object(gn.removeClass)(a.$el,"is-drop-inner"),e.showDropIndicator="before"===h||"after"===h,e.allowDrop=e.showDropIndicator||c,e.dropType=h,n.$emit("node-drag-over",o.node,a.node,t)}})),this.$on("tree-node-drag-end",(function(t){var i=e.draggingNode,a=e.dropType,r=e.dropNode;if(t.preventDefault(),t.dataTransfer.dropEffect="move",i&&r){var o={data:i.node.data};"none"!==a&&i.node.remove(),"before"===a?r.node.parent.insertBefore(o,r.node):"after"===a?r.node.parent.insertAfter(o,r.node):"inner"===a&&r.node.insertChild(o),"none"!==a&&n.store.registerNode(o),Object(gn.removeClass)(r.$el,"is-drop-inner"),n.$emit("node-drag-end",i.node,r.node,a,t),"none"!==a&&n.$emit("node-drop",i.node,r.node,a,t)}i&&!r&&n.$emit("node-drag-end",i.node,null,a,t),e.showDropIndicator=!1,e.draggingNode=null,e.dropNode=null,e.allowDrop=!0}))},mounted:function(){this.initTabIndex(),this.$el.addEventListener("keydown",this.handleKeydown)},updated:function(){this.treeItems=this.$el.querySelectorAll("[role=treeitem]"),this.checkboxItems=this.$el.querySelectorAll("input[type=checkbox]")}},Lr,[],!1,null,null,null);Zr.options.__file="packages/tree/src/tree.vue";var no=Zr.exports;no.install=function(n){n.component(no.name,no)};var eo=no,to=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-alert-fade"}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-alert",class:[n.typeClass,n.center?"is-center":"","is-"+n.effect],attrs:{role:"alert"}},[n.showIcon?t("i",{staticClass:"el-alert__icon",class:[n.iconClass,n.isBigIcon]}):n._e(),t("div",{staticClass:"el-alert__content"},[n.title||n.$slots.title?t("span",{staticClass:"el-alert__title",class:[n.isBoldTitle]},[n._t("title",[n._v(n._s(n.title))])],2):n._e(),n.$slots.default&&!n.description?t("p",{staticClass:"el-alert__description"},[n._t("default")],2):n._e(),n.description&&!n.$slots.default?t("p",{staticClass:"el-alert__description"},[n._v(n._s(n.description))]):n._e(),t("i",{directives:[{name:"show",rawName:"v-show",value:n.closable,expression:"closable"}],staticClass:"el-alert__closebtn",class:{"is-customed":""!==n.closeText,"el-icon-close":""===n.closeText},on:{click:function(e){n.close()}}},[n._v(n._s(n.closeText))])])])])};to._withStripped=!0;var io={success:"el-icon-success",warning:"el-icon-warning",error:"el-icon-error"},ao=a({name:"ElAlert",props:{title:{type:String,default:""},description:{type:String,default:""},type:{type:String,default:"info"},closable:{type:Boolean,default:!0},closeText:{type:String,default:""},showIcon:Boolean,center:Boolean,effect:{type:String,default:"light",validator:function(n){return-1!==["light","dark"].indexOf(n)}}},data:function(){return{visible:!0}},methods:{close:function(){this.visible=!1,this.$emit("close")}},computed:{typeClass:function(){return"el-alert--"+this.type},iconClass:function(){return io[this.type]||"el-icon-info"},isBigIcon:function(){return this.description||this.$slots.default?"is-big":""},isBoldTitle:function(){return this.description||this.$slots.default?"is-bold":""}}},to,[],!1,null,null,null);ao.options.__file="packages/alert/src/main.vue";var ro=ao.exports;ro.install=function(n){n.component(ro.name,ro)};var oo=ro,so=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-notification-fade"}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],class:["el-notification",n.customClass,n.horizontalClass],style:n.positionStyle,attrs:{role:"alert"},on:{mouseenter:function(e){n.clearTimer()},mouseleave:function(e){n.startTimer()},click:n.click}},[n.type||n.iconClass?t("i",{staticClass:"el-notification__icon",class:[n.typeClass,n.iconClass]}):n._e(),t("div",{staticClass:"el-notification__group",class:{"is-with-icon":n.typeClass||n.iconClass}},[t("h2",{staticClass:"el-notification__title",domProps:{textContent:n._s(n.title)}}),t("div",{directives:[{name:"show",rawName:"v-show",value:n.message,expression:"message"}],staticClass:"el-notification__content"},[n._t("default",[n.dangerouslyUseHTMLString?t("p",{domProps:{innerHTML:n._s(n.message)}}):t("p",[n._v(n._s(n.message))])])],2),n.showClose?t("div",{staticClass:"el-notification__closeBtn el-icon-close",on:{click:function(e){return e.stopPropagation(),n.close(e)}}}):n._e()])])])};so._withStripped=!0;var lo={success:"success",info:"info",warning:"warning",error:"error"},co=a({data:function(){return{visible:!1,title:"",message:"",duration:4500,type:"",showClose:!0,customClass:"",iconClass:"",onClose:null,onClick:null,closed:!1,verticalOffset:0,timer:null,dangerouslyUseHTMLString:!1,position:"top-right"}},computed:{typeClass:function(){return this.type&&lo[this.type]?"el-icon-"+lo[this.type]:""},horizontalClass:function(){return this.position.indexOf("right")>-1?"right":"left"},verticalProperty:function(){return/^top-/.test(this.position)?"top":"bottom"},positionStyle:function(){var n;return(n={})[this.verticalProperty]=this.verticalOffset+"px",n}},watch:{closed:function(n){n&&(this.visible=!1,this.$el.addEventListener("transitionend",this.destroyElement))}},methods:{destroyElement:function(){this.$el.removeEventListener("transitionend",this.destroyElement),this.$destroy(!0),this.$el.parentNode.removeChild(this.$el)},click:function(){"function"==typeof this.onClick&&this.onClick()},close:function(){this.closed=!0,"function"==typeof this.onClose&&this.onClose()},clearTimer:function(){clearTimeout(this.timer)},startTimer:function(){var n=this;this.duration>0&&(this.timer=setTimeout((function(){n.closed||n.close()}),this.duration))},keydown:function(n){46===n.keyCode||8===n.keyCode?this.clearTimer():27===n.keyCode?this.closed||this.close():this.startTimer()}},mounted:function(){var n=this;this.duration>0&&(this.timer=setTimeout((function(){n.closed||n.close()}),this.duration)),document.addEventListener("keydown",this.keydown)},beforeDestroy:function(){document.removeEventListener("keydown",this.keydown)}},so,[],!1,null,null,null);co.options.__file="packages/notification/src/main.vue";var uo=co.exports,po=pt.a.extend(uo),ho=void 0,mo=[],go=1,fo=function n(e){if(!pt.a.prototype.$isServer){var t=(e=Fn()({},e)).onClose,i="notification_"+go++,a=e.position||"top-right";e.onClose=function(){n.close(i,t)},ho=new po({data:e}),Object(Ga.isVNode)(e.message)&&(ho.$slots.default=[e.message],e.message="REPLACED_BY_VNODE"),ho.id=i,ho.$mount(),document.body.appendChild(ho.$el),ho.visible=!0,ho.dom=ho.$el,ho.dom.style.zIndex=_.PopupManager.nextZIndex();var r=e.offset||0;return mo.filter((function(n){return n.position===a})).forEach((function(n){r+=n.$el.offsetHeight+16})),r+=16,ho.verticalOffset=r,mo.push(ho),ho}};["success","warning","info","error"].forEach((function(n){fo[n]=function(e){return("string"==typeof e||Object(Ga.isVNode)(e))&&(e={message:e}),e.type=n,fo(e)}})),fo.close=function(n,e){var t=-1,i=mo.length,a=mo.filter((function(e,i){return e.id===n&&(t=i,!0)}))[0];if(a&&("function"==typeof e&&e(a),mo.splice(t,1),!(i<=1)))for(var r=a.position,o=a.dom.offsetHeight,s=t;s<i-1;s++)mo[s].position===r&&(mo[s].dom.style[a.verticalProperty]=parseInt(mo[s].dom.style[a.verticalProperty],10)-o-16+"px")},fo.closeAll=function(){for(var n=mo.length-1;n>=0;n--)mo[n].close()};var vo=fo,bo=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-slider",class:{"is-vertical":n.vertical,"el-slider--with-input":n.showInput},attrs:{role:"slider","aria-valuemin":n.min,"aria-valuemax":n.max,"aria-orientation":n.vertical?"vertical":"horizontal","aria-disabled":n.sliderDisabled}},[n.showInput&&!n.range?t("el-input-number",{ref:"input",staticClass:"el-slider__input",attrs:{step:n.step,disabled:n.sliderDisabled,controls:n.showInputControls,min:n.min,max:n.max,debounce:n.debounce,size:n.inputSize},on:{change:n.emitChange},model:{value:n.firstValue,callback:function(e){n.firstValue=e},expression:"firstValue"}}):n._e(),t("div",{ref:"slider",staticClass:"el-slider__runway",class:{"show-input":n.showInput,disabled:n.sliderDisabled},style:n.runwayStyle,on:{click:n.onSliderClick}},[t("div",{staticClass:"el-slider__bar",style:n.barStyle}),t("slider-button",{ref:"button1",attrs:{vertical:n.vertical,"tooltip-class":n.tooltipClass},model:{value:n.firstValue,callback:function(e){n.firstValue=e},expression:"firstValue"}}),n.range?t("slider-button",{ref:"button2",attrs:{vertical:n.vertical,"tooltip-class":n.tooltipClass},model:{value:n.secondValue,callback:function(e){n.secondValue=e},expression:"secondValue"}}):n._e(),n._l(n.stops,(function(e,i){return n.showStops?t("div",{key:i,staticClass:"el-slider__stop",style:n.getStopStyle(e)}):n._e()})),n.markList.length>0?[t("div",n._l(n.markList,(function(e,i){return t("div",{key:i,staticClass:"el-slider__stop el-slider__marks-stop",style:n.getStopStyle(e.position)})})),0),t("div",{staticClass:"el-slider__marks"},n._l(n.markList,(function(e,i){return t("slider-marker",{key:i,style:n.getStopStyle(e.position),attrs:{mark:e.mark}})})),1)]:n._e()],2)],1)};bo._withStripped=!0;var _o=t(42),yo=t.n(_o),xo=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{ref:"button",staticClass:"el-slider__button-wrapper",class:{hover:n.hovering,dragging:n.dragging},style:n.wrapperStyle,attrs:{tabindex:"0"},on:{mouseenter:n.handleMouseEnter,mouseleave:n.handleMouseLeave,mousedown:n.onButtonDown,touchstart:n.onButtonDown,focus:n.handleMouseEnter,blur:n.handleMouseLeave,keydown:[function(e){return!("button"in e)&&n._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:n.onLeftKeyDown(e)},function(e){return!("button"in e)&&n._k(e.keyCode,"right",39,e.key,["Right","ArrowRight"])||"button"in e&&2!==e.button?null:n.onRightKeyDown(e)},function(e){return!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"])?null:(e.preventDefault(),n.onLeftKeyDown(e))},function(e){return!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"])?null:(e.preventDefault(),n.onRightKeyDown(e))}]}},[t("el-tooltip",{ref:"tooltip",attrs:{placement:"top","popper-class":n.tooltipClass,disabled:!n.showTooltip}},[t("span",{attrs:{slot:"content"},slot:"content"},[n._v(n._s(n.formatValue))]),t("div",{staticClass:"el-slider__button",class:{hover:n.hovering,dragging:n.dragging}})])],1)};xo._withStripped=!0;var ko=a({name:"ElSliderButton",components:{ElTooltip:En.a},props:{value:{type:Number,default:0},vertical:{type:Boolean,default:!1},tooltipClass:String},data:function(){return{hovering:!1,dragging:!1,isClick:!1,startX:0,currentX:0,startY:0,currentY:0,startPosition:0,newPosition:null,oldValue:this.value}},computed:{disabled:function(){return this.$parent.sliderDisabled},max:function(){return this.$parent.max},min:function(){return this.$parent.min},step:function(){return this.$parent.step},showTooltip:function(){return this.$parent.showTooltip},precision:function(){return this.$parent.precision},currentPosition:function(){return(this.value-this.min)/(this.max-this.min)*100+"%"},enableFormat:function(){return this.$parent.formatTooltip instanceof Function},formatValue:function(){return this.enableFormat&&this.$parent.formatTooltip(this.value)||this.value},wrapperStyle:function(){return this.vertical?{bottom:this.currentPosition}:{left:this.currentPosition}}},watch:{dragging:function(n){this.$parent.dragging=n}},methods:{displayTooltip:function(){this.$refs.tooltip&&(this.$refs.tooltip.showPopper=!0)},hideTooltip:function(){this.$refs.tooltip&&(this.$refs.tooltip.showPopper=!1)},handleMouseEnter:function(){this.hovering=!0,this.displayTooltip()},handleMouseLeave:function(){this.hovering=!1,this.hideTooltip()},onButtonDown:function(n){this.disabled||(n.preventDefault(),this.onDragStart(n),window.addEventListener("mousemove",this.onDragging),window.addEventListener("touchmove",this.onDragging),window.addEventListener("mouseup",this.onDragEnd),window.addEventListener("touchend",this.onDragEnd),window.addEventListener("contextmenu",this.onDragEnd))},onLeftKeyDown:function(){this.disabled||(this.newPosition=parseFloat(this.currentPosition)-this.step/(this.max-this.min)*100,this.setPosition(this.newPosition),this.$parent.emitChange())},onRightKeyDown:function(){this.disabled||(this.newPosition=parseFloat(this.currentPosition)+this.step/(this.max-this.min)*100,this.setPosition(this.newPosition),this.$parent.emitChange())},onDragStart:function(n){this.dragging=!0,this.isClick=!0,"touchstart"===n.type&&(n.clientY=n.touches[0].clientY,n.clientX=n.touches[0].clientX),this.vertical?this.startY=n.clientY:this.startX=n.clientX,this.startPosition=parseFloat(this.currentPosition),this.newPosition=this.startPosition},onDragging:function(n){if(this.dragging){this.isClick=!1,this.displayTooltip(),this.$parent.resetSize();var e=0;"touchmove"===n.type&&(n.clientY=n.touches[0].clientY,n.clientX=n.touches[0].clientX),this.vertical?(this.currentY=n.clientY,e=(this.startY-this.currentY)/this.$parent.sliderSize*100):(this.currentX=n.clientX,e=(this.currentX-this.startX)/this.$parent.sliderSize*100),this.newPosition=this.startPosition+e,this.setPosition(this.newPosition)}},onDragEnd:function(){var n=this;this.dragging&&(setTimeout((function(){n.dragging=!1,n.hideTooltip(),n.isClick||(n.setPosition(n.newPosition),n.$parent.emitChange())}),0),window.removeEventListener("mousemove",this.onDragging),window.removeEventListener("touchmove",this.onDragging),window.removeEventListener("mouseup",this.onDragEnd),window.removeEventListener("touchend",this.onDragEnd),window.removeEventListener("contextmenu",this.onDragEnd))},setPosition:function(n){var e=this;if(null!==n&&!isNaN(n)){n<0?n=0:n>100&&(n=100);var t=100/((this.max-this.min)/this.step),i=Math.round(n/t)*t*(this.max-this.min)*.01+this.min;i=parseFloat(i.toFixed(this.precision)),this.$emit("input",i),this.$nextTick((function(){e.displayTooltip(),e.$refs.tooltip&&e.$refs.tooltip.updatePopper()})),this.dragging||this.value===this.oldValue||(this.oldValue=this.value)}}}},xo,[],!1,null,null,null);ko.options.__file="packages/slider/src/button.vue";var To=ko.exports,wo={name:"ElMarker",props:{mark:{type:[String,Object]}},render:function(){var n=arguments[0],e="string"==typeof this.mark?this.mark:this.mark.label;return n("div",{class:"el-slider__marks-text",style:this.mark.style||{}},[e])}},Io=a({name:"ElSlider",mixins:[w.a],inject:{elForm:{default:""}},props:{min:{type:Number,default:0},max:{type:Number,default:100},step:{type:Number,default:1},value:{type:[Number,Array],default:0},showInput:{type:Boolean,default:!1},showInputControls:{type:Boolean,default:!0},inputSize:{type:String,default:"small"},showStops:{type:Boolean,default:!1},showTooltip:{type:Boolean,default:!0},formatTooltip:Function,disabled:{type:Boolean,default:!1},range:{type:Boolean,default:!1},vertical:{type:Boolean,default:!1},height:{type:String},debounce:{type:Number,default:300},label:{type:String},tooltipClass:String,marks:Object},components:{ElInputNumber:yo.a,SliderButton:To,SliderMarker:wo},data:function(){return{firstValue:null,secondValue:null,oldValue:null,dragging:!1,sliderSize:1}},watch:{value:function(n,e){this.dragging||Array.isArray(n)&&Array.isArray(e)&&n.every((function(n,t){return n===e[t]}))||this.setValues()},dragging:function(n){n||this.setValues()},firstValue:function(n){this.range?this.$emit("input",[this.minValue,this.maxValue]):this.$emit("input",n)},secondValue:function(){this.range&&this.$emit("input",[this.minValue,this.maxValue])},min:function(){this.setValues()},max:function(){this.setValues()}},methods:{valueChanged:function(){var n=this;return this.range?![this.minValue,this.maxValue].every((function(e,t){return e===n.oldValue[t]})):this.value!==this.oldValue},setValues:function(){if(this.min>this.max)console.error("[Element Error][Slider]min should not be greater than max.");else{var n=this.value;this.range&&Array.isArray(n)?n[1]<this.min?this.$emit("input",[this.min,this.min]):n[0]>this.max?this.$emit("input",[this.max,this.max]):n[0]<this.min?this.$emit("input",[this.min,n[1]]):n[1]>this.max?this.$emit("input",[n[0],this.max]):(this.firstValue=n[0],this.secondValue=n[1],this.valueChanged()&&(this.dispatch("ElFormItem","el.form.change",[this.minValue,this.maxValue]),this.oldValue=n.slice())):this.range||"number"!=typeof n||isNaN(n)||(n<this.min?this.$emit("input",this.min):n>this.max?this.$emit("input",this.max):(this.firstValue=n,this.valueChanged()&&(this.dispatch("ElFormItem","el.form.change",n),this.oldValue=n)))}},setPosition:function(n){var e=this.min+n*(this.max-this.min)/100;if(this.range){var t=void 0;t=Math.abs(this.minValue-e)<Math.abs(this.maxValue-e)?this.firstValue<this.secondValue?"button1":"button2":this.firstValue>this.secondValue?"button1":"button2",this.$refs[t].setPosition(n)}else this.$refs.button1.setPosition(n)},onSliderClick:function(n){if(!this.sliderDisabled&&!this.dragging){if(this.resetSize(),this.vertical){var e=this.$refs.slider.getBoundingClientRect().bottom;this.setPosition((e-n.clientY)/this.sliderSize*100)}else{var t=this.$refs.slider.getBoundingClientRect().left;this.setPosition((n.clientX-t)/this.sliderSize*100)}this.emitChange()}},resetSize:function(){this.$refs.slider&&(this.sliderSize=this.$refs.slider["client"+(this.vertical?"Height":"Width")])},emitChange:function(){var n=this;this.$nextTick((function(){n.$emit("change",n.range?[n.minValue,n.maxValue]:n.value)}))},getStopStyle:function(n){return this.vertical?{bottom:n+"%"}:{left:n+"%"}}},computed:{stops:function(){var n=this;if(!this.showStops||this.min>this.max)return[];if(0===this.step)return[];for(var e=(this.max-this.min)/this.step,t=100*this.step/(this.max-this.min),i=[],a=1;a<e;a++)i.push(a*t);return this.range?i.filter((function(e){return e<100*(n.minValue-n.min)/(n.max-n.min)||e>100*(n.maxValue-n.min)/(n.max-n.min)})):i.filter((function(e){return e>100*(n.firstValue-n.min)/(n.max-n.min)}))},markList:function(){var n=this;return this.marks?Object.keys(this.marks).map(parseFloat).sort((function(n,e){return n-e})).filter((function(e){return e<=n.max&&e>=n.min})).map((function(e){return{point:e,position:100*(e-n.min)/(n.max-n.min),mark:n.marks[e]}})):[]},minValue:function(){return Math.min(this.firstValue,this.secondValue)},maxValue:function(){return Math.max(this.firstValue,this.secondValue)},barSize:function(){return this.range?100*(this.maxValue-this.minValue)/(this.max-this.min)+"%":100*(this.firstValue-this.min)/(this.max-this.min)+"%"},barStart:function(){return this.range?100*(this.minValue-this.min)/(this.max-this.min)+"%":"0%"},precision:function(){var n=[this.min,this.max,this.step].map((function(n){var e=(""+n).split(".")[1];return e?e.length:0}));return Math.max.apply(null,n)},runwayStyle:function(){return this.vertical?{height:this.height}:{}},barStyle:function(){return this.vertical?{height:this.barSize,bottom:this.barStart}:{width:this.barSize,left:this.barStart}},sliderDisabled:function(){return this.disabled||(this.elForm||{}).disabled}},mounted:function(){var n=void 0;this.range?(Array.isArray(this.value)?(this.firstValue=Math.max(this.min,this.value[0]),this.secondValue=Math.min(this.max,this.value[1])):(this.firstValue=this.min,this.secondValue=this.max),this.oldValue=[this.firstValue,this.secondValue],n=this.firstValue+"-"+this.secondValue):("number"!=typeof this.value||isNaN(this.value)?this.firstValue=this.min:this.firstValue=Math.min(this.max,Math.max(this.min,this.value)),this.oldValue=this.firstValue,n=this.firstValue),this.$el.setAttribute("aria-valuetext",n),this.$el.setAttribute("aria-label",this.label?this.label:"slider between "+this.min+" and "+this.max),this.resetSize(),window.addEventListener("resize",this.resetSize)},beforeDestroy:function(){window.removeEventListener("resize",this.resetSize)}},bo,[],!1,null,null,null);Io.options.__file="packages/slider/src/main.vue";var Co=Io.exports;Co.install=function(n){n.component(Co.name,Co)};var Do=Co,Eo=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-loading-fade"},on:{"after-leave":n.handleAfterLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-loading-mask",class:[n.customClass,{"is-fullscreen":n.fullscreen}],style:{backgroundColor:n.background||""}},[t("div",{staticClass:"el-loading-spinner"},[n.spinner?t("i",{class:n.spinner}):t("svg",{staticClass:"circular",attrs:{viewBox:"25 25 50 50"}},[t("circle",{staticClass:"path",attrs:{cx:"50",cy:"50",r:"20",fill:"none"}})]),n.text?t("p",{staticClass:"el-loading-text"},[n._v(n._s(n.text))]):n._e()])])])};Eo._withStripped=!0;var So=a({data:function(){return{text:null,spinner:null,background:null,fullscreen:!0,visible:!1,customClass:""}},methods:{handleAfterLeave:function(){this.$emit("after-leave")},setText:function(n){this.text=n}}},Eo,[],!1,null,null,null);So.options.__file="packages/loading/src/loading.vue";var Mo=So.exports,Ao=t(33),Oo=t.n(Ao),Po=pt.a.extend(Mo),jo={install:function(n){if(!n.prototype.$isServer){var e=function(e,i){i.value?n.nextTick((function(){i.modifiers.fullscreen?(e.originalPosition=Object(gn.getStyle)(document.body,"position"),e.originalOverflow=Object(gn.getStyle)(document.body,"overflow"),e.maskStyle.zIndex=_.PopupManager.nextZIndex(),Object(gn.addClass)(e.mask,"is-fullscreen"),t(document.body,e,i)):(Object(gn.removeClass)(e.mask,"is-fullscreen"),i.modifiers.body?(e.originalPosition=Object(gn.getStyle)(document.body,"position"),["top","left"].forEach((function(n){var t="top"===n?"scrollTop":"scrollLeft";e.maskStyle[n]=e.getBoundingClientRect()[n]+document.body[t]+document.documentElement[t]-parseInt(Object(gn.getStyle)(document.body,"margin-"+n),10)+"px"})),["height","width"].forEach((function(n){e.maskStyle[n]=e.getBoundingClientRect()[n]+"px"})),t(document.body,e,i)):(e.originalPosition=Object(gn.getStyle)(e,"position"),t(e,e,i)))})):(Oo()(e.instance,(function(n){if(e.instance.hiding){e.domVisible=!1;var t=i.modifiers.fullscreen||i.modifiers.body?document.body:e;Object(gn.removeClass)(t,"el-loading-parent--relative"),Object(gn.removeClass)(t,"el-loading-parent--hidden"),e.instance.hiding=!1}}),300,!0),e.instance.visible=!1,e.instance.hiding=!0)},t=function(e,t,i){t.domVisible||"none"===Object(gn.getStyle)(t,"display")||"hidden"===Object(gn.getStyle)(t,"visibility")?t.domVisible&&!0===t.instance.hiding&&(t.instance.visible=!0,t.instance.hiding=!1):(Object.keys(t.maskStyle).forEach((function(n){t.mask.style[n]=t.maskStyle[n]})),"absolute"!==t.originalPosition&&"fixed"!==t.originalPosition&&"sticky"!==t.originalPosition&&Object(gn.addClass)(e,"el-loading-parent--relative"),i.modifiers.fullscreen&&i.modifiers.lock&&Object(gn.addClass)(e,"el-loading-parent--hidden"),t.domVisible=!0,e.appendChild(t.mask),n.nextTick((function(){t.instance.hiding?t.instance.$emit("after-leave"):t.instance.visible=!0})),t.domInserted=!0)};n.directive("loading",{bind:function(n,t,i){var a=n.getAttribute("element-loading-text"),r=n.getAttribute("element-loading-spinner"),o=n.getAttribute("element-loading-background"),s=n.getAttribute("element-loading-custom-class"),l=i.context,d=new Po({el:document.createElement("div"),data:{text:l&&l[a]||a,spinner:l&&l[r]||r,background:l&&l[o]||o,customClass:l&&l[s]||s,fullscreen:!!t.modifiers.fullscreen}});n.instance=d,n.mask=d.$el,n.maskStyle={},t.value&&e(n,t)},update:function(n,t){n.instance.setText(n.getAttribute("element-loading-text")),t.oldValue!==t.value&&e(n,t)},unbind:function(n,t){n.domInserted&&(n.mask&&n.mask.parentNode&&n.mask.parentNode.removeChild(n.mask),e(n,{value:!1,modifiers:t.modifiers})),n.instance&&n.instance.$destroy()}})}}},zo=jo,Ro=pt.a.extend(Mo),$o={text:null,fullscreen:!0,body:!1,lock:!1,customClass:""},Lo=void 0;Ro.prototype.originalPosition="",Ro.prototype.originalOverflow="",Ro.prototype.close=function(){var n=this;this.fullscreen&&(Lo=void 0),Oo()(this,(function(e){var t=n.fullscreen||n.body?document.body:n.target;Object(gn.removeClass)(t,"el-loading-parent--relative"),Object(gn.removeClass)(t,"el-loading-parent--hidden"),n.$el&&n.$el.parentNode&&n.$el.parentNode.removeChild(n.$el),n.$destroy()}),300),this.visible=!1};var Uo=function(n,e,t){var i={};n.fullscreen?(t.originalPosition=Object(gn.getStyle)(document.body,"position"),t.originalOverflow=Object(gn.getStyle)(document.body,"overflow"),i.zIndex=_.PopupManager.nextZIndex()):n.body?(t.originalPosition=Object(gn.getStyle)(document.body,"position"),["top","left"].forEach((function(e){var t="top"===e?"scrollTop":"scrollLeft";i[e]=n.target.getBoundingClientRect()[e]+document.body[t]+document.documentElement[t]+"px"})),["height","width"].forEach((function(e){i[e]=n.target.getBoundingClientRect()[e]+"px"}))):t.originalPosition=Object(gn.getStyle)(e,"position"),Object.keys(i).forEach((function(n){t.$el.style[n]=i[n]}))},No=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!pt.a.prototype.$isServer){if("string"==typeof(n=Fn()({},$o,n)).target&&(n.target=document.querySelector(n.target)),n.target=n.target||document.body,n.target!==document.body?n.fullscreen=!1:n.body=!0,n.fullscreen&&Lo)return Lo;var e=n.body?document.body:n.target,t=new Ro({el:document.createElement("div"),data:n});return Uo(n,e,t),"absolute"!==t.originalPosition&&"fixed"!==t.originalPosition&&"sticky"!==t.originalPosition&&Object(gn.addClass)(e,"el-loading-parent--relative"),n.fullscreen&&n.lock&&Object(gn.addClass)(e,"el-loading-parent--hidden"),e.appendChild(t.$el),pt.a.nextTick((function(){t.visible=!0})),n.fullscreen&&(Lo=t),t}},qo={install:function(n){n.use(zo),n.prototype.$loading=No},directive:zo,service:No},Bo=function(){var n=this.$createElement;return(this._self._c||n)("i",{class:"el-icon-"+this.name})};Bo._withStripped=!0;var Fo=a({name:"ElIcon",props:{name:String}},Bo,[],!1,null,null,null);Fo.options.__file="packages/icon/src/icon.vue";var Vo=Fo.exports;Vo.install=function(n){n.component(Vo.name,Vo)};var Go=Vo,Ho={name:"ElRow",componentName:"ElRow",props:{tag:{type:String,default:"div"},gutter:Number,type:String,justify:{type:String,default:"start"},align:String},computed:{style:function(){var n={};return this.gutter&&(n.marginLeft="-"+this.gutter/2+"px",n.marginRight=n.marginLeft),n}},render:function(n){return n(this.tag,{class:["el-row","start"!==this.justify?"is-justify-"+this.justify:"",this.align?"is-align-"+this.align:"",{"el-row--flex":"flex"===this.type}],style:this.style},this.$slots.default)},install:function(n){n.component(Ho.name,Ho)}},Wo=Ho,Qo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ko={name:"ElCol",props:{span:{type:Number,default:24},tag:{type:String,default:"div"},offset:Number,pull:Number,push:Number,xs:[Number,Object],sm:[Number,Object],md:[Number,Object],lg:[Number,Object],xl:[Number,Object]},computed:{gutter:function(){for(var n=this.$parent;n&&"ElRow"!==n.$options.componentName;)n=n.$parent;return n?n.gutter:0}},render:function(n){var e=this,t=[],i={};return this.gutter&&(i.paddingLeft=this.gutter/2+"px",i.paddingRight=i.paddingLeft),["span","offset","pull","push"].forEach((function(n){(e[n]||0===e[n])&&t.push("span"!==n?"el-col-"+n+"-"+e[n]:"el-col-"+e[n])})),["xs","sm","md","lg","xl"].forEach((function(n){if("number"==typeof e[n])t.push("el-col-"+n+"-"+e[n]);else if("object"===Qo(e[n])){var i=e[n];Object.keys(i).forEach((function(e){t.push("span"!==e?"el-col-"+n+"-"+e+"-"+i[e]:"el-col-"+n+"-"+i[e])}))}})),n(this.tag,{class:["el-col",t],style:i},this.$slots.default)},install:function(n){n.component(Ko.name,Ko)}},Yo=Ko,Xo=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition-group",{class:["el-upload-list","el-upload-list--"+n.listType,{"is-disabled":n.disabled}],attrs:{tag:"ul",name:"el-list"}},n._l(n.files,(function(e){return t("li",{key:e.uid,class:["el-upload-list__item","is-"+e.status,n.focusing?"focusing":""],attrs:{tabindex:"0"},on:{keydown:function(t){if(!("button"in t)&&n._k(t.keyCode,"delete",[8,46],t.key,["Backspace","Delete","Del"]))return null;!n.disabled&&n.$emit("remove",e)},focus:function(e){n.focusing=!0},blur:function(e){n.focusing=!1},click:function(e){n.focusing=!1}}},[n._t("default",["uploading"!==e.status&&["picture-card","picture"].indexOf(n.listType)>-1?t("img",{staticClass:"el-upload-list__item-thumbnail",attrs:{src:e.url,alt:""}}):n._e(),t("a",{staticClass:"el-upload-list__item-name",on:{click:function(t){n.handleClick(e)}}},[t("i",{staticClass:"el-icon-document"}),n._v(n._s(e.name)+"\n      ")]),t("label",{staticClass:"el-upload-list__item-status-label"},[t("i",{class:{"el-icon-upload-success":!0,"el-icon-circle-check":"text"===n.listType,"el-icon-check":["picture-card","picture"].indexOf(n.listType)>-1}})]),n.disabled?n._e():t("i",{staticClass:"el-icon-close",on:{click:function(t){n.$emit("remove",e)}}}),n.disabled?n._e():t("i",{staticClass:"el-icon-close-tip"},[n._v(n._s(n.t("el.upload.deleteTip")))]),"uploading"===e.status?t("el-progress",{attrs:{type:"picture-card"===n.listType?"circle":"line","stroke-width":"picture-card"===n.listType?6:2,percentage:n.parsePercentage(e.percentage)}}):n._e(),"picture-card"===n.listType?t("span",{staticClass:"el-upload-list__item-actions"},[n.handlePreview&&"picture-card"===n.listType?t("span",{staticClass:"el-upload-list__item-preview",on:{click:function(t){n.handlePreview(e)}}},[t("i",{staticClass:"el-icon-zoom-in"})]):n._e(),n.disabled?n._e():t("span",{staticClass:"el-upload-list__item-delete",on:{click:function(t){n.$emit("remove",e)}}},[t("i",{staticClass:"el-icon-delete"})])]):n._e()],{file:e})],2)})),0)};Xo._withStripped=!0;var Jo=t(34),Zo=t.n(Jo),ns=a({name:"ElUploadList",mixins:[m.a],data:function(){return{focusing:!1}},components:{ElProgress:Zo.a},props:{files:{type:Array,default:function(){return[]}},disabled:{type:Boolean,default:!1},handlePreview:Function,listType:String},methods:{parsePercentage:function(n){return parseInt(n,10)},handleClick:function(n){this.handlePreview&&this.handlePreview(n)}}},Xo,[],!1,null,null,null);ns.options.__file="packages/upload/src/upload-list.vue";var es=ns.exports,ts=t(24),is=t.n(ts);var as=function(){var n=this,e=n.$createElement;return(n._self._c||e)("div",{staticClass:"el-upload-dragger",class:{"is-dragover":n.dragover},on:{drop:function(e){return e.preventDefault(),n.onDrop(e)},dragover:function(e){return e.preventDefault(),n.onDragover(e)},dragleave:function(e){e.preventDefault(),n.dragover=!1}}},[n._t("default")],2)};as._withStripped=!0;var rs=a({name:"ElUploadDrag",props:{disabled:Boolean},inject:{uploader:{default:""}},data:function(){return{dragover:!1}},methods:{onDragover:function(){this.disabled||(this.dragover=!0)},onDrop:function(n){if(!this.disabled&&this.uploader){var e=this.uploader.accept;this.dragover=!1,e?this.$emit("file",[].slice.call(n.dataTransfer.files).filter((function(n){var t=n.type,i=n.name,a=i.indexOf(".")>-1?"."+i.split(".").pop():"",r=t.replace(/\/.*$/,"");return e.split(",").map((function(n){return n.trim()})).filter((function(n){return n})).some((function(n){return/\..+$/.test(n)?a===n:/\/\*$/.test(n)?r===n.replace(/\/\*$/,""):!!/^[^\/]+\/[^\/]+$/.test(n)&&t===n}))}))):this.$emit("file",n.dataTransfer.files)}}}},as,[],!1,null,null,null);rs.options.__file="packages/upload/src/upload-dragger.vue";var os=a({inject:["uploader"],components:{UploadDragger:rs.exports},props:{type:String,action:{type:String,required:!0},name:{type:String,default:"file"},data:Object,headers:Object,withCredentials:Boolean,multiple:Boolean,accept:String,onStart:Function,onProgress:Function,onSuccess:Function,onError:Function,beforeUpload:Function,drag:Boolean,onPreview:{type:Function,default:function(){}},onRemove:{type:Function,default:function(){}},fileList:Array,autoUpload:Boolean,listType:String,httpRequest:{type:Function,default:function(n){if("undefined"!=typeof XMLHttpRequest){var e=new XMLHttpRequest,t=n.action;e.upload&&(e.upload.onprogress=function(e){e.total>0&&(e.percent=e.loaded/e.total*100),n.onProgress(e)});var i=new FormData;n.data&&Object.keys(n.data).forEach((function(e){i.append(e,n.data[e])})),i.append(n.filename,n.file,n.file.name),e.onerror=function(e){n.onError(e)},e.onload=function(){if(e.status<200||e.status>=300)return n.onError(function(n,e,t){var i=void 0;i=t.response?""+(t.response.error||t.response):t.responseText?""+t.responseText:"fail to post "+n+" "+t.status;var a=new Error(i);return a.status=t.status,a.method="post",a.url=n,a}(t,0,e));n.onSuccess(function(n){var e=n.responseText||n.response;if(!e)return e;try{return JSON.parse(e)}catch(n){return e}}(e))},e.open("post",t,!0),n.withCredentials&&"withCredentials"in e&&(e.withCredentials=!0);var a=n.headers||{};for(var r in a)a.hasOwnProperty(r)&&null!==a[r]&&e.setRequestHeader(r,a[r]);return e.send(i),e}}},disabled:Boolean,limit:Number,onExceed:Function},data:function(){return{mouseover:!1,reqs:{}}},methods:{isImage:function(n){return-1!==n.indexOf("image")},handleChange:function(n){var e=n.target.files;e&&this.uploadFiles(e)},uploadFiles:function(n){var e=this;if(this.limit&&this.fileList.length+n.length>this.limit)this.onExceed&&this.onExceed(n,this.fileList);else{var t=Array.prototype.slice.call(n);this.multiple||(t=t.slice(0,1)),0!==t.length&&t.forEach((function(n){e.onStart(n),e.autoUpload&&e.upload(n)}))}},upload:function(n){var e=this;if(this.$refs.input.value=null,!this.beforeUpload)return this.post(n);var t=this.beforeUpload(n);t&&t.then?t.then((function(t){var i=Object.prototype.toString.call(t);if("[object File]"===i||"[object Blob]"===i){for(var a in"[object Blob]"===i&&(t=new File([t],n.name,{type:n.type})),n)n.hasOwnProperty(a)&&(t[a]=n[a]);e.post(t)}else e.post(n)}),(function(){e.onRemove(null,n)})):!1!==t?this.post(n):this.onRemove(null,n)},abort:function(n){var e=this.reqs;if(n){var t=n;n.uid&&(t=n.uid),e[t]&&e[t].abort()}else Object.keys(e).forEach((function(n){e[n]&&e[n].abort(),delete e[n]}))},post:function(n){var e=this,t=n.uid,i={headers:this.headers,withCredentials:this.withCredentials,file:n,data:this.data,filename:this.name,action:this.action,onProgress:function(t){e.onProgress(t,n)},onSuccess:function(i){e.onSuccess(i,n),delete e.reqs[t]},onError:function(i){e.onError(i,n),delete e.reqs[t]}},a=this.httpRequest(i);this.reqs[t]=a,a&&a.then&&a.then(i.onSuccess,i.onError)},handleClick:function(){this.disabled||(this.$refs.input.value=null,this.$refs.input.click())},handleKeydown:function(n){n.target===n.currentTarget&&(13!==n.keyCode&&32!==n.keyCode||this.handleClick())}},render:function(n){var e=this.handleClick,t=this.drag,i=this.name,a=this.handleChange,r=this.multiple,o=this.accept,s=this.listType,l=this.uploadFiles,d=this.disabled,c={class:{"el-upload":!0},on:{click:e,keydown:this.handleKeydown}};return c.class["el-upload--"+s]=!0,n("div",is()([c,{attrs:{tabindex:"0"}}]),[t?n("upload-dragger",{attrs:{disabled:d},on:{file:l}},[this.$slots.default]):this.$slots.default,n("input",{class:"el-upload__input",attrs:{type:"file",name:i,multiple:r,accept:o},ref:"input",on:{change:a}})])}},void 0,void 0,!1,null,null,null);os.options.__file="packages/upload/src/upload.vue";var ss=os.exports;function ls(){}var ds=a({name:"ElUpload",mixins:[k.a],components:{ElProgress:Zo.a,UploadList:es,Upload:ss},provide:function(){return{uploader:this}},inject:{elForm:{default:""}},props:{action:{type:String,required:!0},headers:{type:Object,default:function(){return{}}},data:Object,multiple:Boolean,name:{type:String,default:"file"},drag:Boolean,dragger:Boolean,withCredentials:Boolean,showFileList:{type:Boolean,default:!0},accept:String,type:{type:String,default:"select"},beforeUpload:Function,beforeRemove:Function,onRemove:{type:Function,default:ls},onChange:{type:Function,default:ls},onPreview:{type:Function},onSuccess:{type:Function,default:ls},onProgress:{type:Function,default:ls},onError:{type:Function,default:ls},fileList:{type:Array,default:function(){return[]}},autoUpload:{type:Boolean,default:!0},listType:{type:String,default:"text"},httpRequest:Function,disabled:Boolean,limit:Number,onExceed:{type:Function,default:ls}},data:function(){return{uploadFiles:[],dragOver:!1,draging:!1,tempIndex:1}},computed:{uploadDisabled:function(){return this.disabled||(this.elForm||{}).disabled}},watch:{listType:function(n){"picture-card"!==n&&"picture"!==n||(this.uploadFiles=this.uploadFiles.map((function(n){if(!n.url&&n.raw)try{n.url=URL.createObjectURL(n.raw)}catch(n){console.error("[Element Error][Upload]",n)}return n})))},fileList:{immediate:!0,handler:function(n){var e=this;this.uploadFiles=n.map((function(n){return n.uid=n.uid||Date.now()+e.tempIndex++,n.status=n.status||"success",n}))}}},methods:{handleStart:function(n){n.uid=Date.now()+this.tempIndex++;var e={status:"ready",name:n.name,size:n.size,percentage:0,uid:n.uid,raw:n};if("picture-card"===this.listType||"picture"===this.listType)try{e.url=URL.createObjectURL(n)}catch(n){return void console.error("[Element Error][Upload]",n)}this.uploadFiles.push(e),this.onChange(e,this.uploadFiles)},handleProgress:function(n,e){var t=this.getFile(e);this.onProgress(n,t,this.uploadFiles),t.status="uploading",t.percentage=n.percent||0},handleSuccess:function(n,e){var t=this.getFile(e);t&&(t.status="success",t.response=n,this.onSuccess(n,t,this.uploadFiles),this.onChange(t,this.uploadFiles))},handleError:function(n,e){var t=this.getFile(e),i=this.uploadFiles;t.status="fail",i.splice(i.indexOf(t),1),this.onError(n,t,this.uploadFiles),this.onChange(t,this.uploadFiles)},handleRemove:function(n,e){var t=this;e&&(n=this.getFile(e));var i=function(){t.abort(n);var e=t.uploadFiles;e.splice(e.indexOf(n),1),t.onRemove(n,e)};if(this.beforeRemove){if("function"==typeof this.beforeRemove){var a=this.beforeRemove(n,this.uploadFiles);a&&a.then?a.then((function(){i()}),ls):!1!==a&&i()}}else i()},getFile:function(n){var e=this.uploadFiles,t=void 0;return e.every((function(e){return!(t=n.uid===e.uid?e:null)})),t},abort:function(n){this.$refs["upload-inner"].abort(n)},clearFiles:function(){this.uploadFiles=[]},submit:function(){var n=this;this.uploadFiles.filter((function(n){return"ready"===n.status})).forEach((function(e){n.$refs["upload-inner"].upload(e.raw)}))},getMigratingConfig:function(){return{props:{"default-file-list":"default-file-list is renamed to file-list.","show-upload-list":"show-upload-list is renamed to show-file-list.","thumbnail-mode":"thumbnail-mode has been deprecated, you can implement the same effect according to this case: http://element.eleme.io/#/zh-CN/component/upload#yong-hu-tou-xiang-shang-chuan"}}}},beforeDestroy:function(){this.uploadFiles.forEach((function(n){n.url&&0===n.url.indexOf("blob:")&&URL.revokeObjectURL(n.url)}))},render:function(n){var e=this,t=void 0;this.showFileList&&(t=n(es,{attrs:{disabled:this.uploadDisabled,listType:this.listType,files:this.uploadFiles,handlePreview:this.onPreview},on:{remove:this.handleRemove}},[function(n){if(e.$scopedSlots.file)return e.$scopedSlots.file({file:n.file})}]));var i=n("upload",{props:{type:this.type,drag:this.drag,action:this.action,multiple:this.multiple,"before-upload":this.beforeUpload,"with-credentials":this.withCredentials,headers:this.headers,name:this.name,data:this.data,accept:this.accept,fileList:this.uploadFiles,autoUpload:this.autoUpload,listType:this.listType,disabled:this.uploadDisabled,limit:this.limit,"on-exceed":this.onExceed,"on-start":this.handleStart,"on-progress":this.handleProgress,"on-success":this.handleSuccess,"on-error":this.handleError,"on-preview":this.onPreview,"on-remove":this.handleRemove,"http-request":this.httpRequest},ref:"upload-inner"},[this.$slots.trigger||this.$slots.default]);return n("div",["picture-card"===this.listType?t:"",this.$slots.trigger?[i,this.$slots.default]:i,this.$slots.tip,"picture-card"!==this.listType?t:""])}},void 0,void 0,!1,null,null,null);ds.options.__file="packages/upload/src/index.vue";var cs=ds.exports;cs.install=function(n){n.component(cs.name,cs)};var us=cs,ps=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-progress",class:["el-progress--"+n.type,n.status?"is-"+n.status:"",{"el-progress--without-text":!n.showText,"el-progress--text-inside":n.textInside}],attrs:{role:"progressbar","aria-valuenow":n.percentage,"aria-valuemin":"0","aria-valuemax":"100"}},["line"===n.type?t("div",{staticClass:"el-progress-bar"},[t("div",{staticClass:"el-progress-bar__outer",style:{height:n.strokeWidth+"px",backgroundColor:n.defineBackColor}},[t("div",{staticClass:"el-progress-bar__inner",style:n.barStyle},[n.showText&&n.textInside?t("div",{staticClass:"el-progress-bar__innerText",style:{color:n.textColor}},[n._v(n._s(n.content))]):n._e()])])]):t("div",{staticClass:"el-progress-circle",style:{height:n.width+"px",width:n.width+"px"}},[t("svg",{attrs:{viewBox:"0 0 100 100"}},[t("path",{staticClass:"el-progress-circle__track",style:n.trailPathStyle,attrs:{d:n.trackPath,stroke:n.defineBackColor,"stroke-width":n.relativeStrokeWidth,fill:"none"}}),t("path",{staticClass:"el-progress-circle__path",style:n.circlePathStyle,attrs:{d:n.trackPath,stroke:n.stroke,fill:"none","stroke-linecap":n.strokeLinecap,"stroke-width":n.percentage?n.relativeStrokeWidth:0}})])]),n.showText&&!n.textInside?t("div",{staticClass:"el-progress__text",style:{fontSize:n.progressTextSize+"px",color:n.textColor}},[n.status?t("i",{class:n.iconClass}):[n._v(n._s(n.content))]],2):n._e()])};ps._withStripped=!0;var hs=a({name:"ElProgress",props:{type:{type:String,default:"line",validator:function(n){return["line","circle","dashboard"].indexOf(n)>-1}},percentage:{type:Number,default:0,required:!0,validator:function(n){return n>=0&&n<=100}},status:{type:String,validator:function(n){return["success","exception","warning"].indexOf(n)>-1}},strokeWidth:{type:Number,default:6},strokeLinecap:{type:String,default:"round"},textInside:{type:Boolean,default:!1},width:{type:Number,default:126},showText:{type:Boolean,default:!0},color:{type:[String,Array,Function],default:""},defineBackColor:{type:[String,Array,Function],default:"#ebeef5"},textColor:{type:[String,Array,Function],default:"#606266"},format:Function},computed:{barStyle:function(){var n={};return n.width=this.percentage+"%",n.backgroundColor=this.getCurrentColor(this.percentage),n},relativeStrokeWidth:function(){return(this.strokeWidth/this.width*100).toFixed(1)},radius:function(){return"circle"===this.type||"dashboard"===this.type?parseInt(50-parseFloat(this.relativeStrokeWidth)/2,10):0},trackPath:function(){var n=this.radius,e="dashboard"===this.type;return"\n        M 50 50\n        m 0 "+(e?"":"-")+n+"\n        a "+n+" "+n+" 0 1 1 0 "+(e?"-":"")+2*n+"\n        a "+n+" "+n+" 0 1 1 0 "+(e?"":"-")+2*n+"\n        "},perimeter:function(){return 2*Math.PI*this.radius},rate:function(){return"dashboard"===this.type?.75:1},strokeDashoffset:function(){return-1*this.perimeter*(1-this.rate)/2+"px"},trailPathStyle:function(){return{strokeDasharray:this.perimeter*this.rate+"px, "+this.perimeter+"px",strokeDashoffset:this.strokeDashoffset}},circlePathStyle:function(){return{strokeDasharray:this.perimeter*this.rate*(this.percentage/100)+"px, "+this.perimeter+"px",strokeDashoffset:this.strokeDashoffset,transition:"stroke-dasharray 0.6s ease 0s, stroke 0.6s ease"}},stroke:function(){var n=void 0;if(this.color)n=this.getCurrentColor(this.percentage);else switch(this.status){case"success":n="#13ce66";break;case"exception":n="#ff4949";break;case"warning":n="#e6a23c";break;default:n="#20a0ff"}return n},iconClass:function(){return"warning"===this.status?"el-icon-warning":"line"===this.type?"success"===this.status?"el-icon-circle-check":"el-icon-circle-close":"success"===this.status?"el-icon-check":"el-icon-close"},progressTextSize:function(){return"line"===this.type?12+.4*this.strokeWidth:.111111*this.width+2},content:function(){return"function"==typeof this.format?this.format(this.percentage)||"":this.percentage+"%"}},methods:{getCurrentColor:function(n){return"function"==typeof this.color?this.color(n):"string"==typeof this.color?this.color:this.getLevelColor(n)},getLevelColor:function(n){for(var e=this.getColorArray().sort((function(n,e){return n.percentage-e.percentage})),t=0;t<e.length;t++)if(e[t].percentage>n)return e[t].color;return e[e.length-1].color},getColorArray:function(){var n=this.color,e=100/n.length;return n.map((function(n,t){return"string"==typeof n?{color:n,percentage:(t+1)*e}:n}))}}},ps,[],!1,null,null,null);hs.options.__file="packages/progress/src/progress.vue";var ms=hs.exports;ms.install=function(n){n.component(ms.name,ms)};var gs=ms,fs=function(){var n=this.$createElement,e=this._self._c||n;return e("span",{staticClass:"el-spinner"},[e("svg",{staticClass:"el-spinner-inner",style:{width:this.radius/2+"px",height:this.radius/2+"px"},attrs:{viewBox:"0 0 50 50"}},[e("circle",{staticClass:"path",attrs:{cx:"25",cy:"25",r:"20",fill:"none",stroke:this.strokeColor,"stroke-width":this.strokeWidth}})])])};fs._withStripped=!0;var vs=a({name:"ElSpinner",props:{type:String,radius:{type:Number,default:100},strokeWidth:{type:Number,default:5},strokeColor:{type:String,default:"#efefef"}}},fs,[],!1,null,null,null);vs.options.__file="packages/spinner/src/spinner.vue";var bs=vs.exports;bs.install=function(n){n.component(bs.name,bs)};var _s=bs,ys=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-message-fade"},on:{"after-leave":n.handleAfterLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],class:["el-message",n.type&&!n.iconClass?"el-message--"+n.type:"",n.center?"is-center":"",n.showClose?"is-closable":"",n.customClass],style:n.positionStyle,attrs:{role:"alert"},on:{mouseenter:n.clearTimer,mouseleave:n.startTimer}},[n.iconClass?t("i",{class:n.iconClass}):t("i",{class:n.typeClass}),n._t("default",[n.dangerouslyUseHTMLString?t("p",{staticClass:"el-message__content",domProps:{innerHTML:n._s(n.message)}}):t("p",{staticClass:"el-message__content"},[n._v(n._s(n.message))])]),n.showClose?t("i",{staticClass:"el-message__closeBtn el-icon-close",on:{click:n.close}}):n._e()],2)])};ys._withStripped=!0;var xs={success:"success",info:"info",warning:"warning",error:"error"},ks=a({data:function(){return{visible:!1,message:"",duration:3e3,type:"info",iconClass:"",customClass:"",onClose:null,showClose:!1,closed:!1,verticalOffset:20,timer:null,dangerouslyUseHTMLString:!1,center:!1}},computed:{typeClass:function(){return this.type&&!this.iconClass?"el-message__icon el-icon-"+xs[this.type]:""},positionStyle:function(){return{top:this.verticalOffset+"px"}}},watch:{closed:function(n){n&&(this.visible=!1)}},methods:{handleAfterLeave:function(){this.$destroy(!0),this.$el.parentNode.removeChild(this.$el)},close:function(){this.closed=!0,"function"==typeof this.onClose&&this.onClose(this)},clearTimer:function(){clearTimeout(this.timer)},startTimer:function(){var n=this;this.duration>0&&(this.timer=setTimeout((function(){n.closed||n.close()}),this.duration))},keydown:function(n){27===n.keyCode&&(this.closed||this.close())}},mounted:function(){this.startTimer(),document.addEventListener("keydown",this.keydown)},beforeDestroy:function(){document.removeEventListener("keydown",this.keydown)}},ys,[],!1,null,null,null);ks.options.__file="packages/message/src/main.vue";var Ts=ks.exports,ws=t(16),Is=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},Cs=pt.a.extend(Ts),Ds=void 0,Es=[],Ss=1,Ms=function n(e){if(!pt.a.prototype.$isServer){"string"==typeof(e=e||{})&&(e={message:e});var t=e.onClose,i="message_"+Ss++;e.onClose=function(){n.close(i,t)},(Ds=new Cs({data:e})).id=i,Object(Ga.isVNode)(Ds.message)&&(Ds.$slots.default=[Ds.message],Ds.message=null),Ds.$mount(),document.body.appendChild(Ds.$el);var a=e.offset||20;return Es.forEach((function(n){a+=n.$el.offsetHeight+16})),Ds.verticalOffset=a,Ds.visible=!0,Ds.$el.style.zIndex=_.PopupManager.nextZIndex(),Es.push(Ds),Ds}};["success","warning","info","error"].forEach((function(n){Ms[n]=function(e){return Object(ws.isObject)(e)&&!Object(Ga.isVNode)(e)?Ms(Is({},e,{type:n})):Ms({type:n,message:e})}})),Ms.close=function(n,e){for(var t=Es.length,i=-1,a=void 0,r=0;r<t;r++)if(n===Es[r].id){a=Es[r].$el.offsetHeight,i=r,"function"==typeof e&&e(Es[r]),Es.splice(r,1);break}if(!(t<=1||-1===i||i>Es.length-1))for(var o=i;o<t-1;o++){var s=Es[o].$el;s.style.top=parseInt(s.style.top,10)-a-16+"px"}},Ms.closeAll=function(){for(var n=Es.length-1;n>=0;n--)Es[n].close()};var As=Ms,Os=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-badge"},[n._t("default"),t("transition",{attrs:{name:"el-zoom-in-center"}},[t("sup",{directives:[{name:"show",rawName:"v-show",value:!n.hidden&&(n.content||0===n.content||n.isDot),expression:"!hidden && (content || content === 0 || isDot)"}],staticClass:"el-badge__content",class:[n.type?"el-badge__content--"+n.type:null,{"is-fixed":n.$slots.default,"is-dot":n.isDot}],domProps:{textContent:n._s(n.content)}})])],2)};Os._withStripped=!0;var Ps=a({name:"ElBadge",props:{value:[String,Number],max:Number,isDot:Boolean,hidden:Boolean,type:{type:String,validator:function(n){return["primary","success","warning","info","danger"].indexOf(n)>-1}}},computed:{content:function(){if(!this.isDot){var n=this.value,e=this.max;return"number"==typeof n&&"number"==typeof e&&e<n?e+"+":n}}}},Os,[],!1,null,null,null);Ps.options.__file="packages/badge/src/main.vue";var js=Ps.exports;js.install=function(n){n.component(js.name,js)};var zs=js,Rs=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-card",class:n.shadow?"is-"+n.shadow+"-shadow":"is-always-shadow"},[n.$slots.header||n.header?t("div",{staticClass:"el-card__header"},[n._t("header",[n._v(n._s(n.header))])],2):n._e(),t("div",{staticClass:"el-card__body",style:n.bodyStyle},[n._t("default")],2)])};Rs._withStripped=!0;var $s=a({name:"ElCard",props:{header:{},bodyStyle:{},shadow:{type:String}}},Rs,[],!1,null,null,null);$s.options.__file="packages/card/src/main.vue";var Ls=$s.exports;Ls.install=function(n){n.component(Ls.name,Ls)};var Us=Ls,Ns=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-rate",attrs:{role:"slider","aria-valuenow":n.currentValue,"aria-valuetext":n.text,"aria-valuemin":"0","aria-valuemax":n.max,tabindex:"0"},on:{keydown:n.handleKey}},[n._l(n.max,(function(e,i){return t("span",{key:i,staticClass:"el-rate__item",style:{cursor:n.rateDisabled?"auto":"pointer"},on:{mousemove:function(t){n.setCurrentValue(e,t)},mouseleave:n.resetCurrentValue,click:function(t){n.selectValue(e)}}},[t("i",{staticClass:"el-rate__icon",class:[n.classes[e-1],{hover:n.hoverIndex===e}],style:n.getIconStyle(e)},[n.showDecimalIcon(e)?t("i",{staticClass:"el-rate__decimal",class:n.decimalIconClass,style:n.decimalStyle}):n._e()])])})),n.showText||n.showScore?t("span",{staticClass:"el-rate__text",style:{color:n.textColor}},[n._v(n._s(n.text))]):n._e()],2)};Ns._withStripped=!0;var qs=a({name:"ElRate",mixins:[k.a],inject:{elForm:{default:""}},data:function(){return{pointerAtLeftHalf:!0,currentValue:this.value,hoverIndex:-1}},props:{value:{type:Number,default:0},lowThreshold:{type:Number,default:2},highThreshold:{type:Number,default:4},max:{type:Number,default:5},colors:{type:[Array,Object],default:function(){return["#F7BA2A","#F7BA2A","#F7BA2A"]}},voidColor:{type:String,default:"#C6D1DE"},disabledVoidColor:{type:String,default:"#EFF2F7"},iconClasses:{type:[Array,Object],default:function(){return["el-icon-star-on","el-icon-star-on","el-icon-star-on"]}},voidIconClass:{type:String,default:"el-icon-star-off"},disabledVoidIconClass:{type:String,default:"el-icon-star-on"},disabled:{type:Boolean,default:!1},allowHalf:{type:Boolean,default:!1},showText:{type:Boolean,default:!1},showScore:{type:Boolean,default:!1},textColor:{type:String,default:"#1f2d3d"},texts:{type:Array,default:function(){return["极差","失望","一般","满意","惊喜"]}},scoreTemplate:{type:String,default:"{value}"}},computed:{text:function(){var n="";return this.showScore?n=this.scoreTemplate.replace(/\{\s*value\s*\}/,this.rateDisabled?this.value:this.currentValue):this.showText&&(n=this.texts[Math.ceil(this.currentValue)-1]),n},decimalStyle:function(){var n="";return this.rateDisabled?n=this.valueDecimal+"%":this.allowHalf&&(n="50%"),{color:this.activeColor,width:n}},valueDecimal:function(){return 100*this.value-100*Math.floor(this.value)},classMap:function(){var n;return Array.isArray(this.iconClasses)?((n={})[this.lowThreshold]=this.iconClasses[0],n[this.highThreshold]={value:this.iconClasses[1],excluded:!0},n[this.max]=this.iconClasses[2],n):this.iconClasses},decimalIconClass:function(){return this.getValueFromMap(this.value,this.classMap)},voidClass:function(){return this.rateDisabled?this.disabledVoidIconClass:this.voidIconClass},activeClass:function(){return this.getValueFromMap(this.currentValue,this.classMap)},colorMap:function(){var n;return Array.isArray(this.colors)?((n={})[this.lowThreshold]=this.colors[0],n[this.highThreshold]={value:this.colors[1],excluded:!0},n[this.max]=this.colors[2],n):this.colors},activeColor:function(){return this.getValueFromMap(this.currentValue,this.colorMap)},classes:function(){var n=[],e=0,t=this.currentValue;for(this.allowHalf&&this.currentValue!==Math.floor(this.currentValue)&&t--;e<t;e++)n.push(this.activeClass);for(;e<this.max;e++)n.push(this.voidClass);return n},rateDisabled:function(){return this.disabled||(this.elForm||{}).disabled}},watch:{value:function(n){this.currentValue=n,this.pointerAtLeftHalf=this.value!==Math.floor(this.value)}},methods:{getMigratingConfig:function(){return{props:{"text-template":"text-template is renamed to score-template."}}},getValueFromMap:function(n,e){var t=Object.keys(e).filter((function(t){var i=e[t];return!!Object(ws.isObject)(i)&&i.excluded?n<t:n<=t})).sort((function(n,e){return n-e})),i=e[t[0]];return Object(ws.isObject)(i)?i.value:i||""},showDecimalIcon:function(n){var e=this.rateDisabled&&this.valueDecimal>0&&n-1<this.value&&n>this.value,t=this.allowHalf&&this.pointerAtLeftHalf&&n-.5<=this.currentValue&&n>this.currentValue;return e||t},getIconStyle:function(n){var e=this.rateDisabled?this.disabledVoidColor:this.voidColor;return{color:n<=this.currentValue?this.activeColor:e}},selectValue:function(n){this.rateDisabled||(this.allowHalf&&this.pointerAtLeftHalf?(this.$emit("input",this.currentValue),this.$emit("change",this.currentValue)):(this.$emit("input",n),this.$emit("change",n)))},handleKey:function(n){if(!this.rateDisabled){var e=this.currentValue,t=n.keyCode;38===t||39===t?(this.allowHalf?e+=.5:e+=1,n.stopPropagation(),n.preventDefault()):37!==t&&40!==t||(this.allowHalf?e-=.5:e-=1,n.stopPropagation(),n.preventDefault()),e=(e=e<0?0:e)>this.max?this.max:e,this.$emit("input",e),this.$emit("change",e)}},setCurrentValue:function(n,e){if(!this.rateDisabled){if(this.allowHalf){var t=e.target;Object(gn.hasClass)(t,"el-rate__item")&&(t=t.querySelector(".el-rate__icon")),Object(gn.hasClass)(t,"el-rate__decimal")&&(t=t.parentNode),this.pointerAtLeftHalf=2*e.offsetX<=t.clientWidth,this.currentValue=this.pointerAtLeftHalf?n-.5:n}else this.currentValue=n;this.hoverIndex=n}},resetCurrentValue:function(){this.rateDisabled||(this.allowHalf&&(this.pointerAtLeftHalf=this.value!==Math.floor(this.value)),this.currentValue=this.value,this.hoverIndex=-1)}},created:function(){this.value||this.$emit("input",0)}},Ns,[],!1,null,null,null);qs.options.__file="packages/rate/src/main.vue";var Bs=qs.exports;Bs.install=function(n){n.component(Bs.name,Bs)};var Fs=Bs,Vs=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-steps",class:[!this.simple&&"el-steps--"+this.direction,this.simple&&"el-steps--simple"]},[this._t("default")],2)};Vs._withStripped=!0;var Gs=a({name:"ElSteps",mixins:[k.a],props:{space:[Number,String],active:Number,direction:{type:String,default:"horizontal"},alignCenter:Boolean,simple:Boolean,finishStatus:{type:String,default:"finish"},processStatus:{type:String,default:"process"}},data:function(){return{steps:[],stepOffset:0}},methods:{getMigratingConfig:function(){return{props:{center:"center is removed."}}}},watch:{active:function(n,e){this.$emit("change",n,e)},steps:function(n){n.forEach((function(n,e){n.index=e}))}}},Vs,[],!1,null,null,null);Gs.options.__file="packages/steps/src/steps.vue";var Hs=Gs.exports;Hs.install=function(n){n.component(Hs.name,Hs)};var Ws=Hs,Qs=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-step",class:[!n.isSimple&&"is-"+n.$parent.direction,n.isSimple&&"is-simple",n.isLast&&!n.space&&!n.isCenter&&"is-flex",n.isCenter&&!n.isVertical&&!n.isSimple&&"is-center"],style:n.style},[t("div",{staticClass:"el-step__head",class:"is-"+n.currentStatus},[t("div",{staticClass:"el-step__line",style:n.isLast?"":{marginRight:n.$parent.stepOffset+"px"}},[t("i",{staticClass:"el-step__line-inner",style:n.lineStyle})]),t("div",{staticClass:"el-step__icon",class:"is-"+(n.icon?"icon":"text")},["success"!==n.currentStatus&&"error"!==n.currentStatus?n._t("icon",[n.icon?t("i",{staticClass:"el-step__icon-inner",class:[n.icon]}):n._e(),n.icon||n.isSimple?n._e():t("div",{staticClass:"el-step__icon-inner"},[n._v(n._s(n.index+1))])]):t("i",{staticClass:"el-step__icon-inner is-status",class:["el-icon-"+("success"===n.currentStatus?"check":"close")]})],2)]),t("div",{staticClass:"el-step__main"},[t("div",{ref:"title",staticClass:"el-step__title",class:["is-"+n.currentStatus]},[n._t("title",[n._v(n._s(n.title))])],2),n.isSimple?t("div",{staticClass:"el-step__arrow"}):t("div",{staticClass:"el-step__description",class:["is-"+n.currentStatus]},[n._t("description",[n._v(n._s(n.description))])],2)])])};Qs._withStripped=!0;var Ks=a({name:"ElStep",props:{title:String,icon:String,description:String,status:String},data:function(){return{index:-1,lineStyle:{},internalStatus:""}},beforeCreate:function(){this.$parent.steps.push(this)},beforeDestroy:function(){var n=this.$parent.steps,e=n.indexOf(this);e>=0&&n.splice(e,1)},computed:{currentStatus:function(){return this.status||this.internalStatus},prevStatus:function(){var n=this.$parent.steps[this.index-1];return n?n.currentStatus:"wait"},isCenter:function(){return this.$parent.alignCenter},isVertical:function(){return"vertical"===this.$parent.direction},isSimple:function(){return this.$parent.simple},isLast:function(){var n=this.$parent;return n.steps[n.steps.length-1]===this},stepsCount:function(){return this.$parent.steps.length},space:function(){var n=this.isSimple,e=this.$parent.space;return n?"":e},style:function(){var n={},e=this.$parent.steps.length,t="number"==typeof this.space?this.space+"px":this.space?this.space:100/(e-(this.isCenter?0:1))+"%";return n.flexBasis=t,this.isVertical||(this.isLast?n.maxWidth=100/this.stepsCount+"%":n.marginRight=-this.$parent.stepOffset+"px"),n}},methods:{updateStatus:function(n){var e=this.$parent.$children[this.index-1];n>this.index?this.internalStatus=this.$parent.finishStatus:n===this.index&&"error"!==this.prevStatus?this.internalStatus=this.$parent.processStatus:this.internalStatus="wait",e&&e.calcProgress(this.internalStatus)},calcProgress:function(n){var e=100,t={};t.transitionDelay=150*this.index+"ms",n===this.$parent.processStatus?(this.currentStatus,e=0):"wait"===n&&(e=0,t.transitionDelay=-150*this.index+"ms"),t.borderWidth=e&&!this.isSimple?"1px":0,"vertical"===this.$parent.direction?t.height=e+"%":t.width=e+"%",this.lineStyle=t}},mounted:function(){var n=this,e=this.$watch("index",(function(t){n.$watch("$parent.active",n.updateStatus,{immediate:!0}),n.$watch("$parent.processStatus",(function(){var e=n.$parent.active;n.updateStatus(e)}),{immediate:!0}),e()}))}},Qs,[],!1,null,null,null);Ks.options.__file="packages/steps/src/step.vue";var Ys=Ks.exports;Ys.install=function(n){n.component(Ys.name,Ys)};var Xs=Ys,Js=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{class:n.carouselClasses,on:{mouseenter:function(e){return e.stopPropagation(),n.handleMouseEnter(e)},mouseleave:function(e){return e.stopPropagation(),n.handleMouseLeave(e)}}},[t("div",{staticClass:"el-carousel__container",style:{height:n.height}},[n.arrowDisplay?t("transition",{attrs:{name:"carousel-arrow-left"}},[t("button",{directives:[{name:"show",rawName:"v-show",value:("always"===n.arrow||n.hover)&&(n.loop||n.activeIndex>0),expression:"(arrow === 'always' || hover) && (loop || activeIndex > 0)"}],staticClass:"el-carousel__arrow el-carousel__arrow--left",attrs:{type:"button"},on:{mouseenter:function(e){n.handleButtonEnter("left")},mouseleave:n.handleButtonLeave,click:function(e){e.stopPropagation(),n.throttledArrowClick(n.activeIndex-1)}}},[t("i",{staticClass:"el-icon-arrow-left"})])]):n._e(),n.arrowDisplay?t("transition",{attrs:{name:"carousel-arrow-right"}},[t("button",{directives:[{name:"show",rawName:"v-show",value:("always"===n.arrow||n.hover)&&(n.loop||n.activeIndex<n.items.length-1),expression:"(arrow === 'always' || hover) && (loop || activeIndex < items.length - 1)"}],staticClass:"el-carousel__arrow el-carousel__arrow--right",attrs:{type:"button"},on:{mouseenter:function(e){n.handleButtonEnter("right")},mouseleave:n.handleButtonLeave,click:function(e){e.stopPropagation(),n.throttledArrowClick(n.activeIndex+1)}}},[t("i",{staticClass:"el-icon-arrow-right"})])]):n._e(),n._t("default")],2),"none"!==n.indicatorPosition?t("ul",{class:n.indicatorsClasses},n._l(n.items,(function(e,i){return t("li",{key:i,class:["el-carousel__indicator","el-carousel__indicator--"+n.direction,{"is-active":i===n.activeIndex}],on:{mouseenter:function(e){n.throttledIndicatorHover(i)},click:function(e){e.stopPropagation(),n.handleIndicatorClick(i)}}},[t("button",{staticClass:"el-carousel__button"},[n.hasLabel?t("span",[n._v(n._s(e.label))]):n._e()])])})),0):n._e()])};Js._withStripped=!0;var Zs=t(25),nl=t.n(Zs),el=a({name:"ElCarousel",props:{initialIndex:{type:Number,default:0},height:String,trigger:{type:String,default:"hover"},autoplay:{type:Boolean,default:!0},interval:{type:Number,default:3e3},indicatorPosition:String,indicator:{type:Boolean,default:!0},arrow:{type:String,default:"hover"},type:String,loop:{type:Boolean,default:!0},direction:{type:String,default:"horizontal",validator:function(n){return-1!==["horizontal","vertical"].indexOf(n)}}},data:function(){return{items:[],activeIndex:-1,containerWidth:0,timer:null,hover:!1}},computed:{arrowDisplay:function(){return"never"!==this.arrow&&"vertical"!==this.direction},hasLabel:function(){return this.items.some((function(n){return n.label.toString().length>0}))},carouselClasses:function(){var n=["el-carousel","el-carousel--"+this.direction];return"card"===this.type&&n.push("el-carousel--card"),n},indicatorsClasses:function(){var n=["el-carousel__indicators","el-carousel__indicators--"+this.direction];return this.hasLabel&&n.push("el-carousel__indicators--labels"),"outside"!==this.indicatorPosition&&"card"!==this.type||n.push("el-carousel__indicators--outside"),n}},watch:{items:function(n){n.length>0&&this.setActiveItem(this.initialIndex)},activeIndex:function(n,e){this.resetItemPosition(e),e>-1&&this.$emit("change",n,e)},autoplay:function(n){n?this.startTimer():this.pauseTimer()},loop:function(){this.setActiveItem(this.activeIndex)},interval:function(){this.pauseTimer(),this.startTimer()}},methods:{handleMouseEnter:function(){this.hover=!0,this.pauseTimer()},handleMouseLeave:function(){this.hover=!1,this.startTimer()},itemInStage:function(n,e){var t=this.items.length;return e===t-1&&n.inStage&&this.items[0].active||n.inStage&&this.items[e+1]&&this.items[e+1].active?"left":!!(0===e&&n.inStage&&this.items[t-1].active||n.inStage&&this.items[e-1]&&this.items[e-1].active)&&"right"},handleButtonEnter:function(n){var e=this;"vertical"!==this.direction&&this.items.forEach((function(t,i){n===e.itemInStage(t,i)&&(t.hover=!0)}))},handleButtonLeave:function(){"vertical"!==this.direction&&this.items.forEach((function(n){n.hover=!1}))},updateItems:function(){this.items=this.$children.filter((function(n){return"ElCarouselItem"===n.$options.name}))},resetItemPosition:function(n){var e=this;this.items.forEach((function(t,i){t.translateItem(i,e.activeIndex,n)}))},playSlides:function(){this.activeIndex<this.items.length-1?this.activeIndex++:this.loop&&(this.activeIndex=0)},pauseTimer:function(){this.timer&&(clearInterval(this.timer),this.timer=null)},startTimer:function(){this.interval<=0||!this.autoplay||this.timer||(this.timer=setInterval(this.playSlides,this.interval))},resetTimer:function(){this.pauseTimer(),this.startTimer()},setActiveItem:function(n){if("string"==typeof n){var e=this.items.filter((function(e){return e.name===n}));e.length>0&&(n=this.items.indexOf(e[0]))}if(n=Number(n),isNaN(n)||n!==Math.floor(n))console.warn("[Element Warn][Carousel]index must be an integer.");else{var t=this.items.length,i=this.activeIndex;this.activeIndex=n<0?this.loop?t-1:0:n>=t?this.loop?0:t-1:n,i===this.activeIndex&&this.resetItemPosition(i),this.resetTimer()}},prev:function(){this.setActiveItem(this.activeIndex-1)},next:function(){this.setActiveItem(this.activeIndex+1)},handleIndicatorClick:function(n){this.activeIndex=n},handleIndicatorHover:function(n){"hover"===this.trigger&&n!==this.activeIndex&&(this.activeIndex=n)}},created:function(){var n=this;this.throttledArrowClick=nl()(300,!0,(function(e){n.setActiveItem(e)})),this.throttledIndicatorHover=nl()(300,(function(e){n.handleIndicatorHover(e)}))},mounted:function(){var n=this;this.updateItems(),this.$nextTick((function(){Object(Le.addResizeListener)(n.$el,n.resetItemPosition),n.initialIndex<n.items.length&&n.initialIndex>=0&&(n.activeIndex=n.initialIndex),n.startTimer()}))},beforeDestroy:function(){this.$el&&Object(Le.removeResizeListener)(this.$el,this.resetItemPosition),this.pauseTimer()}},Js,[],!1,null,null,null);el.options.__file="packages/carousel/src/main.vue";var tl=el.exports;tl.install=function(n){n.component(tl.name,tl)};var il=tl,al={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};function rl(n){var e=n.move,t=n.size,i=n.bar,a={},r="translate"+i.axis+"("+e+"%)";return a[i.size]=t,a.transform=r,a.msTransform=r,a.webkitTransform=r,a}var ol={name:"Bar",props:{vertical:Boolean,size:String,move:Number},computed:{bar:function(){return al[this.vertical?"vertical":"horizontal"]},wrap:function(){return this.$parent.wrap}},render:function(n){var e=this.size,t=this.move,i=this.bar;return n("div",{class:["el-scrollbar__bar","is-"+i.key],on:{mousedown:this.clickTrackHandler}},[n("div",{ref:"thumb",class:"el-scrollbar__thumb",on:{mousedown:this.clickThumbHandler},style:rl({size:e,move:t,bar:i})})])},methods:{clickThumbHandler:function(n){n.ctrlKey||2===n.button||(this.startDrag(n),this[this.bar.axis]=n.currentTarget[this.bar.offset]-(n[this.bar.client]-n.currentTarget.getBoundingClientRect()[this.bar.direction]))},clickTrackHandler:function(n){var e=100*(Math.abs(n.target.getBoundingClientRect()[this.bar.direction]-n[this.bar.client])-this.$refs.thumb[this.bar.offset]/2)/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=e*this.wrap[this.bar.scrollSize]/100},startDrag:function(n){n.stopImmediatePropagation(),this.cursorDown=!0,Object(gn.on)(document,"mousemove",this.mouseMoveDocumentHandler),Object(gn.on)(document,"mouseup",this.mouseUpDocumentHandler),document.onselectstart=function(){return!1}},mouseMoveDocumentHandler:function(n){if(!1!==this.cursorDown){var e=this[this.bar.axis];if(e){var t=100*(-1*(this.$el.getBoundingClientRect()[this.bar.direction]-n[this.bar.client])-(this.$refs.thumb[this.bar.offset]-e))/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=t*this.wrap[this.bar.scrollSize]/100}}},mouseUpDocumentHandler:function(n){this.cursorDown=!1,this[this.bar.axis]=0,Object(gn.off)(document,"mousemove",this.mouseMoveDocumentHandler),document.onselectstart=null}},destroyed:function(){Object(gn.off)(document,"mouseup",this.mouseUpDocumentHandler)}},sl={name:"ElScrollbar",components:{Bar:ol},props:{native:Boolean,wrapStyle:{},wrapClass:{},viewClass:{},viewStyle:{},noresize:Boolean,tag:{type:String,default:"div"}},data:function(){return{sizeWidth:"0",sizeHeight:"0",moveX:0,moveY:0}},computed:{wrap:function(){return this.$refs.wrap}},render:function(n){var e=zt()(),t=this.wrapStyle;if(e){var i="-"+e+"px",a="margin-bottom: "+i+"; margin-right: "+i+";";Array.isArray(this.wrapStyle)?(t=Object(g.toObject)(this.wrapStyle)).marginRight=t.marginBottom=i:"string"==typeof this.wrapStyle?t+=a:t=a}var r=n(this.tag,{class:["el-scrollbar__view",this.viewClass],style:this.viewStyle,ref:"resize"},this.$slots.default),o=n("div",{ref:"wrap",style:t,on:{scroll:this.handleScroll},class:[this.wrapClass,"el-scrollbar__wrap",e?"":"el-scrollbar__wrap--hidden-default"]},[[r]]),s=void 0;return s=this.native?[n("div",{ref:"wrap",class:[this.wrapClass,"el-scrollbar__wrap"],style:t},[[r]])]:[o,n(ol,{attrs:{move:this.moveX,size:this.sizeWidth}}),n(ol,{attrs:{vertical:!0,move:this.moveY,size:this.sizeHeight}})],n("div",{class:"el-scrollbar"},s)},methods:{handleScroll:function(){var n=this.wrap;this.moveY=100*n.scrollTop/n.clientHeight,this.moveX=100*n.scrollLeft/n.clientWidth},update:function(){var n,e,t=this.wrap;t&&(n=100*t.clientHeight/t.scrollHeight,e=100*t.clientWidth/t.scrollWidth,this.sizeHeight=n<100?n+"%":"",this.sizeWidth=e<100?e+"%":"")}},mounted:function(){this.native||(this.$nextTick(this.update),!this.noresize&&Object(Le.addResizeListener)(this.$refs.resize,this.update))},beforeDestroy:function(){this.native||!this.noresize&&Object(Le.removeResizeListener)(this.$refs.resize,this.update)},install:function(n){n.component(sl.name,sl)}},ll=sl,dl=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"show",rawName:"v-show",value:n.ready,expression:"ready"}],staticClass:"el-carousel__item",class:{"is-active":n.active,"el-carousel__item--card":"card"===n.$parent.type,"is-in-stage":n.inStage,"is-hover":n.hover,"is-animating":n.animating},style:n.itemStyle,on:{click:n.handleItemClick}},["card"===n.$parent.type?t("div",{directives:[{name:"show",rawName:"v-show",value:!n.active,expression:"!active"}],staticClass:"el-carousel__mask"}):n._e(),n._t("default")],2)};dl._withStripped=!0;var cl=a({name:"ElCarouselItem",props:{name:String,label:{type:[String,Number],default:""}},data:function(){return{hover:!1,translate:0,scale:1,active:!1,ready:!1,inStage:!1,animating:!1}},methods:{processIndex:function(n,e,t){return 0===e&&n===t-1?-1:e===t-1&&0===n?t:n<e-1&&e-n>=t/2?t+1:n>e+1&&n-e>=t/2?-2:n},calcCardTranslate:function(n,e){var t=this.$parent.$el.offsetWidth;return this.inStage?t*(1.17*(n-e)+1)/4:n<e?-1.83*t/4:3.83*t/4},calcTranslate:function(n,e,t){return this.$parent.$el[t?"offsetHeight":"offsetWidth"]*(n-e)},translateItem:function(n,e,t){var i=this.$parent.type,a=this.parentDirection,r=this.$parent.items.length;if("card"!==i&&void 0!==t&&(this.animating=n===e||n===t),n!==e&&r>2&&this.$parent.loop&&(n=this.processIndex(n,e,r)),"card"===i)"vertical"===a&&console.warn("[Element Warn][Carousel]vertical direction is not supported in card mode"),this.inStage=Math.round(Math.abs(n-e))<=1,this.active=n===e,this.translate=this.calcCardTranslate(n,e),this.scale=this.active?1:.83;else{this.active=n===e;var o="vertical"===a;this.translate=this.calcTranslate(n,e,o),this.scale=1}this.ready=!0},handleItemClick:function(){var n=this.$parent;if(n&&"card"===n.type){var e=n.items.indexOf(this);n.setActiveItem(e)}}},computed:{parentDirection:function(){return this.$parent.direction},itemStyle:function(){var n={transform:("vertical"===this.parentDirection?"translateY":"translateX")+"("+this.translate+"px) scale("+this.scale+")"};return Object(g.autoprefixer)(n)}},created:function(){this.$parent&&this.$parent.updateItems()},destroyed:function(){this.$parent&&this.$parent.updateItems()}},dl,[],!1,null,null,null);cl.options.__file="packages/carousel/src/item.vue";var ul=cl.exports;ul.install=function(n){n.component(ul.name,ul)};var pl=ul,hl=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-collapse",attrs:{role:"tablist","aria-multiselectable":"true"}},[this._t("default")],2)};hl._withStripped=!0;var ml=a({name:"ElCollapse",componentName:"ElCollapse",props:{accordion:Boolean,value:{type:[Array,String,Number],default:function(){return[]}}},data:function(){return{activeNames:[].concat(this.value)}},provide:function(){return{collapse:this}},watch:{value:function(n){this.activeNames=[].concat(n)}},methods:{setActiveNames:function(n){n=[].concat(n);var e=this.accordion?n[0]:n;this.activeNames=n,this.$emit("input",e),this.$emit("change",e)},handleItemClick:function(n){if(this.accordion)this.setActiveNames(!this.activeNames[0]&&0!==this.activeNames[0]||this.activeNames[0]!==n.name?n.name:"");else{var e=this.activeNames.slice(0),t=e.indexOf(n.name);t>-1?e.splice(t,1):e.push(n.name),this.setActiveNames(e)}}},created:function(){this.$on("item-click",this.handleItemClick)}},hl,[],!1,null,null,null);ml.options.__file="packages/collapse/src/collapse.vue";var gl=ml.exports;gl.install=function(n){n.component(gl.name,gl)};var fl=gl,vl=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-collapse-item",class:{"is-active":n.isActive,"is-disabled":n.disabled}},[t("div",{attrs:{role:"tab","aria-expanded":n.isActive,"aria-controls":"el-collapse-content-"+n.id,"aria-describedby":"el-collapse-content-"+n.id}},[t("div",{staticClass:"el-collapse-item__header",class:{focusing:n.focusing,"is-active":n.isActive},attrs:{role:"button",id:"el-collapse-head-"+n.id,tabindex:n.disabled?void 0:0},on:{click:n.handleHeaderClick,keyup:function(e){return!("button"in e)&&n._k(e.keyCode,"space",32,e.key,[" ","Spacebar"])&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:(e.stopPropagation(),n.handleEnterClick(e))},focus:n.handleFocus,blur:function(e){n.focusing=!1}}},[n._t("title",[n._v(n._s(n.title))]),t("i",{staticClass:"el-collapse-item__arrow el-icon-arrow-right",class:{"is-active":n.isActive}})],2)]),t("el-collapse-transition",[t("div",{directives:[{name:"show",rawName:"v-show",value:n.isActive,expression:"isActive"}],staticClass:"el-collapse-item__wrap",attrs:{role:"tabpanel","aria-hidden":!n.isActive,"aria-labelledby":"el-collapse-head-"+n.id,id:"el-collapse-content-"+n.id}},[t("div",{staticClass:"el-collapse-item__content"},[n._t("default")],2)])])],1)};vl._withStripped=!0;var bl=a({name:"ElCollapseItem",componentName:"ElCollapseItem",mixins:[w.a],components:{ElCollapseTransition:yn.a},data:function(){return{contentWrapStyle:{height:"auto",display:"block"},contentHeight:0,focusing:!1,isClick:!1,id:Object(g.generateId)()}},inject:["collapse"],props:{title:String,name:{type:[String,Number],default:function(){return this._uid}},disabled:Boolean},computed:{isActive:function(){return this.collapse.activeNames.indexOf(this.name)>-1}},methods:{handleFocus:function(){var n=this;setTimeout((function(){n.isClick?n.isClick=!1:n.focusing=!0}),50)},handleHeaderClick:function(){this.disabled||(this.dispatch("ElCollapse","item-click",this),this.focusing=!1,this.isClick=!0)},handleEnterClick:function(){this.dispatch("ElCollapse","item-click",this)}}},vl,[],!1,null,null,null);bl.options.__file="packages/collapse/src/collapse-item.vue";var _l=bl.exports;_l.install=function(n){n.component(_l.name,_l)};var yl=_l,xl=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:function(){return n.toggleDropDownVisible(!1)},expression:"() => toggleDropDownVisible(false)"}],ref:"reference",class:["el-cascader",n.realSize&&"el-cascader--"+n.realSize,{"is-disabled":n.isDisabled}],on:{mouseenter:function(e){n.inputHover=!0},mouseleave:function(e){n.inputHover=!1},click:function(){return n.toggleDropDownVisible(!n.readonly||void 0)},keydown:n.handleKeyDown}},[t("el-input",{ref:"input",class:{"is-focus":n.dropDownVisible},attrs:{size:n.realSize,placeholder:n.placeholder,readonly:n.readonly,disabled:n.isDisabled,"validate-event":!1},on:{focus:n.handleFocus,blur:n.handleBlur,input:n.handleInput},model:{value:n.multiple?n.presentText:n.inputValue,callback:function(e){n.multiple?n.presentText:n.inputValue=e},expression:"multiple ? presentText : inputValue"}},[t("template",{slot:"suffix"},[n.clearBtnVisible?t("i",{key:"clear",staticClass:"el-input__icon el-icon-circle-close",on:{click:function(e){return e.stopPropagation(),n.handleClear(e)}}}):t("i",{key:"arrow-down",class:["el-input__icon","el-icon-arrow-down",n.dropDownVisible&&"is-reverse"],on:{click:function(e){e.stopPropagation(),n.toggleDropDownVisible()}}})])],2),n.multiple?t("div",{staticClass:"el-cascader__tags"},[n._l(n.presentTags,(function(e){return t("el-tag",{key:e.key,attrs:{type:"info",size:n.tagSize,hit:e.hitState,closable:e.closable,"disable-transitions":""},on:{close:function(t){n.deleteTag(e)}}},[t("span",[n._v(n._s(e.text))])])})),n.filterable&&!n.isDisabled?t("input",{directives:[{name:"model",rawName:"v-model.trim",value:n.inputValue,expression:"inputValue",modifiers:{trim:!0}}],staticClass:"el-cascader__search-input",attrs:{type:"text",placeholder:n.presentTags.length?"":n.placeholder},domProps:{value:n.inputValue},on:{input:[function(e){e.target.composing||(n.inputValue=e.target.value.trim())},function(e){return n.handleInput(n.inputValue,e)}],click:function(e){e.stopPropagation(),n.toggleDropDownVisible(!0)},keydown:function(e){return!("button"in e)&&n._k(e.keyCode,"delete",[8,46],e.key,["Backspace","Delete","Del"])?null:n.handleDelete(e)},blur:function(e){n.$forceUpdate()}}}):n._e()],2):n._e(),t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":n.handleDropdownLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.dropDownVisible,expression:"dropDownVisible"}],ref:"popper",class:["el-popper","el-cascader__dropdown",n.popperClass]},[t("el-cascader-panel",{directives:[{name:"show",rawName:"v-show",value:!n.filtering,expression:"!filtering"}],ref:"panel",attrs:{options:n.options,props:n.config,border:!1,"render-label":n.$scopedSlots.default},on:{"expand-change":n.handleExpandChange,close:function(e){n.toggleDropDownVisible(!1)}},model:{value:n.checkedValue,callback:function(e){n.checkedValue=e},expression:"checkedValue"}}),n.filterable?t("el-scrollbar",{directives:[{name:"show",rawName:"v-show",value:n.filtering,expression:"filtering"}],ref:"suggestionPanel",staticClass:"el-cascader__suggestion-panel",attrs:{tag:"ul","view-class":"el-cascader__suggestion-list"},nativeOn:{keydown:function(e){return n.handleSuggestionKeyDown(e)}}},[n.suggestions.length?n._l(n.suggestions,(function(e,i){return t("li",{key:e.uid,class:["el-cascader__suggestion-item",e.checked&&"is-checked"],attrs:{tabindex:-1},on:{click:function(e){n.handleSuggestionClick(i)}}},[t("span",[n._v(n._s(e.text))]),e.checked?t("i",{staticClass:"el-icon-check"}):n._e()])})):n._t("empty",[t("li",{staticClass:"el-cascader__empty-text"},[n._v(n._s(n.t("el.cascader.noMatch")))])])],2):n._e()],1)])],1)};xl._withStripped=!0;var kl=t(43),Tl=t.n(kl),wl=t(35),Il=t.n(wl),Cl=Il.a.keys,Dl={expandTrigger:{newProp:"expandTrigger",type:String},changeOnSelect:{newProp:"checkStrictly",type:Boolean},hoverThreshold:{newProp:"hoverThreshold",type:Number}},El={props:{placement:{type:String,default:"bottom-start"},appendToBody:z.a.props.appendToBody,visibleArrow:{type:Boolean,default:!0},arrowOffset:z.a.props.arrowOffset,offset:z.a.props.offset,boundariesPadding:z.a.props.boundariesPadding,popperOptions:z.a.props.popperOptions,transformOrigin:z.a.props.transformOrigin},methods:z.a.methods,data:z.a.data,beforeDestroy:z.a.beforeDestroy},Sl={medium:36,small:32,mini:28},Ml=a({name:"ElCascader",directives:{Clickoutside:O.a},mixins:[El,w.a,m.a,k.a],inject:{elForm:{default:""},elFormItem:{default:""}},components:{ElInput:p.a,ElTag:$e.a,ElScrollbar:$.a,ElCascaderPanel:Tl.a},props:{value:{},options:Array,props:Object,size:String,placeholder:{type:String,default:function(){return Object($a.t)("el.cascader.placeholder")}},disabled:Boolean,clearable:Boolean,filterable:Boolean,filterMethod:Function,separator:{type:String,default:" / "},showAllLevels:{type:Boolean,default:!0},collapseTags:Boolean,debounce:{type:Number,default:300},beforeFilter:{type:Function,default:function(){return function(){}}},popperClass:String},data:function(){return{dropDownVisible:!1,checkedValue:this.value,inputHover:!1,inputValue:null,presentText:null,presentTags:[],checkedNodes:[],filtering:!1,suggestions:[],inputInitialHeight:0,pressDeleteCount:0}},computed:{realSize:function(){var n=(this.elFormItem||{}).elFormItemSize;return this.size||n||(this.$ELEMENT||{}).size},tagSize:function(){return["small","mini"].indexOf(this.realSize)>-1?"mini":"small"},isDisabled:function(){return this.disabled||(this.elForm||{}).disabled},config:function(){var n=this.props||{},e=this.$attrs;return Object.keys(Dl).forEach((function(t){var i=Dl[t],a=i.newProp,r=i.type,o=e[t]||e[Object(g.kebabCase)(t)];Object(Vn.isDef)(t)&&!Object(Vn.isDef)(n[a])&&(r===Boolean&&""===o&&(o=!0),n[a]=o)})),n},multiple:function(){return this.config.multiple},leafOnly:function(){return!this.config.checkStrictly},readonly:function(){return!this.filterable||this.multiple},clearBtnVisible:function(){return!(!this.clearable||this.isDisabled||this.filtering||!this.inputHover)&&(this.multiple?!!this.checkedNodes.filter((function(n){return!n.isDisabled})).length:!!this.presentText)},panel:function(){return this.$refs.panel}},watch:{disabled:function(){this.computePresentContent()},value:function(n){Object(g.isEqual)(n,this.checkedValue)||(this.checkedValue=n,this.computePresentContent())},checkedValue:function(n){var e=this.value,t=this.dropDownVisible,i=this.config,a=i.checkStrictly,r=i.multiple;Object(g.isEqual)(n,e)&&!Object(ws.isUndefined)(e)||(this.computePresentContent(),r||a||!t||this.toggleDropDownVisible(!1),this.$emit("input",n),this.$emit("change",n),this.dispatch("ElFormItem","el.form.change",[n]))},options:{handler:function(){this.$nextTick(this.computePresentContent)},deep:!0},presentText:function(n){this.inputValue=n},presentTags:function(n,e){this.multiple&&(n.length||e.length)&&this.$nextTick(this.updateStyle)},filtering:function(n){this.$nextTick(this.updatePopper)}},mounted:function(){var n=this,e=this.$refs.input;e&&e.$el&&(this.inputInitialHeight=e.$el.offsetHeight||Sl[this.realSize]||40),this.isEmptyValue(this.value)||this.computePresentContent(),this.filterHandler=M()(this.debounce,(function(){var e=n.inputValue;if(e){var t=n.beforeFilter(e);t&&t.then?t.then(n.getSuggestions):!1!==t?n.getSuggestions():n.filtering=!1}else n.filtering=!1})),Object(Le.addResizeListener)(this.$el,this.updateStyle)},beforeDestroy:function(){Object(Le.removeResizeListener)(this.$el,this.updateStyle)},methods:{getMigratingConfig:function(){return{props:{"expand-trigger":"expand-trigger is removed, use `props.expandTrigger` instead.","change-on-select":"change-on-select is removed, use `props.checkStrictly` instead.","hover-threshold":"hover-threshold is removed, use `props.hoverThreshold` instead"},events:{"active-item-change":"active-item-change is renamed to expand-change"}}},toggleDropDownVisible:function(n){var e=this;if(!this.isDisabled){var t=this.dropDownVisible,i=this.$refs.input;(n=Object(Vn.isDef)(n)?n:!t)!==t&&(this.dropDownVisible=n,n&&this.$nextTick((function(){e.updatePopper(),e.panel.scrollIntoView()})),i.$refs.input.setAttribute("aria-expanded",n),this.$emit("visible-change",n))}},handleDropdownLeave:function(){this.filtering=!1,this.inputValue=this.presentText,this.doDestroy()},handleKeyDown:function(n){switch(n.keyCode){case Cl.enter:this.toggleDropDownVisible();break;case Cl.down:this.toggleDropDownVisible(!0),this.focusFirstNode(),n.preventDefault();break;case Cl.esc:case Cl.tab:this.toggleDropDownVisible(!1)}},handleFocus:function(n){this.$emit("focus",n)},handleBlur:function(n){this.$emit("blur",n)},handleInput:function(n,e){!this.dropDownVisible&&this.toggleDropDownVisible(!0),e&&e.isComposing||(n?this.filterHandler():this.filtering=!1)},handleClear:function(){this.presentText="",this.panel.clearCheckedNodes()},handleExpandChange:function(n){this.$nextTick(this.updatePopper.bind(this)),this.$emit("expand-change",n),this.$emit("active-item-change",n)},focusFirstNode:function(){var n=this;this.$nextTick((function(){var e=n.filtering,t=n.$refs,i=t.popper,a=t.suggestionPanel,r=null;e&&a?r=a.$el.querySelector(".el-cascader__suggestion-item"):r=i.querySelector(".el-cascader-menu").querySelector('.el-cascader-node[tabindex="-1"]');r&&(r.focus(),!e&&r.click())}))},computePresentContent:function(){var n=this;this.$nextTick((function(){n.config.multiple?(n.computePresentTags(),n.presentText=n.presentTags.length?" ":null):n.computePresentText()}))},isEmptyValue:function(n){var e=this.multiple,t=this.panel.config.emitPath;return!(!e&&!t)&&Object(g.isEmpty)(n)},computePresentText:function(){var n=this.checkedValue,e=this.config;if(!this.isEmptyValue(n)){var t=this.panel.getNodeByValue(n);if(t&&(e.checkStrictly||t.isLeaf))return void(this.presentText=t.getText(this.showAllLevels,this.separator))}this.presentText=null},computePresentTags:function(){var n=this.isDisabled,e=this.leafOnly,t=this.showAllLevels,i=this.separator,a=this.collapseTags,r=this.getCheckedNodes(e),o=[],s=function(e){return{node:e,key:e.uid,text:e.getText(t,i),hitState:!1,closable:!n&&!e.isDisabled}};if(r.length){var l=r[0],d=r.slice(1),c=d.length;o.push(s(l)),c&&(a?o.push({key:-1,text:"+ "+c,closable:!1}):d.forEach((function(n){return o.push(s(n))})))}this.checkedNodes=r,this.presentTags=o},getSuggestions:function(){var n=this,e=this.filterMethod;Object(ws.isFunction)(e)||(e=function(n,e){return n.text.includes(e)});var t=this.panel.getFlattedNodes(this.leafOnly).filter((function(t){return!t.isDisabled&&(t.text=t.getText(n.showAllLevels,n.separator)||"",e(t,n.inputValue))}));this.multiple?this.presentTags.forEach((function(n){n.hitState=!1})):t.forEach((function(e){e.checked=Object(g.isEqual)(n.checkedValue,e.getValueByOption())})),this.filtering=!0,this.suggestions=t,this.$nextTick(this.updatePopper)},handleSuggestionKeyDown:function(n){var e=n.keyCode,t=n.target;switch(e){case Cl.enter:t.click();break;case Cl.up:var i=t.previousElementSibling;i&&i.focus();break;case Cl.down:var a=t.nextElementSibling;a&&a.focus();break;case Cl.esc:case Cl.tab:this.toggleDropDownVisible(!1)}},handleDelete:function(){var n=this.inputValue,e=this.pressDeleteCount,t=this.presentTags,i=t[t.length-1];this.pressDeleteCount=n?0:e+1,i&&this.pressDeleteCount&&(i.hitState?this.deleteTag(i):i.hitState=!0)},handleSuggestionClick:function(n){var e=this.multiple,t=this.suggestions[n];if(e){var i=t.checked;t.doCheck(!i),this.panel.calculateMultiCheckedValue()}else this.checkedValue=t.getValueByOption(),this.toggleDropDownVisible(!1)},deleteTag:function(n){var e=this.checkedValue,t=n.node.getValueByOption(),i=e.find((function(n){return Object(g.isEqual)(n,t)}));this.checkedValue=e.filter((function(n){return!Object(g.isEqual)(n,t)})),this.$emit("remove-tag",i)},updateStyle:function(){var n=this.$el,e=this.inputInitialHeight;if(!this.$isServer&&n){var t=this.$refs.suggestionPanel,i=n.querySelector(".el-input__inner");if(i){var a=n.querySelector(".el-cascader__tags"),r=null;if(t&&(r=t.$el))r.querySelector(".el-cascader__suggestion-list").style.minWidth=i.offsetWidth+"px";if(a){var o=Math.round(a.getBoundingClientRect().height),s=Math.max(o+6,e)+"px";i.style.height=s,this.dropDownVisible&&this.updatePopper()}}}},getCheckedNodes:function(n){return this.panel.getCheckedNodes(n)}}},xl,[],!1,null,null,null);Ml.options.__file="packages/cascader/src/cascader.vue";var Al=Ml.exports;Al.install=function(n){n.component(Al.name,Al)};var Ol=Al,Pl=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.hide,expression:"hide"}],class:["el-color-picker",n.colorDisabled?"is-disabled":"",n.colorSize?"el-color-picker--"+n.colorSize:""]},[n.colorDisabled?t("div",{staticClass:"el-color-picker__mask"}):n._e(),t("div",{staticClass:"el-color-picker__trigger",on:{click:n.handleTrigger}},[t("span",{staticClass:"el-color-picker__color",class:{"is-alpha":n.showAlpha}},[t("span",{staticClass:"el-color-picker__color-inner",style:{backgroundColor:n.displayedColor}}),n.value||n.showPanelColor?n._e():t("span",{staticClass:"el-color-picker__empty el-icon-close"})]),t("span",{directives:[{name:"show",rawName:"v-show",value:n.value||n.showPanelColor,expression:"value || showPanelColor"}],staticClass:"el-color-picker__icon el-icon-arrow-down"})]),t("picker-dropdown",{ref:"dropdown",class:["el-color-picker__panel",n.popperClass||""],attrs:{color:n.color,"show-alpha":n.showAlpha,predefine:n.predefine},on:{pick:n.confirmValue,clear:n.clearValue},model:{value:n.showPicker,callback:function(e){n.showPicker=e},expression:"showPicker"}})],1)};Pl._withStripped=!0;var jl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};var zl=function(n,e,t){return[n,e*t/((n=(2-e)*t)<1?n:2-n)||0,n/2]},Rl=function(n,e){var t;"string"==typeof(t=n)&&-1!==t.indexOf(".")&&1===parseFloat(t)&&(n="100%");var i=function(n){return"string"==typeof n&&-1!==n.indexOf("%")}(n);return n=Math.min(e,Math.max(0,parseFloat(n))),i&&(n=parseInt(n*e,10)/100),Math.abs(n-e)<1e-6?1:n%e/parseFloat(e)},$l={10:"A",11:"B",12:"C",13:"D",14:"E",15:"F"},Ll={A:10,B:11,C:12,D:13,E:14,F:15},Ul=function(n){return 2===n.length?16*(Ll[n[0].toUpperCase()]||+n[0])+(Ll[n[1].toUpperCase()]||+n[1]):Ll[n[1].toUpperCase()]||+n[1]},Nl=function(n,e,t){n=Rl(n,255),e=Rl(e,255),t=Rl(t,255);var i,a=Math.max(n,e,t),r=Math.min(n,e,t),o=void 0,s=a,l=a-r;if(i=0===a?0:l/a,a===r)o=0;else{switch(a){case n:o=(e-t)/l+(e<t?6:0);break;case e:o=(t-n)/l+2;break;case t:o=(n-e)/l+4}o/=6}return{h:360*o,s:100*i,v:100*s}},ql=function(n,e,t){n=6*Rl(n,360),e=Rl(e,100),t=Rl(t,100);var i=Math.floor(n),a=n-i,r=t*(1-e),o=t*(1-a*e),s=t*(1-(1-a)*e),l=i%6,d=[t,o,r,r,s,t][l],c=[s,t,t,o,r,r][l],u=[r,r,s,t,t,o][l];return{r:Math.round(255*d),g:Math.round(255*c),b:Math.round(255*u)}},Bl=function(){function n(e){for(var t in function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this._hue=0,this._saturation=100,this._value=100,this._alpha=100,this.enableAlpha=!1,this.format="hex",this.value="",e=e||{})e.hasOwnProperty(t)&&(this[t]=e[t]);this.doOnChange()}return n.prototype.set=function(n,e){if(1!==arguments.length||"object"!==(void 0===n?"undefined":jl(n)))this["_"+n]=e,this.doOnChange();else for(var t in n)n.hasOwnProperty(t)&&this.set(t,n[t])},n.prototype.get=function(n){return this["_"+n]},n.prototype.toRgb=function(){return ql(this._hue,this._saturation,this._value)},n.prototype.fromString=function(n){var e=this;if(!n)return this._hue=0,this._saturation=100,this._value=100,void this.doOnChange();var t=function(n,t,i){e._hue=Math.max(0,Math.min(360,n)),e._saturation=Math.max(0,Math.min(100,t)),e._value=Math.max(0,Math.min(100,i)),e.doOnChange()};if(-1!==n.indexOf("hsl")){var i=n.replace(/hsla|hsl|\(|\)/gm,"").split(/\s|,/g).filter((function(n){return""!==n})).map((function(n,e){return e>2?parseFloat(n):parseInt(n,10)}));if(4===i.length?this._alpha=Math.floor(100*parseFloat(i[3])):3===i.length&&(this._alpha=100),i.length>=3){var a=function(n,e,t){t/=100;var i=e/=100,a=Math.max(t,.01);return e*=(t*=2)<=1?t:2-t,i*=a<=1?a:2-a,{h:n,s:100*(0===t?2*i/(a+i):2*e/(t+e)),v:100*((t+e)/2)}}(i[0],i[1],i[2]);t(a.h,a.s,a.v)}}else if(-1!==n.indexOf("hsv")){var r=n.replace(/hsva|hsv|\(|\)/gm,"").split(/\s|,/g).filter((function(n){return""!==n})).map((function(n,e){return e>2?parseFloat(n):parseInt(n,10)}));4===r.length?this._alpha=Math.floor(100*parseFloat(r[3])):3===r.length&&(this._alpha=100),r.length>=3&&t(r[0],r[1],r[2])}else if(-1!==n.indexOf("rgb")){var o=n.replace(/rgba|rgb|\(|\)/gm,"").split(/\s|,/g).filter((function(n){return""!==n})).map((function(n,e){return e>2?parseFloat(n):parseInt(n,10)}));if(4===o.length?this._alpha=Math.floor(100*parseFloat(o[3])):3===o.length&&(this._alpha=100),o.length>=3){var s=Nl(o[0],o[1],o[2]);t(s.h,s.s,s.v)}}else if(-1!==n.indexOf("#")){var l=n.replace("#","").trim();if(!/^(?:[0-9a-fA-F]{3}){1,2}|[0-9a-fA-F]{8}$/.test(l))return;var d=void 0,c=void 0,u=void 0;3===l.length?(d=Ul(l[0]+l[0]),c=Ul(l[1]+l[1]),u=Ul(l[2]+l[2])):6!==l.length&&8!==l.length||(d=Ul(l.substring(0,2)),c=Ul(l.substring(2,4)),u=Ul(l.substring(4,6))),8===l.length?this._alpha=Math.floor(Ul(l.substring(6))/255*100):3!==l.length&&6!==l.length||(this._alpha=100);var p=Nl(d,c,u);t(p.h,p.s,p.v)}},n.prototype.compare=function(n){return Math.abs(n._hue-this._hue)<2&&Math.abs(n._saturation-this._saturation)<1&&Math.abs(n._value-this._value)<1&&Math.abs(n._alpha-this._alpha)<1},n.prototype.doOnChange=function(){var n=this._hue,e=this._saturation,t=this._value,i=this._alpha,a=this.format;if(this.enableAlpha)switch(a){case"hsl":var r=zl(n,e/100,t/100);this.value="hsla("+n+", "+Math.round(100*r[1])+"%, "+Math.round(100*r[2])+"%, "+i/100+")";break;case"hsv":this.value="hsva("+n+", "+Math.round(e)+"%, "+Math.round(t)+"%, "+i/100+")";break;default:var o=ql(n,e,t),s=o.r,l=o.g,d=o.b;this.value="rgba("+s+", "+l+", "+d+", "+i/100+")"}else switch(a){case"hsl":var c=zl(n,e/100,t/100);this.value="hsl("+n+", "+Math.round(100*c[1])+"%, "+Math.round(100*c[2])+"%)";break;case"hsv":this.value="hsv("+n+", "+Math.round(e)+"%, "+Math.round(t)+"%)";break;case"rgb":var u=ql(n,e,t),p=u.r,h=u.g,m=u.b;this.value="rgb("+p+", "+h+", "+m+")";break;default:this.value=function(n){var e=n.r,t=n.g,i=n.b,a=function(n){n=Math.min(Math.round(n),255);var e=Math.floor(n/16),t=n%16;return""+($l[e]||e)+($l[t]||t)};return isNaN(e)||isNaN(t)||isNaN(i)?"":"#"+a(e)+a(t)+a(i)}(ql(n,e,t))}},n}(),Fl=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-zoom-in-top"},on:{"after-leave":n.doDestroy}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.showPopper,expression:"showPopper"}],staticClass:"el-color-dropdown"},[t("div",{staticClass:"el-color-dropdown__main-wrapper"},[t("hue-slider",{ref:"hue",staticStyle:{float:"right"},attrs:{color:n.color,vertical:""}}),t("sv-panel",{ref:"sl",attrs:{color:n.color}})],1),n.showAlpha?t("alpha-slider",{ref:"alpha",attrs:{color:n.color}}):n._e(),n.predefine?t("predefine",{attrs:{color:n.color,colors:n.predefine}}):n._e(),t("div",{staticClass:"el-color-dropdown__btns"},[t("span",{staticClass:"el-color-dropdown__value"},[t("el-input",{attrs:{"validate-event":!1,size:"mini"},on:{blur:n.handleConfirm},nativeOn:{keyup:function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.handleConfirm(e)}},model:{value:n.customInput,callback:function(e){n.customInput=e},expression:"customInput"}})],1),t("el-button",{staticClass:"el-color-dropdown__link-btn",attrs:{size:"mini",type:"text"},on:{click:function(e){n.$emit("clear")}}},[n._v("\n        "+n._s(n.t("el.colorpicker.clear"))+"\n      ")]),t("el-button",{staticClass:"el-color-dropdown__btn",attrs:{plain:"",size:"mini"},on:{click:n.confirmValue}},[n._v("\n        "+n._s(n.t("el.colorpicker.confirm"))+"\n      ")])],1)],1)])};Fl._withStripped=!0;var Vl=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"el-color-svpanel",style:{backgroundColor:this.background}},[e("div",{staticClass:"el-color-svpanel__white"}),e("div",{staticClass:"el-color-svpanel__black"}),e("div",{staticClass:"el-color-svpanel__cursor",style:{top:this.cursorTop+"px",left:this.cursorLeft+"px"}},[e("div")])])};Vl._withStripped=!0;var Gl=!1,Hl=function(n,e){if(!pt.a.prototype.$isServer){var t=function(n){e.drag&&e.drag(n)},i=function n(i){document.removeEventListener("mousemove",t),document.removeEventListener("mouseup",n),document.onselectstart=null,document.ondragstart=null,Gl=!1,e.end&&e.end(i)};n.addEventListener("mousedown",(function(n){Gl||(document.onselectstart=function(){return!1},document.ondragstart=function(){return!1},document.addEventListener("mousemove",t),document.addEventListener("mouseup",i),Gl=!0,e.start&&e.start(n))}))}},Wl=a({name:"el-sl-panel",props:{color:{required:!0}},computed:{colorValue:function(){return{hue:this.color.get("hue"),value:this.color.get("value")}}},watch:{colorValue:function(){this.update()}},methods:{update:function(){var n=this.color.get("saturation"),e=this.color.get("value"),t=this.$el,i=t.clientWidth,a=t.clientHeight;this.cursorLeft=n*i/100,this.cursorTop=(100-e)*a/100,this.background="hsl("+this.color.get("hue")+", 100%, 50%)"},handleDrag:function(n){var e=this.$el.getBoundingClientRect(),t=n.clientX-e.left,i=n.clientY-e.top;t=Math.max(0,t),t=Math.min(t,e.width),i=Math.max(0,i),i=Math.min(i,e.height),this.cursorLeft=t,this.cursorTop=i,this.color.set({saturation:t/e.width*100,value:100-i/e.height*100})}},mounted:function(){var n=this;Hl(this.$el,{drag:function(e){n.handleDrag(e)},end:function(e){n.handleDrag(e)}}),this.update()},data:function(){return{cursorTop:0,cursorLeft:0,background:"hsl(0, 100%, 50%)"}}},Vl,[],!1,null,null,null);Wl.options.__file="packages/color-picker/src/components/sv-panel.vue";var Ql=Wl.exports,Kl=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"el-color-hue-slider",class:{"is-vertical":this.vertical}},[e("div",{ref:"bar",staticClass:"el-color-hue-slider__bar",on:{click:this.handleClick}}),e("div",{ref:"thumb",staticClass:"el-color-hue-slider__thumb",style:{left:this.thumbLeft+"px",top:this.thumbTop+"px"}})])};Kl._withStripped=!0;var Yl=a({name:"el-color-hue-slider",props:{color:{required:!0},vertical:Boolean},data:function(){return{thumbLeft:0,thumbTop:0}},computed:{hueValue:function(){return this.color.get("hue")}},watch:{hueValue:function(){this.update()}},methods:{handleClick:function(n){var e=this.$refs.thumb;n.target!==e&&this.handleDrag(n)},handleDrag:function(n){var e=this.$el.getBoundingClientRect(),t=this.$refs.thumb,i=void 0;if(this.vertical){var a=n.clientY-e.top;a=Math.min(a,e.height-t.offsetHeight/2),a=Math.max(t.offsetHeight/2,a),i=Math.round((a-t.offsetHeight/2)/(e.height-t.offsetHeight)*360)}else{var r=n.clientX-e.left;r=Math.min(r,e.width-t.offsetWidth/2),r=Math.max(t.offsetWidth/2,r),i=Math.round((r-t.offsetWidth/2)/(e.width-t.offsetWidth)*360)}this.color.set("hue",i)},getThumbLeft:function(){if(this.vertical)return 0;var n=this.$el,e=this.color.get("hue");if(!n)return 0;var t=this.$refs.thumb;return Math.round(e*(n.offsetWidth-t.offsetWidth/2)/360)},getThumbTop:function(){if(!this.vertical)return 0;var n=this.$el,e=this.color.get("hue");if(!n)return 0;var t=this.$refs.thumb;return Math.round(e*(n.offsetHeight-t.offsetHeight/2)/360)},update:function(){this.thumbLeft=this.getThumbLeft(),this.thumbTop=this.getThumbTop()}},mounted:function(){var n=this,e=this.$refs,t=e.bar,i=e.thumb,a={drag:function(e){n.handleDrag(e)},end:function(e){n.handleDrag(e)}};Hl(t,a),Hl(i,a),this.update()}},Kl,[],!1,null,null,null);Yl.options.__file="packages/color-picker/src/components/hue-slider.vue";var Xl=Yl.exports,Jl=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"el-color-alpha-slider",class:{"is-vertical":this.vertical}},[e("div",{ref:"bar",staticClass:"el-color-alpha-slider__bar",style:{background:this.background},on:{click:this.handleClick}}),e("div",{ref:"thumb",staticClass:"el-color-alpha-slider__thumb",style:{left:this.thumbLeft+"px",top:this.thumbTop+"px"}})])};Jl._withStripped=!0;var Zl=a({name:"el-color-alpha-slider",props:{color:{required:!0},vertical:Boolean},watch:{"color._alpha":function(){this.update()},"color.value":function(){this.update()}},methods:{handleClick:function(n){var e=this.$refs.thumb;n.target!==e&&this.handleDrag(n)},handleDrag:function(n){var e=this.$el.getBoundingClientRect(),t=this.$refs.thumb;if(this.vertical){var i=n.clientY-e.top;i=Math.max(t.offsetHeight/2,i),i=Math.min(i,e.height-t.offsetHeight/2),this.color.set("alpha",Math.round((i-t.offsetHeight/2)/(e.height-t.offsetHeight)*100))}else{var a=n.clientX-e.left;a=Math.max(t.offsetWidth/2,a),a=Math.min(a,e.width-t.offsetWidth/2),this.color.set("alpha",Math.round((a-t.offsetWidth/2)/(e.width-t.offsetWidth)*100))}},getThumbLeft:function(){if(this.vertical)return 0;var n=this.$el,e=this.color._alpha;if(!n)return 0;var t=this.$refs.thumb;return Math.round(e*(n.offsetWidth-t.offsetWidth/2)/100)},getThumbTop:function(){if(!this.vertical)return 0;var n=this.$el,e=this.color._alpha;if(!n)return 0;var t=this.$refs.thumb;return Math.round(e*(n.offsetHeight-t.offsetHeight/2)/100)},getBackground:function(){if(this.color&&this.color.value){var n=this.color.toRgb(),e=n.r,t=n.g,i=n.b;return"linear-gradient(to right, rgba("+e+", "+t+", "+i+", 0) 0%, rgba("+e+", "+t+", "+i+", 1) 100%)"}return null},update:function(){this.thumbLeft=this.getThumbLeft(),this.thumbTop=this.getThumbTop(),this.background=this.getBackground()}},data:function(){return{thumbLeft:0,thumbTop:0,background:null}},mounted:function(){var n=this,e=this.$refs,t=e.bar,i=e.thumb,a={drag:function(e){n.handleDrag(e)},end:function(e){n.handleDrag(e)}};Hl(t,a),Hl(i,a),this.update()}},Jl,[],!1,null,null,null);Zl.options.__file="packages/color-picker/src/components/alpha-slider.vue";var nd=Zl.exports,ed=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-color-predefine"},[t("div",{staticClass:"el-color-predefine__colors"},n._l(n.rgbaColors,(function(e,i){return t("div",{key:n.colors[i],staticClass:"el-color-predefine__color-selector",class:{selected:e.selected,"is-alpha":e._alpha<100},on:{click:function(e){n.handleSelect(i)}}},[t("div",{style:{"background-color":e.value}})])})),0)])};ed._withStripped=!0;var td=a({props:{colors:{type:Array,required:!0},color:{required:!0}},data:function(){return{rgbaColors:this.parseColors(this.colors,this.color)}},methods:{handleSelect:function(n){this.color.fromString(this.colors[n])},parseColors:function(n,e){return n.map((function(n){var t=new Bl;return t.enableAlpha=!0,t.format="rgba",t.fromString(n),t.selected=t.value===e.value,t}))}},watch:{"$parent.currentColor":function(n){var e=new Bl;e.fromString(n),this.rgbaColors.forEach((function(n){n.selected=e.compare(n)}))},colors:function(n){this.rgbaColors=this.parseColors(n,this.color)},color:function(n){this.rgbaColors=this.parseColors(this.colors,n)}}},ed,[],!1,null,null,null);td.options.__file="packages/color-picker/src/components/predefine.vue";var id=td.exports,ad=a({name:"el-color-picker-dropdown",mixins:[z.a,m.a],components:{SvPanel:Ql,HueSlider:Xl,AlphaSlider:nd,ElInput:p.a,ElButton:H.a,Predefine:id},props:{color:{required:!0},showAlpha:Boolean,predefine:Array},data:function(){return{customInput:""}},computed:{currentColor:function(){var n=this.$parent;return n.value||n.showPanelColor?n.color.value:""}},methods:{confirmValue:function(){this.$emit("pick")},handleConfirm:function(){this.color.fromString(this.customInput)}},mounted:function(){this.$parent.popperElm=this.popperElm=this.$el,this.referenceElm=this.$parent.$el},watch:{showPopper:function(n){var e=this;!0===n&&this.$nextTick((function(){var n=e.$refs,t=n.sl,i=n.hue,a=n.alpha;t&&t.update(),i&&i.update(),a&&a.update()}))},currentColor:{immediate:!0,handler:function(n){this.customInput=n}}}},Fl,[],!1,null,null,null);ad.options.__file="packages/color-picker/src/components/picker-dropdown.vue";var rd=ad.exports,od=a({name:"ElColorPicker",mixins:[w.a],props:{value:String,showAlpha:Boolean,colorFormat:String,disabled:Boolean,size:String,popperClass:String,predefine:Array},inject:{elForm:{default:""},elFormItem:{default:""}},directives:{Clickoutside:O.a},computed:{displayedColor:function(){return this.value||this.showPanelColor?this.displayedRgb(this.color,this.showAlpha):"transparent"},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},colorSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},colorDisabled:function(){return this.disabled||(this.elForm||{}).disabled}},watch:{value:function(n){n?n&&n!==this.color.value&&this.color.fromString(n):this.showPanelColor=!1},color:{deep:!0,handler:function(){this.showPanelColor=!0}},displayedColor:function(n){if(this.showPicker){var e=new Bl({enableAlpha:this.showAlpha,format:this.colorFormat});e.fromString(this.value),n!==this.displayedRgb(e,this.showAlpha)&&this.$emit("active-change",n)}}},methods:{handleTrigger:function(){this.colorDisabled||(this.showPicker=!this.showPicker)},confirmValue:function(){var n=this.color.value;this.$emit("input",n),this.$emit("change",n),this.dispatch("ElFormItem","el.form.change",n),this.showPicker=!1},clearValue:function(){this.$emit("input",null),this.$emit("change",null),null!==this.value&&this.dispatch("ElFormItem","el.form.change",null),this.showPanelColor=!1,this.showPicker=!1,this.resetColor()},hide:function(){this.showPicker=!1,this.resetColor()},resetColor:function(){var n=this;this.$nextTick((function(e){n.value?n.color.fromString(n.value):n.showPanelColor=!1}))},displayedRgb:function(n,e){if(!(n instanceof Bl))throw Error("color should be instance of Color Class");var t=n.toRgb(),i=t.r,a=t.g,r=t.b;return e?"rgba("+i+", "+a+", "+r+", "+n.get("alpha")/100+")":"rgb("+i+", "+a+", "+r+")"}},mounted:function(){var n=this.value;n&&this.color.fromString(n),this.popperElm=this.$refs.dropdown.$el},data:function(){return{color:new Bl({enableAlpha:this.showAlpha,format:this.colorFormat}),showPicker:!1,showPanelColor:!1}},components:{PickerDropdown:rd}},Pl,[],!1,null,null,null);od.options.__file="packages/color-picker/src/main.vue";var sd=od.exports;sd.install=function(n){n.component(sd.name,sd)};var ld=sd,dd=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-transfer"},[t("transfer-panel",n._b({ref:"leftPanel",attrs:{data:n.sourceData,title:n.titles[0]||n.t("el.transfer.titles.0"),"default-checked":n.leftDefaultChecked,placeholder:n.filterPlaceholder||n.t("el.transfer.filterPlaceholder")},on:{"checked-change":n.onSourceCheckedChange}},"transfer-panel",n.$props,!1),[n._t("left-footer")],2),t("div",{staticClass:"el-transfer__buttons"},[t("el-button",{class:["el-transfer__button",n.hasButtonTexts?"is-with-texts":""],attrs:{type:"primary",disabled:0===n.rightChecked.length},nativeOn:{click:function(e){return n.addToLeft(e)}}},[t("i",{staticClass:"el-icon-arrow-left"}),void 0!==n.buttonTexts[0]?t("span",[n._v(n._s(n.buttonTexts[0]))]):n._e()]),t("el-button",{class:["el-transfer__button",n.hasButtonTexts?"is-with-texts":""],attrs:{type:"primary",disabled:0===n.leftChecked.length},nativeOn:{click:function(e){return n.addToRight(e)}}},[void 0!==n.buttonTexts[1]?t("span",[n._v(n._s(n.buttonTexts[1]))]):n._e(),t("i",{staticClass:"el-icon-arrow-right"})])],1),t("transfer-panel",n._b({ref:"rightPanel",attrs:{data:n.targetData,title:n.titles[1]||n.t("el.transfer.titles.1"),"default-checked":n.rightDefaultChecked,placeholder:n.filterPlaceholder||n.t("el.transfer.filterPlaceholder")},on:{"checked-change":n.onTargetCheckedChange}},"transfer-panel",n.$props,!1),[n._t("right-footer")],2)],1)};dd._withStripped=!0;var cd=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-transfer-panel"},[t("p",{staticClass:"el-transfer-panel__header"},[t("el-checkbox",{attrs:{indeterminate:n.isIndeterminate},on:{change:n.handleAllCheckedChange},model:{value:n.allChecked,callback:function(e){n.allChecked=e},expression:"allChecked"}},[n._v("\n      "+n._s(n.title)+"\n      "),t("span",[n._v(n._s(n.checkedSummary))])])],1),t("div",{class:["el-transfer-panel__body",n.hasFooter?"is-with-footer":""]},[n.filterable?t("el-input",{staticClass:"el-transfer-panel__filter",attrs:{size:"small",placeholder:n.placeholder},nativeOn:{mouseenter:function(e){n.inputHover=!0},mouseleave:function(e){n.inputHover=!1}},model:{value:n.query,callback:function(e){n.query=e},expression:"query"}},[t("i",{class:["el-input__icon","el-icon-"+n.inputIcon],attrs:{slot:"prefix"},on:{click:n.clearQuery},slot:"prefix"})]):n._e(),t("el-checkbox-group",{directives:[{name:"show",rawName:"v-show",value:!n.hasNoMatch&&n.data.length>0,expression:"!hasNoMatch && data.length > 0"}],staticClass:"el-transfer-panel__list",class:{"is-filterable":n.filterable},model:{value:n.checked,callback:function(e){n.checked=e},expression:"checked"}},n._l(n.filteredData,(function(e){return t("el-checkbox",{key:e[n.keyProp],staticClass:"el-transfer-panel__item",attrs:{label:e[n.keyProp],disabled:e[n.disabledProp]}},[t("option-content",{attrs:{option:e}})],1)})),1),t("p",{directives:[{name:"show",rawName:"v-show",value:n.hasNoMatch,expression:"hasNoMatch"}],staticClass:"el-transfer-panel__empty"},[n._v(n._s(n.t("el.transfer.noMatch")))]),t("p",{directives:[{name:"show",rawName:"v-show",value:0===n.data.length&&!n.hasNoMatch,expression:"data.length === 0 && !hasNoMatch"}],staticClass:"el-transfer-panel__empty"},[n._v(n._s(n.t("el.transfer.noData")))])],1),n.hasFooter?t("p",{staticClass:"el-transfer-panel__footer"},[n._t("default")],2):n._e()])};cd._withStripped=!0;var ud=a({mixins:[m.a],name:"ElTransferPanel",componentName:"ElTransferPanel",components:{ElCheckboxGroup:Qt.a,ElCheckbox:rt.a,ElInput:p.a,OptionContent:{props:{option:Object},render:function(n){var e=function n(e){return"ElTransferPanel"===e.$options.componentName?e:e.$parent?n(e.$parent):e}(this),t=e.$parent||e;return e.renderContent?e.renderContent(n,this.option):t.$scopedSlots.default?t.$scopedSlots.default({option:this.option}):n("span",[this.option[e.labelProp]||this.option[e.keyProp]])}}},props:{data:{type:Array,default:function(){return[]}},renderContent:Function,placeholder:String,title:String,filterable:Boolean,format:Object,filterMethod:Function,defaultChecked:Array,props:Object},data:function(){return{checked:[],allChecked:!1,query:"",inputHover:!1,checkChangeByUser:!0}},watch:{checked:function(n,e){if(this.updateAllChecked(),this.checkChangeByUser){var t=n.concat(e).filter((function(t){return-1===n.indexOf(t)||-1===e.indexOf(t)}));this.$emit("checked-change",n,t)}else this.$emit("checked-change",n),this.checkChangeByUser=!0},data:function(){var n=this,e=[],t=this.filteredData.map((function(e){return e[n.keyProp]}));this.checked.forEach((function(n){t.indexOf(n)>-1&&e.push(n)})),this.checkChangeByUser=!1,this.checked=e},checkableData:function(){this.updateAllChecked()},defaultChecked:{immediate:!0,handler:function(n,e){var t=this;if(!e||n.length!==e.length||!n.every((function(n){return e.indexOf(n)>-1}))){var i=[],a=this.checkableData.map((function(n){return n[t.keyProp]}));n.forEach((function(n){a.indexOf(n)>-1&&i.push(n)})),this.checkChangeByUser=!1,this.checked=i}}}},computed:{filteredData:function(){var n=this;return this.data.filter((function(e){return"function"==typeof n.filterMethod?n.filterMethod(n.query,e):(e[n.labelProp]||e[n.keyProp].toString()).toLowerCase().indexOf(n.query.toLowerCase())>-1}))},checkableData:function(){var n=this;return this.filteredData.filter((function(e){return!e[n.disabledProp]}))},checkedSummary:function(){var n=this.checked.length,e=this.data.length,t=this.format,i=t.noChecked,a=t.hasChecked;return i&&a?n>0?a.replace(/\${checked}/g,n).replace(/\${total}/g,e):i.replace(/\${total}/g,e):n+"/"+e},isIndeterminate:function(){var n=this.checked.length;return n>0&&n<this.checkableData.length},hasNoMatch:function(){return this.query.length>0&&0===this.filteredData.length},inputIcon:function(){return this.query.length>0&&this.inputHover?"circle-close":"search"},labelProp:function(){return this.props.label||"label"},keyProp:function(){return this.props.key||"key"},disabledProp:function(){return this.props.disabled||"disabled"},hasFooter:function(){return!!this.$slots.default}},methods:{updateAllChecked:function(){var n=this,e=this.checkableData.map((function(e){return e[n.keyProp]}));this.allChecked=e.length>0&&e.every((function(e){return n.checked.indexOf(e)>-1}))},handleAllCheckedChange:function(n){var e=this;this.checked=n?this.checkableData.map((function(n){return n[e.keyProp]})):[]},clearQuery:function(){"circle-close"===this.inputIcon&&(this.query="")}}},cd,[],!1,null,null,null);ud.options.__file="packages/transfer/src/transfer-panel.vue";var pd=ud.exports,hd=a({name:"ElTransfer",mixins:[w.a,m.a,k.a],components:{TransferPanel:pd,ElButton:H.a},props:{data:{type:Array,default:function(){return[]}},titles:{type:Array,default:function(){return[]}},buttonTexts:{type:Array,default:function(){return[]}},filterPlaceholder:{type:String,default:""},filterMethod:Function,leftDefaultChecked:{type:Array,default:function(){return[]}},rightDefaultChecked:{type:Array,default:function(){return[]}},renderContent:Function,value:{type:Array,default:function(){return[]}},format:{type:Object,default:function(){return{}}},filterable:Boolean,props:{type:Object,default:function(){return{label:"label",key:"key",disabled:"disabled"}}},targetOrder:{type:String,default:"original"}},data:function(){return{leftChecked:[],rightChecked:[]}},computed:{dataObj:function(){var n=this.props.key;return this.data.reduce((function(e,t){return(e[t[n]]=t)&&e}),{})},sourceData:function(){var n=this;return this.data.filter((function(e){return-1===n.value.indexOf(e[n.props.key])}))},targetData:function(){var n=this;return"original"===this.targetOrder?this.data.filter((function(e){return n.value.indexOf(e[n.props.key])>-1})):this.value.reduce((function(e,t){var i=n.dataObj[t];return i&&e.push(i),e}),[])},hasButtonTexts:function(){return 2===this.buttonTexts.length}},watch:{value:function(n){this.dispatch("ElFormItem","el.form.change",n)}},methods:{getMigratingConfig:function(){return{props:{"footer-format":"footer-format is renamed to format."}}},onSourceCheckedChange:function(n,e){this.leftChecked=n,void 0!==e&&this.$emit("left-check-change",n,e)},onTargetCheckedChange:function(n,e){this.rightChecked=n,void 0!==e&&this.$emit("right-check-change",n,e)},addToLeft:function(){var n=this.value.slice();this.rightChecked.forEach((function(e){var t=n.indexOf(e);t>-1&&n.splice(t,1)})),this.$emit("input",n),this.$emit("change",n,"left",this.rightChecked)},addToRight:function(){var n=this,e=this.value.slice(),t=[],i=this.props.key;this.data.forEach((function(e){var a=e[i];n.leftChecked.indexOf(a)>-1&&-1===n.value.indexOf(a)&&t.push(a)})),e="unshift"===this.targetOrder?t.concat(e):e.concat(t),this.$emit("input",e),this.$emit("change",e,"right",this.leftChecked)},clearQuery:function(n){"left"===n?this.$refs.leftPanel.query="":"right"===n&&(this.$refs.rightPanel.query="")}}},dd,[],!1,null,null,null);hd.options.__file="packages/transfer/src/main.vue";var md=hd.exports;md.install=function(n){n.component(md.name,md)};var gd=md,fd=function(){var n=this.$createElement;return(this._self._c||n)("section",{staticClass:"el-container",class:{"is-vertical":this.isVertical}},[this._t("default")],2)};fd._withStripped=!0;var vd=a({name:"ElContainer",componentName:"ElContainer",props:{direction:String},computed:{isVertical:function(){return"vertical"===this.direction||"horizontal"!==this.direction&&(!(!this.$slots||!this.$slots.default)&&this.$slots.default.some((function(n){var e=n.componentOptions&&n.componentOptions.tag;return"el-header"===e||"el-footer"===e})))}}},fd,[],!1,null,null,null);vd.options.__file="packages/container/src/main.vue";var bd=vd.exports;bd.install=function(n){n.component(bd.name,bd)};var _d=bd,yd=function(){var n=this.$createElement;return(this._self._c||n)("header",{staticClass:"el-header",style:{height:this.height}},[this._t("default")],2)};yd._withStripped=!0;var xd=a({name:"ElHeader",componentName:"ElHeader",props:{height:{type:String,default:"60px"}}},yd,[],!1,null,null,null);xd.options.__file="packages/header/src/main.vue";var kd=xd.exports;kd.install=function(n){n.component(kd.name,kd)};var Td=kd,wd=function(){var n=this.$createElement;return(this._self._c||n)("aside",{staticClass:"el-aside",style:{width:this.width}},[this._t("default")],2)};wd._withStripped=!0;var Id=a({name:"ElAside",componentName:"ElAside",props:{width:{type:String,default:"300px"}}},wd,[],!1,null,null,null);Id.options.__file="packages/aside/src/main.vue";var Cd=Id.exports;Cd.install=function(n){n.component(Cd.name,Cd)};var Dd=Cd,Ed=function(){var n=this.$createElement;return(this._self._c||n)("main",{staticClass:"el-main"},[this._t("default")],2)};Ed._withStripped=!0;var Sd=a({name:"ElMain",componentName:"ElMain"},Ed,[],!1,null,null,null);Sd.options.__file="packages/main/src/main.vue";var Md=Sd.exports;Md.install=function(n){n.component(Md.name,Md)};var Ad=Md,Od=function(){var n=this.$createElement;return(this._self._c||n)("footer",{staticClass:"el-footer",style:{height:this.height}},[this._t("default")],2)};Od._withStripped=!0;var Pd=a({name:"ElFooter",componentName:"ElFooter",props:{height:{type:String,default:"60px"}}},Od,[],!1,null,null,null);Pd.options.__file="packages/footer/src/main.vue";var jd=Pd.exports;jd.install=function(n){n.component(jd.name,jd)};var zd=jd,Rd=a({name:"ElTimeline",props:{reverse:{type:Boolean,default:!1}},provide:function(){return{timeline:this}},render:function(){var n=arguments[0],e=this.reverse,t={"el-timeline":!0,"is-reverse":e},i=this.$slots.default||[];return e&&(i=i.reverse()),n("ul",{class:t},[i])}},void 0,void 0,!1,null,null,null);Rd.options.__file="packages/timeline/src/main.vue";var $d=Rd.exports;$d.install=function(n){n.component($d.name,$d)};var Ld=$d,Ud=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("li",{staticClass:"el-timeline-item"},[t("div",{staticClass:"el-timeline-item__tail"}),n.$slots.dot?n._e():t("div",{staticClass:"el-timeline-item__node",class:["el-timeline-item__node--"+(n.size||""),"el-timeline-item__node--"+(n.type||"")],style:{backgroundColor:n.color}},[n.icon?t("i",{staticClass:"el-timeline-item__icon",class:n.icon}):n._e()]),n.$slots.dot?t("div",{staticClass:"el-timeline-item__dot"},[n._t("dot")],2):n._e(),t("div",{staticClass:"el-timeline-item__wrapper"},[n.hideTimestamp||"top"!==n.placement?n._e():t("div",{staticClass:"el-timeline-item__timestamp is-top"},[n._v("\n      "+n._s(n.timestamp)+"\n    ")]),t("div",{staticClass:"el-timeline-item__content"},[n._t("default")],2),n.hideTimestamp||"bottom"!==n.placement?n._e():t("div",{staticClass:"el-timeline-item__timestamp is-bottom"},[n._v("\n      "+n._s(n.timestamp)+"\n    ")])])])};Ud._withStripped=!0;var Nd=a({name:"ElTimelineItem",inject:["timeline"],props:{timestamp:String,hideTimestamp:{type:Boolean,default:!1},placement:{type:String,default:"bottom"},type:String,color:String,size:{type:String,default:"normal"},icon:String}},Ud,[],!1,null,null,null);Nd.options.__file="packages/timeline/src/item.vue";var qd=Nd.exports;qd.install=function(n){n.component(qd.name,qd)};var Bd=qd,Fd=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("a",n._b({class:["el-link",n.type?"el-link--"+n.type:"",n.disabled&&"is-disabled",n.underline&&!n.disabled&&"is-underline"],attrs:{href:n.disabled?null:n.href},on:{click:n.handleClick}},"a",n.$attrs,!1),[n.icon?t("i",{class:n.icon}):n._e(),n.$slots.default?t("span",{staticClass:"el-link--inner"},[n._t("default")],2):n._e(),n.$slots.icon?[n.$slots.icon?n._t("icon"):n._e()]:n._e()],2)};Fd._withStripped=!0;var Vd=a({name:"ElLink",props:{type:{type:String,default:"default"},underline:{type:Boolean,default:!0},disabled:Boolean,href:String,icon:String},methods:{handleClick:function(n){this.disabled||this.href||this.$emit("click",n)}}},Fd,[],!1,null,null,null);Vd.options.__file="packages/link/src/main.vue";var Gd=Vd.exports;Gd.install=function(n){n.component(Gd.name,Gd)};var Hd=Gd,Wd=function(n,e){var t=e._c;return t("div",e._g(e._b({class:[e.data.staticClass,"el-divider","el-divider--"+e.props.direction]},"div",e.data.attrs,!1),e.listeners),[e.slots().default&&"vertical"!==e.props.direction?t("div",{class:["el-divider__text","is-"+e.props.contentPosition]},[e._t("default")],2):e._e()])};Wd._withStripped=!0;var Qd=a({name:"ElDivider",props:{direction:{type:String,default:"horizontal",validator:function(n){return-1!==["horizontal","vertical"].indexOf(n)}},contentPosition:{type:String,default:"center",validator:function(n){return-1!==["left","center","right"].indexOf(n)}}}},Wd,[],!0,null,null,null);Qd.options.__file="packages/divider/src/main.vue";var Kd=Qd.exports;Kd.install=function(n){n.component(Kd.name,Kd)};var Yd=Kd,Xd=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-image"},[n.loading?n._t("placeholder",[t("div",{staticClass:"el-image__placeholder"})]):n.error?n._t("error",[t("div",{staticClass:"el-image__error"},[n._v(n._s(n.t("el.image.error")))])]):t("img",n._g(n._b({staticClass:"el-image__inner",class:{"el-image__inner--center":n.alignCenter,"el-image__preview":n.preview},style:n.imageStyle,attrs:{src:n.src},on:{click:n.clickHandler}},"img",n.$attrs,!1),n.$listeners)),n.preview?[n.showViewer?t("image-viewer",{attrs:{"z-index":n.zIndex,"initial-index":n.imageIndex,"on-close":n.closeViewer,"url-list":n.previewSrcList}}):n._e()]:n._e()],2)};Xd._withStripped=!0;var Jd=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"viewer-fade"}},[t("div",{ref:"el-image-viewer__wrapper",staticClass:"el-image-viewer__wrapper",style:{"z-index":n.viewerZIndex},attrs:{tabindex:"-1"}},[t("div",{staticClass:"el-image-viewer__mask",on:{click:function(e){return e.target!==e.currentTarget?null:n.handleMaskClick(e)}}}),t("span",{staticClass:"el-image-viewer__btn el-image-viewer__close",on:{click:n.hide}},[t("i",{staticClass:"el-icon-close"})]),n.isSingle?n._e():[t("span",{staticClass:"el-image-viewer__btn el-image-viewer__prev",class:{"is-disabled":!n.infinite&&n.isFirst},on:{click:n.prev}},[t("i",{staticClass:"el-icon-arrow-left"})]),t("span",{staticClass:"el-image-viewer__btn el-image-viewer__next",class:{"is-disabled":!n.infinite&&n.isLast},on:{click:n.next}},[t("i",{staticClass:"el-icon-arrow-right"})])],t("div",{staticClass:"el-image-viewer__btn el-image-viewer__actions"},[t("div",{staticClass:"el-image-viewer__actions__inner"},[t("i",{staticClass:"el-icon-zoom-out",on:{click:function(e){n.handleActions("zoomOut")}}}),t("i",{staticClass:"el-icon-zoom-in",on:{click:function(e){n.handleActions("zoomIn")}}}),t("i",{staticClass:"el-image-viewer__actions__divider"}),t("i",{class:n.mode.icon,on:{click:n.toggleMode}}),t("i",{staticClass:"el-image-viewer__actions__divider"}),t("i",{staticClass:"el-icon-refresh-left",on:{click:function(e){n.handleActions("anticlocelise")}}}),t("i",{staticClass:"el-icon-refresh-right",on:{click:function(e){n.handleActions("clocelise")}}})])]),t("div",{staticClass:"el-image-viewer__canvas"},n._l(n.urlList,(function(e,i){return i===n.index?t("img",{key:e,ref:"img",refInFor:!0,staticClass:"el-image-viewer__img",style:n.imgStyle,attrs:{src:n.currentImg},on:{load:n.handleImgLoad,error:n.handleImgError,mousedown:n.handleMouseDown}}):n._e()})),0)],2)])};Jd._withStripped=!0;var Zd=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},nc={CONTAIN:{name:"contain",icon:"el-icon-full-screen"},ORIGINAL:{name:"original",icon:"el-icon-c-scale-to-original"}},ec=Object(g.isFirefox)()?"DOMMouseScroll":"mousewheel",tc=a({name:"elImageViewer",props:{urlList:{type:Array,default:function(){return[]}},zIndex:{type:Number,default:2e3},onSwitch:{type:Function,default:function(){}},onClose:{type:Function,default:function(){}},initialIndex:{type:Number,default:0},appendToBody:{type:Boolean,default:!0},maskClosable:{type:Boolean,default:!0}},data:function(){return{index:this.initialIndex,isShow:!1,infinite:!0,loading:!1,mode:nc.CONTAIN,transform:{scale:1,deg:0,offsetX:0,offsetY:0,enableTransition:!1}}},computed:{isSingle:function(){return this.urlList.length<=1},isFirst:function(){return 0===this.index},isLast:function(){return this.index===this.urlList.length-1},currentImg:function(){return this.urlList[this.index]},imgStyle:function(){var n=this.transform,e=n.scale,t=n.deg,i=n.offsetX,a=n.offsetY,r={transform:"scale("+e+") rotate("+t+"deg)",transition:n.enableTransition?"transform .3s":"","margin-left":i+"px","margin-top":a+"px"};return this.mode===nc.CONTAIN&&(r.maxWidth=r.maxHeight="100%"),r},viewerZIndex:function(){var n=_.PopupManager.nextZIndex();return this.zIndex>n?this.zIndex:n}},watch:{index:{handler:function(n){this.reset(),this.onSwitch(n)}},currentImg:function(n){var e=this;this.$nextTick((function(n){e.$refs.img[0].complete||(e.loading=!0)}))}},methods:{hide:function(){this.deviceSupportUninstall(),this.onClose()},deviceSupportInstall:function(){var n=this;this._keyDownHandler=function(e){switch(e.stopPropagation(),e.keyCode){case 27:n.hide();break;case 32:n.toggleMode();break;case 37:n.prev();break;case 38:n.handleActions("zoomIn");break;case 39:n.next();break;case 40:n.handleActions("zoomOut")}},this._mouseWheelHandler=Object(g.rafThrottle)((function(e){(e.wheelDelta?e.wheelDelta:-e.detail)>0?n.handleActions("zoomIn",{zoomRate:.015,enableTransition:!1}):n.handleActions("zoomOut",{zoomRate:.015,enableTransition:!1})})),Object(gn.on)(document,"keydown",this._keyDownHandler),Object(gn.on)(document,ec,this._mouseWheelHandler)},deviceSupportUninstall:function(){Object(gn.off)(document,"keydown",this._keyDownHandler),Object(gn.off)(document,ec,this._mouseWheelHandler),this._keyDownHandler=null,this._mouseWheelHandler=null},handleImgLoad:function(n){this.loading=!1},handleImgError:function(n){this.loading=!1,n.target.alt="加载失败"},handleMouseDown:function(n){var e=this;if(!this.loading&&0===n.button){var t=this.transform,i=t.offsetX,a=t.offsetY,r=n.pageX,o=n.pageY;this._dragHandler=Object(g.rafThrottle)((function(n){e.transform.offsetX=i+n.pageX-r,e.transform.offsetY=a+n.pageY-o})),Object(gn.on)(document,"mousemove",this._dragHandler),Object(gn.on)(document,"mouseup",(function(n){Object(gn.off)(document,"mousemove",e._dragHandler)})),n.preventDefault()}},handleMaskClick:function(){this.maskClosable&&this.hide()},reset:function(){this.transform={scale:1,deg:0,offsetX:0,offsetY:0,enableTransition:!1}},toggleMode:function(){if(!this.loading){var n=Object.keys(nc),e=(Object.values(nc).indexOf(this.mode)+1)%n.length;this.mode=nc[n[e]],this.reset()}},prev:function(){if(!this.isFirst||this.infinite){var n=this.urlList.length;this.index=(this.index-1+n)%n}},next:function(){if(!this.isLast||this.infinite){var n=this.urlList.length;this.index=(this.index+1)%n}},handleActions:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.loading){var t=Zd({zoomRate:.2,rotateDeg:90,enableTransition:!0},e),i=t.zoomRate,a=t.rotateDeg,r=t.enableTransition,o=this.transform;switch(n){case"zoomOut":o.scale>.2&&(o.scale=parseFloat((o.scale-i).toFixed(3)));break;case"zoomIn":o.scale=parseFloat((o.scale+i).toFixed(3));break;case"clocelise":o.deg+=a;break;case"anticlocelise":o.deg-=a}o.enableTransition=r}}},mounted:function(){this.deviceSupportInstall(),this.appendToBody&&document.body.appendChild(this.$el),this.$refs["el-image-viewer__wrapper"].focus()},destroyed:function(){this.appendToBody&&this.$el&&this.$el.parentNode&&this.$el.parentNode.removeChild(this.$el)}},Jd,[],!1,null,null,null);tc.options.__file="packages/image/src/image-viewer.vue";var ic=tc.exports,ac=function(){return void 0!==document.documentElement.style.objectFit},rc="none",oc="contain",sc="cover",lc="fill",dc="scale-down",cc="",uc=a({name:"ElImage",mixins:[m.a],inheritAttrs:!1,components:{ImageViewer:ic},props:{src:String,fit:String,lazy:Boolean,scrollContainer:{},previewSrcList:{type:Array,default:function(){return[]}},zIndex:{type:Number,default:2e3},initialIndex:Number},data:function(){return{loading:!0,error:!1,show:!this.lazy,imageWidth:0,imageHeight:0,showViewer:!1}},computed:{imageStyle:function(){var n=this.fit;return!this.$isServer&&n?ac()?{"object-fit":n}:this.getImageStyle(n):{}},alignCenter:function(){return!this.$isServer&&!ac()&&this.fit!==lc},preview:function(){var n=this.previewSrcList;return Array.isArray(n)&&n.length>0},imageIndex:function(){var n=0,e=this.initialIndex;if(e>=0)return n=e;var t=this.previewSrcList.indexOf(this.src);return t>=0?n=t:n}},watch:{src:function(n){this.show&&this.loadImage()},show:function(n){n&&this.loadImage()}},mounted:function(){this.lazy?this.addLazyLoadListener():this.loadImage()},beforeDestroy:function(){this.lazy&&this.removeLazyLoadListener()},methods:{loadImage:function(){var n=this;if(!this.$isServer){this.loading=!0,this.error=!1;var e=new Image;e.onload=function(t){return n.handleLoad(t,e)},e.onerror=this.handleError.bind(this),Object.keys(this.$attrs).forEach((function(t){var i=n.$attrs[t];e.setAttribute(t,i)})),e.src=this.src}},handleLoad:function(n,e){this.imageWidth=e.width,this.imageHeight=e.height,this.loading=!1,this.error=!1},handleError:function(n){this.loading=!1,this.error=!0,this.$emit("error",n)},handleLazyLoad:function(){Object(gn.isInContainer)(this.$el,this._scrollContainer)&&(this.show=!0,this.removeLazyLoadListener())},addLazyLoadListener:function(){if(!this.$isServer){var n=this.scrollContainer,e=null;(e=Object(ws.isHtmlElement)(n)?n:Object(ws.isString)(n)?document.querySelector(n):Object(gn.getScrollContainer)(this.$el))&&(this._scrollContainer=e,this._lazyLoadHandler=nl()(200,this.handleLazyLoad),Object(gn.on)(e,"scroll",this._lazyLoadHandler),this.handleLazyLoad())}},removeLazyLoadListener:function(){var n=this._scrollContainer,e=this._lazyLoadHandler;!this.$isServer&&n&&e&&(Object(gn.off)(n,"scroll",e),this._scrollContainer=null,this._lazyLoadHandler=null)},getImageStyle:function(n){var e=this.imageWidth,t=this.imageHeight,i=this.$el,a=i.clientWidth,r=i.clientHeight;if(!(e&&t&&a&&r))return{};var o=e/t,s=a/r;n===dc&&(n=e<a&&t<r?rc:oc);switch(n){case rc:return{width:"auto",height:"auto"};case oc:return o<s?{width:"auto"}:{height:"auto"};case sc:return o<s?{height:"auto"}:{width:"auto"};default:return{}}},clickHandler:function(){this.preview&&(cc=document.body.style.overflow,document.body.style.overflow="hidden",this.showViewer=!0)},closeViewer:function(){document.body.style.overflow=cc,this.showViewer=!1}}},Xd,[],!1,null,null,null);uc.options.__file="packages/image/src/main.vue";var pc=uc.exports;pc.install=function(n){n.component(pc.name,pc)};var hc=pc,mc=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-calendar"},[t("div",{staticClass:"el-calendar__header"},[t("div",{staticClass:"el-calendar__title"},[n._v("\n      "+n._s(n.i18nDate)+"\n    ")]),0===n.validatedRange.length?t("div",{staticClass:"el-calendar__button-group"},[t("el-button-group",[t("el-button",{attrs:{type:"plain",size:"mini"},on:{click:function(e){n.selectDate("prev-month")}}},[n._v("\n          "+n._s(n.t("el.datepicker.prevMonth"))+"\n        ")]),t("el-button",{attrs:{type:"plain",size:"mini"},on:{click:function(e){n.selectDate("today")}}},[n._v("\n          "+n._s(n.t("el.datepicker.today"))+"\n        ")]),t("el-button",{attrs:{type:"plain",size:"mini"},on:{click:function(e){n.selectDate("next-month")}}},[n._v("\n          "+n._s(n.t("el.datepicker.nextMonth"))+"\n        ")])],1)],1):n._e()]),0===n.validatedRange.length?t("div",{key:"no-range",staticClass:"el-calendar__body"},[t("date-table",{attrs:{date:n.date,"selected-day":n.realSelectedDay,"first-day-of-week":n.realFirstDayOfWeek},on:{pick:n.pickDay}})],1):t("div",{key:"has-range",staticClass:"el-calendar__body"},n._l(n.validatedRange,(function(e,i){return t("date-table",{key:i,attrs:{date:e[0],"selected-day":n.realSelectedDay,range:e,"hide-header":0!==i,"first-day-of-week":n.realFirstDayOfWeek},on:{pick:n.pickDay}})})),1)])};mc._withStripped=!0;var gc=t(20),fc=t.n(gc),vc=a({props:{selectedDay:String,range:{type:Array,validator:function(n){if(!n||!n.length)return!0;var e=n[0],t=n[1];return Object(gi.validateRangeInOneMonth)(e,t)}},date:Date,hideHeader:Boolean,firstDayOfWeek:Number},inject:["elCalendar"],methods:{toNestedArr:function(n){return Object(gi.range)(n.length/7).map((function(e,t){var i=7*t;return n.slice(i,i+7)}))},getFormateDate:function(n,e){if(!n||-1===["prev","current","next"].indexOf(e))throw new Error("invalid day or type");var t=this.curMonthDatePrefix;return"prev"===e?t=this.prevMonthDatePrefix:"next"===e&&(t=this.nextMonthDatePrefix),t+"-"+(n=("00"+n).slice(-2))},getCellClass:function(n){var e=n.text,t=n.type,i=[t];if("current"===t){var a=this.getFormateDate(e,t);a===this.selectedDay&&i.push("is-selected"),a===this.formatedToday&&i.push("is-today")}return i},pickDay:function(n){var e=n.text,t=n.type,i=this.getFormateDate(e,t);this.$emit("pick",i)},cellRenderProxy:function(n){var e=n.text,t=n.type,i=this.$createElement,a=this.elCalendar.$scopedSlots.dateCell;if(!a)return i("span",[e]);var r=this.getFormateDate(e,t);return a({date:new Date(r),data:{isSelected:this.selectedDay===r,type:t+"-month",day:r}})}},computed:{WEEK_DAYS:function(){return Object(gi.getI18nSettings)().dayNames},prevMonthDatePrefix:function(){var n=new Date(this.date.getTime());return n.setDate(0),fc.a.format(n,"yyyy-MM")},curMonthDatePrefix:function(){return fc.a.format(this.date,"yyyy-MM")},nextMonthDatePrefix:function(){var n=new Date(this.date.getFullYear(),this.date.getMonth()+1,1);return fc.a.format(n,"yyyy-MM")},formatedToday:function(){return this.elCalendar.formatedToday},isInRange:function(){return this.range&&this.range.length},rows:function(){var n=[];if(this.isInRange){var e=this.range,t=e[0],i=e[1],a=Object(gi.range)(i.getDate()-t.getDate()+1).map((function(n,e){return{text:t.getDate()+e,type:"current"}})),r=a.length%7;r=0===r?0:7-r;var o=Object(gi.range)(r).map((function(n,e){return{text:e+1,type:"next"}}));n=a.concat(o)}else{var s=this.date,l=Object(gi.getFirstDayOfMonth)(s),d=(7+(l=0===l?7:l)-("number"==typeof this.firstDayOfWeek?this.firstDayOfWeek:1))%7,c=Object(gi.getPrevMonthLastDays)(s,d).map((function(n){return{text:n,type:"prev"}})),u=Object(gi.getMonthDays)(s).map((function(n){return{text:n,type:"current"}}));n=[].concat(c,u);var p=Object(gi.range)(42-n.length).map((function(n,e){return{text:e+1,type:"next"}}));n=n.concat(p)}return this.toNestedArr(n)},weekDays:function(){var n=this.firstDayOfWeek,e=this.WEEK_DAYS;return"number"!=typeof n||0===n?e.slice():e.slice(n).concat(e.slice(0,n))}},render:function(){var n=this,e=arguments[0],t=this.hideHeader?null:e("thead",[this.weekDays.map((function(n){return e("th",{key:n},[n])}))]);return e("table",{class:{"el-calendar-table":!0,"is-range":this.isInRange},attrs:{cellspacing:"0",cellpadding:"0"}},[t,e("tbody",[this.rows.map((function(t,i){return e("tr",{class:{"el-calendar-table__row":!0,"el-calendar-table__row--hide-border":0===i&&n.hideHeader},key:i},[t.map((function(t,i){return e("td",{key:i,class:n.getCellClass(t),on:{click:n.pickDay.bind(n,t)}},[e("div",{class:"el-calendar-day"},[n.cellRenderProxy(t)])])}))])}))])])}},void 0,void 0,!1,null,null,null);vc.options.__file="packages/calendar/src/date-table.vue";var bc=vc.exports,_c=["prev-month","today","next-month"],yc=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],xc=a({name:"ElCalendar",mixins:[m.a],components:{DateTable:bc,ElButton:H.a,ElButtonGroup:Q.a},props:{value:[Date,String,Number],range:{type:Array,validator:function(n){return!Array.isArray(n)||2===n.length&&n.every((function(n){return"string"==typeof n||"number"==typeof n||n instanceof Date}))}},firstDayOfWeek:{type:Number,default:1}},provide:function(){return{elCalendar:this}},methods:{pickDay:function(n){this.realSelectedDay=n},selectDate:function(n){if(-1===_c.indexOf(n))throw new Error("invalid type "+n);var e="";(e="prev-month"===n?this.prevMonthDatePrefix+"-01":"next-month"===n?this.nextMonthDatePrefix+"-01":this.formatedToday)!==this.formatedDate&&this.pickDay(e)},toDate:function(n){if(!n)throw new Error("invalid val");return n instanceof Date?n:new Date(n)},rangeValidator:function(n,e){var t=this.realFirstDayOfWeek,i=e?t:0===t?6:t-1,a=(e?"start":"end")+" of range should be "+yc[i]+".";return n.getDay()===i||(console.warn("[ElementCalendar]",a,"Invalid range will be ignored."),!1)}},computed:{prevMonthDatePrefix:function(){var n=new Date(this.date.getTime());return n.setDate(0),fc.a.format(n,"yyyy-MM")},curMonthDatePrefix:function(){return fc.a.format(this.date,"yyyy-MM")},nextMonthDatePrefix:function(){var n=new Date(this.date.getFullYear(),this.date.getMonth()+1,1);return fc.a.format(n,"yyyy-MM")},formatedDate:function(){return fc.a.format(this.date,"yyyy-MM-dd")},i18nDate:function(){var n=this.date.getFullYear(),e=this.date.getMonth()+1;return n+" "+this.t("el.datepicker.year")+" "+this.t("el.datepicker.month"+e)},formatedToday:function(){return fc.a.format(this.now,"yyyy-MM-dd")},realSelectedDay:{get:function(){return this.value?this.formatedDate:this.selectedDay},set:function(n){this.selectedDay=n;var e=new Date(n);this.$emit("input",e)}},date:function(){if(this.value)return this.toDate(this.value);if(this.realSelectedDay){var n=this.selectedDay.split("-");return new Date(n[0],n[1]-1,n[2])}return this.validatedRange.length?this.validatedRange[0][0]:this.now},validatedRange:function(){var n=this,e=this.range;if(!e)return[];if(2===(e=e.reduce((function(e,t,i){var a=n.toDate(t);return n.rangeValidator(a,0===i)&&(e=e.concat(a)),e}),[])).length){var t=e,i=t[0],a=t[1];if(i>a)return console.warn("[ElementCalendar]end time should be greater than start time"),[];if(Object(gi.validateRangeInOneMonth)(i,a))return[[i,a]];var r=[],o=new Date(i.getFullYear(),i.getMonth()+1,1),s=this.toDate(o.getTime()-864e5);if(!Object(gi.validateRangeInOneMonth)(o,a))return console.warn("[ElementCalendar]start time and end time interval must not exceed two months"),[];r.push([i,s]);var l=this.realFirstDayOfWeek,d=o.getDay(),c=0;return d!==l&&(c=0===l?7-d:(c=l-d)>0?c:7+c),(o=this.toDate(o.getTime()+864e5*c)).getDate()<a.getDate()&&r.push([o,a]),r}return[]},realFirstDayOfWeek:function(){return this.firstDayOfWeek<1||this.firstDayOfWeek>6?0:Math.floor(this.firstDayOfWeek)}},data:function(){return{selectedDay:"",now:new Date}}},mc,[],!1,null,null,null);xc.options.__file="packages/calendar/src/main.vue";var kc=xc.exports;kc.install=function(n){n.component(kc.name,kc)};var Tc=kc,wc=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-fade-in"}},[n.visible?t("div",{staticClass:"el-backtop",style:{right:n.styleRight,bottom:n.styleBottom},on:{click:function(e){return e.stopPropagation(),n.handleClick(e)}}},[n._t("default",[t("el-icon",{attrs:{name:"caret-top"}})])],2):n._e()])};wc._withStripped=!0;var Ic=function(n){return Math.pow(n,3)},Cc=a({name:"ElBacktop",props:{visibilityHeight:{type:Number,default:200},target:[String],right:{type:Number,default:40},bottom:{type:Number,default:40}},data:function(){return{el:null,container:null,visible:!1}},computed:{styleBottom:function(){return this.bottom+"px"},styleRight:function(){return this.right+"px"}},mounted:function(){this.init(),this.throttledScrollHandler=nl()(300,this.onScroll),this.container.addEventListener("scroll",this.throttledScrollHandler)},methods:{init:function(){if(this.container=document,this.el=document.documentElement,this.target){if(this.el=document.querySelector(this.target),!this.el)throw new Error("target is not existed: "+this.target);this.container=this.el}},onScroll:function(){var n=this.el.scrollTop;this.visible=n>=this.visibilityHeight},handleClick:function(n){this.scrollToTop(),this.$emit("click",n)},scrollToTop:function(){var n=this.el,e=Date.now(),t=n.scrollTop,i=window.requestAnimationFrame||function(n){return setTimeout(n,16)};i((function a(){var r,o=(Date.now()-e)/500;o<1?(n.scrollTop=t*(1-((r=o)<.5?Ic(2*r)/2:1-Ic(2*(1-r))/2)),i(a)):n.scrollTop=0}))}},beforeDestroy:function(){this.container.removeEventListener("scroll",this.throttledScrollHandler)}},wc,[],!1,null,null,null);Cc.options.__file="packages/backtop/src/main.vue";var Dc=Cc.exports;Dc.install=function(n){n.component(Dc.name,Dc)};var Ec=Dc,Sc=function(n,e){return n===window||n===document?document.documentElement[e]:n[e]},Mc=function(n){return Sc(n,"offsetHeight")},Ac="ElInfiniteScroll",Oc={delay:{type:Number,default:200},distance:{type:Number,default:0},disabled:{type:Boolean,default:!1},immediate:{type:Boolean,default:!0}},Pc=function(n,e){return Object(ws.isHtmlElement)(n)?(t=Oc,Object.keys(t||{}).map((function(n){return[n,t[n]]}))).reduce((function(t,i){var a=i[0],r=i[1],o=r.type,s=r.default,l=n.getAttribute("infinite-scroll-"+a);switch(l=Object(ws.isUndefined)(e[l])?l:e[l],o){case Number:l=Number(l),l=Number.isNaN(l)?s:l;break;case Boolean:l=Object(ws.isDefined)(l)?"false"!==l&&Boolean(l):s;break;default:l=o(l)}return t[a]=l,t}),{}):{};var t},jc=function(n){return n.getBoundingClientRect().top},zc=function(n){var e=this[Ac],t=e.el,i=e.vm,a=e.container,r=e.observer,o=Pc(t,i),s=o.distance;if(!o.disabled){var l=a.getBoundingClientRect();if(l.width||l.height){var d=!1;if(a===t){var c=a.scrollTop+function(n){return Sc(n,"clientHeight")}(a);d=a.scrollHeight-c<=s}else{d=Mc(t)+jc(t)-jc(a)-Mc(a)+Number.parseFloat(function(n,e){if(n===window&&(n=document.documentElement),1!==n.nodeType)return[];var t=window.getComputedStyle(n,null);return e?t[e]:t}(a,"borderBottomWidth"))<=s}d&&Object(ws.isFunction)(n)?n.call(i):r&&(r.disconnect(),this[Ac].observer=null)}}},Rc={name:"InfiniteScroll",inserted:function(n,e,t){var i=e.value,a=t.context,r=Object(gn.getScrollContainer)(n,!0),o=Pc(n,a),s=o.delay,l=o.immediate,d=M()(s,zc.bind(n,i));(n[Ac]={el:n,vm:a,container:r,onScroll:d},r)&&(r.addEventListener("scroll",d),l&&((n[Ac].observer=new MutationObserver(d)).observe(r,{childList:!0,subtree:!0}),d()))},unbind:function(n){var e=n[Ac],t=e.container,i=e.onScroll;t&&t.removeEventListener("scroll",i)},install:function(n){n.directive(Rc.name,Rc)}},$c=Rc,Lc=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-page-header"},[t("div",{staticClass:"el-page-header__left",on:{click:function(e){n.$emit("back")}}},[t("i",{staticClass:"el-icon-back"}),t("div",{staticClass:"el-page-header__title"},[n._t("title",[n._v(n._s(n.title))])],2)]),t("div",{staticClass:"el-page-header__content"},[n._t("content",[n._v(n._s(n.content))])],2)])};Lc._withStripped=!0;var Uc=a({name:"ElPageHeader",props:{title:{type:String,default:function(){return Object($a.t)("el.pageHeader.title")}},content:String}},Lc,[],!1,null,null,null);Uc.options.__file="packages/page-header/src/main.vue";var Nc=Uc.exports;Nc.install=function(n){n.component(Nc.name,Nc)};var qc=Nc,Bc=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{class:["el-cascader-panel",this.border&&"is-bordered"],on:{keydown:this.handleKeyDown}},this._l(this.menus,(function(n,t){return e("cascader-menu",{key:t,ref:"menu",refInFor:!0,attrs:{index:t,nodes:n}})})),1)};Bc._withStripped=!0;var Fc=t(44),Vc=t.n(Fc),Gc=function(n){return n.stopPropagation()},Hc=a({inject:["panel"],components:{ElCheckbox:rt.a,ElRadio:Vc.a},props:{node:{required:!0},nodeId:String},computed:{config:function(){return this.panel.config},isLeaf:function(){return this.node.isLeaf},isDisabled:function(){return this.node.isDisabled},checkedValue:function(){return this.panel.checkedValue},isChecked:function(){return this.node.isSameNode(this.checkedValue)},inActivePath:function(){return this.isInPath(this.panel.activePath)},inCheckedPath:function(){var n=this;return!!this.config.checkStrictly&&this.panel.checkedNodePaths.some((function(e){return n.isInPath(e)}))},value:function(){return this.node.getValueByOption()}},methods:{handleExpand:function(){var n=this,e=this.panel,t=this.node,i=this.isDisabled,a=this.config,r=a.multiple;!a.checkStrictly&&i||t.loading||(a.lazy&&!t.loaded?e.lazyLoad(t,(function(){var e=n.isLeaf;if(e||n.handleExpand(),r){var i=!!e&&t.checked;n.handleMultiCheckChange(i)}})):e.handleExpand(t))},handleCheckChange:function(){var n=this.panel,e=this.value,t=this.node;n.handleCheckChange(e),n.handleExpand(t)},handleMultiCheckChange:function(n){this.node.doCheck(n),this.panel.calculateMultiCheckedValue()},isInPath:function(n){var e=this.node;return(n[e.level-1]||{}).uid===e.uid},renderPrefix:function(n){var e=this.isLeaf,t=this.isChecked,i=this.config,a=i.checkStrictly;return i.multiple?this.renderCheckbox(n):a?this.renderRadio(n):e&&t?this.renderCheckIcon(n):null},renderPostfix:function(n){var e=this.node,t=this.isLeaf;return e.loading?this.renderLoadingIcon(n):t?null:this.renderExpandIcon(n)},renderCheckbox:function(n){var e=this.node,t=this.config,i=this.isDisabled,a={on:{change:this.handleMultiCheckChange},nativeOn:{}};return t.checkStrictly&&(a.nativeOn.click=Gc),n("el-checkbox",is()([{attrs:{value:e.checked,indeterminate:e.indeterminate,disabled:i}},a]))},renderRadio:function(n){var e=this.checkedValue,t=this.value,i=this.isDisabled;return Object(g.isEqual)(t,e)&&(t=e),n("el-radio",{attrs:{value:e,label:t,disabled:i},on:{change:this.handleCheckChange},nativeOn:{click:Gc}},[n("span")])},renderCheckIcon:function(n){return n("i",{class:"el-icon-check el-cascader-node__prefix"})},renderLoadingIcon:function(n){return n("i",{class:"el-icon-loading el-cascader-node__postfix"})},renderExpandIcon:function(n){return n("i",{class:"el-icon-arrow-right el-cascader-node__postfix"})},renderContent:function(n){var e=this.panel,t=this.node,i=e.renderLabelFn;return n("span",{class:"el-cascader-node__label"},[(i?i({node:t,data:t.data}):null)||t.label])}},render:function(n){var e=this,t=this.inActivePath,i=this.inCheckedPath,a=this.isChecked,r=this.isLeaf,o=this.isDisabled,s=this.config,l=this.nodeId,d=s.expandTrigger,c=s.checkStrictly,u=s.multiple,p=!c&&o,h={on:{}};return"click"===d?h.on.click=this.handleExpand:(h.on.mouseenter=function(n){e.handleExpand(),e.$emit("expand",n)},h.on.focus=function(n){e.handleExpand(),e.$emit("expand",n)}),!r||o||c||u||(h.on.click=this.handleCheckChange),n("li",is()([{attrs:{role:"menuitem",id:l,"aria-expanded":t,tabindex:p?null:-1},class:{"el-cascader-node":!0,"is-selectable":c,"in-active-path":t,"in-checked-path":i,"is-active":a,"is-disabled":p}},h]),[this.renderPrefix(n),this.renderContent(n),this.renderPostfix(n)])}},void 0,void 0,!1,null,null,null);Hc.options.__file="packages/cascader-panel/src/cascader-node.vue";var Wc=Hc.exports,Qc=a({name:"ElCascaderMenu",mixins:[m.a],inject:["panel"],components:{ElScrollbar:$.a,CascaderNode:Wc},props:{nodes:{type:Array,required:!0},index:Number},data:function(){return{activeNode:null,hoverTimer:null,id:Object(g.generateId)()}},computed:{isEmpty:function(){return!this.nodes.length},menuId:function(){return"cascader-menu-"+this.id+"-"+this.index}},methods:{handleExpand:function(n){this.activeNode=n.target},handleMouseMove:function(n){var e=this.activeNode,t=this.hoverTimer,i=this.$refs.hoverZone;if(e&&i)if(e.contains(n.target)){clearTimeout(t);var a=this.$el.getBoundingClientRect().left,r=n.clientX-a,o=this.$el,s=o.offsetWidth,l=o.offsetHeight,d=e.offsetTop,c=d+e.offsetHeight;i.innerHTML='\n          <path style="pointer-events: auto;" fill="transparent" d="M'+r+" "+d+" L"+s+" 0 V"+d+' Z" />\n          <path style="pointer-events: auto;" fill="transparent" d="M'+r+" "+c+" L"+s+" "+l+" V"+c+' Z" />\n        '}else t||(this.hoverTimer=setTimeout(this.clearHoverZone,this.panel.config.hoverThreshold))},clearHoverZone:function(){var n=this.$refs.hoverZone;n&&(n.innerHTML="")},renderEmptyText:function(n){return n("div",{class:"el-cascader-menu__empty-text"},[this.t("el.cascader.noData")])},renderNodeList:function(n){var e=this.menuId,t=this.panel.isHoverMenu,i={on:{}};t&&(i.on.expand=this.handleExpand);var a=this.nodes.map((function(t,a){var r=t.hasChildren;return n("cascader-node",is()([{key:t.uid,attrs:{node:t,"node-id":e+"-"+a,"aria-haspopup":r,"aria-owns":r?e:null}},i]))}));return[].concat(a,[t?n("svg",{ref:"hoverZone",class:"el-cascader-menu__hover-zone"}):null])}},render:function(n){var e=this.isEmpty,t=this.menuId,i={nativeOn:{}};return this.panel.isHoverMenu&&(i.nativeOn.mousemove=this.handleMouseMove),n("el-scrollbar",is()([{attrs:{tag:"ul",role:"menu",id:t,"wrap-class":"el-cascader-menu__wrap","view-class":{"el-cascader-menu__list":!0,"is-empty":e}},class:"el-cascader-menu"},i]),[e?this.renderEmptyText(n):this.renderNodeList(n)])}},void 0,void 0,!1,null,null,null);Qc.options.__file="packages/cascader-panel/src/cascader-menu.vue";var Kc=Qc.exports,Yc=function(){function n(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}();var Xc=0,Jc=function(){function n(e,t,i){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.data=e,this.config=t,this.parent=i||null,this.level=this.parent?this.parent.level+1:1,this.uid=Xc++,this.initState(),this.initChildren()}return n.prototype.initState=function(){var n=this.config,e=n.value,t=n.label;this.value=this.data[e],this.label=this.data[t],this.pathNodes=this.calculatePathNodes(),this.path=this.pathNodes.map((function(n){return n.value})),this.pathLabels=this.pathNodes.map((function(n){return n.label})),this.loading=!1,this.loaded=!1},n.prototype.initChildren=function(){var e=this,t=this.config,i=t.children,a=this.data[i];this.hasChildren=Array.isArray(a),this.children=(a||[]).map((function(i){return new n(i,t,e)}))},n.prototype.calculatePathNodes=function(){for(var n=[this],e=this.parent;e;)n.unshift(e),e=e.parent;return n},n.prototype.getPath=function(){return this.path},n.prototype.getValue=function(){return this.value},n.prototype.getValueByOption=function(){return this.config.emitPath?this.getPath():this.getValue()},n.prototype.getText=function(n,e){return n?this.pathLabels.join(e):this.label},n.prototype.isSameNode=function(n){var e=this.getValueByOption();return this.config.multiple&&Array.isArray(n)?n.some((function(n){return Object(g.isEqual)(n,e)})):Object(g.isEqual)(n,e)},n.prototype.broadcast=function(n){for(var e=arguments.length,t=Array(e>1?e-1:0),i=1;i<e;i++)t[i-1]=arguments[i];var a="onParent"+Object(g.capitalize)(n);this.children.forEach((function(e){e&&(e.broadcast.apply(e,[n].concat(t)),e[a]&&e[a].apply(e,t))}))},n.prototype.emit=function(n){var e=this.parent,t="onChild"+Object(g.capitalize)(n);if(e){for(var i=arguments.length,a=Array(i>1?i-1:0),r=1;r<i;r++)a[r-1]=arguments[r];e[t]&&e[t].apply(e,a),e.emit.apply(e,[n].concat(a))}},n.prototype.onParentCheck=function(n){this.isDisabled||this.setCheckState(n)},n.prototype.onChildCheck=function(){var n=this.children.filter((function(n){return!n.isDisabled})),e=!!n.length&&n.every((function(n){return n.checked}));this.setCheckState(e)},n.prototype.setCheckState=function(n){var e=this.children.length,t=this.children.reduce((function(n,e){return n+(e.checked?1:e.indeterminate?.5:0)}),0);this.checked=n,this.indeterminate=t!==e&&t>0},n.prototype.syncCheckState=function(n){var e=this.getValueByOption(),t=this.isSameNode(n,e);this.doCheck(t)},n.prototype.doCheck=function(n){this.checked!==n&&(this.config.checkStrictly?this.checked=n:(this.broadcast("check",n),this.setCheckState(n),this.emit("check")))},Yc(n,[{key:"isDisabled",get:function(){var n=this.data,e=this.parent,t=this.config,i=t.disabled,a=t.checkStrictly;return n[i]||!a&&e&&e.isDisabled}},{key:"isLeaf",get:function(){var n=this.data,e=this.loaded,t=this.hasChildren,i=this.children,a=this.config,r=a.lazy,o=a.leaf;if(r){var s=Object(Vn.isDef)(n[o])?n[o]:!!e&&!i.length;return this.hasChildren=!s,s}return!t}}]),n}();var Zc=function n(e,t){return e.reduce((function(e,i){return i.isLeaf?e.push(i):(!t&&e.push(i),e=e.concat(n(i.children,t))),e}),[])},nu=function(){function n(e,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.config=t,this.initNodes(e)}return n.prototype.initNodes=function(n){var e=this;n=Object(g.coerceTruthyValueToArray)(n),this.nodes=n.map((function(n){return new Jc(n,e.config)})),this.flattedNodes=this.getFlattedNodes(!1,!1),this.leafNodes=this.getFlattedNodes(!0,!1)},n.prototype.appendNode=function(n,e){var t=new Jc(n,this.config,e);(e?e.children:this.nodes).push(t)},n.prototype.appendNodes=function(n,e){var t=this;(n=Object(g.coerceTruthyValueToArray)(n)).forEach((function(n){return t.appendNode(n,e)}))},n.prototype.getNodes=function(){return this.nodes},n.prototype.getFlattedNodes=function(n){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=n?this.leafNodes:this.flattedNodes;return e?t:Zc(this.nodes,n)},n.prototype.getNodeByValue=function(n){var e=this.getFlattedNodes(!1,!this.config.lazy).filter((function(e){return Object(g.valueEquals)(e.path,n)||e.value===n}));return e&&e.length?e[0]:null},n}(),eu=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},tu=Il.a.keys,iu={expandTrigger:"click",multiple:!1,checkStrictly:!1,emitPath:!0,lazy:!1,lazyLoad:g.noop,value:"value",label:"label",children:"children",leaf:"leaf",disabled:"disabled",hoverThreshold:500},au=function(n){return!n.getAttribute("aria-owns")},ru=function(n,e){var t=n.parentNode;if(t){var i=t.querySelectorAll('.el-cascader-node[tabindex="-1"]');return i[Array.prototype.indexOf.call(i,n)+e]||null}return null},ou=function(n,e){if(n){var t=n.id.split("-");return Number(t[t.length-2])}},su=function(n){n&&(n.focus(),!au(n)&&n.click())},lu=a({name:"ElCascaderPanel",components:{CascaderMenu:Kc},props:{value:{},options:Array,props:Object,border:{type:Boolean,default:!0},renderLabel:Function},provide:function(){return{panel:this}},data:function(){return{checkedValue:null,checkedNodePaths:[],store:[],menus:[],activePath:[],loadCount:0}},computed:{config:function(){return Fn()(eu({},iu),this.props||{})},multiple:function(){return this.config.multiple},checkStrictly:function(){return this.config.checkStrictly},leafOnly:function(){return!this.checkStrictly},isHoverMenu:function(){return"hover"===this.config.expandTrigger},renderLabelFn:function(){return this.renderLabel||this.$scopedSlots.default}},watch:{value:function(){this.syncCheckedValue(),this.checkStrictly&&this.calculateCheckedNodePaths()},options:{handler:function(){this.initStore()},immediate:!0,deep:!0},checkedValue:function(n){Object(g.isEqual)(n,this.value)||(this.checkStrictly&&this.calculateCheckedNodePaths(),this.$emit("input",n),this.$emit("change",n))}},mounted:function(){this.isEmptyValue(this.value)||this.syncCheckedValue()},methods:{initStore:function(){var n=this.config,e=this.options;n.lazy&&Object(g.isEmpty)(e)?this.lazyLoad():(this.store=new nu(e,n),this.menus=[this.store.getNodes()],this.syncMenuState())},syncCheckedValue:function(){var n=this.value,e=this.checkedValue;Object(g.isEqual)(n,e)||(this.activePath=[],this.checkedValue=n,this.syncMenuState())},syncMenuState:function(){var n=this.multiple,e=this.checkStrictly;this.syncActivePath(),n&&this.syncMultiCheckState(),e&&this.calculateCheckedNodePaths(),this.$nextTick(this.scrollIntoView)},syncMultiCheckState:function(){var n=this;this.getFlattedNodes(this.leafOnly).forEach((function(e){e.syncCheckState(n.checkedValue)}))},isEmptyValue:function(n){var e=this.multiple,t=this.config.emitPath;return!(!e&&!t)&&Object(g.isEmpty)(n)},syncActivePath:function(){var n=this,e=this.store,t=this.multiple,i=this.activePath,a=this.checkedValue;if(Object(g.isEmpty)(i))if(this.isEmptyValue(a))this.activePath=[],this.menus=[e.getNodes()];else{var r=t?a[0]:a,o=((this.getNodeByValue(r)||{}).pathNodes||[]).slice(0,-1);this.expandNodes(o)}else{var s=i.map((function(e){return n.getNodeByValue(e.getValue())}));this.expandNodes(s)}},expandNodes:function(n){var e=this;n.forEach((function(n){return e.handleExpand(n,!0)}))},calculateCheckedNodePaths:function(){var n=this,e=this.checkedValue,t=this.multiple?Object(g.coerceTruthyValueToArray)(e):[e];this.checkedNodePaths=t.map((function(e){var t=n.getNodeByValue(e);return t?t.pathNodes:[]}))},handleKeyDown:function(n){var e=n.target;switch(n.keyCode){case tu.up:var t=ru(e,-1);su(t);break;case tu.down:var i=ru(e,1);su(i);break;case tu.left:var a=this.$refs.menu[ou(e)-1];if(a){var r=a.$el.querySelector('.el-cascader-node[aria-expanded="true"]');su(r)}break;case tu.right:var o=this.$refs.menu[ou(e)+1];if(o){var s=o.$el.querySelector('.el-cascader-node[tabindex="-1"]');su(s)}break;case tu.enter:!function(n){if(n){var e=n.querySelector("input");e?e.click():au(n)&&n.click()}}(e);break;case tu.esc:case tu.tab:this.$emit("close");break;default:return}},handleExpand:function(n,e){var t=this.activePath,i=n.level,a=t.slice(0,i-1),r=this.menus.slice(0,i);if(n.isLeaf||(a.push(n),r.push(n.children)),this.activePath=a,this.menus=r,!e){var o=a.map((function(n){return n.getValue()})),s=t.map((function(n){return n.getValue()}));Object(g.valueEquals)(o,s)||(this.$emit("active-item-change",o),this.$emit("expand-change",o))}},handleCheckChange:function(n){this.checkedValue=n},lazyLoad:function(n,e){var t=this,i=this.config;n||(n=n||{root:!0,level:0},this.store=new nu([],i),this.menus=[this.store.getNodes()]),n.loading=!0;i.lazyLoad(n,(function(i){var a=n.root?null:n;if(i&&i.length&&t.store.appendNodes(i,a),n.loading=!1,n.loaded=!0,Array.isArray(t.checkedValue)){var r=t.checkedValue[t.loadCount++],o=t.config.value,s=t.config.leaf;if(Array.isArray(i)&&i.filter((function(n){return n[o]===r})).length>0){var l=t.store.getNodeByValue(r);l.data[s]||t.lazyLoad(l,(function(){t.handleExpand(l)})),t.loadCount===t.checkedValue.length&&t.$parent.computePresentText()}}e&&e(i)}))},calculateMultiCheckedValue:function(){this.checkedValue=this.getCheckedNodes(this.leafOnly).map((function(n){return n.getValueByOption()}))},scrollIntoView:function(){this.$isServer||(this.$refs.menu||[]).forEach((function(n){var e=n.$el;if(e){var t=e.querySelector(".el-scrollbar__wrap"),i=e.querySelector(".el-cascader-node.is-active")||e.querySelector(".el-cascader-node.in-active-path");Ne()(t,i)}}))},getNodeByValue:function(n){return this.store.getNodeByValue(n)},getFlattedNodes:function(n){var e=!this.config.lazy;return this.store.getFlattedNodes(n,e)},getCheckedNodes:function(n){var e=this.checkedValue;return this.multiple?this.getFlattedNodes(n).filter((function(n){return n.checked})):this.isEmptyValue(e)?[]:[this.getNodeByValue(e)]},clearCheckedNodes:function(){var n=this.config,e=this.leafOnly,t=n.multiple,i=n.emitPath;t?(this.getCheckedNodes(e).filter((function(n){return!n.isDisabled})).forEach((function(n){return n.doCheck(!1)})),this.calculateMultiCheckedValue()):this.checkedValue=i?[]:null}}},Bc,[],!1,null,null,null);lu.options.__file="packages/cascader-panel/src/cascader-panel.vue";var du=lu.exports;du.install=function(n){n.component(du.name,du)};var cu=du,uu=a({name:"ElAvatar",props:{size:{type:[Number,String],validator:function(n){return"string"==typeof n?["large","medium","small"].includes(n):"number"==typeof n}},shape:{type:String,default:"circle",validator:function(n){return["circle","square"].includes(n)}},icon:String,src:String,alt:String,srcSet:String,error:Function,fit:{type:String,default:"cover"}},data:function(){return{isImageExist:!0}},computed:{avatarClass:function(){var n=this.size,e=this.icon,t=this.shape,i=["el-avatar"];return n&&"string"==typeof n&&i.push("el-avatar--"+n),e&&i.push("el-avatar--icon"),t&&i.push("el-avatar--"+t),i.join(" ")}},methods:{handleError:function(){var n=this.error;!1!==(n?n():void 0)&&(this.isImageExist=!1)},renderAvatar:function(){var n=this.$createElement,e=this.icon,t=this.src,i=this.alt,a=this.isImageExist,r=this.srcSet,o=this.fit;return a&&t?n("img",{attrs:{src:t,alt:i,srcSet:r},on:{error:this.handleError},style:{"object-fit":o}}):e?n("i",{class:e}):this.$slots.default}},render:function(){var n=arguments[0],e=this.avatarClass,t=this.size,i="number"==typeof t?{height:t+"px",width:t+"px",lineHeight:t+"px"}:{};return n("span",{class:e,style:i},[this.renderAvatar()])}},void 0,void 0,!1,null,null,null);uu.options.__file="packages/avatar/src/main.vue";var pu=uu.exports;pu.install=function(n){n.component(pu.name,pu)};var hu=pu,mu=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"el-drawer-fade"},on:{"after-enter":n.afterEnter,"after-leave":n.afterLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-drawer__wrapper",attrs:{tabindex:"-1"}},[t("div",{staticClass:"el-drawer__container",class:n.visible&&"el-drawer__open",attrs:{role:"document",tabindex:"-1"},on:{click:function(e){return e.target!==e.currentTarget?null:n.handleWrapperClick(e)}}},[t("div",{ref:"drawer",staticClass:"el-drawer",class:[n.direction,n.customClass],style:n.isHorizontal?"width: "+n.drawerSize:"height: "+n.drawerSize,attrs:{"aria-modal":"true","aria-labelledby":"el-drawer__title","aria-label":n.title,role:"dialog",tabindex:"-1"}},[n.withHeader?t("header",{staticClass:"el-drawer__header",attrs:{id:"el-drawer__title"}},[n._t("title",[t("span",{attrs:{role:"heading",title:n.title}},[n._v(n._s(n.title))])]),n.showClose?t("button",{staticClass:"el-drawer__close-btn",attrs:{"aria-label":"close "+(n.title||"drawer"),type:"button"},on:{click:n.closeDrawer}},[t("i",{staticClass:"el-dialog__close el-icon el-icon-close"})]):n._e()],2):n._e(),n.rendered?t("section",{staticClass:"el-drawer__body"},[n._t("default")],2):n._e()])])])])};mu._withStripped=!0;var gu=a({name:"ElDrawer",mixins:[y.a,w.a],props:{appendToBody:{type:Boolean,default:!1},beforeClose:{type:Function},customClass:{type:String,default:""},closeOnPressEscape:{type:Boolean,default:!0},destroyOnClose:{type:Boolean,default:!1},modal:{type:Boolean,default:!0},direction:{type:String,default:"rtl",validator:function(n){return-1!==["ltr","rtl","ttb","btt"].indexOf(n)}},modalAppendToBody:{type:Boolean,default:!0},showClose:{type:Boolean,default:!0},size:{type:[Number,String],default:"30%"},title:{type:String,default:""},visible:{type:Boolean},wrapperClosable:{type:Boolean,default:!0},withHeader:{type:Boolean,default:!0}},computed:{isHorizontal:function(){return"rtl"===this.direction||"ltr"===this.direction},drawerSize:function(){return"number"==typeof this.size?this.size+"px":this.size}},data:function(){return{closed:!1,prevActiveElement:null}},watch:{visible:function(n){var e=this;n?(this.closed=!1,this.$emit("open"),this.appendToBody&&document.body.appendChild(this.$el),this.prevActiveElement=document.activeElement):(this.closed||(this.$emit("close"),!0===this.destroyOnClose&&(this.rendered=!1)),this.$nextTick((function(){e.prevActiveElement&&e.prevActiveElement.focus()})))}},methods:{afterEnter:function(){this.$emit("opened")},afterLeave:function(){this.$emit("closed")},hide:function(n){!1!==n&&(this.$emit("update:visible",!1),this.$emit("close"),!0===this.destroyOnClose&&(this.rendered=!1),this.closed=!0)},handleWrapperClick:function(){this.wrapperClosable&&this.closeDrawer()},closeDrawer:function(){"function"==typeof this.beforeClose?this.beforeClose(this.hide):this.hide()},handleClose:function(){this.closeDrawer()}},mounted:function(){this.visible&&(this.rendered=!0,this.open(),this.appendToBody&&document.body.appendChild(this.$el))},destroyed:function(){this.appendToBody&&this.$el&&this.$el.parentNode&&this.$el.parentNode.removeChild(this.$el)}},mu,[],!1,null,null,null);gu.options.__file="packages/drawer/src/main.vue";var fu=gu.exports;fu.install=function(n){n.component(fu.name,fu)};var vu=fu,bu=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-statistic"},[n.title||n.$slots.title?t("div",{staticClass:"head"},[n._t("title",[t("span",{staticClass:"title"},[n._v("\n        "+n._s(n.title)+"\n      ")])])],2):n._e(),t("div",{staticClass:"con"},[n.prefix||n.$slots.prefix?t("span",{staticClass:"prefix"},[n._t("prefix",[n._v("\n        "+n._s(n.prefix)+"\n      ")])],2):n._e(),t("span",{staticClass:"number",style:n.valueStyle},[n._t("formatter",[n._v(" "+n._s(n.disposeValue))])],2),n.suffix||n.$slots.suffix?t("span",{staticClass:"suffix"},[n._t("suffix",[n._v("\n        "+n._s(n.suffix)+"\n      ")])],2):n._e()])])};bu._withStripped=!0;var _u=t(28),yu=a({name:"ElStatistic",data:function(){return{disposeValue:"",timeTask:null,REFRESH_INTERVAL:1e3/30}},props:{decimalSeparator:{type:String,default:"."},groupSeparator:{type:String,default:""},precision:{type:Number,default:null},value:{type:[String,Number,Date],default:""},prefix:{type:String,default:""},suffix:{type:String,default:""},title:{type:[String,Number],default:""},timeIndices:{type:Boolean,default:!1},valueStyle:{type:Object,default:function(){return{}}},format:{type:String,default:"HH:mm:ss:SSS"},rate:{type:Number,default:1e3}},created:function(){this.branch()},watch:{value:function(){this.branch()},groupSeparator:function(){this.dispose()},mulriple:function(){this.dispose()}},methods:{branch:function(){var n=this.timeIndices,e=this.countDown,t=this.dispose;n?e(this.value.valueOf()||this.value):t()},magnification:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:",",i=String(e).length;return n.replace(new RegExp("(\\d)(?=(\\d{"+(i-1)+"})+$)","g"),"$1"+t)},dispose:function(){var n=this.value,e=this.rate,t=this.groupSeparator;if(!Object(_u.isNumber)(n))return!1;this.precision&&(n=n.toFixed(this.precision));var i=String(n).split("."),a=i[0],r=i[1];t&&(a=this.magnification(a,e,t));var o=""+a+(r?this.decimalSeparator+r:"");return this.disposeValue=o,o},diffDate:function(n,e){return Math.max(n-e,0)},suspend:function(n){return n?this.timeTask&&(clearInterval(this.timeTask),this.timeTask=null):this.branch(),this.disposeValue},formatTimeStr:function(n){var e=this.format,t=/\[[^\]]*]/g,i=(e.match(t)||[]).map((function(n){return n.slice(1,-1)})),a=Object(_u.reduce)([["Y",31536e6],["M",2592e6],["D",864e5],["H",36e5],["m",6e4],["s",1e3],["S",1]],(function(e,t){var i=t[0];return e.replace(new RegExp(i+"+","g"),(function(e){var i=Object(_u.chain)(n).divide(t[1]).floor(0).value();return n-=Object(_u.multiply)(i,t[1]),Object(_u.padStart)(String(i),String(e).length,0)}))}),e),r=0;return a.replace(t,(function(){var n=i[r];return r+=1,n}))},stopTime:function(n){var e=!0;return n?(this.$emit("change",n),e=!1):(e=!0,this.suspend(!0),this.$emit("finish",!0)),e},countDown:function(n){var e=this.REFRESH_INTERVAL,t=this.timeTask,i=this.diffDate,a=this.formatTimeStr,r=this.stopTime,o=this.suspend;if(!t){var s=this;this.timeTask=setInterval((function(){var e=i(n,Date.now());s.disposeValue=a(e),r(e)}),e),this.$once("hook:beforeDestroy",(function(){o(!0)}))}}}},bu,[],!1,null,null,null);yu.options.__file="packages/statistic/src/main.vue";var xu=yu.exports;xu.install=function(n){n.component(xu.name,xu)};var ku=xu,Tu=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("el-popover",n._b({attrs:{trigger:"click"},model:{value:n.visible,callback:function(e){n.visible=e},expression:"visible"}},"el-popover",n.$attrs,!1),[t("div",{staticClass:"el-popconfirm"},[t("p",{staticClass:"el-popconfirm__main"},[n.hideIcon?n._e():t("i",{staticClass:"el-popconfirm__icon",class:n.icon,style:{color:n.iconColor}}),n._v("\n      "+n._s(n.title)+"\n    ")]),t("div",{staticClass:"el-popconfirm__action"},[t("el-button",{attrs:{size:"mini",type:n.cancelButtonType},on:{click:n.cancel}},[n._v("\n        "+n._s(n.displayCancelButtonText)+"\n      ")]),t("el-button",{attrs:{size:"mini",type:n.confirmButtonType},on:{click:n.confirm}},[n._v("\n        "+n._s(n.displayConfirmButtonText)+"\n      ")])],1)]),n._t("reference",null,{slot:"reference"})],2)};Tu._withStripped=!0;var wu=t(45),Iu=a({name:"ElPopconfirm",props:{title:{type:String},confirmButtonText:{type:String},cancelButtonText:{type:String},confirmButtonType:{type:String,default:"primary"},cancelButtonType:{type:String,default:"text"},icon:{type:String,default:"el-icon-question"},iconColor:{type:String,default:"#f90"},hideIcon:{type:Boolean,default:!1}},components:{ElPopover:t.n(wu).a,ElButton:H.a},data:function(){return{visible:!1}},computed:{displayConfirmButtonText:function(){return this.confirmButtonText||Object($a.t)("el.popconfirm.confirmButtonText")},displayCancelButtonText:function(){return this.cancelButtonText||Object($a.t)("el.popconfirm.cancelButtonText")}},methods:{confirm:function(){this.visible=!1,this.$emit("confirm")},cancel:function(){this.visible=!1,this.$emit("cancel")}}},Tu,[],!1,null,null,null);Iu.options.__file="packages/popconfirm/src/main.vue";var Cu=Iu.exports;Cu.install=function(n){n.component(Cu.name,Cu)};var Du=Cu,Eu=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",[n.uiLoading?[t("div",n._b({class:["el-skeleton",n.animated?"is-animated":""]},"div",n.$attrs,!1),[n._l(n.count,(function(e){return[n.loading?n._t("template",n._l(n.rows,(function(i){return t("el-skeleton-item",{key:e+"-"+i,class:{"el-skeleton__paragraph":1!==i,"is-first":1===i,"is-last":i===n.rows&&n.rows>1},attrs:{variant:"p"}})}))):n._e()]}))],2)]:[n._t("default",null,null,n.$attrs)]],2)};Eu._withStripped=!0;var Su=a({name:"ElSkeleton",props:{animated:{type:Boolean,default:!1},count:{type:Number,default:1},rows:{type:Number,default:4},loading:{type:Boolean,default:!0},throttle:{type:Number,default:0}},watch:{loading:{handler:function(n){var e=this;this.throttle<=0?this.uiLoading=n:n?(clearTimeout(this.timeoutHandle),this.timeoutHandle=setTimeout((function(){e.uiLoading=e.loading}),this.throttle)):this.uiLoading=n},immediate:!0}},data:function(){return{uiLoading:this.throttle<=0&&this.loading}}},Eu,[],!1,null,null,null);Su.options.__file="packages/skeleton/src/index.vue";var Mu=Su.exports;Mu.install=function(n){n.component(Mu.name,Mu)};var Au=Mu,Ou=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{class:["el-skeleton__item","el-skeleton__"+this.variant]},["image"===this.variant?e("img-placeholder"):this._e()],1)};Ou._withStripped=!0;var Pu=function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M64 896V128h896v768H64z m64-128l192-192 116.352 116.352L640 448l256 307.2V192H128v576z m224-480a96 96 0 1 1-0.064 192.064A96 96 0 0 1 352 288z"}})])};Pu._withStripped=!0;var ju=a({name:"ImgPlaceholder"},Pu,[],!1,null,null,null);ju.options.__file="packages/skeleton/src/img-placeholder.vue";var zu,Ru=ju.exports,$u=a({name:"ElSkeletonItem",props:{variant:{type:String,default:"text"}},components:(zu={},zu[Ru.name]=Ru,zu)},Ou,[],!1,null,null,null);$u.options.__file="packages/skeleton/src/item.vue";var Lu=$u.exports;Lu.install=function(n){n.component(Lu.name,Lu)};var Uu=Lu,Nu=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-empty"},[t("div",{staticClass:"el-empty__image",style:n.imageStyle},[n.image?t("img",{attrs:{src:n.image,ondragstart:"return false"}}):n._t("image",[t("img-empty")])],2),t("div",{staticClass:"el-empty__description"},[n.$slots.description?n._t("description"):t("p",[n._v(n._s(n.emptyDescription))])],2),n.$slots.default?t("div",{staticClass:"el-empty__bottom"},[n._t("default")],2):n._e()])};Nu._withStripped=!0;var qu=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("svg",{attrs:{viewBox:"0 0 79 86",version:"1.1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[t("defs",[t("linearGradient",{attrs:{id:"linearGradient-1-"+n.id,x1:"38.8503086%",y1:"0%",x2:"61.1496914%",y2:"100%"}},[t("stop",{attrs:{"stop-color":"#FCFCFD",offset:"0%"}}),t("stop",{attrs:{"stop-color":"#EEEFF3",offset:"100%"}})],1),t("linearGradient",{attrs:{id:"linearGradient-2-"+n.id,x1:"0%",y1:"9.5%",x2:"100%",y2:"90.5%"}},[t("stop",{attrs:{"stop-color":"#FCFCFD",offset:"0%"}}),t("stop",{attrs:{"stop-color":"#E9EBEF",offset:"100%"}})],1),t("rect",{attrs:{id:"path-3-"+n.id,x:"0",y:"0",width:"17",height:"36"}})],1),t("g",{attrs:{id:"Illustrations",stroke:"none","stroke-width":"1",fill:"none","fill-rule":"evenodd"}},[t("g",{attrs:{id:"B-type",transform:"translate(-1268.000000, -535.000000)"}},[t("g",{attrs:{id:"Group-2",transform:"translate(1268.000000, 535.000000)"}},[t("path",{attrs:{id:"Oval-Copy-2",d:"M39.5,86 C61.3152476,86 79,83.9106622 79,81.3333333 C79,78.7560045 57.3152476,78 35.5,78 C13.6847524,78 0,78.7560045 0,81.3333333 C0,83.9106622 17.6847524,86 39.5,86 Z",fill:"#F7F8FC"}}),t("polygon",{attrs:{id:"Rectangle-Copy-14",fill:"#E5E7E9",transform:"translate(27.500000, 51.500000) scale(1, -1) translate(-27.500000, -51.500000) ",points:"13 58 53 58 42 45 2 45"}}),t("g",{attrs:{id:"Group-Copy",transform:"translate(34.500000, 31.500000) scale(-1, 1) rotate(-25.000000) translate(-34.500000, -31.500000) translate(7.000000, 10.000000)"}},[t("polygon",{attrs:{id:"Rectangle-Copy-10",fill:"#E5E7E9",transform:"translate(11.500000, 5.000000) scale(1, -1) translate(-11.500000, -5.000000) ",points:"2.84078316e-14 3 18 3 23 7 5 7"}}),t("polygon",{attrs:{id:"Rectangle-Copy-11",fill:"#EDEEF2",points:"-3.69149156e-15 7 38 7 38 43 -3.69149156e-15 43"}}),t("rect",{attrs:{id:"Rectangle-Copy-12",fill:"url(#linearGradient-1-"+n.id+")",transform:"translate(46.500000, 25.000000) scale(-1, 1) translate(-46.500000, -25.000000) ",x:"38",y:"7",width:"17",height:"36"}}),t("polygon",{attrs:{id:"Rectangle-Copy-13",fill:"#F8F9FB",transform:"translate(39.500000, 3.500000) scale(-1, 1) translate(-39.500000, -3.500000) ",points:"24 7 41 7 55 -3.63806207e-12 38 -3.63806207e-12"}})]),t("rect",{attrs:{id:"Rectangle-Copy-15",fill:"url(#linearGradient-2-"+n.id+")",x:"13",y:"45",width:"40",height:"36"}}),t("g",{attrs:{id:"Rectangle-Copy-17",transform:"translate(53.000000, 45.000000)"}},[t("mask",{attrs:{id:"mask-4-"+n.id,fill:"white"}},[t("use",{attrs:{"xlink:href":"#path-3-"+n.id}})]),t("use",{attrs:{id:"Mask",fill:"#E0E3E9",transform:"translate(8.500000, 18.000000) scale(-1, 1) translate(-8.500000, -18.000000) ","xlink:href":"#path-3-"+n.id}}),t("polygon",{attrs:{id:"Rectangle-Copy",fill:"#D5D7DE",mask:"url(#mask-4-"+n.id+")",transform:"translate(12.000000, 9.000000) scale(-1, 1) translate(-12.000000, -9.000000) ",points:"7 0 24 0 20 18 -1.70530257e-13 16"}})]),t("polygon",{attrs:{id:"Rectangle-Copy-18",fill:"#F8F9FB",transform:"translate(66.000000, 51.500000) scale(-1, 1) translate(-66.000000, -51.500000) ",points:"62 45 79 45 70 58 53 58"}})])])])])};qu._withStripped=!0;var Bu=0,Fu=a({name:"ImgEmpty",data:function(){return{id:++Bu}}},qu,[],!1,null,null,null);Fu.options.__file="packages/empty/src/img-empty.vue";var Vu,Gu=Fu.exports,Hu=a({name:"ElEmpty",components:(Vu={},Vu[Gu.name]=Gu,Vu),props:{image:{type:String,default:""},imageSize:Number,description:{type:String,default:""}},computed:{emptyDescription:function(){return this.description||Object($a.t)("el.empty.description")},imageStyle:function(){return{width:this.imageSize?this.imageSize+"px":""}}}},Nu,[],!1,null,null,null);Hu.options.__file="packages/empty/src/index.vue";var Wu=Hu.exports;Wu.install=function(n){n.component(Wu.name,Wu)};var Qu,Ku=Wu,Yu=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},Xu={name:"ElDescriptionsRow",props:{row:{type:Array}},inject:["elDescriptions"],render:function(n){var e=this.elDescriptions,t=(this.row||[]).map((function(n){return Yu({},n,{label:n.slots.label||n.props.label},["labelClassName","contentClassName","labelStyle","contentStyle"].reduce((function(t,i){return t[i]=n.props[i]||e[i],t}),{}))}));return"vertical"===e.direction?n("tbody",[n("tr",{class:"el-descriptions-row"},[t.map((function(t){var i;return n("th",{class:(i={"el-descriptions-item__cell":!0,"el-descriptions-item__label":!0,"has-colon":!e.border&&e.colon,"is-bordered-label":e.border},i[t.labelClassName]=!0,i),style:t.labelStyle,attrs:{colSpan:t.props.span}},[t.label])}))]),n("tr",{class:"el-descriptions-row"},[t.map((function(e){return n("td",{class:["el-descriptions-item__cell","el-descriptions-item__content",e.contentClassName],style:e.contentStyle,attrs:{colSpan:e.props.span}},[e.slots.default])}))])]):e.border?n("tbody",[n("tr",{class:"el-descriptions-row"},[t.map((function(t){var i;return[n("th",{class:(i={"el-descriptions-item__cell":!0,"el-descriptions-item__label":!0,"is-bordered-label":e.border},i[t.labelClassName]=!0,i),style:t.labelStyle,attrs:{colSpan:"1"}},[t.label]),n("td",{class:["el-descriptions-item__cell","el-descriptions-item__content",t.contentClassName],style:t.contentStyle,attrs:{colSpan:2*t.props.span-1}},[t.slots.default])]}))])]):n("tbody",[n("tr",{class:"el-descriptions-row"},[t.map((function(t){var i;return n("td",{class:"el-descriptions-item el-descriptions-item__cell",attrs:{colSpan:t.props.span}},[n("div",{class:"el-descriptions-item__container"},[n("span",{class:(i={"el-descriptions-item__label":!0,"has-colon":e.colon},i[t.labelClassName]=!0,i),style:t.labelStyle},[t.label]),n("span",{class:["el-descriptions-item__content",t.contentClassName],style:t.contentStyle},[t.slots.default])])])}))])])}},Ju=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},Zu={name:"ElDescriptions",components:(Qu={},Qu[Xu.name]=Xu,Qu),props:{border:{type:Boolean,default:!1},column:{type:Number,default:3},direction:{type:String,default:"horizontal"},size:{type:String},title:{type:String,default:""},extra:{type:String,default:""},labelStyle:{type:Object},contentStyle:{type:Object},labelClassName:{type:String,default:""},contentClassName:{type:String,default:""},colon:{type:Boolean,default:!0}},computed:{descriptionsSize:function(){return this.size||(this.$ELEMENT||{}).size}},provide:function(){return{elDescriptions:this}},methods:{getOptionProps:function(n){if(n.componentOptions){var e=n.componentOptions,t=e.propsData,i=void 0===t?{}:t,a=e.Ctor,r=((void 0===a?{}:a).options||{}).props||{},o={};for(var s in r){var l=r[s].default;void 0!==l&&(o[s]=Object(ws.isFunction)(l)?l.call(n):l)}return Ju({},o,i)}return{}},getSlots:function(n){var e=this,t=n.componentOptions||{},i=n.children||t.children||[],a={};return i.forEach((function(n){if(!e.isEmptyElement(n)){var t=n.data&&n.data.slot||"default";a[t]=a[t]||[],"template"===n.tag?a[t].push(n.children):a[t].push(n)}})),Ju({},a)},isEmptyElement:function(n){return!(n.tag||n.text&&""!==n.text.trim())},filledNode:function(n,e,t){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return n.props||(n.props={}),e>t&&(n.props.span=t),i&&(n.props.span=t),n},getRows:function(){var n=this,e=(this.$slots.default||[]).filter((function(n){return n.tag&&n.componentOptions&&"ElDescriptionsItem"===n.componentOptions.Ctor.options.name})),t=e.map((function(e){return{props:n.getOptionProps(e),slots:n.getSlots(e),vnode:e}})),i=[],a=[],r=this.column;return t.forEach((function(t,o){var s=t.props.span||1;if(o===e.length-1)return a.push(n.filledNode(t,s,r,!0)),void i.push(a);s<r?(r-=s,a.push(t)):(a.push(n.filledNode(t,s,r)),i.push(a),r=n.column,a=[])})),i}},render:function(){var n=arguments[0],e=this.title,t=this.extra,i=this.border,a=this.descriptionsSize,r=this.$slots,o=this.getRows();return n("div",{class:"el-descriptions"},[e||t||r.title||r.extra?n("div",{class:"el-descriptions__header"},[n("div",{class:"el-descriptions__title"},[r.title?r.title:e]),n("div",{class:"el-descriptions__extra"},[r.extra?r.extra:t])]):null,n("div",{class:"el-descriptions__body"},[n("table",{class:["el-descriptions__table",{"is-bordered":i},a?"el-descriptions--"+a:""]},[o.map((function(e){return n(Xu,{attrs:{row:e}})}))])])])},install:function(n){n.component(Zu.name,Zu)}},np=Zu,ep={name:"ElDescriptionsItem",props:{label:{type:String,default:""},span:{type:Number,default:1},contentClassName:{type:String,default:""},contentStyle:{type:Object},labelClassName:{type:String,default:""},labelStyle:{type:Object}},render:function(){return null},install:function(n){n.component(ep.name,ep)}},tp=ep,ip=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-result"},[t("div",{staticClass:"el-result__icon"},[n._t("icon",[t(n.iconElement,{tag:"component",class:n.iconElement})])],2),n.title||n.$slots.title?t("div",{staticClass:"el-result__title"},[n._t("title",[t("p",[n._v(n._s(n.title))])])],2):n._e(),n.subTitle||n.$slots.subTitle?t("div",{staticClass:"el-result__subtitle"},[n._t("subTitle",[t("p",[n._v(n._s(n.subTitle))])])],2):n._e(),n.$slots.extra?t("div",{staticClass:"el-result__extra"},[n._t("extra")],2):n._e()])};ip._withStripped=!0;var ap=function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{attrs:{viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M34.5548098,16.4485711 C33.9612228,15.8504763 32.9988282,15.8504763 32.4052412,16.4485711 L32.4052412,16.4485711 L21.413757,27.5805811 L21.413757,27.5805811 L21.4034642,27.590855 C21.0097542,27.9781674 20.3766105,27.9729811 19.9892981,27.5792711 L19.9892981,27.5792711 L15.5947588,23.1121428 C15.0011718,22.514048 14.0387772,22.514048 13.4451902,23.1121428 C12.8516033,23.7102376 12.8516033,24.6799409 13.4451902,25.2780357 L13.4451902,25.2780357 L19.6260786,31.5514289 C20.2196656,32.1495237 21.1820602,32.1495237 21.7756472,31.5514289 L21.7756472,31.5514289 L34.5548098,18.614464 C35.1483967,18.0163692 35.1483967,17.0466659 34.5548098,16.4485711 Z"}})])};ap._withStripped=!0;var rp=a({name:"IconSuccess"},ap,[],!1,null,null,null);rp.options.__file="packages/result/src/icon-success.vue";var op=rp.exports,sp=function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{attrs:{viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M32.57818,15.42182 C32.0157534,14.8593933 31.1038797,14.8593933 30.541453,15.42182 L30.541453,15.42182 L24.0006789,21.9625941 L17.458547,15.42182 C16.8961203,14.8593933 15.9842466,14.8593933 15.42182,15.42182 C14.8593933,15.9842466 14.8593933,16.8961203 15.42182,17.458547 L15.42182,17.458547 L21.9639519,23.9993211 L15.42182,30.541453 C14.8593933,31.1038797 14.8593933,32.0157534 15.42182,32.57818 C15.9842466,33.1406067 16.8961203,33.1406067 17.458547,32.57818 L17.458547,32.57818 L24.0006789,26.0360481 L30.541453,32.57818 C31.1038797,33.1406067 32.0157534,33.1406067 32.57818,32.57818 C33.1406067,32.0157534 33.1406067,31.1038797 32.57818,30.541453 L32.57818,30.541453 L26.0374059,23.9993211 L32.57818,17.458547 C33.1406067,16.8961203 33.1406067,15.9842466 32.57818,15.42182 Z"}})])};sp._withStripped=!0;var lp=a({name:"IconError"},sp,[],!1,null,null,null);lp.options.__file="packages/result/src/icon-error.vue";var dp=lp.exports,cp=function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{attrs:{viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M24,31 C22.8954305,31 22,31.8954305 22,33 C22,34.1045695 22.8954305,35 24,35 C25.1045695,35 26,34.1045695 26,33 C26,31.8954305 25.1045695,31 24,31 Z M24,14 C23.1715729,14 22.5,14.6715729 22.5,15.5 L22.5,15.5 L22.5,27.5 C22.5,28.3284271 23.1715729,29 24,29 C24.8284271,29 25.5,28.3284271 25.5,27.5 L25.5,27.5 L25.5,15.5 C25.5,14.6715729 24.8284271,14 24,14 Z"}})])};cp._withStripped=!0;var up=a({name:"IconWarning"},cp,[],!1,null,null,null);up.options.__file="packages/result/src/icon-warning.vue";var pp=up.exports,hp=function(){var n=this.$createElement,e=this._self._c||n;return e("svg",{attrs:{viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M24,19 L21,19 C20.1715729,19 19.5,19.6715729 19.5,20.5 C19.5,21.3284271 20.1715729,22 21,22 L21,22 L22.5,22 L22.5,31 L21,31 C20.1715729,31 19.5,31.6715729 19.5,32.5 C19.5,33.3284271 20.1715729,34 21,34 L21,34 L27,34 C27.8284271,34 28.5,33.3284271 28.5,32.5 C28.5,31.6715729 27.8284271,31 27,31 L27,31 L25.5,31 L25.5,20.5 C25.5,19.6715729 24.8284271,19 24,19 L24,19 Z M24,13 C22.8954305,13 22,13.8954305 22,15 C22,16.1045695 22.8954305,17 24,17 C25.1045695,17 26,16.1045695 26,15 C26,13.8954305 25.1045695,13 24,13 Z"}})])};hp._withStripped=!0;var mp=a({name:"IconInfo"},hp,[],!1,null,null,null);mp.options.__file="packages/result/src/icon-info.vue";var gp,fp=mp.exports,vp={success:"icon-success",warning:"icon-warning",error:"icon-error",info:"icon-info"},bp=a({name:"ElResult",components:(gp={},gp[op.name]=op,gp[dp.name]=dp,gp[pp.name]=pp,gp[fp.name]=fp,gp),props:{title:{type:String,default:""},subTitle:{type:String,default:""},icon:{type:String,default:"info"}},computed:{iconElement:function(){var n=this.icon;return n&&vp[n]?vp[n]:"icon-info"}}},ip,[],!1,null,null,null);bp.options.__file="packages/result/src/index.vue";var _p=bp.exports;_p.install=function(n){n.component(_p.name,_p)};var yp=_p,xp=[v,D,V,X,en,on,bn,In,An,zn,Wn,Jn,te,se,ue,ge,_e,Te,De,Fe,Ve,Qe,Je,tt,oi,hi,ca,ba,Da,Pa,za,rr,dr,hr,xr,Mr,jr,$r,eo,oo,Do,Go,Wo,Yo,us,gs,_s,zs,Us,Fs,Ws,Xs,il,ll,pl,fl,yl,Ol,ld,gd,_d,Td,Dd,Ad,zd,Ld,Bd,Hd,Yd,hc,Tc,Ec,qc,cu,hu,vu,ku,Du,Au,Uu,Ku,np,tp,yp,yn.a],kp=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};La.a.use(e.locale),La.a.i18n(e.i18n),xp.forEach((function(e){n.component(e.name,e)})),n.use($c),n.use(qo.directive),n.prototype.$ELEMENT={size:e.size||"",zIndex:e.zIndex||2e3},n.prototype.$loading=qo.service,n.prototype.$msgbox=er,n.prototype.$alert=er.alert,n.prototype.$confirm=er.confirm,n.prototype.$prompt=er.prompt,n.prototype.$notify=vo,n.prototype.$message=As};"undefined"!=typeof window&&window.Vue&&kp(window.Vue);e.default={version:"2.15.14",locale:La.a.use,i18n:La.a.i18n,install:kp,CollapseTransition:yn.a,Loading:qo,Pagination:v,Dialog:D,Autocomplete:V,Dropdown:X,DropdownMenu:en,DropdownItem:on,Menu:bn,Submenu:In,MenuItem:An,MenuItemGroup:zn,Input:Wn,InputNumber:Jn,Radio:te,RadioGroup:se,RadioButton:ue,Checkbox:ge,CheckboxButton:_e,CheckboxGroup:Te,Switch:De,Select:Fe,Option:Ve,OptionGroup:Qe,Button:Je,ButtonGroup:tt,Table:oi,TableColumn:hi,DatePicker:ca,TimeSelect:ba,TimePicker:Da,Popover:Pa,Tooltip:za,MessageBox:er,Breadcrumb:rr,BreadcrumbItem:dr,Form:hr,FormItem:xr,Tabs:Mr,TabPane:jr,Tag:$r,Tree:eo,Alert:oo,Notification:vo,Slider:Do,Icon:Go,Row:Wo,Col:Yo,Upload:us,Progress:gs,Spinner:_s,Message:As,Badge:zs,Card:Us,Rate:Fs,Steps:Ws,Step:Xs,Carousel:il,Scrollbar:ll,CarouselItem:pl,Collapse:fl,CollapseItem:yl,Cascader:Ol,ColorPicker:ld,Transfer:gd,Container:_d,Header:Td,Aside:Dd,Main:Ad,Footer:zd,Timeline:Ld,TimelineItem:Bd,Link:Hd,Divider:Yd,Image:hc,Calendar:Tc,Backtop:Ec,InfiniteScroll:$c,PageHeader:qc,CascaderPanel:cu,Avatar:hu,Drawer:vu,Statistic:ku,Popconfirm:Du,Skeleton:Au,SkeletonItem:Uu,Empty:Ku,Descriptions:np,DescriptionsItem:tp,Result:yp}}]).default},function(n,e){var t=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,r=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,d=s||l||Function("return this")(),c=Object.prototype.toString,u=Math.max,p=Math.min,h=function(){return d.Date.now()};function m(n,e,t){var i,a,r,o,s,l,d=0,c=!1,m=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=i,r=a;return i=a=void 0,d=e,o=n.apply(r,t)}function _(n){return d=n,s=setTimeout(x,e),c?b(n):o}function y(n){var t=n-l;return void 0===l||t>=e||t<0||m&&n-d>=r}function x(){var n=h();if(y(n))return k(n);s=setTimeout(x,function(n){var t=e-(n-l);return m?p(t,r-(n-d)):t}(n))}function k(n){return s=void 0,v&&i?b(n):(i=a=void 0,o)}function T(){var n=h(),t=y(n);if(i=arguments,a=this,l=n,t){if(void 0===s)return _(l);if(m)return s=setTimeout(x,e),b(l)}return void 0===s&&(s=setTimeout(x,e)),o}return e=f(e)||0,g(t)&&(c=!!t.leading,r=(m="maxWait"in t)?u(f(t.maxWait)||0,e):r,v="trailing"in t?!!t.trailing:v),T.cancel=function(){void 0!==s&&clearTimeout(s),d=0,i=l=a=s=void 0},T.flush=function(){return void 0===s?o:k(h())},T}function g(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function f(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==c.call(n)}(n))return NaN;if(g(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=g(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=a.test(n);return s||r.test(n)?o(n.slice(2),s?2:8):i.test(n)?NaN:+n}n.exports=function(n,e,t){var i=!0,a=!0;if("function"!=typeof n)throw new TypeError("Expected a function");return g(t)&&(i="leading"in t?!!t.leading:i,a="trailing"in t?!!t.trailing:a),m(n,e,{leading:i,maxWait:e,trailing:a})}},function(n,e,t){"use strict";var i=t(16),a=t(36),r=t(37),o=t(223),s=t(225);i({target:"Array",proto:!0,arity:1,forced:t(6)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=a(this),t=r(e),i=arguments.length;s(t+i);for(var l=0;l<i;l++)e[t]=arguments[l],t++;return o(e,t),t}})},function(n,e,t){"use strict";var i=t(119),a=String;n.exports=function(n){if("Symbol"===i(n))throw new TypeError("Cannot convert a Symbol value to a string");return a(n)}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){"use strict";var i=t(108),a=t(22);n.exports=function(n,e,t){return t.get&&i(t.get,e,{getter:!0}),t.set&&i(t.set,e,{setter:!0}),a.f(n,e,t)}},function(n,e,t){"use strict";var i=t(205),a=t(13),r=t(38),o=i(i.bind);n.exports=function(n,e){return a(n),void 0===e?n:r?o(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){n.exports=t(412)},function(n,e,t){"use strict";var i={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,r=a&&!i.call({1:2},1);e.f=r?function(n){var e=a(this,n);return!!e&&e.enumerable}:i},function(n,e,t){"use strict";var i=t(18),a=t(14),r=t(98),o=t(43),s=t(179),l=t(21),d=TypeError,c=l("toPrimitive");n.exports=function(n,e){if(!a(n)||r(n))return n;var t,l=o(n,c);if(l){if(void 0===e&&(e="default"),t=i(l,n,e),!a(t)||r(t))return t;throw new d("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){"use strict";var i=t(18),a=t(3),r=t(14),o=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&a(t=n.toString)&&!r(s=i(t,n)))return s;if(a(t=n.valueOf)&&!r(s=i(t,n)))return s;if("string"!==e&&a(t=n.toString)&&!r(s=i(t,n)))return s;throw new o("Can't convert object to primitive value")}},function(n,e,t){"use strict";var i=t(9),a=t(15),r=Function.prototype,o=i&&Object.getOwnPropertyDescriptor,s=a(r,"name"),l=s&&"something"===function(){}.name,d=s&&(!i||i&&o(r,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:d}},function(n,e,t){"use strict";var i=t(8),a=t(3),r=t(65),o=i(Function.toString);a(r.inspectSource)||(r.inspectSource=function(n){return o(n)}),n.exports=r.inspectSource},function(n,e,t){"use strict";var i=t(5),a=t(3),r=i.WeakMap;n.exports=a(r)&&/native code/.test(String(r))},function(n,e,t){"use strict";var i=t(41),a=t(8),r=t(184),o=t(189),s=t(4),l=a([].concat);n.exports=i("Reflect","ownKeys")||function(n){var e=r.f(s(n)),t=o.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var i=t(111),a=t(69).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return i(n,a)}},function(n,e,t){"use strict";var i=t(40),a=t(186),r=t(37),o=function(n){return function(e,t,o){var s=i(e),l=r(s);if(0===l)return!n&&-1;var d,c=a(o,l);if(n&&t!=t){for(;l>c;)if((d=s[c++])!=d)return!0}else for(;l>c;c++)if((n||c in s)&&s[c]===t)return n||c||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e,t){"use strict";var i=t(112),a=Math.max,r=Math.min;n.exports=function(n,e){var t=i(n);return t<0?a(t+e,0):r(t,e)}},function(n,e,t){"use strict";var i=Math.ceil,a=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?a:i)(e)}},function(n,e,t){"use strict";var i=t(112),a=Math.min;n.exports=function(n){var e=i(n);return e>0?a(e,9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var i=t(6),a=t(3),r=/#|\.prototype\./,o=function(n,e){var t=l[s(n)];return t===c||t!==d&&(a(e)?i(e):!!e)},s=o.normalize=function(n){return String(n).replace(r,".").toLowerCase()},l=o.data={},d=o.NATIVE="N",c=o.POLYFILL="P";n.exports=o},function(n,e,t){"use strict";var i=t(42),a=TypeError;n.exports=function(n,e){if(i(e,n))return n;throw new a("Incorrect invocation")}},function(n,e,t){"use strict";var i=t(6);n.exports=!i((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){"use strict";var i=t(9),a=t(22),r=t(39);n.exports=function(n,e,t){i?a.f(n,e,r(0,t)):n[e]=t}},function(n,e,t){"use strict";var i=t(9),a=t(107),r=t(22),o=t(4),s=t(40),l=t(195);e.f=i&&!a?Object.defineProperties:function(n,e){o(n);for(var t,i=s(e),a=l(e),d=a.length,c=0;d>c;)r.f(n,t=a[c++],i[t]);return n}},function(n,e,t){"use strict";var i=t(111),a=t(69);n.exports=Object.keys||function(n){return i(n,a)}},function(n,e,t){"use strict";var i=t(41);n.exports=i("document","documentElement")},function(n,e,t){"use strict";var i=t(60);n.exports=function(n,e,t){for(var a in e)i(n,a,e[a],t);return n}},function(n,e,t){"use strict";n.exports=function(n,e){return{value:n,done:e}}},function(n,e,t){"use strict";var i=t(18),a=t(13),r=t(4),o=t(31),s=t(115),l=t(116),d=s((function(){var n=this.iterator,e=r(i(this.next,n));if(!(this.done=!!e.done))return l(n,this.mapper,[e.value,this.counter++],!0)}));n.exports=function(n){return r(this),a(n),new d(o(this),{mapper:n})}},function(n,e,t){"use strict";var i=t(16),a=t(201).left,r=t(202),o=t(101);i({target:"Array",proto:!0,forced:!t(203)&&o>79&&o<83||!r("reduce")},{reduce:function(n){var e=arguments.length;return a(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var i=t(13),a=t(36),r=t(94),o=t(37),s=TypeError,l="Reduce of empty array with no initial value",d=function(n){return function(e,t,d,c){var u=a(e),p=r(u),h=o(u);if(i(t),0===h&&d<2)throw new s(l);var m=n?h-1:0,g=n?-1:1;if(d<2)for(;;){if(m in p){c=p[m],m+=g;break}if(m+=g,n?m<0:h<=m)throw new s(l)}for(;n?m>=0:h>m;m+=g)m in p&&(c=t(c,p[m],m,u));return c}};n.exports={left:d(!1),right:d(!0)}},function(n,e,t){"use strict";var i=t(6);n.exports=function(n,e){var t=[][n];return!!t&&i((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var i=t(204);n.exports="NODE"===i},function(n,e,t){"use strict";var i=t(5),a=t(102),r=t(33),o=function(n){return a.slice(0,n.length)===n};n.exports=o("Bun/")?"BUN":o("Cloudflare-Workers")?"CLOUDFLARE":o("Deno/")?"DENO":o("Node.js/")?"NODE":i.Bun&&"string"==typeof Bun.version?"BUN":i.Deno&&"object"==typeof Deno.version?"DENO":"process"===r(i.process)?"NODE":i.window&&i.document?"BROWSER":"REST"},function(n,e,t){"use strict";var i=t(33),a=t(8);n.exports=function(n){if("Function"===i(n))return a(n)}},function(n,e,t){"use strict";var i=t(21),a=t(117),r=i("iterator"),o=Array.prototype;n.exports=function(n){return void 0!==n&&(a.Array===n||o[r]===n)}},function(n,e,t){"use strict";var i=t(18),a=t(13),r=t(4),o=t(64),s=t(118),l=TypeError;n.exports=function(n,e){var t=arguments.length<2?s(n):e;if(a(t))return r(i(t,n));throw new l(o(n)+" is not iterable")}},function(n,e,t){"use strict";var i={};i[t(21)("toStringTag")]="z",n.exports="[object z]"===String(i)},function(n,e,t){"use strict";var i=t(16),a=t(59),r=t(13),o=t(4),s=t(31),l=TypeError;i({target:"Iterator",proto:!0,real:!0},{reduce:function(n){o(this),r(n);var e=s(this),t=arguments.length<2,i=t?void 0:arguments[1],d=0;if(a(e,(function(e){t?(t=!1,i=e):i=n(i,e,d),d++}),{IS_RECORD:!0}),t)throw new l("Reduce of empty iterator with no initial value");return i}})},function(n,e,t){"use strict";var i=t(16),a=t(5),r=t(211),o=t(212),s=a.WebAssembly,l=7!==new Error("e",{cause:7}).cause,d=function(n,e){var t={};t[n]=o(n,e,l),i({global:!0,constructor:!0,arity:1,forced:l},t)},c=function(n,e){if(s&&s[n]){var t={};t[n]=o("WebAssembly."+n,e,l),i({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};d("Error",(function(n){return function(e){return r(n,this,arguments)}})),d("EvalError",(function(n){return function(e){return r(n,this,arguments)}})),d("RangeError",(function(n){return function(e){return r(n,this,arguments)}})),d("ReferenceError",(function(n){return function(e){return r(n,this,arguments)}})),d("SyntaxError",(function(n){return function(e){return r(n,this,arguments)}})),d("TypeError",(function(n){return function(e){return r(n,this,arguments)}})),d("URIError",(function(n){return function(e){return r(n,this,arguments)}})),c("CompileError",(function(n){return function(e){return r(n,this,arguments)}})),c("LinkError",(function(n){return function(e){return r(n,this,arguments)}})),c("RuntimeError",(function(n){return function(e){return r(n,this,arguments)}}))},function(n,e,t){"use strict";var i=t(38),a=Function.prototype,r=a.apply,o=a.call;n.exports="object"==typeof Reflect&&Reflect.apply||(i?o.bind(r):function(){return o.apply(r,arguments)})},function(n,e,t){"use strict";var i=t(41),a=t(15),r=t(28),o=t(42),s=t(120),l=t(110),d=t(216),c=t(217),u=t(218),p=t(219),h=t(220),m=t(9),g=t(27);n.exports=function(n,e,t,f){var v=f?2:1,b=n.split("."),_=b[b.length-1],y=i.apply(null,b);if(y){var x=y.prototype;if(!g&&a(x,"cause")&&delete x.cause,!t)return y;var k=i("Error"),T=e((function(n,e){var t=u(f?e:n,void 0),i=f?new y(n):new y;return void 0!==t&&r(i,"message",t),h(i,T,i.stack,2),this&&o(x,this)&&c(i,this,T),arguments.length>v&&p(i,arguments[v]),i}));if(T.prototype=x,"Error"!==_?s?s(T,k):l(T,k,{name:!0}):m&&"stackTraceLimit"in y&&(d(T,y,"stackTraceLimit"),d(T,y,"prepareStackTrace")),l(T,y),!g)try{x.name!==_&&r(x,"name",_),x.constructor=T}catch(n){}return T}}},function(n,e,t){"use strict";var i=t(8),a=t(13);n.exports=function(n,e,t){try{return i(a(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var i=t(215),a=String,r=TypeError;n.exports=function(n){if(i(n))return n;throw new r("Can't set "+a(n)+" as a prototype")}},function(n,e,t){"use strict";var i=t(14);n.exports=function(n){return i(n)||null===n}},function(n,e,t){"use strict";var i=t(22).f;n.exports=function(n,e,t){t in n||i(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var i=t(3),a=t(14),r=t(120);n.exports=function(n,e,t){var o,s;return r&&i(o=e.constructor)&&o!==t&&a(s=o.prototype)&&s!==t.prototype&&r(n,s),n}},function(n,e,t){"use strict";var i=t(172);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:i(n)}},function(n,e,t){"use strict";var i=t(14),a=t(28);n.exports=function(n,e){i(e)&&"cause"in e&&a(n,"cause",e.cause)}},function(n,e,t){"use strict";var i=t(28),a=t(221),r=t(222),o=Error.captureStackTrace;n.exports=function(n,e,t,s){r&&(o?o(n,e):i(n,"stack",a(t,s)))}},function(n,e,t){"use strict";var i=t(8),a=Error,r=i("".replace),o=String(new a("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(o);n.exports=function(n,e){if(l&&"string"==typeof n&&!a.prepareStackTrace)for(;e--;)n=r(n,s,"");return n}},function(n,e,t){"use strict";var i=t(6),a=t(39);n.exports=!i((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",a(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var i=t(9),a=t(224),r=TypeError,o=Object.getOwnPropertyDescriptor,s=i&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=s?function(n,e){if(a(n)&&!o(n,"length").writable)throw new r("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var i=t(33);n.exports=Array.isArray||function(n){return"Array"===i(n)}},function(n,e,t){"use strict";var i=TypeError;n.exports=function(n){if(n>9007199254740991)throw i("Maximum allowed index exceeded");return n}},function(n,e,t){var i=t(121),a=t(227);n.exports=function n(e,t,r,o,s){var l=-1,d=e.length;for(r||(r=a),s||(s=[]);++l<d;){var c=e[l];t>0&&r(c)?t>1?n(c,t-1,r,o,s):i(s,c):o||(s[s.length]=c)}return s}},function(n,e,t){var i=t(34),a=t(71),r=t(17),o=i?i.isConcatSpreadable:void 0;n.exports=function(n){return r(n)||a(n)||!!(o&&n&&n[o])}},function(n,e,t){var i=t(32),a=t(26);n.exports=function(n){return a(n)&&"[object Arguments]"==i(n)}},function(n,e,t){var i=t(34),a=Object.prototype,r=a.hasOwnProperty,o=a.toString,s=i?i.toStringTag:void 0;n.exports=function(n){var e=r.call(n,s),t=n[s];try{n[s]=void 0;var i=!0}catch(n){}var a=o.call(n);return i&&(e?n[s]=t:delete n[s]),a}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var i=t(232),a=t(288),r=t(79),o=t(17),s=t(299);n.exports=function(n){return"function"==typeof n?n:null==n?r:"object"==typeof n?o(n)?a(n[0],n[1]):i(n):s(n)}},function(n,e,t){var i=t(233),a=t(287),r=t(138);n.exports=function(n){var e=a(n);return 1==e.length&&e[0][2]?r(e[0][0],e[0][1]):function(t){return t===n||i(t,n,e)}}},function(n,e,t){var i=t(123),a=t(127);n.exports=function(n,e,t,r){var o=t.length,s=o,l=!r;if(null==n)return!s;for(n=Object(n);o--;){var d=t[o];if(l&&d[2]?d[1]!==n[d[0]]:!(d[0]in n))return!1}for(;++o<s;){var c=(d=t[o])[0],u=n[c],p=d[1];if(l&&d[2]){if(void 0===u&&!(c in n))return!1}else{var h=new i;if(r)var m=r(u,p,c,n,e,h);if(!(void 0===m?a(p,u,3,r,h):m))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var i=t(45),a=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=i(e,n);return!(t<0)&&(t==e.length-1?e.pop():a.call(e,t,1),--this.size,!0)}},function(n,e,t){var i=t(45);n.exports=function(n){var e=this.__data__,t=i(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var i=t(45);n.exports=function(n){return i(this.__data__,n)>-1}},function(n,e,t){var i=t(45);n.exports=function(n,e){var t=this.__data__,a=i(t,n);return a<0?(++this.size,t.push([n,e])):t[a][1]=e,this}},function(n,e,t){var i=t(44);n.exports=function(){this.__data__=new i,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var i=t(44),a=t(72),r=t(74);n.exports=function(n,e){var t=this.__data__;if(t instanceof i){var o=t.__data__;if(!a||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new r(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var i=t(125),a=t(245),r=t(73),o=t(126),s=/^\[object .+?Constructor\]$/,l=Function.prototype,d=Object.prototype,c=l.toString,u=d.hasOwnProperty,p=RegExp("^"+c.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!r(n)||a(n))&&(i(n)?p:s).test(o(n))}},function(n,e,t){var i,a=t(246),r=(i=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";n.exports=function(n){return!!r&&r in n}},function(n,e,t){var i=t(19)["__core-js_shared__"];n.exports=i},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var i=t(249),a=t(44),r=t(72);n.exports=function(){this.size=0,this.__data__={hash:new i,map:new(r||a),string:new i}}},function(n,e,t){var i=t(250),a=t(251),r=t(252),o=t(253),s=t(254);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=a,l.prototype.get=r,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var i=t(46);n.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var i=t(46),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(i){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return a.call(e,n)?e[n]:void 0}},function(n,e,t){var i=t(46),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return i?void 0!==e[n]:a.call(e,n)}},function(n,e,t){var i=t(46);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=i&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var i=t(47);n.exports=function(n){var e=i(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var i=t(47);n.exports=function(n){return i(this,n).get(n)}},function(n,e,t){var i=t(47);n.exports=function(n){return i(this,n).has(n)}},function(n,e,t){var i=t(47);n.exports=function(n,e){var t=i(this,n),a=t.size;return t.set(n,e),this.size+=t.size==a?0:1,this}},function(n,e,t){var i=t(123),a=t(128),r=t(264),o=t(267),s=t(283),l=t(17),d=t(132),c=t(134),u="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,h,m,g){var f=l(n),v=l(e),b=f?"[object Array]":s(n),_=v?"[object Array]":s(e),y=(b="[object Arguments]"==b?u:b)==u,x=(_="[object Arguments]"==_?u:_)==u,k=b==_;if(k&&d(n)){if(!d(e))return!1;f=!0,y=!1}if(k&&!y)return g||(g=new i),f||c(n)?a(n,e,t,h,m,g):r(n,e,b,t,h,m,g);if(!(1&t)){var T=y&&p.call(n,"__wrapped__"),w=x&&p.call(e,"__wrapped__");if(T||w){var I=T?n.value():n,C=w?e.value():e;return g||(g=new i),m(I,C,t,h,g)}}return!!k&&(g||(g=new i),o(n,e,t,h,m,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,i=null==n?0:n.length;++t<i;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var i=t(34),a=t(265),r=t(124),o=t(128),s=t(266),l=t(75),d=i?i.prototype:void 0,c=d?d.valueOf:void 0;n.exports=function(n,e,t,i,d,u,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new a(n),new a(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return r(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var h=s;case"[object Set]":var m=1&i;if(h||(h=l),n.size!=e.size&&!m)return!1;var g=p.get(n);if(g)return g==e;i|=2,p.set(n,e);var f=o(h(n),h(e),i,d,u,p);return p.delete(n),f;case"[object Symbol]":if(c)return c.call(n)==c.call(e)}return!1}},function(n,e,t){var i=t(19).Uint8Array;n.exports=i},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,i){t[++e]=[i,n]})),t}},function(n,e,t){var i=t(268),a=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,r,o,s){var l=1&t,d=i(n),c=d.length;if(c!=i(e).length&&!l)return!1;for(var u=c;u--;){var p=d[u];if(!(l?p in e:a.call(e,p)))return!1}var h=s.get(n),m=s.get(e);if(h&&m)return h==e&&m==n;var g=!0;s.set(n,e),s.set(e,n);for(var f=l;++u<c;){var v=n[p=d[u]],b=e[p];if(r)var _=l?r(b,v,p,e,n,s):r(v,b,p,n,e,s);if(!(void 0===_?v===b||o(v,b,t,r,s):_)){g=!1;break}f||(f="constructor"==p)}if(g&&!f){var y=n.constructor,x=e.constructor;y==x||!("constructor"in n)||!("constructor"in e)||"function"==typeof y&&y instanceof y&&"function"==typeof x&&x instanceof x||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var i=t(269),a=t(270),r=t(131);n.exports=function(n){return i(n,r,a)}},function(n,e,t){var i=t(121),a=t(17);n.exports=function(n,e,t){var r=e(n);return a(n)?r:i(r,t(n))}},function(n,e,t){var i=t(271),a=t(272),r=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(n){return null==n?[]:(n=Object(n),i(o(n),(function(e){return r.call(n,e)})))}:a;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,i=null==n?0:n.length,a=0,r=[];++t<i;){var o=n[t];e(o,t,n)&&(r[a++]=o)}return r}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var i=t(274),a=t(71),r=t(17),o=t(132),s=t(133),l=t(134),d=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=r(n),c=!t&&a(n),u=!t&&!c&&o(n),p=!t&&!c&&!u&&l(n),h=t||c||u||p,m=h?i(n.length,String):[],g=m.length;for(var f in n)!e&&!d.call(n,f)||h&&("length"==f||u&&("offset"==f||"parent"==f)||p&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||m.push(f);return m}},function(n,e){n.exports=function(n,e){for(var t=-1,i=Array(n);++t<n;)i[t]=e(t);return i}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var i=t(32),a=t(76),r=t(26),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return r(n)&&a(n.length)&&!!o[i(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var i=t(122),a=e&&!e.nodeType&&e,r=a&&"object"==typeof n&&n&&!n.nodeType&&n,o=r&&r.exports===a&&i.process,s=function(){try{var n=r&&r.require&&r.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=s}).call(this,t(61)(n))},function(n,e,t){var i=t(280),a=t(281),r=Object.prototype.hasOwnProperty;n.exports=function(n){if(!i(n))return a(n);var e=[];for(var t in Object(n))r.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var i=t(282)(Object.keys,Object);n.exports=i},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var i=t(284),a=t(72),r=t(285),o=t(136),s=t(286),l=t(32),d=t(126),c=d(i),u=d(a),p=d(r),h=d(o),m=d(s),g=l;(i&&"[object DataView]"!=g(new i(new ArrayBuffer(1)))||a&&"[object Map]"!=g(new a)||r&&"[object Promise]"!=g(r.resolve())||o&&"[object Set]"!=g(new o)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,i=t?d(t):"";if(i)switch(i){case c:return"[object DataView]";case u:return"[object Map]";case p:return"[object Promise]";case h:return"[object Set]";case m:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var i=t(23)(t(19),"DataView");n.exports=i},function(n,e,t){var i=t(23)(t(19),"Promise");n.exports=i},function(n,e,t){var i=t(23)(t(19),"WeakMap");n.exports=i},function(n,e,t){var i=t(137),a=t(131);n.exports=function(n){for(var e=a(n),t=e.length;t--;){var r=e[t],o=n[r];e[t]=[r,o,i(o)]}return e}},function(n,e,t){var i=t(127),a=t(289),r=t(296),o=t(77),s=t(137),l=t(138),d=t(48);n.exports=function(n,e){return o(n)&&s(e)?l(d(n),e):function(t){var o=a(t,n);return void 0===o&&o===e?r(t,n):i(e,o,3)}}},function(n,e,t){var i=t(139);n.exports=function(n,e,t){var a=null==n?void 0:i(n,e);return void 0===a?t:a}},function(n,e,t){var i=t(291),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,r=/\\(\\)?/g,o=i((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(a,(function(n,t,i,a){e.push(i?a.replace(r,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var i=t(292);n.exports=function(n){var e=i(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var i=t(74);function a(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var i=arguments,a=e?e.apply(this,i):i[0],r=t.cache;if(r.has(a))return r.get(a);var o=n.apply(this,i);return t.cache=r.set(a,o)||r,o};return t.cache=new(a.Cache||i),t}a.Cache=i,n.exports=a},function(n,e,t){var i=t(294);n.exports=function(n){return null==n?"":i(n)}},function(n,e,t){var i=t(34),a=t(295),r=t(17),o=t(78),s=i?i.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(r(e))return a(e,n)+"";if(o(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,i=null==n?0:n.length,a=Array(i);++t<i;)a[t]=e(n[t],t,n);return a}},function(n,e,t){var i=t(297),a=t(298);n.exports=function(n,e){return null!=n&&a(n,e,i)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var i=t(140),a=t(71),r=t(17),o=t(133),s=t(76),l=t(48);n.exports=function(n,e,t){for(var d=-1,c=(e=i(e,n)).length,u=!1;++d<c;){var p=l(e[d]);if(!(u=null!=n&&t(n,p)))break;n=n[p]}return u||++d!=c?u:!!(c=null==n?0:n.length)&&s(c)&&o(p,c)&&(r(n)||a(n))}},function(n,e,t){var i=t(300),a=t(301),r=t(77),o=t(48);n.exports=function(n){return r(n)?i(o(n)):a(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var i=t(139);n.exports=function(n){return function(e){return i(e,n)}}},function(n,e,t){var i=t(79),a=t(303),r=t(305);n.exports=function(n,e){return r(a(n,e,i),n+"")}},function(n,e,t){var i=t(304),a=Math.max;n.exports=function(n,e,t){return e=a(void 0===e?n.length-1:e,0),function(){for(var r=arguments,o=-1,s=a(r.length-e,0),l=Array(s);++o<s;)l[o]=r[e+o];o=-1;for(var d=Array(e+1);++o<e;)d[o]=r[o];return d[e]=t(l),i(n,this,d)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var i=t(306),a=t(309)(i);n.exports=a},function(n,e,t){var i=t(307),a=t(308),r=t(79),o=a?function(n,e){return a(n,"toString",{configurable:!0,enumerable:!1,value:i(e),writable:!0})}:r;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var i=t(23),a=function(){try{var n=i(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=a},function(n,e){var t=Date.now;n.exports=function(n){var e=0,i=0;return function(){var a=t(),r=16-(a-i);if(i=a,r>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var i=t(129),a=t(311),r=t(316),o=t(130),s=t(317),l=t(75);n.exports=function(n,e,t){var d=-1,c=a,u=n.length,p=!0,h=[],m=h;if(t)p=!1,c=r;else if(u>=200){var g=e?null:s(n);if(g)return l(g);p=!1,c=o,m=new i}else m=e?[]:h;n:for(;++d<u;){var f=n[d],v=e?e(f):f;if(f=t||0!==f?f:0,p&&v==v){for(var b=m.length;b--;)if(m[b]===v)continue n;e&&m.push(v),h.push(f)}else c(m,v,t)||(m!==h&&m.push(v),h.push(f))}return h}},function(n,e,t){var i=t(312);n.exports=function(n,e){return!!(null==n?0:n.length)&&i(n,e,0)>-1}},function(n,e,t){var i=t(313),a=t(314),r=t(315);n.exports=function(n,e,t){return e==e?r(n,e,t):i(n,a,t)}},function(n,e){n.exports=function(n,e,t,i){for(var a=n.length,r=t+(i?1:-1);i?r--:++r<a;)if(e(n[r],r,n))return r;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var i=t-1,a=n.length;++i<a;)if(n[i]===e)return i;return-1}},function(n,e){n.exports=function(n,e,t){for(var i=-1,a=null==n?0:n.length;++i<a;)if(t(e,n[i]))return!0;return!1}},function(n,e,t){var i=t(136),a=t(318),r=t(75),o=i&&1/r(new i([,-0]))[1]==1/0?function(n){return new i(n)}:a;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var i=t(135),a=t(26);n.exports=function(n){return a(n)&&i(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";e.__esModule=!0,e.validateRangeInOneMonth=e.extractTimeFormat=e.extractDateFormat=e.nextYear=e.prevYear=e.nextMonth=e.prevMonth=e.changeYearMonthAndClampDate=e.timeWithinRange=e.limitTimeRange=e.clearMilliseconds=e.clearTime=e.modifyWithTimeString=e.modifyTime=e.modifyDate=e.range=e.getRangeMinutes=e.getMonthDays=e.getPrevMonthLastDays=e.getRangeHours=e.getWeekNumber=e.getStartDateOfMonth=e.nextDate=e.prevDate=e.getFirstDayOfMonth=e.getDayCountOfYear=e.getDayCountOfMonth=e.parseDate=e.formatDate=e.isDateObject=e.isDate=e.toDate=e.getI18nSettings=void 0;var i,a=t(141),r=(i=a)&&i.__esModule?i:{default:i},o=t(80);var s=["sun","mon","tue","wed","thu","fri","sat"],l=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],d=e.getI18nSettings=function(){return{dayNamesShort:s.map((function(n){return(0,o.t)("el.datepicker.weeks."+n)})),dayNames:s.map((function(n){return(0,o.t)("el.datepicker.weeks."+n)})),monthNamesShort:l.map((function(n){return(0,o.t)("el.datepicker.months."+n)})),monthNames:l.map((function(n,e){return(0,o.t)("el.datepicker.month"+(e+1))})),amPm:["am","pm"]}},c=e.toDate=function(n){return u(n)?new Date(n):null},u=e.isDate=function(n){return null!=n&&(!isNaN(new Date(n).getTime())&&!Array.isArray(n))},p=(e.isDateObject=function(n){return n instanceof Date},e.formatDate=function(n,e){return(n=c(n))?r.default.format(n,e||"yyyy-MM-dd",d()):""},e.parseDate=function(n,e){return r.default.parse(n,e||"yyyy-MM-dd",d())}),h=e.getDayCountOfMonth=function(n,e){return isNaN(+e)?31:new Date(n,+e+1,0).getDate()},m=(e.getDayCountOfYear=function(n){return n%400==0||n%100!=0&&n%4==0?366:365},e.getFirstDayOfMonth=function(n){var e=new Date(n.getTime());return e.setDate(1),e.getDay()},e.prevDate=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new Date(n.getFullYear(),n.getMonth(),n.getDate()-e)});e.nextDate=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new Date(n.getFullYear(),n.getMonth(),n.getDate()+e)},e.getStartDateOfMonth=function(n,e){var t=new Date(n,e,1),i=t.getDay();return m(t,0===i?7:i)},e.getWeekNumber=function(n){if(!u(n))return null;var e=new Date(n.getTime());e.setHours(0,0,0,0),e.setDate(e.getDate()+3-(e.getDay()+6)%7);var t=new Date(e.getFullYear(),0,4);return 1+Math.round(((e.getTime()-t.getTime())/864e5-3+(t.getDay()+6)%7)/7)},e.getRangeHours=function(n){var e=[],t=[];if((n||[]).forEach((function(n){var e=n.map((function(n){return n.getHours()}));t=t.concat(function(n,e){for(var t=[],i=n;i<=e;i++)t.push(i);return t}(e[0],e[1]))})),t.length)for(var i=0;i<24;i++)e[i]=-1===t.indexOf(i);else for(var a=0;a<24;a++)e[a]=!1;return e},e.getPrevMonthLastDays=function(n,e){if(e<=0)return[];var t=new Date(n.getTime());t.setDate(0);var i=t.getDate();return f(e).map((function(n,t){return i-(e-t-1)}))},e.getMonthDays=function(n){var e=new Date(n.getFullYear(),n.getMonth()+1,0).getDate();return f(e).map((function(n,e){return e+1}))};function g(n,e,t,i){for(var a=e;a<t;a++)n[a]=i}e.getRangeMinutes=function(n,e){var t=new Array(60);return n.length>0?n.forEach((function(n){var i=n[0],a=n[1],r=i.getHours(),o=i.getMinutes(),s=a.getHours(),l=a.getMinutes();r===e&&s!==e?g(t,o,60,!0):r===e&&s===e?g(t,o,l+1,!0):r!==e&&s===e?g(t,0,l+1,!0):r<e&&s>e&&g(t,0,60,!0)})):g(t,0,60,!0),t};var f=e.range=function(n){return Array.apply(null,{length:n}).map((function(n,e){return e}))},v=e.modifyDate=function(n,e,t,i){return new Date(e,t,i,n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds())},b=e.modifyTime=function(n,e,t,i){return new Date(n.getFullYear(),n.getMonth(),n.getDate(),e,t,i,n.getMilliseconds())},_=(e.modifyWithTimeString=function(n,e){return null!=n&&e?(e=p(e,"HH:mm:ss"),b(n,e.getHours(),e.getMinutes(),e.getSeconds())):n},e.clearTime=function(n){return new Date(n.getFullYear(),n.getMonth(),n.getDate())},e.clearMilliseconds=function(n){return new Date(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),0)},e.limitTimeRange=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"HH:mm:ss";if(0===e.length)return n;var i=function(n){return r.default.parse(r.default.format(n,t),t)},a=i(n),o=e.map((function(n){return n.map(i)}));if(o.some((function(n){return a>=n[0]&&a<=n[1]})))return n;var s=o[0][0],l=o[0][0];o.forEach((function(n){s=new Date(Math.min(n[0],s)),l=new Date(Math.max(n[1],s))}));var d=a<s?s:l;return v(d,n.getFullYear(),n.getMonth(),n.getDate())}),y=(e.timeWithinRange=function(n,e,t){return _(n,e,t).getTime()===n.getTime()},e.changeYearMonthAndClampDate=function(n,e,t){var i=Math.min(n.getDate(),h(e,t));return v(n,e,t,i)});e.prevMonth=function(n){var e=n.getFullYear(),t=n.getMonth();return 0===t?y(n,e-1,11):y(n,e,t-1)},e.nextMonth=function(n){var e=n.getFullYear(),t=n.getMonth();return 11===t?y(n,e+1,0):y(n,e,t+1)},e.prevYear=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=n.getFullYear(),i=n.getMonth();return y(n,t-e,i)},e.nextYear=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=n.getFullYear(),i=n.getMonth();return y(n,t+e,i)},e.extractDateFormat=function(n){return n.replace(/\W?m{1,2}|\W?ZZ/g,"").replace(/\W?h{1,2}|\W?s{1,3}|\W?a/gi,"").trim()},e.extractTimeFormat=function(n){return n.replace(/\W?D{1,2}|\W?Do|\W?d{1,4}|\W?M{1,4}|\W?y{2,4}/g,"").trim()},e.validateRangeInOneMonth=function(n,e){return n.getMonth()===e.getMonth()&&n.getFullYear()===e.getFullYear()}},function(n,e,t){"use strict";e.__esModule=!0,e.default={el:{colorpicker:{confirm:"确定",clear:"清空"},datepicker:{now:"此刻",today:"今天",cancel:"取消",clear:"清空",confirm:"确定",selectDate:"选择日期",selectTime:"选择时间",startDate:"开始日期",startTime:"开始时间",endDate:"结束日期",endTime:"结束时间",prevYear:"前一年",nextYear:"后一年",prevMonth:"上个月",nextMonth:"下个月",year:"年",month1:"1 月",month2:"2 月",month3:"3 月",month4:"4 月",month5:"5 月",month6:"6 月",month7:"7 月",month8:"8 月",month9:"9 月",month10:"10 月",month11:"11 月",month12:"12 月",weeks:{sun:"日",mon:"一",tue:"二",wed:"三",thu:"四",fri:"五",sat:"六"},months:{jan:"一月",feb:"二月",mar:"三月",apr:"四月",may:"五月",jun:"六月",jul:"七月",aug:"八月",sep:"九月",oct:"十月",nov:"十一月",dec:"十二月"}},select:{loading:"加载中",noMatch:"无匹配数据",noData:"无数据",placeholder:"请选择"},cascader:{noMatch:"无匹配数据",loading:"加载中",placeholder:"请选择",noData:"暂无数据"},pagination:{goto:"前往",pagesize:"条/页",total:"共 {total} 条",pageClassifier:"页"},messagebox:{title:"提示",confirm:"确定",cancel:"取消",error:"输入的数据不合法!"},upload:{deleteTip:"按 delete 键可删除",delete:"删除",preview:"查看图片",continue:"继续上传"},table:{emptyText:"暂无数据",confirmFilter:"筛选",resetFilter:"重置",clearFilter:"全部",sumText:"合计"},tree:{emptyText:"暂无数据"},transfer:{noMatch:"无匹配数据",noData:"无数据",titles:["列表 1","列表 2"],filterPlaceholder:"请输入搜索内容",noCheckedFormat:"共 {total} 项",hasCheckedFormat:"已选 {checked}/{total} 项"},image:{error:"加载失败"},pageHeader:{title:"返回"},popconfirm:{confirmButtonText:"确定",cancelButtonText:"取消"},empty:{description:"暂无数据"}}}},function(n,e,t){"use strict";var i=function(n){return function(n){return!!n&&"object"==typeof n}(n)&&!function(n){var e=Object.prototype.toString.call(n);return"[object RegExp]"===e||"[object Date]"===e||function(n){return n.$$typeof===a}(n)}(n)};var a="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function r(n,e){var t;return e&&!0===e.clone&&i(n)?s((t=n,Array.isArray(t)?[]:{}),n,e):n}function o(n,e,t){var a=n.slice();return e.forEach((function(e,o){void 0===a[o]?a[o]=r(e,t):i(e)?a[o]=s(n[o],e,t):-1===n.indexOf(e)&&a.push(r(e,t))})),a}function s(n,e,t){var a=Array.isArray(e);return a===Array.isArray(n)?a?((t||{arrayMerge:o}).arrayMerge||o)(n,e,t):function(n,e,t){var a={};return i(n)&&Object.keys(n).forEach((function(e){a[e]=r(n[e],t)})),Object.keys(e).forEach((function(o){i(e[o])&&n[o]?a[o]=s(n[o],e[o],t):a[o]=r(e[o],t)})),a}(n,e,t):r(e,t)}s.all=function(n,e){if(!Array.isArray(n)||n.length<2)throw new Error("first argument should be an array with at least two elements");return n.reduce((function(n,t){return s(n,t,e)}))};var l=s;n.exports=l},function(n,e,t){"use strict";e.__esModule=!0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};e.default=function(n){return function(n){for(var e=arguments.length,t=Array(e>1?e-1:0),o=1;o<e;o++)t[o-1]=arguments[o];return 1===t.length&&"object"===i(t[0])&&(t=t[0]),t&&t.hasOwnProperty||(t={}),n.replace(r,(function(e,i,r,o){var s=void 0;return"{"===n[o-1]&&"}"===n[o+e.length]?r:null==(s=(0,a.hasOwn)(t,r)?t[r]:null)?"":s}))}};var a=t(10),r=/(%|)\{([0-9a-zA-Z_]+)\}/g},function(n,e,t){"use strict";e.__esModule=!0;var i,a=t(1),r=(i=a)&&i.__esModule?i:{default:i},o=t(20);var s=!1,l=!1,d=void 0,c=function(){if(!r.default.prototype.$isServer){var n=p.modalDom;return n?s=!0:(s=!1,n=document.createElement("div"),p.modalDom=n,n.addEventListener("touchmove",(function(n){n.preventDefault(),n.stopPropagation()})),n.addEventListener("click",(function(){p.doOnModalClick&&p.doOnModalClick()}))),n}},u={},p={modalFade:!0,getInstance:function(n){return u[n]},register:function(n,e){n&&e&&(u[n]=e)},deregister:function(n){n&&(u[n]=null,delete u[n])},nextZIndex:function(){return p.zIndex++},modalStack:[],doOnModalClick:function(){var n=p.modalStack[p.modalStack.length-1];if(n){var e=p.getInstance(n.id);e&&e.closeOnClickModal&&e.close()}},openModal:function(n,e,t,i,a){if(!r.default.prototype.$isServer&&n&&void 0!==e){this.modalFade=a;for(var l=this.modalStack,d=0,u=l.length;d<u;d++){if(l[d].id===n)return}var p=c();if((0,o.addClass)(p,"v-modal"),this.modalFade&&!s&&(0,o.addClass)(p,"v-modal-enter"),i)i.trim().split(/\s+/).forEach((function(n){return(0,o.addClass)(p,n)}));setTimeout((function(){(0,o.removeClass)(p,"v-modal-enter")}),200),t&&t.parentNode&&11!==t.parentNode.nodeType?t.parentNode.appendChild(p):document.body.appendChild(p),e&&(p.style.zIndex=e),p.tabIndex=0,p.style.display="",this.modalStack.push({id:n,zIndex:e,modalClass:i})}},closeModal:function(n){var e=this.modalStack,t=c();if(e.length>0){var i=e[e.length-1];if(i.id===n){if(i.modalClass)i.modalClass.trim().split(/\s+/).forEach((function(n){return(0,o.removeClass)(t,n)}));e.pop(),e.length>0&&(t.style.zIndex=e[e.length-1].zIndex)}else for(var a=e.length-1;a>=0;a--)if(e[a].id===n){e.splice(a,1);break}}0===e.length&&(this.modalFade&&(0,o.addClass)(t,"v-modal-leave"),setTimeout((function(){0===e.length&&(t.parentNode&&t.parentNode.removeChild(t),t.style.display="none",p.modalDom=void 0),(0,o.removeClass)(t,"v-modal-leave")}),200))}};Object.defineProperty(p,"zIndex",{configurable:!0,get:function(){return l||(d=d||(r.default.prototype.$ELEMENT||{}).zIndex||2e3,l=!0),d},set:function(n){d=n}});r.default.prototype.$isServer||window.addEventListener("keydown",(function(n){if(27===n.keyCode){var e=function(){if(!r.default.prototype.$isServer&&p.modalStack.length>0){var n=p.modalStack[p.modalStack.length-1];if(!n)return;return p.getInstance(n.id)}}();e&&e.closeOnPressEscape&&(e.handleClose?e.handleClose():e.handleAction?e.handleAction("cancel"):e.close())}})),e.default=p},function(n,e,t){"use strict";var i,a;"function"==typeof Symbol&&Symbol.iterator;void 0===(a="function"==typeof(i=function(){var n=window,e={placement:"bottom",gpuAcceleration:!0,offset:0,boundariesElement:"viewport",boundariesPadding:5,preventOverflowOrder:["left","right","top","bottom"],flipBehavior:"flip",arrowElement:"[x-arrow]",arrowOffset:0,modifiers:["shift","offset","preventOverflow","keepTogether","arrow","flip","applyStyle"],modifiersIgnored:[],forceAbsolute:!1};function t(n,t,i){this._reference=n.jquery?n[0]:n,this.state={};var a=null==t,r=t&&"[object Object]"===Object.prototype.toString.call(t);return this._popper=a||r?this.parse(r?t:{}):t.jquery?t[0]:t,this._options=Object.assign({},e,i),this._options.modifiers=this._options.modifiers.map(function(n){if(-1===this._options.modifiersIgnored.indexOf(n))return"applyStyle"===n&&this._popper.setAttribute("x-placement",this._options.placement),this.modifiers[n]||n}.bind(this)),this.state.position=this._getPosition(this._popper,this._reference),c(this._popper,{position:this.state.position,top:0}),this.update(),this._setupEventListeners(),this}function i(e){var t=e.style.display,i=e.style.visibility;e.style.display="block",e.style.visibility="hidden",e.offsetWidth;var a=n.getComputedStyle(e),r=parseFloat(a.marginTop)+parseFloat(a.marginBottom),o=parseFloat(a.marginLeft)+parseFloat(a.marginRight),s={width:e.offsetWidth+o,height:e.offsetHeight+r};return e.style.display=t,e.style.visibility=i,s}function a(n){var e={left:"right",right:"left",bottom:"top",top:"bottom"};return n.replace(/left|right|bottom|top/g,(function(n){return e[n]}))}function r(n){var e=Object.assign({},n);return e.right=e.left+e.width,e.bottom=e.top+e.height,e}function o(n,e){var t,i=0;for(t in n){if(n[t]===e)return i;i++}return null}function s(e,t){return n.getComputedStyle(e,null)[t]}function l(e){var t=e.offsetParent;return t!==n.document.body&&t?t:n.document.documentElement}function d(e){var t=e.parentNode;return t?t===n.document?n.document.body.scrollTop||n.document.body.scrollLeft?n.document.body:n.document.documentElement:-1!==["scroll","auto"].indexOf(s(t,"overflow"))||-1!==["scroll","auto"].indexOf(s(t,"overflow-x"))||-1!==["scroll","auto"].indexOf(s(t,"overflow-y"))?t:d(e.parentNode):e}function c(n,e){Object.keys(e).forEach((function(t){var i,a="";-1!==["width","height","top","right","bottom","left"].indexOf(t)&&""!==(i=e[t])&&!isNaN(parseFloat(i))&&isFinite(i)&&(a="px"),n.style[t]=e[t]+a}))}function u(n){var e={width:n.offsetWidth,height:n.offsetHeight,left:n.offsetLeft,top:n.offsetTop};return e.right=e.left+e.width,e.bottom=e.top+e.height,e}function p(n){var e=n.getBoundingClientRect(),t=-1!=navigator.userAgent.indexOf("MSIE")&&"HTML"===n.tagName?-n.scrollTop:e.top;return{left:e.left,top:t,right:e.right,bottom:e.bottom,width:e.right-e.left,height:e.bottom-t}}function h(e){for(var t=["","ms","webkit","moz","o"],i=0;i<t.length;i++){var a=t[i]?t[i]+e.charAt(0).toUpperCase()+e.slice(1):e;if(void 0!==n.document.body.style[a])return a}return null}return t.prototype.destroy=function(){return this._popper.removeAttribute("x-placement"),this._popper.style.left="",this._popper.style.position="",this._popper.style.top="",this._popper.style[h("transform")]="",this._removeEventListeners(),this._options.removeOnDestroy&&this._popper.remove(),this},t.prototype.update=function(){var n={instance:this,styles:{}};n.placement=this._options.placement,n._originalPlacement=this._options.placement,n.offsets=this._getOffsets(this._popper,this._reference,n.placement),n.boundaries=this._getBoundaries(n,this._options.boundariesPadding,this._options.boundariesElement),n=this.runModifiers(n,this._options.modifiers),"function"==typeof this.state.updateCallback&&this.state.updateCallback(n)},t.prototype.onCreate=function(n){return n(this),this},t.prototype.onUpdate=function(n){return this.state.updateCallback=n,this},t.prototype.parse=function(e){var t={tagName:"div",classNames:["popper"],attributes:[],parent:n.document.body,content:"",contentType:"text",arrowTagName:"div",arrowClassNames:["popper__arrow"],arrowAttributes:["x-arrow"]};e=Object.assign({},t,e);var i=n.document,a=i.createElement(e.tagName);if(s(a,e.classNames),l(a,e.attributes),"node"===e.contentType?a.appendChild(e.content.jquery?e.content[0]:e.content):"html"===e.contentType?a.innerHTML=e.content:a.textContent=e.content,e.arrowTagName){var r=i.createElement(e.arrowTagName);s(r,e.arrowClassNames),l(r,e.arrowAttributes),a.appendChild(r)}var o=e.parent.jquery?e.parent[0]:e.parent;if("string"==typeof o){if((o=i.querySelectorAll(e.parent)).length>1&&console.warn("WARNING: the given `parent` query("+e.parent+") matched more than one element, the first one will be used"),0===o.length)throw"ERROR: the given `parent` doesn't exists!";o=o[0]}return o.length>1&&o instanceof Element==0&&(console.warn("WARNING: you have passed as parent a list of elements, the first one will be used"),o=o[0]),o.appendChild(a),a;function s(n,e){e.forEach((function(e){n.classList.add(e)}))}function l(n,e){e.forEach((function(e){n.setAttribute(e.split(":")[0],e.split(":")[1]||"")}))}},t.prototype._getPosition=function(e,t){return l(t),this._options.forceAbsolute?"absolute":function e(t){return t!==n.document.body&&("fixed"===s(t,"position")||(t.parentNode?e(t.parentNode):t))}(t)?"fixed":"absolute"},t.prototype._getOffsets=function(n,e,t){t=t.split("-")[0];var a={};a.position=this.state.position;var r="fixed"===a.position,o=function(n,e,t){var i=p(n),a=p(e);if(t){var r=d(e);a.top+=r.scrollTop,a.bottom+=r.scrollTop,a.left+=r.scrollLeft,a.right+=r.scrollLeft}return{top:i.top-a.top,left:i.left-a.left,bottom:i.top-a.top+i.height,right:i.left-a.left+i.width,width:i.width,height:i.height}}(e,l(n),r),s=i(n);return-1!==["right","left"].indexOf(t)?(a.top=o.top+o.height/2-s.height/2,a.left="left"===t?o.left-s.width:o.right):(a.left=o.left+o.width/2-s.width/2,a.top="top"===t?o.top-s.height:o.bottom),a.width=s.width,a.height=s.height,{popper:a,reference:o}},t.prototype._setupEventListeners=function(){if(this.state.updateBound=this.update.bind(this),n.addEventListener("resize",this.state.updateBound),"window"!==this._options.boundariesElement){var e=d(this._reference);e!==n.document.body&&e!==n.document.documentElement||(e=n),e.addEventListener("scroll",this.state.updateBound),this.state.scrollTarget=e}},t.prototype._removeEventListeners=function(){n.removeEventListener("resize",this.state.updateBound),"window"!==this._options.boundariesElement&&this.state.scrollTarget&&(this.state.scrollTarget.removeEventListener("scroll",this.state.updateBound),this.state.scrollTarget=null),this.state.updateBound=null},t.prototype._getBoundaries=function(e,t,i){var a,r,o={};if("window"===i){var s=n.document.body,c=n.document.documentElement;a=Math.max(s.scrollHeight,s.offsetHeight,c.clientHeight,c.scrollHeight,c.offsetHeight),o={top:0,right:Math.max(s.scrollWidth,s.offsetWidth,c.clientWidth,c.scrollWidth,c.offsetWidth),bottom:a,left:0}}else if("viewport"===i){var p=l(this._popper),h=d(this._popper),m=u(p),g="fixed"===e.offsets.popper.position?0:(r=h)==document.body?Math.max(document.documentElement.scrollTop,document.body.scrollTop):r.scrollTop,f="fixed"===e.offsets.popper.position?0:function(n){return n==document.body?Math.max(document.documentElement.scrollLeft,document.body.scrollLeft):n.scrollLeft}(h);o={top:0-(m.top-g),right:n.document.documentElement.clientWidth-(m.left-f),bottom:n.document.documentElement.clientHeight-(m.top-g),left:0-(m.left-f)}}else o=l(this._popper)===i?{top:0,left:0,right:i.clientWidth,bottom:i.clientHeight}:u(i);return o.left+=t,o.right-=t,o.top=o.top+t,o.bottom=o.bottom-t,o},t.prototype.runModifiers=function(n,e,t){var i=e.slice();return void 0!==t&&(i=this._options.modifiers.slice(0,o(this._options.modifiers,t))),i.forEach(function(e){var t;(t=e)&&"[object Function]"==={}.toString.call(t)&&(n=e.call(this,n))}.bind(this)),n},t.prototype.isModifierRequired=function(n,e){var t=o(this._options.modifiers,n);return!!this._options.modifiers.slice(0,t).filter((function(n){return n===e})).length},t.prototype.modifiers={},t.prototype.modifiers.applyStyle=function(n){var e,t={position:n.offsets.popper.position},i=Math.round(n.offsets.popper.left),a=Math.round(n.offsets.popper.top);return this._options.gpuAcceleration&&(e=h("transform"))?(t[e]="translate3d("+i+"px, "+a+"px, 0)",t.top=0,t.left=0):(t.left=i,t.top=a),Object.assign(t,n.styles),c(this._popper,t),this._popper.setAttribute("x-placement",n.placement),this.isModifierRequired(this.modifiers.applyStyle,this.modifiers.arrow)&&n.offsets.arrow&&c(n.arrowElement,n.offsets.arrow),n},t.prototype.modifiers.shift=function(n){var e=n.placement,t=e.split("-")[0],i=e.split("-")[1];if(i){var a=n.offsets.reference,o=r(n.offsets.popper),s={y:{start:{top:a.top},end:{top:a.top+a.height-o.height}},x:{start:{left:a.left},end:{left:a.left+a.width-o.width}}},l=-1!==["bottom","top"].indexOf(t)?"x":"y";n.offsets.popper=Object.assign(o,s[l][i])}return n},t.prototype.modifiers.preventOverflow=function(n){var e=this._options.preventOverflowOrder,t=r(n.offsets.popper),i={left:function(){var e=t.left;return t.left<n.boundaries.left&&(e=Math.max(t.left,n.boundaries.left)),{left:e}},right:function(){var e=t.left;return t.right>n.boundaries.right&&(e=Math.min(t.left,n.boundaries.right-t.width)),{left:e}},top:function(){var e=t.top;return t.top<n.boundaries.top&&(e=Math.max(t.top,n.boundaries.top)),{top:e}},bottom:function(){var e=t.top;return t.bottom>n.boundaries.bottom&&(e=Math.min(t.top,n.boundaries.bottom-t.height)),{top:e}}};return e.forEach((function(e){n.offsets.popper=Object.assign(t,i[e]())})),n},t.prototype.modifiers.keepTogether=function(n){var e=r(n.offsets.popper),t=n.offsets.reference,i=Math.floor;return e.right<i(t.left)&&(n.offsets.popper.left=i(t.left)-e.width),e.left>i(t.right)&&(n.offsets.popper.left=i(t.right)),e.bottom<i(t.top)&&(n.offsets.popper.top=i(t.top)-e.height),e.top>i(t.bottom)&&(n.offsets.popper.top=i(t.bottom)),n},t.prototype.modifiers.flip=function(n){if(!this.isModifierRequired(this.modifiers.flip,this.modifiers.preventOverflow))return console.warn("WARNING: preventOverflow modifier is required by flip modifier in order to work, be sure to include it before flip!"),n;if(n.flipped&&n.placement===n._originalPlacement)return n;var e=n.placement.split("-")[0],t=a(e),i=n.placement.split("-")[1]||"",o=[];return(o="flip"===this._options.flipBehavior?[e,t]:this._options.flipBehavior).forEach(function(s,l){if(e===s&&o.length!==l+1){e=n.placement.split("-")[0],t=a(e);var d=r(n.offsets.popper),c=-1!==["right","bottom"].indexOf(e);(c&&Math.floor(n.offsets.reference[e])>Math.floor(d[t])||!c&&Math.floor(n.offsets.reference[e])<Math.floor(d[t]))&&(n.flipped=!0,n.placement=o[l+1],i&&(n.placement+="-"+i),n.offsets.popper=this._getOffsets(this._popper,this._reference,n.placement).popper,n=this.runModifiers(n,this._options.modifiers,this._flip))}}.bind(this)),n},t.prototype.modifiers.offset=function(n){var e=this._options.offset,t=n.offsets.popper;return-1!==n.placement.indexOf("left")?t.top-=e:-1!==n.placement.indexOf("right")?t.top+=e:-1!==n.placement.indexOf("top")?t.left-=e:-1!==n.placement.indexOf("bottom")&&(t.left+=e),n},t.prototype.modifiers.arrow=function(n){var e=this._options.arrowElement,t=this._options.arrowOffset;if("string"==typeof e&&(e=this._popper.querySelector(e)),!e)return n;if(!this._popper.contains(e))return console.warn("WARNING: `arrowElement` must be child of its popper element!"),n;if(!this.isModifierRequired(this.modifiers.arrow,this.modifiers.keepTogether))return console.warn("WARNING: keepTogether modifier is required by arrow modifier in order to work, be sure to include it before arrow!"),n;var a={},o=n.placement.split("-")[0],s=r(n.offsets.popper),l=n.offsets.reference,d=-1!==["left","right"].indexOf(o),c=d?"height":"width",u=d?"top":"left",p=d?"left":"top",h=d?"bottom":"right",m=i(e)[c];l[h]-m<s[u]&&(n.offsets.popper[u]-=s[u]-(l[h]-m)),l[u]+m>s[h]&&(n.offsets.popper[u]+=l[u]+m-s[h]);var g=l[u]+(t||l[c]/2-m/2)-s[u];return g=Math.max(Math.min(s[c]-m-8,g),8),a[u]=g,a[p]="",n.offsets.arrow=a,n.arrowElement=e,n},Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:function(n){if(null==n)throw new TypeError("Cannot convert first argument to object");for(var e=Object(n),t=1;t<arguments.length;t++){var i=arguments[t];if(null!=i){i=Object(i);for(var a=Object.keys(i),r=0,o=a.length;r<o;r++){var s=a[r],l=Object.getOwnPropertyDescriptor(i,s);void 0!==l&&l.enumerable&&(e[s]=i[s])}}}return e}}),t})?i.call(e,t,e,n):i)||(n.exports=a)},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=96)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},96:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("button",{staticClass:"el-button",class:[n.type?"el-button--"+n.type:"",n.buttonSize?"el-button--"+n.buttonSize:"",{"is-disabled":n.buttonDisabled,"is-loading":n.loading,"is-plain":n.plain,"is-round":n.round,"is-circle":n.circle}],attrs:{disabled:n.buttonDisabled||n.loading,autofocus:n.autofocus,type:n.nativeType},on:{click:n.handleClick}},[n.loading?t("i",{staticClass:"el-icon-loading"}):n._e(),n.icon&&!n.loading?t("i",{class:n.icon}):n._e(),n.$slots.default?t("span",[n._t("default")],2):n._e()])};i._withStripped=!0;var a={name:"ElButton",inject:{elForm:{default:""},elFormItem:{default:""}},props:{type:{type:String,default:"default"},size:String,icon:{type:String,default:""},nativeType:{type:String,default:"button"},loading:Boolean,disabled:Boolean,plain:Boolean,autofocus:Boolean,round:Boolean,circle:Boolean},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},buttonSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},buttonDisabled:function(){return this.$options.propsData.hasOwnProperty("disabled")?this.disabled:(this.elForm||{}).disabled}},methods:{handleClick:function(n){this.$emit("click",n)}}},r=t(0),o=Object(r.a)(a,i,[],!1,null,null,null);o.options.__file="packages/button/src/button.vue";var s=o.exports;s.install=function(n){n.component(s.name,s)};e.default=s}})},function(n,e,t){"use strict";t.r(e);var i=function(){if("undefined"!=typeof Map)return Map;function n(n,e){var t=-1;return n.some((function(n,i){return n[0]===e&&(t=i,!0)})),t}return function(){function e(){this.__entries__=[]}return Object.defineProperty(e.prototype,"size",{get:function(){return this.__entries__.length},enumerable:!0,configurable:!0}),e.prototype.get=function(e){var t=n(this.__entries__,e),i=this.__entries__[t];return i&&i[1]},e.prototype.set=function(e,t){var i=n(this.__entries__,e);~i?this.__entries__[i][1]=t:this.__entries__.push([e,t])},e.prototype.delete=function(e){var t=this.__entries__,i=n(t,e);~i&&t.splice(i,1)},e.prototype.has=function(e){return!!~n(this.__entries__,e)},e.prototype.clear=function(){this.__entries__.splice(0)},e.prototype.forEach=function(n,e){void 0===e&&(e=null);for(var t=0,i=this.__entries__;t<i.length;t++){var a=i[t];n.call(e,a[1],a[0])}},e}()}(),a="undefined"!=typeof window&&"undefined"!=typeof document&&window.document===document,r="undefined"!=typeof global&&global.Math===Math?global:"undefined"!=typeof self&&self.Math===Math?self:"undefined"!=typeof window&&window.Math===Math?window:Function("return this")(),o="function"==typeof requestAnimationFrame?requestAnimationFrame.bind(r):function(n){return setTimeout((function(){return n(Date.now())}),1e3/60)};var s=["top","right","bottom","left","width","height","size","weight"],l="undefined"!=typeof MutationObserver,d=function(){function n(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=function(n,e){var t=!1,i=!1,a=0;function r(){t&&(t=!1,n()),i&&l()}function s(){o(r)}function l(){var n=Date.now();if(t){if(n-a<2)return;i=!0}else t=!0,i=!1,setTimeout(s,e);a=n}return l}(this.refresh.bind(this),20)}return n.prototype.addObserver=function(n){~this.observers_.indexOf(n)||this.observers_.push(n),this.connected_||this.connect_()},n.prototype.removeObserver=function(n){var e=this.observers_,t=e.indexOf(n);~t&&e.splice(t,1),!e.length&&this.connected_&&this.disconnect_()},n.prototype.refresh=function(){this.updateObservers_()&&this.refresh()},n.prototype.updateObservers_=function(){var n=this.observers_.filter((function(n){return n.gatherActive(),n.hasActive()}));return n.forEach((function(n){return n.broadcastActive()})),n.length>0},n.prototype.connect_=function(){a&&!this.connected_&&(document.addEventListener("transitionend",this.onTransitionEnd_),window.addEventListener("resize",this.refresh),l?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener("DOMSubtreeModified",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},n.prototype.disconnect_=function(){a&&this.connected_&&(document.removeEventListener("transitionend",this.onTransitionEnd_),window.removeEventListener("resize",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener("DOMSubtreeModified",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},n.prototype.onTransitionEnd_=function(n){var e=n.propertyName,t=void 0===e?"":e;s.some((function(n){return!!~t.indexOf(n)}))&&this.refresh()},n.getInstance=function(){return this.instance_||(this.instance_=new n),this.instance_},n.instance_=null,n}(),c=function(n,e){for(var t=0,i=Object.keys(e);t<i.length;t++){var a=i[t];Object.defineProperty(n,a,{value:e[a],enumerable:!1,writable:!1,configurable:!0})}return n},u=function(n){return n&&n.ownerDocument&&n.ownerDocument.defaultView||r},p=b(0,0,0,0);function h(n){return parseFloat(n)||0}function m(n){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return e.reduce((function(e,t){return e+h(n["border-"+t+"-width"])}),0)}function g(n){var e=n.clientWidth,t=n.clientHeight;if(!e&&!t)return p;var i=u(n).getComputedStyle(n),a=function(n){for(var e={},t=0,i=["top","right","bottom","left"];t<i.length;t++){var a=i[t],r=n["padding-"+a];e[a]=h(r)}return e}(i),r=a.left+a.right,o=a.top+a.bottom,s=h(i.width),l=h(i.height);if("border-box"===i.boxSizing&&(Math.round(s+r)!==e&&(s-=m(i,"left","right")+r),Math.round(l+o)!==t&&(l-=m(i,"top","bottom")+o)),!function(n){return n===u(n).document.documentElement}(n)){var d=Math.round(s+r)-e,c=Math.round(l+o)-t;1!==Math.abs(d)&&(s-=d),1!==Math.abs(c)&&(l-=c)}return b(a.left,a.top,s,l)}var f="undefined"!=typeof SVGGraphicsElement?function(n){return n instanceof u(n).SVGGraphicsElement}:function(n){return n instanceof u(n).SVGElement&&"function"==typeof n.getBBox};function v(n){return a?f(n)?function(n){var e=n.getBBox();return b(0,0,e.width,e.height)}(n):g(n):p}function b(n,e,t,i){return{x:n,y:e,width:t,height:i}}var _=function(){function n(n){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=b(0,0,0,0),this.target=n}return n.prototype.isActive=function(){var n=v(this.target);return this.contentRect_=n,n.width!==this.broadcastWidth||n.height!==this.broadcastHeight},n.prototype.broadcastRect=function(){var n=this.contentRect_;return this.broadcastWidth=n.width,this.broadcastHeight=n.height,n},n}(),y=function(n,e){var t,i,a,r,o,s,l,d=(i=(t=e).x,a=t.y,r=t.width,o=t.height,s="undefined"!=typeof DOMRectReadOnly?DOMRectReadOnly:Object,l=Object.create(s.prototype),c(l,{x:i,y:a,width:r,height:o,top:a,right:i+r,bottom:o+a,left:i}),l);c(this,{target:n,contentRect:d})},x=function(){function n(n,e,t){if(this.activeObservations_=[],this.observations_=new i,"function"!=typeof n)throw new TypeError("The callback provided as parameter 1 is not a function.");this.callback_=n,this.controller_=e,this.callbackCtx_=t}return n.prototype.observe=function(n){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!=typeof Element&&Element instanceof Object){if(!(n instanceof u(n).Element))throw new TypeError('parameter 1 is not of type "Element".');var e=this.observations_;e.has(n)||(e.set(n,new _(n)),this.controller_.addObserver(this),this.controller_.refresh())}},n.prototype.unobserve=function(n){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!=typeof Element&&Element instanceof Object){if(!(n instanceof u(n).Element))throw new TypeError('parameter 1 is not of type "Element".');var e=this.observations_;e.has(n)&&(e.delete(n),e.size||this.controller_.removeObserver(this))}},n.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},n.prototype.gatherActive=function(){var n=this;this.clearActive(),this.observations_.forEach((function(e){e.isActive()&&n.activeObservations_.push(e)}))},n.prototype.broadcastActive=function(){if(this.hasActive()){var n=this.callbackCtx_,e=this.activeObservations_.map((function(n){return new y(n.target,n.broadcastRect())}));this.callback_.call(n,e,n),this.clearActive()}},n.prototype.clearActive=function(){this.activeObservations_.splice(0)},n.prototype.hasActive=function(){return this.activeObservations_.length>0},n}(),k="undefined"!=typeof WeakMap?new WeakMap:new i,T=function n(e){if(!(this instanceof n))throw new TypeError("Cannot call a class as a function.");if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");var t=d.getInstance(),i=new x(e,t,this);k.set(this,i)};["observe","unobserve","disconnect"].forEach((function(n){T.prototype[n]=function(){var e;return(e=k.get(this))[n].apply(e,arguments)}}));var w=void 0!==r.ResizeObserver?r.ResizeObserver:T;e.default=w},function(n,e,t){"use strict";e.__esModule=!0;var i=t(20);var a=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}return n.prototype.beforeEnter=function(n){(0,i.addClass)(n,"collapse-transition"),n.dataset||(n.dataset={}),n.dataset.oldPaddingTop=n.style.paddingTop,n.dataset.oldPaddingBottom=n.style.paddingBottom,n.style.height="0",n.style.paddingTop=0,n.style.paddingBottom=0},n.prototype.enter=function(n){n.dataset.oldOverflow=n.style.overflow,0!==n.scrollHeight?(n.style.height=n.scrollHeight+"px",n.style.paddingTop=n.dataset.oldPaddingTop,n.style.paddingBottom=n.dataset.oldPaddingBottom):(n.style.height="",n.style.paddingTop=n.dataset.oldPaddingTop,n.style.paddingBottom=n.dataset.oldPaddingBottom),n.style.overflow="hidden"},n.prototype.afterEnter=function(n){(0,i.removeClass)(n,"collapse-transition"),n.style.height="",n.style.overflow=n.dataset.oldOverflow},n.prototype.beforeLeave=function(n){n.dataset||(n.dataset={}),n.dataset.oldPaddingTop=n.style.paddingTop,n.dataset.oldPaddingBottom=n.style.paddingBottom,n.dataset.oldOverflow=n.style.overflow,n.style.height=n.scrollHeight+"px",n.style.overflow="hidden"},n.prototype.leave=function(n){0!==n.scrollHeight&&((0,i.addClass)(n,"collapse-transition"),n.style.height=0,n.style.paddingTop=0,n.style.paddingBottom=0)},n.prototype.afterLeave=function(n){(0,i.removeClass)(n,"collapse-transition"),n.style.height="",n.style.overflow=n.dataset.oldOverflow,n.style.paddingTop=n.dataset.oldPaddingTop,n.style.paddingBottom=n.dataset.oldPaddingBottom},n}();e.default={name:"ElCollapseTransition",functional:!0,render:function(n,e){var t=e.children;return n("transition",{on:new a},t)}}},function(n,e,t){"use strict";e.__esModule=!0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};e.isVNode=function(n){return null!==n&&"object"===(void 0===n?"undefined":i(n))&&(0,a.hasOwn)(n,"componentOptions")};var a=t(10)},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=138)}({138:function(n,e,t){"use strict";t.r(e);var i=t(5),a=t.n(i),r=t(19),o=t.n(r),s=t(2),l=t(3),d=t(7),c=t.n(d),u={name:"ElTooltip",mixins:[a.a],props:{openDelay:{type:Number,default:0},disabled:Boolean,manual:Boolean,effect:{type:String,default:"dark"},arrowOffset:{type:Number,default:0},popperClass:String,content:String,visibleArrow:{default:!0},transition:{type:String,default:"el-fade-in-linear"},popperOptions:{default:function(){return{boundariesPadding:10,gpuAcceleration:!1}}},enterable:{type:Boolean,default:!0},hideAfter:{type:Number,default:0},tabindex:{type:Number,default:0}},data:function(){return{tooltipId:"el-tooltip-"+Object(l.generateId)(),timeoutPending:null,focusing:!1}},beforeCreate:function(){var n=this;this.$isServer||(this.popperVM=new c.a({data:{node:""},render:function(n){return this.node}}).$mount(),this.debounceClose=o()(200,(function(){return n.handleClosePopper()})))},render:function(n){var e=this;this.popperVM&&(this.popperVM.node=n("transition",{attrs:{name:this.transition},on:{afterLeave:this.doDestroy}},[n("div",{on:{mouseleave:function(){e.setExpectedState(!1),e.debounceClose()},mouseenter:function(){e.setExpectedState(!0)}},ref:"popper",attrs:{role:"tooltip",id:this.tooltipId,"aria-hidden":this.disabled||!this.showPopper?"true":"false"},directives:[{name:"show",value:!this.disabled&&this.showPopper}],class:["el-tooltip__popper","is-"+this.effect,this.popperClass]},[this.$slots.content||this.content])]));var t=this.getFirstElement();if(!t)return null;var i=t.data=t.data||{};return i.staticClass=this.addTooltipClass(i.staticClass),t},mounted:function(){var n=this;this.referenceElm=this.$el,1===this.$el.nodeType&&(this.$el.setAttribute("aria-describedby",this.tooltipId),this.$el.setAttribute("tabindex",this.tabindex),Object(s.on)(this.referenceElm,"mouseenter",this.show),Object(s.on)(this.referenceElm,"mouseleave",this.hide),Object(s.on)(this.referenceElm,"focus",(function(){if(n.$slots.default&&n.$slots.default.length){var e=n.$slots.default[0].componentInstance;e&&e.focus?e.focus():n.handleFocus()}else n.handleFocus()})),Object(s.on)(this.referenceElm,"blur",this.handleBlur),Object(s.on)(this.referenceElm,"click",this.removeFocusing)),this.value&&this.popperVM&&this.popperVM.$nextTick((function(){n.value&&n.updatePopper()}))},watch:{focusing:function(n){n?Object(s.addClass)(this.referenceElm,"focusing"):Object(s.removeClass)(this.referenceElm,"focusing")}},methods:{show:function(){this.setExpectedState(!0),this.handleShowPopper()},hide:function(){this.setExpectedState(!1),this.debounceClose()},handleFocus:function(){this.focusing=!0,this.show()},handleBlur:function(){this.focusing=!1,this.hide()},removeFocusing:function(){this.focusing=!1},addTooltipClass:function(n){return n?"el-tooltip "+n.replace("el-tooltip",""):"el-tooltip"},handleShowPopper:function(){var n=this;this.expectedState&&!this.manual&&(clearTimeout(this.timeout),this.timeout=setTimeout((function(){n.showPopper=!0}),this.openDelay),this.hideAfter>0&&(this.timeoutPending=setTimeout((function(){n.showPopper=!1}),this.hideAfter)))},handleClosePopper:function(){this.enterable&&this.expectedState||this.manual||(clearTimeout(this.timeout),this.timeoutPending&&clearTimeout(this.timeoutPending),this.showPopper=!1,this.disabled&&this.doDestroy())},setExpectedState:function(n){!1===n&&clearTimeout(this.timeoutPending),this.expectedState=n},getFirstElement:function(){var n=this.$slots.default;if(!Array.isArray(n))return null;for(var e=null,t=0;t<n.length;t++)if(n[t]&&n[t].tag){e=n[t];break}return e}},beforeDestroy:function(){this.popperVM&&this.popperVM.$destroy()},destroyed:function(){var n=this.referenceElm;1===n.nodeType&&(Object(s.off)(n,"mouseenter",this.show),Object(s.off)(n,"mouseleave",this.hide),Object(s.off)(n,"focus",this.handleFocus),Object(s.off)(n,"blur",this.handleBlur),Object(s.off)(n,"click",this.removeFocusing))},install:function(n){n.component(u.name,u)}};e.default=u},19:function(n,e){n.exports=t(52)},2:function(n,e){n.exports=t(20)},3:function(n,e){n.exports=t(10)},5:function(n,e){n.exports=t(49)},7:function(n,e){n.exports=t(1)}})},function(n,e,t){"use strict";(function(n){var i,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */(function(){var r="Expected a function",o="__lodash_placeholder__",s=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],l="[object Arguments]",d="[object Array]",c="[object Boolean]",u="[object Date]",p="[object Error]",h="[object Function]",m="[object GeneratorFunction]",g="[object Map]",f="[object Number]",v="[object Object]",b="[object RegExp]",_="[object Set]",y="[object String]",x="[object Symbol]",k="[object WeakMap]",T="[object ArrayBuffer]",w="[object DataView]",I="[object Float32Array]",C="[object Float64Array]",D="[object Int8Array]",E="[object Int16Array]",S="[object Int32Array]",M="[object Uint8Array]",A="[object Uint16Array]",O="[object Uint32Array]",P=/\b__p \+= '';/g,j=/\b(__p \+=) '' \+/g,z=/(__e\(.*?\)|\b__t\)) \+\n'';/g,R=/&(?:amp|lt|gt|quot|#39);/g,$=/[&<>"']/g,L=RegExp(R.source),U=RegExp($.source),N=/<%-([\s\S]+?)%>/g,q=/<%([\s\S]+?)%>/g,B=/<%=([\s\S]+?)%>/g,F=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,V=/^\w*$/,G=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,H=/[\\^$.*+?()[\]{}|]/g,W=RegExp(H.source),Q=/^\s+|\s+$/g,K=/^\s+/,Y=/\s+$/,X=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,J=/\{\n\/\* \[wrapped with (.+)\] \*/,Z=/,? & /,nn=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,en=/\\(\\)?/g,tn=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,an=/\w*$/,rn=/^[-+]0x[0-9a-f]+$/i,on=/^0b[01]+$/i,sn=/^\[object .+?Constructor\]$/,ln=/^0o[0-7]+$/i,dn=/^(?:0|[1-9]\d*)$/,cn=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,un=/($^)/,pn=/['\n\r\u2028\u2029\\]/g,hn="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",mn="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",gn="[\\ud800-\\udfff]",fn="["+mn+"]",vn="["+hn+"]",bn="\\d+",_n="[\\u2700-\\u27bf]",yn="[a-z\\xdf-\\xf6\\xf8-\\xff]",xn="[^\\ud800-\\udfff"+mn+bn+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",kn="\\ud83c[\\udffb-\\udfff]",Tn="[^\\ud800-\\udfff]",wn="(?:\\ud83c[\\udde6-\\uddff]){2}",In="[\\ud800-\\udbff][\\udc00-\\udfff]",Cn="[A-Z\\xc0-\\xd6\\xd8-\\xde]",Dn="(?:"+yn+"|"+xn+")",En="(?:"+Cn+"|"+xn+")",Sn="(?:"+vn+"|"+kn+")"+"?",Mn="[\\ufe0e\\ufe0f]?"+Sn+("(?:\\u200d(?:"+[Tn,wn,In].join("|")+")[\\ufe0e\\ufe0f]?"+Sn+")*"),An="(?:"+[_n,wn,In].join("|")+")"+Mn,On="(?:"+[Tn+vn+"?",vn,wn,In,gn].join("|")+")",Pn=RegExp("['’]","g"),jn=RegExp(vn,"g"),zn=RegExp(kn+"(?="+kn+")|"+On+Mn,"g"),Rn=RegExp([Cn+"?"+yn+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[fn,Cn,"$"].join("|")+")",En+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[fn,Cn+Dn,"$"].join("|")+")",Cn+"?"+Dn+"+(?:['’](?:d|ll|m|re|s|t|ve))?",Cn+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",bn,An].join("|"),"g"),$n=RegExp("[\\u200d\\ud800-\\udfff"+hn+"\\ufe0e\\ufe0f]"),Ln=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Un=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Nn=-1,qn={};qn[I]=qn[C]=qn[D]=qn[E]=qn[S]=qn[M]=qn["[object Uint8ClampedArray]"]=qn[A]=qn[O]=!0,qn[l]=qn[d]=qn[T]=qn[c]=qn[w]=qn[u]=qn[p]=qn[h]=qn[g]=qn[f]=qn[v]=qn[b]=qn[_]=qn[y]=qn[k]=!1;var Bn={};Bn[l]=Bn[d]=Bn[T]=Bn[w]=Bn[c]=Bn[u]=Bn[I]=Bn[C]=Bn[D]=Bn[E]=Bn[S]=Bn[g]=Bn[f]=Bn[v]=Bn[b]=Bn[_]=Bn[y]=Bn[x]=Bn[M]=Bn["[object Uint8ClampedArray]"]=Bn[A]=Bn[O]=!0,Bn[p]=Bn[h]=Bn[k]=!1;var Fn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Vn=parseFloat,Gn=parseInt,Hn="object"===("undefined"==typeof global?"undefined":a(global))&&global&&global.Object===Object&&global,Wn="object"===("undefined"==typeof self?"undefined":a(self))&&self&&self.Object===Object&&self,Qn=Hn||Wn||Function("return this")(),Kn="object"===a(e)&&e&&!e.nodeType&&e,Yn=Kn&&"object"===a(n)&&n&&!n.nodeType&&n,Xn=Yn&&Yn.exports===Kn,Jn=Xn&&Hn.process,Zn=function(){try{var n=Yn&&Yn.require&&Yn.require("util").types;return n||Jn&&Jn.binding&&Jn.binding("util")}catch(n){}}(),ne=Zn&&Zn.isArrayBuffer,ee=Zn&&Zn.isDate,te=Zn&&Zn.isMap,ie=Zn&&Zn.isRegExp,ae=Zn&&Zn.isSet,re=Zn&&Zn.isTypedArray;function oe(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}function se(n,e,t,i){for(var a=-1,r=null==n?0:n.length;++a<r;){var o=n[a];e(i,o,t(o),n)}return i}function le(n,e){for(var t=-1,i=null==n?0:n.length;++t<i&&!1!==e(n[t],t,n););return n}function de(n,e){for(var t=null==n?0:n.length;t--&&!1!==e(n[t],t,n););return n}function ce(n,e){for(var t=-1,i=null==n?0:n.length;++t<i;)if(!e(n[t],t,n))return!1;return!0}function ue(n,e){for(var t=-1,i=null==n?0:n.length,a=0,r=[];++t<i;){var o=n[t];e(o,t,n)&&(r[a++]=o)}return r}function pe(n,e){return!!(null==n?0:n.length)&&ke(n,e,0)>-1}function he(n,e,t){for(var i=-1,a=null==n?0:n.length;++i<a;)if(t(e,n[i]))return!0;return!1}function me(n,e){for(var t=-1,i=null==n?0:n.length,a=Array(i);++t<i;)a[t]=e(n[t],t,n);return a}function ge(n,e){for(var t=-1,i=e.length,a=n.length;++t<i;)n[a+t]=e[t];return n}function fe(n,e,t,i){var a=-1,r=null==n?0:n.length;for(i&&r&&(t=n[++a]);++a<r;)t=e(t,n[a],a,n);return t}function ve(n,e,t,i){var a=null==n?0:n.length;for(i&&a&&(t=n[--a]);a--;)t=e(t,n[a],a,n);return t}function be(n,e){for(var t=-1,i=null==n?0:n.length;++t<i;)if(e(n[t],t,n))return!0;return!1}var _e=Ce("length");function ye(n,e,t){var i;return t(n,(function(n,t,a){if(e(n,t,a))return i=t,!1})),i}function xe(n,e,t,i){for(var a=n.length,r=t+(i?1:-1);i?r--:++r<a;)if(e(n[r],r,n))return r;return-1}function ke(n,e,t){return e==e?function(n,e,t){var i=t-1,a=n.length;for(;++i<a;)if(n[i]===e)return i;return-1}(n,e,t):xe(n,we,t)}function Te(n,e,t,i){for(var a=t-1,r=n.length;++a<r;)if(i(n[a],e))return a;return-1}function we(n){return n!=n}function Ie(n,e){var t=null==n?0:n.length;return t?Se(n,e)/t:NaN}function Ce(n){return function(e){return null==e?void 0:e[n]}}function De(n){return function(e){return null==n?void 0:n[e]}}function Ee(n,e,t,i,a){return a(n,(function(n,a,r){t=i?(i=!1,n):e(t,n,a,r)})),t}function Se(n,e){for(var t,i=-1,a=n.length;++i<a;){var r=e(n[i]);void 0!==r&&(t=void 0===t?r:t+r)}return t}function Me(n,e){for(var t=-1,i=Array(n);++t<n;)i[t]=e(t);return i}function Ae(n){return function(e){return n(e)}}function Oe(n,e){return me(e,(function(e){return n[e]}))}function Pe(n,e){return n.has(e)}function je(n,e){for(var t=-1,i=n.length;++t<i&&ke(e,n[t],0)>-1;);return t}function ze(n,e){for(var t=n.length;t--&&ke(e,n[t],0)>-1;);return t}function Re(n,e){for(var t=n.length,i=0;t--;)n[t]===e&&++i;return i}var $e=De({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),Le=De({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Ue(n){return"\\"+Fn[n]}function Ne(n){return $n.test(n)}function qe(n){var e=-1,t=Array(n.size);return n.forEach((function(n,i){t[++e]=[i,n]})),t}function Be(n,e){return function(t){return n(e(t))}}function Fe(n,e){for(var t=-1,i=n.length,a=0,r=[];++t<i;){var s=n[t];s!==e&&s!==o||(n[t]=o,r[a++]=t)}return r}function Ve(n,e){return"__proto__"==e?void 0:n[e]}function Ge(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}function He(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=[n,n]})),t}function We(n){return Ne(n)?function(n){var e=zn.lastIndex=0;for(;zn.test(n);)++e;return e}(n):_e(n)}function Qe(n){return Ne(n)?function(n){return n.match(zn)||[]}(n):function(n){return n.split("")}(n)}var Ke=De({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var Ye=function n(e){var t,i=(e=null==e?Qn:Ye.defaults(Qn.Object(),e,Ye.pick(Qn,Un))).Array,hn=e.Date,mn=e.Error,gn=e.Function,fn=e.Math,vn=e.Object,bn=e.RegExp,_n=e.String,yn=e.TypeError,xn=i.prototype,kn=gn.prototype,Tn=vn.prototype,wn=e["__core-js_shared__"],In=kn.toString,Cn=Tn.hasOwnProperty,Dn=0,En=(t=/[^.]+$/.exec(wn&&wn.keys&&wn.keys.IE_PROTO||""))?"Symbol(src)_1."+t:"",Sn=Tn.toString,Mn=In.call(vn),An=Qn._,On=bn("^"+In.call(Cn).replace(H,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),zn=Xn?e.Buffer:void 0,$n=e.Symbol,Fn=e.Uint8Array,Hn=zn?zn.allocUnsafe:void 0,Wn=Be(vn.getPrototypeOf,vn),Kn=vn.create,Yn=Tn.propertyIsEnumerable,Jn=xn.splice,Zn=$n?$n.isConcatSpreadable:void 0,_e=$n?$n.iterator:void 0,De=$n?$n.toStringTag:void 0,Xe=function(){try{var n=er(vn,"defineProperty");return n({},"",{}),n}catch(n){}}(),Je=e.clearTimeout!==Qn.clearTimeout&&e.clearTimeout,Ze=hn&&hn.now!==Qn.Date.now&&hn.now,nt=e.setTimeout!==Qn.setTimeout&&e.setTimeout,et=fn.ceil,tt=fn.floor,it=vn.getOwnPropertySymbols,at=zn?zn.isBuffer:void 0,rt=e.isFinite,ot=xn.join,st=Be(vn.keys,vn),lt=fn.max,dt=fn.min,ct=hn.now,ut=e.parseInt,pt=fn.random,ht=xn.reverse,mt=er(e,"DataView"),gt=er(e,"Map"),ft=er(e,"Promise"),vt=er(e,"Set"),bt=er(e,"WeakMap"),_t=er(vn,"create"),yt=bt&&new bt,xt={},kt=Dr(mt),Tt=Dr(gt),wt=Dr(ft),It=Dr(vt),Ct=Dr(bt),Dt=$n?$n.prototype:void 0,Et=Dt?Dt.valueOf:void 0,St=Dt?Dt.toString:void 0;function Mt(n){if(Go(n)&&!jo(n)&&!(n instanceof jt)){if(n instanceof Pt)return n;if(Cn.call(n,"__wrapped__"))return Er(n)}return new Pt(n)}var At=function(){function n(){}return function(e){if(!Vo(e))return{};if(Kn)return Kn(e);n.prototype=e;var t=new n;return n.prototype=void 0,t}}();function Ot(){}function Pt(n,e){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!e,this.__index__=0,this.__values__=void 0}function jt(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function zt(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}function Rt(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}function $t(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var i=n[e];this.set(i[0],i[1])}}function Lt(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new $t;++e<t;)this.add(n[e])}function Ut(n){var e=this.__data__=new Rt(n);this.size=e.size}function Nt(n,e){var t=jo(n),i=!t&&Po(n),a=!t&&!i&&Lo(n),r=!t&&!i&&!a&&Zo(n),o=t||i||a||r,s=o?Me(n.length,_n):[],l=s.length;for(var d in n)!e&&!Cn.call(n,d)||o&&("length"==d||a&&("offset"==d||"parent"==d)||r&&("buffer"==d||"byteLength"==d||"byteOffset"==d)||lr(d,l))||s.push(d);return s}function qt(n){var e=n.length;return e?n[Li(0,e-1)]:void 0}function Bt(n,e){return wr(_a(n),Xt(e,0,n.length))}function Ft(n){return wr(_a(n))}function Vt(n,e,t){(void 0!==t&&!Mo(n[e],t)||void 0===t&&!(e in n))&&Kt(n,e,t)}function Gt(n,e,t){var i=n[e];Cn.call(n,e)&&Mo(i,t)&&(void 0!==t||e in n)||Kt(n,e,t)}function Ht(n,e){for(var t=n.length;t--;)if(Mo(n[t][0],e))return t;return-1}function Wt(n,e,t,i){return ti(n,(function(n,a,r){e(i,n,t(n),r)})),i}function Qt(n,e){return n&&ya(e,xs(e),n)}function Kt(n,e,t){"__proto__"==e&&Xe?Xe(n,e,{configurable:!0,enumerable:!0,value:t,writable:!0}):n[e]=t}function Yt(n,e){for(var t=-1,a=e.length,r=i(a),o=null==n;++t<a;)r[t]=o?void 0:fs(n,e[t]);return r}function Xt(n,e,t){return n==n&&(void 0!==t&&(n=n<=t?n:t),void 0!==e&&(n=n>=e?n:e)),n}function Jt(n,e,t,i,a,r){var o,s=1&e,d=2&e,p=4&e;if(t&&(o=a?t(n,i,a,r):t(n)),void 0!==o)return o;if(!Vo(n))return n;var k=jo(n);if(k){if(o=function(n){var e=n.length,t=new n.constructor(e);e&&"string"==typeof n[0]&&Cn.call(n,"index")&&(t.index=n.index,t.input=n.input);return t}(n),!s)return _a(n,o)}else{var P=ar(n),j=P==h||P==m;if(Lo(n))return ha(n,s);if(P==v||P==l||j&&!a){if(o=d||j?{}:or(n),!s)return d?function(n,e){return ya(n,ir(n),e)}(n,function(n,e){return n&&ya(e,ks(e),n)}(o,n)):function(n,e){return ya(n,tr(n),e)}(n,Qt(o,n))}else{if(!Bn[P])return a?n:{};o=function(n,e,t){var i=n.constructor;switch(e){case T:return ma(n);case c:case u:return new i(+n);case w:return function(n,e){var t=e?ma(n.buffer):n.buffer;return new n.constructor(t,n.byteOffset,n.byteLength)}(n,t);case I:case C:case D:case E:case S:case M:case"[object Uint8ClampedArray]":case A:case O:return ga(n,t);case g:return new i;case f:case y:return new i(n);case b:return function(n){var e=new n.constructor(n.source,an.exec(n));return e.lastIndex=n.lastIndex,e}(n);case _:return new i;case x:return a=n,Et?vn(Et.call(a)):{}}var a}(n,P,s)}}r||(r=new Ut);var z=r.get(n);if(z)return z;if(r.set(n,o),Yo(n))return n.forEach((function(i){o.add(Jt(i,e,t,i,n,r))})),o;if(Ho(n))return n.forEach((function(i,a){o.set(a,Jt(i,e,t,a,n,r))})),o;var R=k?void 0:(p?d?Qa:Wa:d?ks:xs)(n);return le(R||n,(function(i,a){R&&(i=n[a=i]),Gt(o,a,Jt(i,e,t,a,n,r))})),o}function Zt(n,e,t){var i=t.length;if(null==n)return!i;for(n=vn(n);i--;){var a=t[i],r=e[a],o=n[a];if(void 0===o&&!(a in n)||!r(o))return!1}return!0}function ni(n,e,t){if("function"!=typeof n)throw new yn(r);return yr((function(){n.apply(void 0,t)}),e)}function ei(n,e,t,i){var a=-1,r=pe,o=!0,s=n.length,l=[],d=e.length;if(!s)return l;t&&(e=me(e,Ae(t))),i?(r=he,o=!1):e.length>=200&&(r=Pe,o=!1,e=new Lt(e));n:for(;++a<s;){var c=n[a],u=null==t?c:t(c);if(c=i||0!==c?c:0,o&&u==u){for(var p=d;p--;)if(e[p]===u)continue n;l.push(c)}else r(e,u,i)||l.push(c)}return l}Mt.templateSettings={escape:N,evaluate:q,interpolate:B,variable:"",imports:{_:Mt}},Mt.prototype=Ot.prototype,Mt.prototype.constructor=Mt,Pt.prototype=At(Ot.prototype),Pt.prototype.constructor=Pt,jt.prototype=At(Ot.prototype),jt.prototype.constructor=jt,zt.prototype.clear=function(){this.__data__=_t?_t(null):{},this.size=0},zt.prototype.delete=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e},zt.prototype.get=function(n){var e=this.__data__;if(_t){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return Cn.call(e,n)?e[n]:void 0},zt.prototype.has=function(n){var e=this.__data__;return _t?void 0!==e[n]:Cn.call(e,n)},zt.prototype.set=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=_t&&void 0===e?"__lodash_hash_undefined__":e,this},Rt.prototype.clear=function(){this.__data__=[],this.size=0},Rt.prototype.delete=function(n){var e=this.__data__,t=Ht(e,n);return!(t<0)&&(t==e.length-1?e.pop():Jn.call(e,t,1),--this.size,!0)},Rt.prototype.get=function(n){var e=this.__data__,t=Ht(e,n);return t<0?void 0:e[t][1]},Rt.prototype.has=function(n){return Ht(this.__data__,n)>-1},Rt.prototype.set=function(n,e){var t=this.__data__,i=Ht(t,n);return i<0?(++this.size,t.push([n,e])):t[i][1]=e,this},$t.prototype.clear=function(){this.size=0,this.__data__={hash:new zt,map:new(gt||Rt),string:new zt}},$t.prototype.delete=function(n){var e=Za(this,n).delete(n);return this.size-=e?1:0,e},$t.prototype.get=function(n){return Za(this,n).get(n)},$t.prototype.has=function(n){return Za(this,n).has(n)},$t.prototype.set=function(n,e){var t=Za(this,n),i=t.size;return t.set(n,e),this.size+=t.size==i?0:1,this},Lt.prototype.add=Lt.prototype.push=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this},Lt.prototype.has=function(n){return this.__data__.has(n)},Ut.prototype.clear=function(){this.__data__=new Rt,this.size=0},Ut.prototype.delete=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t},Ut.prototype.get=function(n){return this.__data__.get(n)},Ut.prototype.has=function(n){return this.__data__.has(n)},Ut.prototype.set=function(n,e){var t=this.__data__;if(t instanceof Rt){var i=t.__data__;if(!gt||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new $t(i)}return t.set(n,e),this.size=t.size,this};var ti=Ta(ci),ii=Ta(ui,!0);function ai(n,e){var t=!0;return ti(n,(function(n,i,a){return t=!!e(n,i,a)})),t}function ri(n,e,t){for(var i=-1,a=n.length;++i<a;){var r=n[i],o=e(r);if(null!=o&&(void 0===s?o==o&&!Jo(o):t(o,s)))var s=o,l=r}return l}function oi(n,e){var t=[];return ti(n,(function(n,i,a){e(n,i,a)&&t.push(n)})),t}function si(n,e,t,i,a){var r=-1,o=n.length;for(t||(t=sr),a||(a=[]);++r<o;){var s=n[r];e>0&&t(s)?e>1?si(s,e-1,t,i,a):ge(a,s):i||(a[a.length]=s)}return a}var li=wa(),di=wa(!0);function ci(n,e){return n&&li(n,e,xs)}function ui(n,e){return n&&di(n,e,xs)}function pi(n,e){return ue(e,(function(e){return qo(n[e])}))}function hi(n,e){for(var t=0,i=(e=da(e,n)).length;null!=n&&t<i;)n=n[Cr(e[t++])];return t&&t==i?n:void 0}function mi(n,e,t){var i=e(n);return jo(n)?i:ge(i,t(n))}function gi(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":De&&De in vn(n)?function(n){var e=Cn.call(n,De),t=n[De];try{n[De]=void 0;var i=!0}catch(n){}var a=Sn.call(n);i&&(e?n[De]=t:delete n[De]);return a}(n):function(n){return Sn.call(n)}(n)}function fi(n,e){return n>e}function vi(n,e){return null!=n&&Cn.call(n,e)}function bi(n,e){return null!=n&&e in vn(n)}function _i(n,e,t){for(var a=t?he:pe,r=n[0].length,o=n.length,s=o,l=i(o),d=1/0,c=[];s--;){var u=n[s];s&&e&&(u=me(u,Ae(e))),d=dt(u.length,d),l[s]=!t&&(e||r>=120&&u.length>=120)?new Lt(s&&u):void 0}u=n[0];var p=-1,h=l[0];n:for(;++p<r&&c.length<d;){var m=u[p],g=e?e(m):m;if(m=t||0!==m?m:0,!(h?Pe(h,g):a(c,g,t))){for(s=o;--s;){var f=l[s];if(!(f?Pe(f,g):a(n[s],g,t)))continue n}h&&h.push(g),c.push(m)}}return c}function yi(n,e,t){var i=null==(n=vr(n,e=da(e,n)))?n:n[Cr(Ur(e))];return null==i?void 0:oe(i,n,t)}function xi(n){return Go(n)&&gi(n)==l}function ki(n,e,t,i,a){return n===e||(null==n||null==e||!Go(n)&&!Go(e)?n!=n&&e!=e:function(n,e,t,i,a,r){var o=jo(n),s=jo(e),h=o?d:ar(n),m=s?d:ar(e),k=(h=h==l?v:h)==v,I=(m=m==l?v:m)==v,C=h==m;if(C&&Lo(n)){if(!Lo(e))return!1;o=!0,k=!1}if(C&&!k)return r||(r=new Ut),o||Zo(n)?Ga(n,e,t,i,a,r):function(n,e,t,i,a,r,o){switch(t){case w:if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case T:return!(n.byteLength!=e.byteLength||!r(new Fn(n),new Fn(e)));case c:case u:case f:return Mo(+n,+e);case p:return n.name==e.name&&n.message==e.message;case b:case y:return n==e+"";case g:var s=qe;case _:var l=1&i;if(s||(s=Ge),n.size!=e.size&&!l)return!1;var d=o.get(n);if(d)return d==e;i|=2,o.set(n,e);var h=Ga(s(n),s(e),i,a,r,o);return o.delete(n),h;case x:if(Et)return Et.call(n)==Et.call(e)}return!1}(n,e,h,t,i,a,r);if(!(1&t)){var D=k&&Cn.call(n,"__wrapped__"),E=I&&Cn.call(e,"__wrapped__");if(D||E){var S=D?n.value():n,M=E?e.value():e;return r||(r=new Ut),a(S,M,t,i,r)}}if(!C)return!1;return r||(r=new Ut),function(n,e,t,i,a,r){var o=1&t,s=Wa(n),l=s.length,d=Wa(e).length;if(l!=d&&!o)return!1;var c=l;for(;c--;){var u=s[c];if(!(o?u in e:Cn.call(e,u)))return!1}var p=r.get(n);if(p&&r.get(e))return p==e;var h=!0;r.set(n,e),r.set(e,n);var m=o;for(;++c<l;){u=s[c];var g=n[u],f=e[u];if(i)var v=o?i(f,g,u,e,n,r):i(g,f,u,n,e,r);if(!(void 0===v?g===f||a(g,f,t,i,r):v)){h=!1;break}m||(m="constructor"==u)}if(h&&!m){var b=n.constructor,_=e.constructor;b==_||!("constructor"in n)||!("constructor"in e)||"function"==typeof b&&b instanceof b&&"function"==typeof _&&_ instanceof _||(h=!1)}return r.delete(n),r.delete(e),h}(n,e,t,i,a,r)}(n,e,t,i,ki,a))}function Ti(n,e,t,i){var a=t.length,r=a,o=!i;if(null==n)return!r;for(n=vn(n);a--;){var s=t[a];if(o&&s[2]?s[1]!==n[s[0]]:!(s[0]in n))return!1}for(;++a<r;){var l=(s=t[a])[0],d=n[l],c=s[1];if(o&&s[2]){if(void 0===d&&!(l in n))return!1}else{var u=new Ut;if(i)var p=i(d,c,l,n,e,u);if(!(void 0===p?ki(c,d,3,i,u):p))return!1}}return!0}function wi(n){return!(!Vo(n)||(e=n,En&&En in e))&&(qo(n)?On:sn).test(Dr(n));var e}function Ii(n){return"function"==typeof n?n:null==n?Ws:"object"===(void 0===n?"undefined":a(n))?jo(n)?Ai(n[0],n[1]):Mi(n):tl(n)}function Ci(n){if(!hr(n))return st(n);var e=[];for(var t in vn(n))Cn.call(n,t)&&"constructor"!=t&&e.push(t);return e}function Di(n){if(!Vo(n))return function(n){var e=[];if(null!=n)for(var t in vn(n))e.push(t);return e}(n);var e=hr(n),t=[];for(var i in n)("constructor"!=i||!e&&Cn.call(n,i))&&t.push(i);return t}function Ei(n,e){return n<e}function Si(n,e){var t=-1,a=Ro(n)?i(n.length):[];return ti(n,(function(n,i,r){a[++t]=e(n,i,r)})),a}function Mi(n){var e=nr(n);return 1==e.length&&e[0][2]?gr(e[0][0],e[0][1]):function(t){return t===n||Ti(t,n,e)}}function Ai(n,e){return cr(n)&&mr(e)?gr(Cr(n),e):function(t){var i=fs(t,n);return void 0===i&&i===e?vs(t,n):ki(e,i,3)}}function Oi(n,e,t,i,a){n!==e&&li(e,(function(r,o){if(Vo(r))a||(a=new Ut),function(n,e,t,i,a,r,o){var s=Ve(n,t),l=Ve(e,t),d=o.get(l);if(d)return void Vt(n,t,d);var c=r?r(s,l,t+"",n,e,o):void 0,u=void 0===c;if(u){var p=jo(l),h=!p&&Lo(l),m=!p&&!h&&Zo(l);c=l,p||h||m?jo(s)?c=s:$o(s)?c=_a(s):h?(u=!1,c=ha(l,!0)):m?(u=!1,c=ga(l,!0)):c=[]:Qo(l)||Po(l)?(c=s,Po(s)?c=ss(s):(!Vo(s)||i&&qo(s))&&(c=or(l))):u=!1}u&&(o.set(l,c),a(c,l,i,r,o),o.delete(l));Vt(n,t,c)}(n,e,o,t,Oi,i,a);else{var s=i?i(Ve(n,o),r,o+"",n,e,a):void 0;void 0===s&&(s=r),Vt(n,o,s)}}),ks)}function Pi(n,e){var t=n.length;if(t)return lr(e+=e<0?t:0,t)?n[e]:void 0}function ji(n,e,t){var i=-1;return e=me(e.length?e:[Ws],Ae(Ja())),function(n,e){var t=n.length;for(n.sort(e);t--;)n[t]=n[t].value;return n}(Si(n,(function(n,t,a){return{criteria:me(e,(function(e){return e(n)})),index:++i,value:n}})),(function(n,e){return function(n,e,t){var i=-1,a=n.criteria,r=e.criteria,o=a.length,s=t.length;for(;++i<o;){var l=fa(a[i],r[i]);if(l){if(i>=s)return l;var d=t[i];return l*("desc"==d?-1:1)}}return n.index-e.index}(n,e,t)}))}function zi(n,e,t){for(var i=-1,a=e.length,r={};++i<a;){var o=e[i],s=hi(n,o);t(s,o)&&Fi(r,da(o,n),s)}return r}function Ri(n,e,t,i){var a=i?Te:ke,r=-1,o=e.length,s=n;for(n===e&&(e=_a(e)),t&&(s=me(n,Ae(t)));++r<o;)for(var l=0,d=e[r],c=t?t(d):d;(l=a(s,c,l,i))>-1;)s!==n&&Jn.call(s,l,1),Jn.call(n,l,1);return n}function $i(n,e){for(var t=n?e.length:0,i=t-1;t--;){var a=e[t];if(t==i||a!==r){var r=a;lr(a)?Jn.call(n,a,1):ea(n,a)}}return n}function Li(n,e){return n+tt(pt()*(e-n+1))}function Ui(n,e){var t="";if(!n||e<1||e>9007199254740991)return t;do{e%2&&(t+=n),(e=tt(e/2))&&(n+=n)}while(e);return t}function Ni(n,e){return xr(fr(n,e,Ws),n+"")}function qi(n){return qt(Ms(n))}function Bi(n,e){var t=Ms(n);return wr(t,Xt(e,0,t.length))}function Fi(n,e,t,i){if(!Vo(n))return n;for(var a=-1,r=(e=da(e,n)).length,o=r-1,s=n;null!=s&&++a<r;){var l=Cr(e[a]),d=t;if(a!=o){var c=s[l];void 0===(d=i?i(c,l,s):void 0)&&(d=Vo(c)?c:lr(e[a+1])?[]:{})}Gt(s,l,d),s=s[l]}return n}var Vi=yt?function(n,e){return yt.set(n,e),n}:Ws,Gi=Xe?function(n,e){return Xe(n,"toString",{configurable:!0,enumerable:!1,value:Vs(e),writable:!0})}:Ws;function Hi(n){return wr(Ms(n))}function Wi(n,e,t){var a=-1,r=n.length;e<0&&(e=-e>r?0:r+e),(t=t>r?r:t)<0&&(t+=r),r=e>t?0:t-e>>>0,e>>>=0;for(var o=i(r);++a<r;)o[a]=n[a+e];return o}function Qi(n,e){var t;return ti(n,(function(n,i,a){return!(t=e(n,i,a))})),!!t}function Ki(n,e,t){var i=0,a=null==n?i:n.length;if("number"==typeof e&&e==e&&a<=2147483647){for(;i<a;){var r=i+a>>>1,o=n[r];null!==o&&!Jo(o)&&(t?o<=e:o<e)?i=r+1:a=r}return a}return Yi(n,e,Ws,t)}function Yi(n,e,t,i){e=t(e);for(var a=0,r=null==n?0:n.length,o=e!=e,s=null===e,l=Jo(e),d=void 0===e;a<r;){var c=tt((a+r)/2),u=t(n[c]),p=void 0!==u,h=null===u,m=u==u,g=Jo(u);if(o)var f=i||m;else f=d?m&&(i||p):s?m&&p&&(i||!h):l?m&&p&&!h&&(i||!g):!h&&!g&&(i?u<=e:u<e);f?a=c+1:r=c}return dt(r,4294967294)}function Xi(n,e){for(var t=-1,i=n.length,a=0,r=[];++t<i;){var o=n[t],s=e?e(o):o;if(!t||!Mo(s,l)){var l=s;r[a++]=0===o?0:o}}return r}function Ji(n){return"number"==typeof n?n:Jo(n)?NaN:+n}function Zi(n){if("string"==typeof n)return n;if(jo(n))return me(n,Zi)+"";if(Jo(n))return St?St.call(n):"";var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}function na(n,e,t){var i=-1,a=pe,r=n.length,o=!0,s=[],l=s;if(t)o=!1,a=he;else if(r>=200){var d=e?null:Ua(n);if(d)return Ge(d);o=!1,a=Pe,l=new Lt}else l=e?[]:s;n:for(;++i<r;){var c=n[i],u=e?e(c):c;if(c=t||0!==c?c:0,o&&u==u){for(var p=l.length;p--;)if(l[p]===u)continue n;e&&l.push(u),s.push(c)}else a(l,u,t)||(l!==s&&l.push(u),s.push(c))}return s}function ea(n,e){return null==(n=vr(n,e=da(e,n)))||delete n[Cr(Ur(e))]}function ta(n,e,t,i){return Fi(n,e,t(hi(n,e)),i)}function ia(n,e,t,i){for(var a=n.length,r=i?a:-1;(i?r--:++r<a)&&e(n[r],r,n););return t?Wi(n,i?0:r,i?r+1:a):Wi(n,i?r+1:0,i?a:r)}function aa(n,e){var t=n;return t instanceof jt&&(t=t.value()),fe(e,(function(n,e){return e.func.apply(e.thisArg,ge([n],e.args))}),t)}function ra(n,e,t){var a=n.length;if(a<2)return a?na(n[0]):[];for(var r=-1,o=i(a);++r<a;)for(var s=n[r],l=-1;++l<a;)l!=r&&(o[r]=ei(o[r]||s,n[l],e,t));return na(si(o,1),e,t)}function oa(n,e,t){for(var i=-1,a=n.length,r=e.length,o={};++i<a;){var s=i<r?e[i]:void 0;t(o,n[i],s)}return o}function sa(n){return $o(n)?n:[]}function la(n){return"function"==typeof n?n:Ws}function da(n,e){return jo(n)?n:cr(n,e)?[n]:Ir(ls(n))}var ca=Ni;function ua(n,e,t){var i=n.length;return t=void 0===t?i:t,!e&&t>=i?n:Wi(n,e,t)}var pa=Je||function(n){return Qn.clearTimeout(n)};function ha(n,e){if(e)return n.slice();var t=n.length,i=Hn?Hn(t):new n.constructor(t);return n.copy(i),i}function ma(n){var e=new n.constructor(n.byteLength);return new Fn(e).set(new Fn(n)),e}function ga(n,e){var t=e?ma(n.buffer):n.buffer;return new n.constructor(t,n.byteOffset,n.length)}function fa(n,e){if(n!==e){var t=void 0!==n,i=null===n,a=n==n,r=Jo(n),o=void 0!==e,s=null===e,l=e==e,d=Jo(e);if(!s&&!d&&!r&&n>e||r&&o&&l&&!s&&!d||i&&o&&l||!t&&l||!a)return 1;if(!i&&!r&&!d&&n<e||d&&t&&a&&!i&&!r||s&&t&&a||!o&&a||!l)return-1}return 0}function va(n,e,t,a){for(var r=-1,o=n.length,s=t.length,l=-1,d=e.length,c=lt(o-s,0),u=i(d+c),p=!a;++l<d;)u[l]=e[l];for(;++r<s;)(p||r<o)&&(u[t[r]]=n[r]);for(;c--;)u[l++]=n[r++];return u}function ba(n,e,t,a){for(var r=-1,o=n.length,s=-1,l=t.length,d=-1,c=e.length,u=lt(o-l,0),p=i(u+c),h=!a;++r<u;)p[r]=n[r];for(var m=r;++d<c;)p[m+d]=e[d];for(;++s<l;)(h||r<o)&&(p[m+t[s]]=n[r++]);return p}function _a(n,e){var t=-1,a=n.length;for(e||(e=i(a));++t<a;)e[t]=n[t];return e}function ya(n,e,t,i){var a=!t;t||(t={});for(var r=-1,o=e.length;++r<o;){var s=e[r],l=i?i(t[s],n[s],s,t,n):void 0;void 0===l&&(l=n[s]),a?Kt(t,s,l):Gt(t,s,l)}return t}function xa(n,e){return function(t,i){var a=jo(t)?se:Wt,r=e?e():{};return a(t,n,Ja(i,2),r)}}function ka(n){return Ni((function(e,t){var i=-1,a=t.length,r=a>1?t[a-1]:void 0,o=a>2?t[2]:void 0;for(r=n.length>3&&"function"==typeof r?(a--,r):void 0,o&&dr(t[0],t[1],o)&&(r=a<3?void 0:r,a=1),e=vn(e);++i<a;){var s=t[i];s&&n(e,s,i,r)}return e}))}function Ta(n,e){return function(t,i){if(null==t)return t;if(!Ro(t))return n(t,i);for(var a=t.length,r=e?a:-1,o=vn(t);(e?r--:++r<a)&&!1!==i(o[r],r,o););return t}}function wa(n){return function(e,t,i){for(var a=-1,r=vn(e),o=i(e),s=o.length;s--;){var l=o[n?s:++a];if(!1===t(r[l],l,r))break}return e}}function Ia(n){return function(e){var t=Ne(e=ls(e))?Qe(e):void 0,i=t?t[0]:e.charAt(0),a=t?ua(t,1).join(""):e.slice(1);return i[n]()+a}}function Ca(n){return function(e){return fe(qs(Ps(e).replace(Pn,"")),n,"")}}function Da(n){return function(){var e=arguments;switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3]);case 5:return new n(e[0],e[1],e[2],e[3],e[4]);case 6:return new n(e[0],e[1],e[2],e[3],e[4],e[5]);case 7:return new n(e[0],e[1],e[2],e[3],e[4],e[5],e[6])}var t=At(n.prototype),i=n.apply(t,e);return Vo(i)?i:t}}function Ea(n){return function(e,t,i){var a=vn(e);if(!Ro(e)){var r=Ja(t,3);e=xs(e),t=function(n){return r(a[n],n,a)}}var o=n(e,t,i);return o>-1?a[r?e[o]:o]:void 0}}function Sa(n){return Ha((function(e){var t=e.length,i=t,a=Pt.prototype.thru;for(n&&e.reverse();i--;){var o=e[i];if("function"!=typeof o)throw new yn(r);if(a&&!s&&"wrapper"==Ya(o))var s=new Pt([],!0)}for(i=s?i:t;++i<t;){var l=Ya(o=e[i]),d="wrapper"==l?Ka(o):void 0;s=d&&ur(d[0])&&424==d[1]&&!d[4].length&&1==d[9]?s[Ya(d[0])].apply(s,d[3]):1==o.length&&ur(o)?s[l]():s.thru(o)}return function(){var n=arguments,i=n[0];if(s&&1==n.length&&jo(i))return s.plant(i).value();for(var a=0,r=t?e[a].apply(this,n):i;++a<t;)r=e[a].call(this,r);return r}}))}function Ma(n,e,t,a,r,o,s,l,d,c){var u=128&e,p=1&e,h=2&e,m=24&e,g=512&e,f=h?void 0:Da(n);return function v(){for(var b=arguments.length,_=i(b),y=b;y--;)_[y]=arguments[y];if(m)var x=Xa(v),k=Re(_,x);if(a&&(_=va(_,a,r,m)),o&&(_=ba(_,o,s,m)),b-=k,m&&b<c){var T=Fe(_,x);return $a(n,e,Ma,v.placeholder,t,_,T,l,d,c-b)}var w=p?t:this,I=h?w[n]:n;return b=_.length,l?_=br(_,l):g&&b>1&&_.reverse(),u&&d<b&&(_.length=d),this&&this!==Qn&&this instanceof v&&(I=f||Da(I)),I.apply(w,_)}}function Aa(n,e){return function(t,i){return function(n,e,t,i){return ci(n,(function(n,a,r){e(i,t(n),a,r)})),i}(t,n,e(i),{})}}function Oa(n,e){return function(t,i){var a;if(void 0===t&&void 0===i)return e;if(void 0!==t&&(a=t),void 0!==i){if(void 0===a)return i;"string"==typeof t||"string"==typeof i?(t=Zi(t),i=Zi(i)):(t=Ji(t),i=Ji(i)),a=n(t,i)}return a}}function Pa(n){return Ha((function(e){return e=me(e,Ae(Ja())),Ni((function(t){var i=this;return n(e,(function(n){return oe(n,i,t)}))}))}))}function ja(n,e){var t=(e=void 0===e?" ":Zi(e)).length;if(t<2)return t?Ui(e,n):e;var i=Ui(e,et(n/We(e)));return Ne(e)?ua(Qe(i),0,n).join(""):i.slice(0,n)}function za(n){return function(e,t,a){return a&&"number"!=typeof a&&dr(e,t,a)&&(t=a=void 0),e=is(e),void 0===t?(t=e,e=0):t=is(t),function(n,e,t,a){for(var r=-1,o=lt(et((e-n)/(t||1)),0),s=i(o);o--;)s[a?o:++r]=n,n+=t;return s}(e,t,a=void 0===a?e<t?1:-1:is(a),n)}}function Ra(n){return function(e,t){return"string"==typeof e&&"string"==typeof t||(e=os(e),t=os(t)),n(e,t)}}function $a(n,e,t,i,a,r,o,s,l,d){var c=8&e;e|=c?32:64,4&(e&=~(c?64:32))||(e&=-4);var u=[n,e,a,c?r:void 0,c?o:void 0,c?void 0:r,c?void 0:o,s,l,d],p=t.apply(void 0,u);return ur(n)&&_r(p,u),p.placeholder=i,kr(p,n,e)}function La(n){var e=fn[n];return function(n,t){if(n=os(n),t=null==t?0:dt(as(t),292)){var i=(ls(n)+"e").split("e");return+((i=(ls(e(i[0]+"e"+(+i[1]+t)))+"e").split("e"))[0]+"e"+(+i[1]-t))}return e(n)}}var Ua=vt&&1/Ge(new vt([,-0]))[1]==1/0?function(n){return new vt(n)}:Js;function Na(n){return function(e){var t=ar(e);return t==g?qe(e):t==_?He(e):function(n,e){return me(e,(function(e){return[e,n[e]]}))}(e,n(e))}}function qa(n,e,t,a,s,l,d,c){var u=2&e;if(!u&&"function"!=typeof n)throw new yn(r);var p=a?a.length:0;if(p||(e&=-97,a=s=void 0),d=void 0===d?d:lt(as(d),0),c=void 0===c?c:as(c),p-=s?s.length:0,64&e){var h=a,m=s;a=s=void 0}var g=u?void 0:Ka(n),f=[n,e,t,a,s,h,m,l,d,c];if(g&&function(n,e){var t=n[1],i=e[1],a=t|i,r=a<131,s=128==i&&8==t||128==i&&256==t&&n[7].length<=e[8]||384==i&&e[7].length<=e[8]&&8==t;if(!r&&!s)return n;1&i&&(n[2]=e[2],a|=1&t?0:4);var l=e[3];if(l){var d=n[3];n[3]=d?va(d,l,e[4]):l,n[4]=d?Fe(n[3],o):e[4]}(l=e[5])&&(d=n[5],n[5]=d?ba(d,l,e[6]):l,n[6]=d?Fe(n[5],o):e[6]);(l=e[7])&&(n[7]=l);128&i&&(n[8]=null==n[8]?e[8]:dt(n[8],e[8]));null==n[9]&&(n[9]=e[9]);n[0]=e[0],n[1]=a}(f,g),n=f[0],e=f[1],t=f[2],a=f[3],s=f[4],!(c=f[9]=void 0===f[9]?u?0:n.length:lt(f[9]-p,0))&&24&e&&(e&=-25),e&&1!=e)v=8==e||16==e?function(n,e,t){var a=Da(n);return function r(){for(var o=arguments.length,s=i(o),l=o,d=Xa(r);l--;)s[l]=arguments[l];var c=o<3&&s[0]!==d&&s[o-1]!==d?[]:Fe(s,d);if((o-=c.length)<t)return $a(n,e,Ma,r.placeholder,void 0,s,c,void 0,void 0,t-o);var u=this&&this!==Qn&&this instanceof r?a:n;return oe(u,this,s)}}(n,e,c):32!=e&&33!=e||s.length?Ma.apply(void 0,f):function(n,e,t,a){var r=1&e,o=Da(n);return function e(){for(var s=-1,l=arguments.length,d=-1,c=a.length,u=i(c+l),p=this&&this!==Qn&&this instanceof e?o:n;++d<c;)u[d]=a[d];for(;l--;)u[d++]=arguments[++s];return oe(p,r?t:this,u)}}(n,e,t,a);else var v=function(n,e,t){var i=1&e,a=Da(n);return function e(){var r=this&&this!==Qn&&this instanceof e?a:n;return r.apply(i?t:this,arguments)}}(n,e,t);return kr((g?Vi:_r)(v,f),n,e)}function Ba(n,e,t,i){return void 0===n||Mo(n,Tn[t])&&!Cn.call(i,t)?e:n}function Fa(n,e,t,i,a,r){return Vo(n)&&Vo(e)&&(r.set(e,n),Oi(n,e,void 0,Fa,r),r.delete(e)),n}function Va(n){return Qo(n)?void 0:n}function Ga(n,e,t,i,a,r){var o=1&t,s=n.length,l=e.length;if(s!=l&&!(o&&l>s))return!1;var d=r.get(n);if(d&&r.get(e))return d==e;var c=-1,u=!0,p=2&t?new Lt:void 0;for(r.set(n,e),r.set(e,n);++c<s;){var h=n[c],m=e[c];if(i)var g=o?i(m,h,c,e,n,r):i(h,m,c,n,e,r);if(void 0!==g){if(g)continue;u=!1;break}if(p){if(!be(e,(function(n,e){if(!Pe(p,e)&&(h===n||a(h,n,t,i,r)))return p.push(e)}))){u=!1;break}}else if(h!==m&&!a(h,m,t,i,r)){u=!1;break}}return r.delete(n),r.delete(e),u}function Ha(n){return xr(fr(n,void 0,jr),n+"")}function Wa(n){return mi(n,xs,tr)}function Qa(n){return mi(n,ks,ir)}var Ka=yt?function(n){return yt.get(n)}:Js;function Ya(n){for(var e=n.name+"",t=xt[e],i=Cn.call(xt,e)?t.length:0;i--;){var a=t[i],r=a.func;if(null==r||r==n)return a.name}return e}function Xa(n){return(Cn.call(Mt,"placeholder")?Mt:n).placeholder}function Ja(){var n=Mt.iteratee||Qs;return n=n===Qs?Ii:n,arguments.length?n(arguments[0],arguments[1]):n}function Za(n,e){var t,i,r=n.__data__;return("string"==(i=void 0===(t=e)?"undefined":a(t))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==t:null===t)?r["string"==typeof e?"string":"hash"]:r.map}function nr(n){for(var e=xs(n),t=e.length;t--;){var i=e[t],a=n[i];e[t]=[i,a,mr(a)]}return e}function er(n,e){var t=function(n,e){return null==n?void 0:n[e]}(n,e);return wi(t)?t:void 0}var tr=it?function(n){return null==n?[]:(n=vn(n),ue(it(n),(function(e){return Yn.call(n,e)})))}:rl,ir=it?function(n){for(var e=[];n;)ge(e,tr(n)),n=Wn(n);return e}:rl,ar=gi;function rr(n,e,t){for(var i=-1,a=(e=da(e,n)).length,r=!1;++i<a;){var o=Cr(e[i]);if(!(r=null!=n&&t(n,o)))break;n=n[o]}return r||++i!=a?r:!!(a=null==n?0:n.length)&&Fo(a)&&lr(o,a)&&(jo(n)||Po(n))}function or(n){return"function"!=typeof n.constructor||hr(n)?{}:At(Wn(n))}function sr(n){return jo(n)||Po(n)||!!(Zn&&n&&n[Zn])}function lr(n,e){var t=void 0===n?"undefined":a(n);return!!(e=null==e?9007199254740991:e)&&("number"==t||"symbol"!=t&&dn.test(n))&&n>-1&&n%1==0&&n<e}function dr(n,e,t){if(!Vo(t))return!1;var i=void 0===e?"undefined":a(e);return!!("number"==i?Ro(t)&&lr(e,t.length):"string"==i&&e in t)&&Mo(t[e],n)}function cr(n,e){if(jo(n))return!1;var t=void 0===n?"undefined":a(n);return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!Jo(n))||(V.test(n)||!F.test(n)||null!=e&&n in vn(e))}function ur(n){var e=Ya(n),t=Mt[e];if("function"!=typeof t||!(e in jt.prototype))return!1;if(n===t)return!0;var i=Ka(t);return!!i&&n===i[0]}(mt&&ar(new mt(new ArrayBuffer(1)))!=w||gt&&ar(new gt)!=g||ft&&"[object Promise]"!=ar(ft.resolve())||vt&&ar(new vt)!=_||bt&&ar(new bt)!=k)&&(ar=function(n){var e=gi(n),t=e==v?n.constructor:void 0,i=t?Dr(t):"";if(i)switch(i){case kt:return w;case Tt:return g;case wt:return"[object Promise]";case It:return _;case Ct:return k}return e});var pr=wn?qo:ol;function hr(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||Tn)}function mr(n){return n==n&&!Vo(n)}function gr(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in vn(t)))}}function fr(n,e,t){return e=lt(void 0===e?n.length-1:e,0),function(){for(var a=arguments,r=-1,o=lt(a.length-e,0),s=i(o);++r<o;)s[r]=a[e+r];r=-1;for(var l=i(e+1);++r<e;)l[r]=a[r];return l[e]=t(s),oe(n,this,l)}}function vr(n,e){return e.length<2?n:hi(n,Wi(e,0,-1))}function br(n,e){for(var t=n.length,i=dt(e.length,t),a=_a(n);i--;){var r=e[i];n[i]=lr(r,t)?a[r]:void 0}return n}var _r=Tr(Vi),yr=nt||function(n,e){return Qn.setTimeout(n,e)},xr=Tr(Gi);function kr(n,e,t){var i=e+"";return xr(n,function(n,e){var t=e.length;if(!t)return n;var i=t-1;return e[i]=(t>1?"& ":"")+e[i],e=e.join(t>2?", ":" "),n.replace(X,"{\n/* [wrapped with "+e+"] */\n")}(i,function(n,e){return le(s,(function(t){var i="_."+t[0];e&t[1]&&!pe(n,i)&&n.push(i)})),n.sort()}(function(n){var e=n.match(J);return e?e[1].split(Z):[]}(i),t)))}function Tr(n){var e=0,t=0;return function(){var i=ct(),a=16-(i-t);if(t=i,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}function wr(n,e){var t=-1,i=n.length,a=i-1;for(e=void 0===e?i:e;++t<e;){var r=Li(t,a),o=n[r];n[r]=n[t],n[t]=o}return n.length=e,n}var Ir=function(n){var e=wo(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(G,(function(n,t,i,a){e.push(i?a.replace(en,"$1"):t||n)})),e}));function Cr(n){if("string"==typeof n||Jo(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}function Dr(n){if(null!=n){try{return In.call(n)}catch(n){}try{return n+""}catch(n){}}return""}function Er(n){if(n instanceof jt)return n.clone();var e=new Pt(n.__wrapped__,n.__chain__);return e.__actions__=_a(n.__actions__),e.__index__=n.__index__,e.__values__=n.__values__,e}var Sr=Ni((function(n,e){return $o(n)?ei(n,si(e,1,$o,!0)):[]})),Mr=Ni((function(n,e){var t=Ur(e);return $o(t)&&(t=void 0),$o(n)?ei(n,si(e,1,$o,!0),Ja(t,2)):[]})),Ar=Ni((function(n,e){var t=Ur(e);return $o(t)&&(t=void 0),$o(n)?ei(n,si(e,1,$o,!0),void 0,t):[]}));function Or(n,e,t){var i=null==n?0:n.length;if(!i)return-1;var a=null==t?0:as(t);return a<0&&(a=lt(i+a,0)),xe(n,Ja(e,3),a)}function Pr(n,e,t){var i=null==n?0:n.length;if(!i)return-1;var a=i-1;return void 0!==t&&(a=as(t),a=t<0?lt(i+a,0):dt(a,i-1)),xe(n,Ja(e,3),a,!0)}function jr(n){return(null==n?0:n.length)?si(n,1):[]}function zr(n){return n&&n.length?n[0]:void 0}var Rr=Ni((function(n){var e=me(n,sa);return e.length&&e[0]===n[0]?_i(e):[]})),$r=Ni((function(n){var e=Ur(n),t=me(n,sa);return e===Ur(t)?e=void 0:t.pop(),t.length&&t[0]===n[0]?_i(t,Ja(e,2)):[]})),Lr=Ni((function(n){var e=Ur(n),t=me(n,sa);return(e="function"==typeof e?e:void 0)&&t.pop(),t.length&&t[0]===n[0]?_i(t,void 0,e):[]}));function Ur(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}var Nr=Ni(qr);function qr(n,e){return n&&n.length&&e&&e.length?Ri(n,e):n}var Br=Ha((function(n,e){var t=null==n?0:n.length,i=Yt(n,e);return $i(n,me(e,(function(n){return lr(n,t)?+n:n})).sort(fa)),i}));function Fr(n){return null==n?n:ht.call(n)}var Vr=Ni((function(n){return na(si(n,1,$o,!0))})),Gr=Ni((function(n){var e=Ur(n);return $o(e)&&(e=void 0),na(si(n,1,$o,!0),Ja(e,2))})),Hr=Ni((function(n){var e=Ur(n);return e="function"==typeof e?e:void 0,na(si(n,1,$o,!0),void 0,e)}));function Wr(n){if(!n||!n.length)return[];var e=0;return n=ue(n,(function(n){if($o(n))return e=lt(n.length,e),!0})),Me(e,(function(e){return me(n,Ce(e))}))}function Qr(n,e){if(!n||!n.length)return[];var t=Wr(n);return null==e?t:me(t,(function(n){return oe(e,void 0,n)}))}var Kr=Ni((function(n,e){return $o(n)?ei(n,e):[]})),Yr=Ni((function(n){return ra(ue(n,$o))})),Xr=Ni((function(n){var e=Ur(n);return $o(e)&&(e=void 0),ra(ue(n,$o),Ja(e,2))})),Jr=Ni((function(n){var e=Ur(n);return e="function"==typeof e?e:void 0,ra(ue(n,$o),void 0,e)})),Zr=Ni(Wr);var no=Ni((function(n){var e=n.length,t=e>1?n[e-1]:void 0;return t="function"==typeof t?(n.pop(),t):void 0,Qr(n,t)}));function eo(n){var e=Mt(n);return e.__chain__=!0,e}function to(n,e){return e(n)}var io=Ha((function(n){var e=n.length,t=e?n[0]:0,i=this.__wrapped__,a=function(e){return Yt(e,n)};return!(e>1||this.__actions__.length)&&i instanceof jt&&lr(t)?((i=i.slice(t,+t+(e?1:0))).__actions__.push({func:to,args:[a],thisArg:void 0}),new Pt(i,this.__chain__).thru((function(n){return e&&!n.length&&n.push(void 0),n}))):this.thru(a)}));var ao=xa((function(n,e,t){Cn.call(n,t)?++n[t]:Kt(n,t,1)}));var ro=Ea(Or),oo=Ea(Pr);function so(n,e){return(jo(n)?le:ti)(n,Ja(e,3))}function lo(n,e){return(jo(n)?de:ii)(n,Ja(e,3))}var co=xa((function(n,e,t){Cn.call(n,t)?n[t].push(e):Kt(n,t,[e])}));var uo=Ni((function(n,e,t){var a=-1,r="function"==typeof e,o=Ro(n)?i(n.length):[];return ti(n,(function(n){o[++a]=r?oe(e,n,t):yi(n,e,t)})),o})),po=xa((function(n,e,t){Kt(n,t,e)}));function ho(n,e){return(jo(n)?me:Si)(n,Ja(e,3))}var mo=xa((function(n,e,t){n[t?0:1].push(e)}),(function(){return[[],[]]}));var go=Ni((function(n,e){if(null==n)return[];var t=e.length;return t>1&&dr(n,e[0],e[1])?e=[]:t>2&&dr(e[0],e[1],e[2])&&(e=[e[0]]),ji(n,si(e,1),[])})),fo=Ze||function(){return Qn.Date.now()};function vo(n,e,t){return e=t?void 0:e,qa(n,128,void 0,void 0,void 0,void 0,e=n&&null==e?n.length:e)}function bo(n,e){var t;if("function"!=typeof e)throw new yn(r);return n=as(n),function(){return--n>0&&(t=e.apply(this,arguments)),n<=1&&(e=void 0),t}}var _o=Ni((function(n,e,t){var i=1;if(t.length){var a=Fe(t,Xa(_o));i|=32}return qa(n,i,e,t,a)})),yo=Ni((function(n,e,t){var i=3;if(t.length){var a=Fe(t,Xa(yo));i|=32}return qa(e,i,n,t,a)}));function xo(n,e,t){var i,a,o,s,l,d,c=0,u=!1,p=!1,h=!0;if("function"!=typeof n)throw new yn(r);function m(e){var t=i,r=a;return i=a=void 0,c=e,s=n.apply(r,t)}function g(n){return c=n,l=yr(v,e),u?m(n):s}function f(n){var t=n-d;return void 0===d||t>=e||t<0||p&&n-c>=o}function v(){var n=fo();if(f(n))return b(n);l=yr(v,function(n){var t=e-(n-d);return p?dt(t,o-(n-c)):t}(n))}function b(n){return l=void 0,h&&i?m(n):(i=a=void 0,s)}function _(){var n=fo(),t=f(n);if(i=arguments,a=this,d=n,t){if(void 0===l)return g(d);if(p)return l=yr(v,e),m(d)}return void 0===l&&(l=yr(v,e)),s}return e=os(e)||0,Vo(t)&&(u=!!t.leading,o=(p="maxWait"in t)?lt(os(t.maxWait)||0,e):o,h="trailing"in t?!!t.trailing:h),_.cancel=function(){void 0!==l&&pa(l),c=0,i=d=a=l=void 0},_.flush=function(){return void 0===l?s:b(fo())},_}var ko=Ni((function(n,e){return ni(n,1,e)})),To=Ni((function(n,e,t){return ni(n,os(e)||0,t)}));function wo(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new yn(r);var t=function t(){var i=arguments,a=e?e.apply(this,i):i[0],r=t.cache;if(r.has(a))return r.get(a);var o=n.apply(this,i);return t.cache=r.set(a,o)||r,o};return t.cache=new(wo.Cache||$t),t}function Io(n){if("function"!=typeof n)throw new yn(r);return function(){var e=arguments;switch(e.length){case 0:return!n.call(this);case 1:return!n.call(this,e[0]);case 2:return!n.call(this,e[0],e[1]);case 3:return!n.call(this,e[0],e[1],e[2])}return!n.apply(this,e)}}wo.Cache=$t;var Co=ca((function(n,e){var t=(e=1==e.length&&jo(e[0])?me(e[0],Ae(Ja())):me(si(e,1),Ae(Ja()))).length;return Ni((function(i){for(var a=-1,r=dt(i.length,t);++a<r;)i[a]=e[a].call(this,i[a]);return oe(n,this,i)}))})),Do=Ni((function(n,e){return qa(n,32,void 0,e,Fe(e,Xa(Do)))})),Eo=Ni((function(n,e){return qa(n,64,void 0,e,Fe(e,Xa(Eo)))})),So=Ha((function(n,e){return qa(n,256,void 0,void 0,void 0,e)}));function Mo(n,e){return n===e||n!=n&&e!=e}var Ao=Ra(fi),Oo=Ra((function(n,e){return n>=e})),Po=xi(function(){return arguments}())?xi:function(n){return Go(n)&&Cn.call(n,"callee")&&!Yn.call(n,"callee")},jo=i.isArray,zo=ne?Ae(ne):function(n){return Go(n)&&gi(n)==T};function Ro(n){return null!=n&&Fo(n.length)&&!qo(n)}function $o(n){return Go(n)&&Ro(n)}var Lo=at||ol,Uo=ee?Ae(ee):function(n){return Go(n)&&gi(n)==u};function No(n){if(!Go(n))return!1;var e=gi(n);return e==p||"[object DOMException]"==e||"string"==typeof n.message&&"string"==typeof n.name&&!Qo(n)}function qo(n){if(!Vo(n))return!1;var e=gi(n);return e==h||e==m||"[object AsyncFunction]"==e||"[object Proxy]"==e}function Bo(n){return"number"==typeof n&&n==as(n)}function Fo(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}function Vo(n){var e=void 0===n?"undefined":a(n);return null!=n&&("object"==e||"function"==e)}function Go(n){return null!=n&&"object"===(void 0===n?"undefined":a(n))}var Ho=te?Ae(te):function(n){return Go(n)&&ar(n)==g};function Wo(n){return"number"==typeof n||Go(n)&&gi(n)==f}function Qo(n){if(!Go(n)||gi(n)!=v)return!1;var e=Wn(n);if(null===e)return!0;var t=Cn.call(e,"constructor")&&e.constructor;return"function"==typeof t&&t instanceof t&&In.call(t)==Mn}var Ko=ie?Ae(ie):function(n){return Go(n)&&gi(n)==b};var Yo=ae?Ae(ae):function(n){return Go(n)&&ar(n)==_};function Xo(n){return"string"==typeof n||!jo(n)&&Go(n)&&gi(n)==y}function Jo(n){return"symbol"===(void 0===n?"undefined":a(n))||Go(n)&&gi(n)==x}var Zo=re?Ae(re):function(n){return Go(n)&&Fo(n.length)&&!!qn[gi(n)]};var ns=Ra(Ei),es=Ra((function(n,e){return n<=e}));function ts(n){if(!n)return[];if(Ro(n))return Xo(n)?Qe(n):_a(n);if(_e&&n[_e])return function(n){for(var e,t=[];!(e=n.next()).done;)t.push(e.value);return t}(n[_e]());var e=ar(n);return(e==g?qe:e==_?Ge:Ms)(n)}function is(n){return n?(n=os(n))===1/0||n===-1/0?17976931348623157e292*(n<0?-1:1):n==n?n:0:0===n?n:0}function as(n){var e=is(n),t=e%1;return e==e?t?e-t:e:0}function rs(n){return n?Xt(as(n),0,4294967295):0}function os(n){if("number"==typeof n)return n;if(Jo(n))return NaN;if(Vo(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=Vo(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(Q,"");var t=on.test(n);return t||ln.test(n)?Gn(n.slice(2),t?2:8):rn.test(n)?NaN:+n}function ss(n){return ya(n,ks(n))}function ls(n){return null==n?"":Zi(n)}var ds=ka((function(n,e){if(hr(e)||Ro(e))ya(e,xs(e),n);else for(var t in e)Cn.call(e,t)&&Gt(n,t,e[t])})),cs=ka((function(n,e){ya(e,ks(e),n)})),us=ka((function(n,e,t,i){ya(e,ks(e),n,i)})),ps=ka((function(n,e,t,i){ya(e,xs(e),n,i)})),hs=Ha(Yt);var ms=Ni((function(n,e){n=vn(n);var t=-1,i=e.length,a=i>2?e[2]:void 0;for(a&&dr(e[0],e[1],a)&&(i=1);++t<i;)for(var r=e[t],o=ks(r),s=-1,l=o.length;++s<l;){var d=o[s],c=n[d];(void 0===c||Mo(c,Tn[d])&&!Cn.call(n,d))&&(n[d]=r[d])}return n})),gs=Ni((function(n){return n.push(void 0,Fa),oe(ws,void 0,n)}));function fs(n,e,t){var i=null==n?void 0:hi(n,e);return void 0===i?t:i}function vs(n,e){return null!=n&&rr(n,e,bi)}var bs=Aa((function(n,e,t){null!=e&&"function"!=typeof e.toString&&(e=Sn.call(e)),n[e]=t}),Vs(Ws)),_s=Aa((function(n,e,t){null!=e&&"function"!=typeof e.toString&&(e=Sn.call(e)),Cn.call(n,e)?n[e].push(t):n[e]=[t]}),Ja),ys=Ni(yi);function xs(n){return Ro(n)?Nt(n):Ci(n)}function ks(n){return Ro(n)?Nt(n,!0):Di(n)}var Ts=ka((function(n,e,t){Oi(n,e,t)})),ws=ka((function(n,e,t,i){Oi(n,e,t,i)})),Is=Ha((function(n,e){var t={};if(null==n)return t;var i=!1;e=me(e,(function(e){return e=da(e,n),i||(i=e.length>1),e})),ya(n,Qa(n),t),i&&(t=Jt(t,7,Va));for(var a=e.length;a--;)ea(t,e[a]);return t}));var Cs=Ha((function(n,e){return null==n?{}:function(n,e){return zi(n,e,(function(e,t){return vs(n,t)}))}(n,e)}));function Ds(n,e){if(null==n)return{};var t=me(Qa(n),(function(n){return[n]}));return e=Ja(e),zi(n,t,(function(n,t){return e(n,t[0])}))}var Es=Na(xs),Ss=Na(ks);function Ms(n){return null==n?[]:Oe(n,xs(n))}var As=Ca((function(n,e,t){return e=e.toLowerCase(),n+(t?Os(e):e)}));function Os(n){return Ns(ls(n).toLowerCase())}function Ps(n){return(n=ls(n))&&n.replace(cn,$e).replace(jn,"")}var js=Ca((function(n,e,t){return n+(t?"-":"")+e.toLowerCase()})),zs=Ca((function(n,e,t){return n+(t?" ":"")+e.toLowerCase()})),Rs=Ia("toLowerCase");var $s=Ca((function(n,e,t){return n+(t?"_":"")+e.toLowerCase()}));var Ls=Ca((function(n,e,t){return n+(t?" ":"")+Ns(e)}));var Us=Ca((function(n,e,t){return n+(t?" ":"")+e.toUpperCase()})),Ns=Ia("toUpperCase");function qs(n,e,t){return n=ls(n),void 0===(e=t?void 0:e)?function(n){return Ln.test(n)}(n)?function(n){return n.match(Rn)||[]}(n):function(n){return n.match(nn)||[]}(n):n.match(e)||[]}var Bs=Ni((function(n,e){try{return oe(n,void 0,e)}catch(n){return No(n)?n:new mn(n)}})),Fs=Ha((function(n,e){return le(e,(function(e){e=Cr(e),Kt(n,e,_o(n[e],n))})),n}));function Vs(n){return function(){return n}}var Gs=Sa(),Hs=Sa(!0);function Ws(n){return n}function Qs(n){return Ii("function"==typeof n?n:Jt(n,1))}var Ks=Ni((function(n,e){return function(t){return yi(t,n,e)}})),Ys=Ni((function(n,e){return function(t){return yi(n,t,e)}}));function Xs(n,e,t){var i=xs(e),a=pi(e,i);null!=t||Vo(e)&&(a.length||!i.length)||(t=e,e=n,n=this,a=pi(e,xs(e)));var r=!(Vo(t)&&"chain"in t&&!t.chain),o=qo(n);return le(a,(function(t){var i=e[t];n[t]=i,o&&(n.prototype[t]=function(){var e=this.__chain__;if(r||e){var t=n(this.__wrapped__),a=t.__actions__=_a(this.__actions__);return a.push({func:i,args:arguments,thisArg:n}),t.__chain__=e,t}return i.apply(n,ge([this.value()],arguments))})})),n}function Js(){}var Zs=Pa(me),nl=Pa(ce),el=Pa(be);function tl(n){return cr(n)?Ce(Cr(n)):function(n){return function(e){return hi(e,n)}}(n)}var il=za(),al=za(!0);function rl(){return[]}function ol(){return!1}var sl=Oa((function(n,e){return n+e}),0),ll=La("ceil"),dl=Oa((function(n,e){return n/e}),1),cl=La("floor");var ul,pl=Oa((function(n,e){return n*e}),1),hl=La("round"),ml=Oa((function(n,e){return n-e}),0);return Mt.after=function(n,e){if("function"!=typeof e)throw new yn(r);return n=as(n),function(){if(--n<1)return e.apply(this,arguments)}},Mt.ary=vo,Mt.assign=ds,Mt.assignIn=cs,Mt.assignInWith=us,Mt.assignWith=ps,Mt.at=hs,Mt.before=bo,Mt.bind=_o,Mt.bindAll=Fs,Mt.bindKey=yo,Mt.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return jo(n)?n:[n]},Mt.chain=eo,Mt.chunk=function(n,e,t){e=(t?dr(n,e,t):void 0===e)?1:lt(as(e),0);var a=null==n?0:n.length;if(!a||e<1)return[];for(var r=0,o=0,s=i(et(a/e));r<a;)s[o++]=Wi(n,r,r+=e);return s},Mt.compact=function(n){for(var e=-1,t=null==n?0:n.length,i=0,a=[];++e<t;){var r=n[e];r&&(a[i++]=r)}return a},Mt.concat=function(){var n=arguments.length;if(!n)return[];for(var e=i(n-1),t=arguments[0],a=n;a--;)e[a-1]=arguments[a];return ge(jo(t)?_a(t):[t],si(e,1))},Mt.cond=function(n){var e=null==n?0:n.length,t=Ja();return n=e?me(n,(function(n){if("function"!=typeof n[1])throw new yn(r);return[t(n[0]),n[1]]})):[],Ni((function(t){for(var i=-1;++i<e;){var a=n[i];if(oe(a[0],this,t))return oe(a[1],this,t)}}))},Mt.conforms=function(n){return function(n){var e=xs(n);return function(t){return Zt(t,n,e)}}(Jt(n,1))},Mt.constant=Vs,Mt.countBy=ao,Mt.create=function(n,e){var t=At(n);return null==e?t:Qt(t,e)},Mt.curry=function n(e,t,i){var a=qa(e,8,void 0,void 0,void 0,void 0,void 0,t=i?void 0:t);return a.placeholder=n.placeholder,a},Mt.curryRight=function n(e,t,i){var a=qa(e,16,void 0,void 0,void 0,void 0,void 0,t=i?void 0:t);return a.placeholder=n.placeholder,a},Mt.debounce=xo,Mt.defaults=ms,Mt.defaultsDeep=gs,Mt.defer=ko,Mt.delay=To,Mt.difference=Sr,Mt.differenceBy=Mr,Mt.differenceWith=Ar,Mt.drop=function(n,e,t){var i=null==n?0:n.length;return i?Wi(n,(e=t||void 0===e?1:as(e))<0?0:e,i):[]},Mt.dropRight=function(n,e,t){var i=null==n?0:n.length;return i?Wi(n,0,(e=i-(e=t||void 0===e?1:as(e)))<0?0:e):[]},Mt.dropRightWhile=function(n,e){return n&&n.length?ia(n,Ja(e,3),!0,!0):[]},Mt.dropWhile=function(n,e){return n&&n.length?ia(n,Ja(e,3),!0):[]},Mt.fill=function(n,e,t,i){var a=null==n?0:n.length;return a?(t&&"number"!=typeof t&&dr(n,e,t)&&(t=0,i=a),function(n,e,t,i){var a=n.length;for((t=as(t))<0&&(t=-t>a?0:a+t),(i=void 0===i||i>a?a:as(i))<0&&(i+=a),i=t>i?0:rs(i);t<i;)n[t++]=e;return n}(n,e,t,i)):[]},Mt.filter=function(n,e){return(jo(n)?ue:oi)(n,Ja(e,3))},Mt.flatMap=function(n,e){return si(ho(n,e),1)},Mt.flatMapDeep=function(n,e){return si(ho(n,e),1/0)},Mt.flatMapDepth=function(n,e,t){return t=void 0===t?1:as(t),si(ho(n,e),t)},Mt.flatten=jr,Mt.flattenDeep=function(n){return(null==n?0:n.length)?si(n,1/0):[]},Mt.flattenDepth=function(n,e){return(null==n?0:n.length)?si(n,e=void 0===e?1:as(e)):[]},Mt.flip=function(n){return qa(n,512)},Mt.flow=Gs,Mt.flowRight=Hs,Mt.fromPairs=function(n){for(var e=-1,t=null==n?0:n.length,i={};++e<t;){var a=n[e];i[a[0]]=a[1]}return i},Mt.functions=function(n){return null==n?[]:pi(n,xs(n))},Mt.functionsIn=function(n){return null==n?[]:pi(n,ks(n))},Mt.groupBy=co,Mt.initial=function(n){return(null==n?0:n.length)?Wi(n,0,-1):[]},Mt.intersection=Rr,Mt.intersectionBy=$r,Mt.intersectionWith=Lr,Mt.invert=bs,Mt.invertBy=_s,Mt.invokeMap=uo,Mt.iteratee=Qs,Mt.keyBy=po,Mt.keys=xs,Mt.keysIn=ks,Mt.map=ho,Mt.mapKeys=function(n,e){var t={};return e=Ja(e,3),ci(n,(function(n,i,a){Kt(t,e(n,i,a),n)})),t},Mt.mapValues=function(n,e){var t={};return e=Ja(e,3),ci(n,(function(n,i,a){Kt(t,i,e(n,i,a))})),t},Mt.matches=function(n){return Mi(Jt(n,1))},Mt.matchesProperty=function(n,e){return Ai(n,Jt(e,1))},Mt.memoize=wo,Mt.merge=Ts,Mt.mergeWith=ws,Mt.method=Ks,Mt.methodOf=Ys,Mt.mixin=Xs,Mt.negate=Io,Mt.nthArg=function(n){return n=as(n),Ni((function(e){return Pi(e,n)}))},Mt.omit=Is,Mt.omitBy=function(n,e){return Ds(n,Io(Ja(e)))},Mt.once=function(n){return bo(2,n)},Mt.orderBy=function(n,e,t,i){return null==n?[]:(jo(e)||(e=null==e?[]:[e]),jo(t=i?void 0:t)||(t=null==t?[]:[t]),ji(n,e,t))},Mt.over=Zs,Mt.overArgs=Co,Mt.overEvery=nl,Mt.overSome=el,Mt.partial=Do,Mt.partialRight=Eo,Mt.partition=mo,Mt.pick=Cs,Mt.pickBy=Ds,Mt.property=tl,Mt.propertyOf=function(n){return function(e){return null==n?void 0:hi(n,e)}},Mt.pull=Nr,Mt.pullAll=qr,Mt.pullAllBy=function(n,e,t){return n&&n.length&&e&&e.length?Ri(n,e,Ja(t,2)):n},Mt.pullAllWith=function(n,e,t){return n&&n.length&&e&&e.length?Ri(n,e,void 0,t):n},Mt.pullAt=Br,Mt.range=il,Mt.rangeRight=al,Mt.rearg=So,Mt.reject=function(n,e){return(jo(n)?ue:oi)(n,Io(Ja(e,3)))},Mt.remove=function(n,e){var t=[];if(!n||!n.length)return t;var i=-1,a=[],r=n.length;for(e=Ja(e,3);++i<r;){var o=n[i];e(o,i,n)&&(t.push(o),a.push(i))}return $i(n,a),t},Mt.rest=function(n,e){if("function"!=typeof n)throw new yn(r);return Ni(n,e=void 0===e?e:as(e))},Mt.reverse=Fr,Mt.sampleSize=function(n,e,t){return e=(t?dr(n,e,t):void 0===e)?1:as(e),(jo(n)?Bt:Bi)(n,e)},Mt.set=function(n,e,t){return null==n?n:Fi(n,e,t)},Mt.setWith=function(n,e,t,i){return i="function"==typeof i?i:void 0,null==n?n:Fi(n,e,t,i)},Mt.shuffle=function(n){return(jo(n)?Ft:Hi)(n)},Mt.slice=function(n,e,t){var i=null==n?0:n.length;return i?(t&&"number"!=typeof t&&dr(n,e,t)?(e=0,t=i):(e=null==e?0:as(e),t=void 0===t?i:as(t)),Wi(n,e,t)):[]},Mt.sortBy=go,Mt.sortedUniq=function(n){return n&&n.length?Xi(n):[]},Mt.sortedUniqBy=function(n,e){return n&&n.length?Xi(n,Ja(e,2)):[]},Mt.split=function(n,e,t){return t&&"number"!=typeof t&&dr(n,e,t)&&(e=t=void 0),(t=void 0===t?4294967295:t>>>0)?(n=ls(n))&&("string"==typeof e||null!=e&&!Ko(e))&&!(e=Zi(e))&&Ne(n)?ua(Qe(n),0,t):n.split(e,t):[]},Mt.spread=function(n,e){if("function"!=typeof n)throw new yn(r);return e=null==e?0:lt(as(e),0),Ni((function(t){var i=t[e],a=ua(t,0,e);return i&&ge(a,i),oe(n,this,a)}))},Mt.tail=function(n){var e=null==n?0:n.length;return e?Wi(n,1,e):[]},Mt.take=function(n,e,t){return n&&n.length?Wi(n,0,(e=t||void 0===e?1:as(e))<0?0:e):[]},Mt.takeRight=function(n,e,t){var i=null==n?0:n.length;return i?Wi(n,(e=i-(e=t||void 0===e?1:as(e)))<0?0:e,i):[]},Mt.takeRightWhile=function(n,e){return n&&n.length?ia(n,Ja(e,3),!1,!0):[]},Mt.takeWhile=function(n,e){return n&&n.length?ia(n,Ja(e,3)):[]},Mt.tap=function(n,e){return e(n),n},Mt.throttle=function(n,e,t){var i=!0,a=!0;if("function"!=typeof n)throw new yn(r);return Vo(t)&&(i="leading"in t?!!t.leading:i,a="trailing"in t?!!t.trailing:a),xo(n,e,{leading:i,maxWait:e,trailing:a})},Mt.thru=to,Mt.toArray=ts,Mt.toPairs=Es,Mt.toPairsIn=Ss,Mt.toPath=function(n){return jo(n)?me(n,Cr):Jo(n)?[n]:_a(Ir(ls(n)))},Mt.toPlainObject=ss,Mt.transform=function(n,e,t){var i=jo(n),a=i||Lo(n)||Zo(n);if(e=Ja(e,4),null==t){var r=n&&n.constructor;t=a?i?new r:[]:Vo(n)&&qo(r)?At(Wn(n)):{}}return(a?le:ci)(n,(function(n,i,a){return e(t,n,i,a)})),t},Mt.unary=function(n){return vo(n,1)},Mt.union=Vr,Mt.unionBy=Gr,Mt.unionWith=Hr,Mt.uniq=function(n){return n&&n.length?na(n):[]},Mt.uniqBy=function(n,e){return n&&n.length?na(n,Ja(e,2)):[]},Mt.uniqWith=function(n,e){return e="function"==typeof e?e:void 0,n&&n.length?na(n,void 0,e):[]},Mt.unset=function(n,e){return null==n||ea(n,e)},Mt.unzip=Wr,Mt.unzipWith=Qr,Mt.update=function(n,e,t){return null==n?n:ta(n,e,la(t))},Mt.updateWith=function(n,e,t,i){return i="function"==typeof i?i:void 0,null==n?n:ta(n,e,la(t),i)},Mt.values=Ms,Mt.valuesIn=function(n){return null==n?[]:Oe(n,ks(n))},Mt.without=Kr,Mt.words=qs,Mt.wrap=function(n,e){return Do(la(e),n)},Mt.xor=Yr,Mt.xorBy=Xr,Mt.xorWith=Jr,Mt.zip=Zr,Mt.zipObject=function(n,e){return oa(n||[],e||[],Gt)},Mt.zipObjectDeep=function(n,e){return oa(n||[],e||[],Fi)},Mt.zipWith=no,Mt.entries=Es,Mt.entriesIn=Ss,Mt.extend=cs,Mt.extendWith=us,Xs(Mt,Mt),Mt.add=sl,Mt.attempt=Bs,Mt.camelCase=As,Mt.capitalize=Os,Mt.ceil=ll,Mt.clamp=function(n,e,t){return void 0===t&&(t=e,e=void 0),void 0!==t&&(t=(t=os(t))==t?t:0),void 0!==e&&(e=(e=os(e))==e?e:0),Xt(os(n),e,t)},Mt.clone=function(n){return Jt(n,4)},Mt.cloneDeep=function(n){return Jt(n,5)},Mt.cloneDeepWith=function(n,e){return Jt(n,5,e="function"==typeof e?e:void 0)},Mt.cloneWith=function(n,e){return Jt(n,4,e="function"==typeof e?e:void 0)},Mt.conformsTo=function(n,e){return null==e||Zt(n,e,xs(e))},Mt.deburr=Ps,Mt.defaultTo=function(n,e){return null==n||n!=n?e:n},Mt.divide=dl,Mt.endsWith=function(n,e,t){n=ls(n),e=Zi(e);var i=n.length,a=t=void 0===t?i:Xt(as(t),0,i);return(t-=e.length)>=0&&n.slice(t,a)==e},Mt.eq=Mo,Mt.escape=function(n){return(n=ls(n))&&U.test(n)?n.replace($,Le):n},Mt.escapeRegExp=function(n){return(n=ls(n))&&W.test(n)?n.replace(H,"\\$&"):n},Mt.every=function(n,e,t){var i=jo(n)?ce:ai;return t&&dr(n,e,t)&&(e=void 0),i(n,Ja(e,3))},Mt.find=ro,Mt.findIndex=Or,Mt.findKey=function(n,e){return ye(n,Ja(e,3),ci)},Mt.findLast=oo,Mt.findLastIndex=Pr,Mt.findLastKey=function(n,e){return ye(n,Ja(e,3),ui)},Mt.floor=cl,Mt.forEach=so,Mt.forEachRight=lo,Mt.forIn=function(n,e){return null==n?n:li(n,Ja(e,3),ks)},Mt.forInRight=function(n,e){return null==n?n:di(n,Ja(e,3),ks)},Mt.forOwn=function(n,e){return n&&ci(n,Ja(e,3))},Mt.forOwnRight=function(n,e){return n&&ui(n,Ja(e,3))},Mt.get=fs,Mt.gt=Ao,Mt.gte=Oo,Mt.has=function(n,e){return null!=n&&rr(n,e,vi)},Mt.hasIn=vs,Mt.head=zr,Mt.identity=Ws,Mt.includes=function(n,e,t,i){n=Ro(n)?n:Ms(n),t=t&&!i?as(t):0;var a=n.length;return t<0&&(t=lt(a+t,0)),Xo(n)?t<=a&&n.indexOf(e,t)>-1:!!a&&ke(n,e,t)>-1},Mt.indexOf=function(n,e,t){var i=null==n?0:n.length;if(!i)return-1;var a=null==t?0:as(t);return a<0&&(a=lt(i+a,0)),ke(n,e,a)},Mt.inRange=function(n,e,t){return e=is(e),void 0===t?(t=e,e=0):t=is(t),function(n,e,t){return n>=dt(e,t)&&n<lt(e,t)}(n=os(n),e,t)},Mt.invoke=ys,Mt.isArguments=Po,Mt.isArray=jo,Mt.isArrayBuffer=zo,Mt.isArrayLike=Ro,Mt.isArrayLikeObject=$o,Mt.isBoolean=function(n){return!0===n||!1===n||Go(n)&&gi(n)==c},Mt.isBuffer=Lo,Mt.isDate=Uo,Mt.isElement=function(n){return Go(n)&&1===n.nodeType&&!Qo(n)},Mt.isEmpty=function(n){if(null==n)return!0;if(Ro(n)&&(jo(n)||"string"==typeof n||"function"==typeof n.splice||Lo(n)||Zo(n)||Po(n)))return!n.length;var e=ar(n);if(e==g||e==_)return!n.size;if(hr(n))return!Ci(n).length;for(var t in n)if(Cn.call(n,t))return!1;return!0},Mt.isEqual=function(n,e){return ki(n,e)},Mt.isEqualWith=function(n,e,t){var i=(t="function"==typeof t?t:void 0)?t(n,e):void 0;return void 0===i?ki(n,e,void 0,t):!!i},Mt.isError=No,Mt.isFinite=function(n){return"number"==typeof n&&rt(n)},Mt.isFunction=qo,Mt.isInteger=Bo,Mt.isLength=Fo,Mt.isMap=Ho,Mt.isMatch=function(n,e){return n===e||Ti(n,e,nr(e))},Mt.isMatchWith=function(n,e,t){return t="function"==typeof t?t:void 0,Ti(n,e,nr(e),t)},Mt.isNaN=function(n){return Wo(n)&&n!=+n},Mt.isNative=function(n){if(pr(n))throw new mn("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return wi(n)},Mt.isNil=function(n){return null==n},Mt.isNull=function(n){return null===n},Mt.isNumber=Wo,Mt.isObject=Vo,Mt.isObjectLike=Go,Mt.isPlainObject=Qo,Mt.isRegExp=Ko,Mt.isSafeInteger=function(n){return Bo(n)&&n>=-9007199254740991&&n<=9007199254740991},Mt.isSet=Yo,Mt.isString=Xo,Mt.isSymbol=Jo,Mt.isTypedArray=Zo,Mt.isUndefined=function(n){return void 0===n},Mt.isWeakMap=function(n){return Go(n)&&ar(n)==k},Mt.isWeakSet=function(n){return Go(n)&&"[object WeakSet]"==gi(n)},Mt.join=function(n,e){return null==n?"":ot.call(n,e)},Mt.kebabCase=js,Mt.last=Ur,Mt.lastIndexOf=function(n,e,t){var i=null==n?0:n.length;if(!i)return-1;var a=i;return void 0!==t&&(a=(a=as(t))<0?lt(i+a,0):dt(a,i-1)),e==e?function(n,e,t){for(var i=t+1;i--;)if(n[i]===e)return i;return i}(n,e,a):xe(n,we,a,!0)},Mt.lowerCase=zs,Mt.lowerFirst=Rs,Mt.lt=ns,Mt.lte=es,Mt.max=function(n){return n&&n.length?ri(n,Ws,fi):void 0},Mt.maxBy=function(n,e){return n&&n.length?ri(n,Ja(e,2),fi):void 0},Mt.mean=function(n){return Ie(n,Ws)},Mt.meanBy=function(n,e){return Ie(n,Ja(e,2))},Mt.min=function(n){return n&&n.length?ri(n,Ws,Ei):void 0},Mt.minBy=function(n,e){return n&&n.length?ri(n,Ja(e,2),Ei):void 0},Mt.stubArray=rl,Mt.stubFalse=ol,Mt.stubObject=function(){return{}},Mt.stubString=function(){return""},Mt.stubTrue=function(){return!0},Mt.multiply=pl,Mt.nth=function(n,e){return n&&n.length?Pi(n,as(e)):void 0},Mt.noConflict=function(){return Qn._===this&&(Qn._=An),this},Mt.noop=Js,Mt.now=fo,Mt.pad=function(n,e,t){n=ls(n);var i=(e=as(e))?We(n):0;if(!e||i>=e)return n;var a=(e-i)/2;return ja(tt(a),t)+n+ja(et(a),t)},Mt.padEnd=function(n,e,t){n=ls(n);var i=(e=as(e))?We(n):0;return e&&i<e?n+ja(e-i,t):n},Mt.padStart=function(n,e,t){n=ls(n);var i=(e=as(e))?We(n):0;return e&&i<e?ja(e-i,t)+n:n},Mt.parseInt=function(n,e,t){return t||null==e?e=0:e&&(e=+e),ut(ls(n).replace(K,""),e||0)},Mt.random=function(n,e,t){if(t&&"boolean"!=typeof t&&dr(n,e,t)&&(e=t=void 0),void 0===t&&("boolean"==typeof e?(t=e,e=void 0):"boolean"==typeof n&&(t=n,n=void 0)),void 0===n&&void 0===e?(n=0,e=1):(n=is(n),void 0===e?(e=n,n=0):e=is(e)),n>e){var i=n;n=e,e=i}if(t||n%1||e%1){var a=pt();return dt(n+a*(e-n+Vn("1e-"+((a+"").length-1))),e)}return Li(n,e)},Mt.reduce=function(n,e,t){var i=jo(n)?fe:Ee,a=arguments.length<3;return i(n,Ja(e,4),t,a,ti)},Mt.reduceRight=function(n,e,t){var i=jo(n)?ve:Ee,a=arguments.length<3;return i(n,Ja(e,4),t,a,ii)},Mt.repeat=function(n,e,t){return e=(t?dr(n,e,t):void 0===e)?1:as(e),Ui(ls(n),e)},Mt.replace=function(){var n=arguments,e=ls(n[0]);return n.length<3?e:e.replace(n[1],n[2])},Mt.result=function(n,e,t){var i=-1,a=(e=da(e,n)).length;for(a||(a=1,n=void 0);++i<a;){var r=null==n?void 0:n[Cr(e[i])];void 0===r&&(i=a,r=t),n=qo(r)?r.call(n):r}return n},Mt.round=hl,Mt.runInContext=n,Mt.sample=function(n){return(jo(n)?qt:qi)(n)},Mt.size=function(n){if(null==n)return 0;if(Ro(n))return Xo(n)?We(n):n.length;var e=ar(n);return e==g||e==_?n.size:Ci(n).length},Mt.snakeCase=$s,Mt.some=function(n,e,t){var i=jo(n)?be:Qi;return t&&dr(n,e,t)&&(e=void 0),i(n,Ja(e,3))},Mt.sortedIndex=function(n,e){return Ki(n,e)},Mt.sortedIndexBy=function(n,e,t){return Yi(n,e,Ja(t,2))},Mt.sortedIndexOf=function(n,e){var t=null==n?0:n.length;if(t){var i=Ki(n,e);if(i<t&&Mo(n[i],e))return i}return-1},Mt.sortedLastIndex=function(n,e){return Ki(n,e,!0)},Mt.sortedLastIndexBy=function(n,e,t){return Yi(n,e,Ja(t,2),!0)},Mt.sortedLastIndexOf=function(n,e){if(null==n?0:n.length){var t=Ki(n,e,!0)-1;if(Mo(n[t],e))return t}return-1},Mt.startCase=Ls,Mt.startsWith=function(n,e,t){return n=ls(n),t=null==t?0:Xt(as(t),0,n.length),e=Zi(e),n.slice(t,t+e.length)==e},Mt.subtract=ml,Mt.sum=function(n){return n&&n.length?Se(n,Ws):0},Mt.sumBy=function(n,e){return n&&n.length?Se(n,Ja(e,2)):0},Mt.template=function(n,e,t){var i=Mt.templateSettings;t&&dr(n,e,t)&&(e=void 0),n=ls(n),e=us({},e,i,Ba);var a,r,o=us({},e.imports,i.imports,Ba),s=xs(o),l=Oe(o,s),d=0,c=e.interpolate||un,u="__p += '",p=bn((e.escape||un).source+"|"+c.source+"|"+(c===B?tn:un).source+"|"+(e.evaluate||un).source+"|$","g"),h="//# sourceURL="+("sourceURL"in e?e.sourceURL:"lodash.templateSources["+ ++Nn+"]")+"\n";n.replace(p,(function(e,t,i,o,s,l){return i||(i=o),u+=n.slice(d,l).replace(pn,Ue),t&&(a=!0,u+="' +\n__e("+t+") +\n'"),s&&(r=!0,u+="';\n"+s+";\n__p += '"),i&&(u+="' +\n((__t = ("+i+")) == null ? '' : __t) +\n'"),d=l+e.length,e})),u+="';\n";var m=e.variable;m||(u="with (obj) {\n"+u+"\n}\n"),u=(r?u.replace(P,""):u).replace(j,"$1").replace(z,"$1;"),u="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(a?", __e = _.escape":"")+(r?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+u+"return __p\n}";var g=Bs((function(){return gn(s,h+"return "+u).apply(void 0,l)}));if(g.source=u,No(g))throw g;return g},Mt.times=function(n,e){if((n=as(n))<1||n>9007199254740991)return[];var t=4294967295,i=dt(n,4294967295);n-=4294967295;for(var a=Me(i,e=Ja(e));++t<n;)e(t);return a},Mt.toFinite=is,Mt.toInteger=as,Mt.toLength=rs,Mt.toLower=function(n){return ls(n).toLowerCase()},Mt.toNumber=os,Mt.toSafeInteger=function(n){return n?Xt(as(n),-9007199254740991,9007199254740991):0===n?n:0},Mt.toString=ls,Mt.toUpper=function(n){return ls(n).toUpperCase()},Mt.trim=function(n,e,t){if((n=ls(n))&&(t||void 0===e))return n.replace(Q,"");if(!n||!(e=Zi(e)))return n;var i=Qe(n),a=Qe(e);return ua(i,je(i,a),ze(i,a)+1).join("")},Mt.trimEnd=function(n,e,t){if((n=ls(n))&&(t||void 0===e))return n.replace(Y,"");if(!n||!(e=Zi(e)))return n;var i=Qe(n);return ua(i,0,ze(i,Qe(e))+1).join("")},Mt.trimStart=function(n,e,t){if((n=ls(n))&&(t||void 0===e))return n.replace(K,"");if(!n||!(e=Zi(e)))return n;var i=Qe(n);return ua(i,je(i,Qe(e))).join("")},Mt.truncate=function(n,e){var t=30,i="...";if(Vo(e)){var a="separator"in e?e.separator:a;t="length"in e?as(e.length):t,i="omission"in e?Zi(e.omission):i}var r=(n=ls(n)).length;if(Ne(n)){var o=Qe(n);r=o.length}if(t>=r)return n;var s=t-We(i);if(s<1)return i;var l=o?ua(o,0,s).join(""):n.slice(0,s);if(void 0===a)return l+i;if(o&&(s+=l.length-s),Ko(a)){if(n.slice(s).search(a)){var d,c=l;for(a.global||(a=bn(a.source,ls(an.exec(a))+"g")),a.lastIndex=0;d=a.exec(c);)var u=d.index;l=l.slice(0,void 0===u?s:u)}}else if(n.indexOf(Zi(a),s)!=s){var p=l.lastIndexOf(a);p>-1&&(l=l.slice(0,p))}return l+i},Mt.unescape=function(n){return(n=ls(n))&&L.test(n)?n.replace(R,Ke):n},Mt.uniqueId=function(n){var e=++Dn;return ls(n)+e},Mt.upperCase=Us,Mt.upperFirst=Ns,Mt.each=so,Mt.eachRight=lo,Mt.first=zr,Xs(Mt,(ul={},ci(Mt,(function(n,e){Cn.call(Mt.prototype,e)||(ul[e]=n)})),ul),{chain:!1}),Mt.VERSION="4.17.10",le(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(n){Mt[n].placeholder=Mt})),le(["drop","take"],(function(n,e){jt.prototype[n]=function(t){t=void 0===t?1:lt(as(t),0);var i=this.__filtered__&&!e?new jt(this):this.clone();return i.__filtered__?i.__takeCount__=dt(t,i.__takeCount__):i.__views__.push({size:dt(t,4294967295),type:n+(i.__dir__<0?"Right":"")}),i},jt.prototype[n+"Right"]=function(e){return this.reverse()[n](e).reverse()}})),le(["filter","map","takeWhile"],(function(n,e){var t=e+1,i=1==t||3==t;jt.prototype[n]=function(n){var e=this.clone();return e.__iteratees__.push({iteratee:Ja(n,3),type:t}),e.__filtered__=e.__filtered__||i,e}})),le(["head","last"],(function(n,e){var t="take"+(e?"Right":"");jt.prototype[n]=function(){return this[t](1).value()[0]}})),le(["initial","tail"],(function(n,e){var t="drop"+(e?"":"Right");jt.prototype[n]=function(){return this.__filtered__?new jt(this):this[t](1)}})),jt.prototype.compact=function(){return this.filter(Ws)},jt.prototype.find=function(n){return this.filter(n).head()},jt.prototype.findLast=function(n){return this.reverse().find(n)},jt.prototype.invokeMap=Ni((function(n,e){return"function"==typeof n?new jt(this):this.map((function(t){return yi(t,n,e)}))})),jt.prototype.reject=function(n){return this.filter(Io(Ja(n)))},jt.prototype.slice=function(n,e){n=as(n);var t=this;return t.__filtered__&&(n>0||e<0)?new jt(t):(n<0?t=t.takeRight(-n):n&&(t=t.drop(n)),void 0!==e&&(t=(e=as(e))<0?t.dropRight(-e):t.take(e-n)),t)},jt.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},jt.prototype.toArray=function(){return this.take(4294967295)},ci(jt.prototype,(function(n,e){var t=/^(?:filter|find|map|reject)|While$/.test(e),i=/^(?:head|last)$/.test(e),a=Mt[i?"take"+("last"==e?"Right":""):e],r=i||/^find/.test(e);a&&(Mt.prototype[e]=function(){var e=this.__wrapped__,o=i?[1]:arguments,s=e instanceof jt,l=o[0],d=s||jo(e),c=function(n){var e=a.apply(Mt,ge([n],o));return i&&u?e[0]:e};d&&t&&"function"==typeof l&&1!=l.length&&(s=d=!1);var u=this.__chain__,p=!!this.__actions__.length,h=r&&!u,m=s&&!p;if(!r&&d){e=m?e:new jt(this);var g=n.apply(e,o);return g.__actions__.push({func:to,args:[c],thisArg:void 0}),new Pt(g,u)}return h&&m?n.apply(this,o):(g=this.thru(c),h?i?g.value()[0]:g.value():g)})})),le(["pop","push","shift","sort","splice","unshift"],(function(n){var e=xn[n],t=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",i=/^(?:pop|shift)$/.test(n);Mt.prototype[n]=function(){var n=arguments;if(i&&!this.__chain__){var a=this.value();return e.apply(jo(a)?a:[],n)}return this[t]((function(t){return e.apply(jo(t)?t:[],n)}))}})),ci(jt.prototype,(function(n,e){var t=Mt[e];if(t){var i=t.name+"";(xt[i]||(xt[i]=[])).push({name:e,func:t})}})),xt[Ma(void 0,2).name]=[{name:"wrapper",func:void 0}],jt.prototype.clone=function(){var n=new jt(this.__wrapped__);return n.__actions__=_a(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=_a(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=_a(this.__views__),n},jt.prototype.reverse=function(){if(this.__filtered__){var n=new jt(this);n.__dir__=-1,n.__filtered__=!0}else(n=this.clone()).__dir__*=-1;return n},jt.prototype.value=function(){var n=this.__wrapped__.value(),e=this.__dir__,t=jo(n),i=e<0,a=t?n.length:0,r=function(n,e,t){var i=-1,a=t.length;for(;++i<a;){var r=t[i],o=r.size;switch(r.type){case"drop":n+=o;break;case"dropRight":e-=o;break;case"take":e=dt(e,n+o);break;case"takeRight":n=lt(n,e-o)}}return{start:n,end:e}}(0,a,this.__views__),o=r.start,s=r.end,l=s-o,d=i?s:o-1,c=this.__iteratees__,u=c.length,p=0,h=dt(l,this.__takeCount__);if(!t||!i&&a==l&&h==l)return aa(n,this.__actions__);var m=[];n:for(;l--&&p<h;){for(var g=-1,f=n[d+=e];++g<u;){var v=c[g],b=v.iteratee,_=v.type,y=b(f);if(2==_)f=y;else if(!y){if(1==_)continue n;break n}}m[p++]=f}return m},Mt.prototype.at=io,Mt.prototype.chain=function(){return eo(this)},Mt.prototype.commit=function(){return new Pt(this.value(),this.__chain__)},Mt.prototype.next=function(){void 0===this.__values__&&(this.__values__=ts(this.value()));var n=this.__index__>=this.__values__.length;return{done:n,value:n?void 0:this.__values__[this.__index__++]}},Mt.prototype.plant=function(n){for(var e,t=this;t instanceof Ot;){var i=Er(t);i.__index__=0,i.__values__=void 0,e?a.__wrapped__=i:e=i;var a=i;t=t.__wrapped__}return a.__wrapped__=n,e},Mt.prototype.reverse=function(){var n=this.__wrapped__;if(n instanceof jt){var e=n;return this.__actions__.length&&(e=new jt(this)),(e=e.reverse()).__actions__.push({func:to,args:[Fr],thisArg:void 0}),new Pt(e,this.__chain__)}return this.thru(Fr)},Mt.prototype.toJSON=Mt.prototype.valueOf=Mt.prototype.value=function(){return aa(this.__wrapped__,this.__actions__)},Mt.prototype.first=Mt.prototype.head,_e&&(Mt.prototype[_e]=function(){return this}),Mt}();"object"===a(t(149))&&t(149)?(Qn._=Ye,void 0===(i=function(){return Ye}.call(e,t,e,n))||(n.exports=i)):Yn?((Yn.exports=Ye)._=Ye,Kn._=Ye):Qn._=Ye}).call(void 0)}).call(this,t(61)(n))},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=97)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},97:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-button-group"},[this._t("default")],2)};i._withStripped=!0;var a={name:"ElButtonGroup"},r=t(0),o=Object(r.a)(a,i,[],!1,null,null,null);o.options.__file="packages/button/src/button-group.vue";var s=o.exports;s.install=function(n){n.component(s.name,s)};e.default=s}})},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=93)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},4:function(n,e){n.exports=t(24)},93:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-checkbox-group",attrs:{role:"group","aria-label":"checkbox-group"}},[this._t("default")],2)};i._withStripped=!0;var a=t(4),r={name:"ElCheckboxGroup",componentName:"ElCheckboxGroup",mixins:[t.n(a).a],inject:{elFormItem:{default:""}},props:{value:{},disabled:Boolean,min:Number,max:Number,size:String,fill:String,textColor:String},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},checkboxGroupSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size}},watch:{value:function(n){this.dispatch("ElFormItem","el.form.change",[n])}}},o=t(0),s=Object(o.a)(r,i,[],!1,null,null,null);s.options.__file="packages/checkbox/src/checkbox-group.vue";var l=s.exports;l.install=function(n){n.component(l.name,l)};e.default=l}})},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:300,i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(!n||!e)throw new Error("instance & callback is required");var a=!1,r=function(){a||(a=!0,e&&e.apply(null,arguments))};i?n.$once("after-leave",r):n.$on("after-leave",r),setTimeout((function(){r()}),t+100)}},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=104)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},104:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"el-progress",class:["el-progress--"+n.type,n.status?"is-"+n.status:"",{"el-progress--without-text":!n.showText,"el-progress--text-inside":n.textInside}],attrs:{role:"progressbar","aria-valuenow":n.percentage,"aria-valuemin":"0","aria-valuemax":"100"}},["line"===n.type?t("div",{staticClass:"el-progress-bar"},[t("div",{staticClass:"el-progress-bar__outer",style:{height:n.strokeWidth+"px",backgroundColor:n.defineBackColor}},[t("div",{staticClass:"el-progress-bar__inner",style:n.barStyle},[n.showText&&n.textInside?t("div",{staticClass:"el-progress-bar__innerText",style:{color:n.textColor}},[n._v(n._s(n.content))]):n._e()])])]):t("div",{staticClass:"el-progress-circle",style:{height:n.width+"px",width:n.width+"px"}},[t("svg",{attrs:{viewBox:"0 0 100 100"}},[t("path",{staticClass:"el-progress-circle__track",style:n.trailPathStyle,attrs:{d:n.trackPath,stroke:n.defineBackColor,"stroke-width":n.relativeStrokeWidth,fill:"none"}}),t("path",{staticClass:"el-progress-circle__path",style:n.circlePathStyle,attrs:{d:n.trackPath,stroke:n.stroke,fill:"none","stroke-linecap":n.strokeLinecap,"stroke-width":n.percentage?n.relativeStrokeWidth:0}})])]),n.showText&&!n.textInside?t("div",{staticClass:"el-progress__text",style:{fontSize:n.progressTextSize+"px",color:n.textColor}},[n.status?t("i",{class:n.iconClass}):[n._v(n._s(n.content))]],2):n._e()])};i._withStripped=!0;var a={name:"ElProgress",props:{type:{type:String,default:"line",validator:function(n){return["line","circle","dashboard"].indexOf(n)>-1}},percentage:{type:Number,default:0,required:!0,validator:function(n){return n>=0&&n<=100}},status:{type:String,validator:function(n){return["success","exception","warning"].indexOf(n)>-1}},strokeWidth:{type:Number,default:6},strokeLinecap:{type:String,default:"round"},textInside:{type:Boolean,default:!1},width:{type:Number,default:126},showText:{type:Boolean,default:!0},color:{type:[String,Array,Function],default:""},defineBackColor:{type:[String,Array,Function],default:"#ebeef5"},textColor:{type:[String,Array,Function],default:"#606266"},format:Function},computed:{barStyle:function(){var n={};return n.width=this.percentage+"%",n.backgroundColor=this.getCurrentColor(this.percentage),n},relativeStrokeWidth:function(){return(this.strokeWidth/this.width*100).toFixed(1)},radius:function(){return"circle"===this.type||"dashboard"===this.type?parseInt(50-parseFloat(this.relativeStrokeWidth)/2,10):0},trackPath:function(){var n=this.radius,e="dashboard"===this.type;return"\n        M 50 50\n        m 0 "+(e?"":"-")+n+"\n        a "+n+" "+n+" 0 1 1 0 "+(e?"-":"")+2*n+"\n        a "+n+" "+n+" 0 1 1 0 "+(e?"":"-")+2*n+"\n        "},perimeter:function(){return 2*Math.PI*this.radius},rate:function(){return"dashboard"===this.type?.75:1},strokeDashoffset:function(){return-1*this.perimeter*(1-this.rate)/2+"px"},trailPathStyle:function(){return{strokeDasharray:this.perimeter*this.rate+"px, "+this.perimeter+"px",strokeDashoffset:this.strokeDashoffset}},circlePathStyle:function(){return{strokeDasharray:this.perimeter*this.rate*(this.percentage/100)+"px, "+this.perimeter+"px",strokeDashoffset:this.strokeDashoffset,transition:"stroke-dasharray 0.6s ease 0s, stroke 0.6s ease"}},stroke:function(){var n=void 0;if(this.color)n=this.getCurrentColor(this.percentage);else switch(this.status){case"success":n="#13ce66";break;case"exception":n="#ff4949";break;case"warning":n="#e6a23c";break;default:n="#20a0ff"}return n},iconClass:function(){return"warning"===this.status?"el-icon-warning":"line"===this.type?"success"===this.status?"el-icon-circle-check":"el-icon-circle-close":"success"===this.status?"el-icon-check":"el-icon-close"},progressTextSize:function(){return"line"===this.type?12+.4*this.strokeWidth:.111111*this.width+2},content:function(){return"function"==typeof this.format?this.format(this.percentage)||"":this.percentage+"%"}},methods:{getCurrentColor:function(n){return"function"==typeof this.color?this.color(n):"string"==typeof this.color?this.color:this.getLevelColor(n)},getLevelColor:function(n){for(var e=this.getColorArray().sort((function(n,e){return n.percentage-e.percentage})),t=0;t<e.length;t++)if(e[t].percentage>n)return e[t].color;return e[e.length-1].color},getColorArray:function(){var n=this.color,e=100/n.length;return n.map((function(n,t){return"string"==typeof n?{color:n,percentage:(t+1)*e}:n}))}}},r=t(0),o=Object(r.a)(a,i,[],!1,null,null,null);o.options.__file="packages/progress/src/progress.vue";var s=o.exports;s.install=function(n){n.component(s.name,s)};e.default=s}})},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=62)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},10:function(n,e){n.exports=t(83)},12:function(n,e){n.exports=t(145)},15:function(n,e){n.exports=t(86)},16:function(n,e){n.exports=t(84)},19:function(n,e){n.exports=t(52)},21:function(n,e){n.exports=t(51)},22:function(n,e){n.exports=t(87)},3:function(n,e){n.exports=t(10)},31:function(n,e){n.exports=t(88)},33:function(n,e,t){"use strict";var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("li",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-select-dropdown__item",class:{selected:n.itemSelected,"is-disabled":n.disabled||n.groupDisabled||n.limitReached,hover:n.hover},on:{mouseenter:n.hoverItem,click:function(e){return e.stopPropagation(),n.selectOptionClick(e)}}},[n._t("default",[t("span",[n._v(n._s(n.currentLabel))])])],2)};i._withStripped=!0;var a=t(4),r=t.n(a),o=t(3),s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},l={mixins:[r.a],name:"ElOption",componentName:"ElOption",inject:["select"],props:{value:{required:!0},label:[String,Number],created:Boolean,disabled:{type:Boolean,default:!1}},data:function(){return{index:-1,groupDisabled:!1,visible:!0,hitState:!1,hover:!1}},computed:{isObject:function(){return"[object object]"===Object.prototype.toString.call(this.value).toLowerCase()},currentLabel:function(){return this.label||(this.isObject?"":this.value)},currentValue:function(){return this.value||this.label||""},itemSelected:function(){return this.select.multiple?this.contains(this.select.value,this.value):this.isEqual(this.value,this.select.value)},limitReached:function(){return!!this.select.multiple&&(!this.itemSelected&&(this.select.value||[]).length>=this.select.multipleLimit&&this.select.multipleLimit>0)}},watch:{currentLabel:function(){this.created||this.select.remote||this.dispatch("ElSelect","setSelected")},value:function(n,e){var t=this.select,i=t.remote,a=t.valueKey;if(!this.created&&!i){if(a&&"object"===(void 0===n?"undefined":s(n))&&"object"===(void 0===e?"undefined":s(e))&&n[a]===e[a])return;this.dispatch("ElSelect","setSelected")}}},methods:{isEqual:function(n,e){if(this.isObject){var t=this.select.valueKey;return Object(o.getValueByPath)(n,t)===Object(o.getValueByPath)(e,t)}return n===e},contains:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments[1];if(this.isObject){var t=this.select.valueKey;return n&&n.some((function(n){return Object(o.getValueByPath)(n,t)===Object(o.getValueByPath)(e,t)}))}return n&&n.indexOf(e)>-1},handleGroupDisabled:function(n){this.groupDisabled=n},hoverItem:function(){this.disabled||this.groupDisabled||(this.select.hoverIndex=this.select.options.indexOf(this))},selectOptionClick:function(){!0!==this.disabled&&!0!==this.groupDisabled&&this.dispatch("ElSelect","handleOptionClick",[this,!0])},queryChange:function(n){this.visible=new RegExp(Object(o.escapeRegexpString)(n),"i").test(this.currentLabel)||this.created,this.visible||this.select.filteredOptionsCount--}},created:function(){this.select.options.push(this),this.select.cachedOptions.push(this),this.select.optionsCount++,this.select.filteredOptionsCount++,this.$on("queryChange",this.queryChange),this.$on("handleGroupDisabled",this.handleGroupDisabled)},beforeDestroy:function(){var n=this.select,e=n.selected,t=n.multiple?e:[e],i=this.select.cachedOptions.indexOf(this),a=t.indexOf(this);i>-1&&a<0&&this.select.cachedOptions.splice(i,1),this.select.onOptionDestroy(this.select.options.indexOf(this))}},d=t(0),c=Object(d.a)(l,i,[],!1,null,null,null);c.options.__file="packages/select/src/option.vue";e.a=c.exports},38:function(n,e){n.exports=t(150)},4:function(n,e){n.exports=t(24)},5:function(n,e){n.exports=t(49)},6:function(n,e){n.exports=t(81)},62:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:n.handleClose,expression:"handleClose"}],staticClass:"el-select",class:[n.selectSize?"el-select--"+n.selectSize:""],on:{click:function(e){return e.stopPropagation(),n.toggleMenu(e)}}},[n.multiple?t("div",{ref:"tags",staticClass:"el-select__tags",style:{"max-width":n.inputWidth-32+"px",width:"100%"}},[n.collapseTags&&n.selected.length?t("span",[t("el-tag",{attrs:{closable:!n.selectDisabled,size:n.collapseTagSize,hit:n.selected[0].hitState,type:"info","disable-transitions":""},on:{close:function(e){n.deleteTag(e,n.selected[0])}}},[t("span",{staticClass:"el-select__tags-text"},[n._v(n._s(n.selected[0].currentLabel))])]),n.selected.length>1?t("el-tag",{attrs:{closable:!1,size:n.collapseTagSize,type:"info","disable-transitions":""}},[t("span",{staticClass:"el-select__tags-text"},[n._v("+ "+n._s(n.selected.length-1))])]):n._e()],1):n._e(),n.collapseTags?n._e():t("transition-group",{on:{"after-leave":n.resetInputHeight}},n._l(n.selected,(function(e){return t("el-tag",{key:n.getValueKey(e),attrs:{closable:!n.selectDisabled,size:n.collapseTagSize,hit:e.hitState,type:"info","disable-transitions":""},on:{close:function(t){n.deleteTag(t,e)}}},[t("span",{staticClass:"el-select__tags-text"},[n._v(n._s(e.currentLabel))])])})),1),n.filterable?t("input",{directives:[{name:"model",rawName:"v-model",value:n.query,expression:"query"}],ref:"input",staticClass:"el-select__input",class:[n.selectSize?"is-"+n.selectSize:""],style:{"flex-grow":"1",width:n.inputLength/(n.inputWidth-32)+"%","max-width":n.inputWidth-42+"px"},attrs:{type:"text",disabled:n.selectDisabled,autocomplete:n.autoComplete||n.autocomplete},domProps:{value:n.query},on:{focus:n.handleFocus,blur:function(e){n.softFocus=!1},keyup:n.managePlaceholder,keydown:[n.resetInputState,function(e){if(!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"]))return null;e.preventDefault(),n.handleNavigate("next")},function(e){if(!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"]))return null;e.preventDefault(),n.handleNavigate("prev")},function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:(e.preventDefault(),n.selectOption(e))},function(e){if(!("button"in e)&&n._k(e.keyCode,"esc",27,e.key,["Esc","Escape"]))return null;e.stopPropagation(),e.preventDefault(),n.visible=!1},function(e){return!("button"in e)&&n._k(e.keyCode,"delete",[8,46],e.key,["Backspace","Delete","Del"])?null:n.deletePrevTag(e)},function(e){if(!("button"in e)&&n._k(e.keyCode,"tab",9,e.key,"Tab"))return null;n.visible=!1}],compositionstart:n.handleComposition,compositionupdate:n.handleComposition,compositionend:n.handleComposition,input:[function(e){e.target.composing||(n.query=e.target.value)},n.debouncedQueryChange]}}):n._e()],1):n._e(),t("el-input",{ref:"reference",class:{"is-focus":n.visible},attrs:{type:"text",placeholder:n.currentPlaceholder,name:n.name,id:n.id,autocomplete:n.autoComplete||n.autocomplete,size:n.selectSize,disabled:n.selectDisabled,readonly:n.readonly,"validate-event":!1,tabindex:n.multiple&&n.filterable?"-1":null},on:{focus:n.handleFocus,blur:n.handleBlur,input:n.debouncedOnInputChange,compositionstart:n.handleComposition,compositionupdate:n.handleComposition,compositionend:n.handleComposition},nativeOn:{keydown:[function(e){if(!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"]))return null;e.stopPropagation(),e.preventDefault(),n.handleNavigate("next")},function(e){if(!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"]))return null;e.stopPropagation(),e.preventDefault(),n.handleNavigate("prev")},function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:(e.preventDefault(),n.selectOption(e))},function(e){if(!("button"in e)&&n._k(e.keyCode,"esc",27,e.key,["Esc","Escape"]))return null;e.stopPropagation(),e.preventDefault(),n.visible=!1},function(e){if(!("button"in e)&&n._k(e.keyCode,"tab",9,e.key,"Tab"))return null;n.visible=!1}],mouseenter:function(e){n.inputHovering=!0},mouseleave:function(e){n.inputHovering=!1}},model:{value:n.selectedLabel,callback:function(e){n.selectedLabel=e},expression:"selectedLabel"}},[n.$slots.prefix?t("template",{slot:"prefix"},[n._t("prefix")],2):n._e(),t("template",{slot:"suffix"},[t("i",{directives:[{name:"show",rawName:"v-show",value:!n.showClose,expression:"!showClose"}],class:["el-select__caret","el-input__icon","el-icon-"+n.iconClass]}),n.showClose?t("i",{staticClass:"el-select__caret el-input__icon el-icon-circle-close",on:{click:n.handleClearClick}}):n._e()])],2),t("transition",{attrs:{name:"el-zoom-in-top"},on:{"before-enter":n.handleMenuEnter,"after-leave":n.doDestroy}},[t("el-select-menu",{directives:[{name:"show",rawName:"v-show",value:n.visible&&!1!==n.emptyText,expression:"visible && emptyText !== false"}],ref:"popper",attrs:{"append-to-body":n.popperAppendToBody}},[t("el-scrollbar",{directives:[{name:"show",rawName:"v-show",value:n.options.length>0&&!n.loading,expression:"options.length > 0 && !loading"}],ref:"scrollbar",class:{"is-empty":!n.allowCreate&&n.query&&0===n.filteredOptionsCount},attrs:{tag:"ul","wrap-class":"el-select-dropdown__wrap","view-class":"el-select-dropdown__list"}},[n.showNewOption?t("el-option",{attrs:{value:n.query,created:""}}):n._e(),n._t("default")],2),n.emptyText&&(!n.allowCreate||n.loading||n.allowCreate&&0===n.options.length)?[n.$slots.empty?n._t("empty"):t("p",{staticClass:"el-select-dropdown__empty"},[n._v("\n          "+n._s(n.emptyText)+"\n        ")])]:n._e()],2)],1)],1)};i._withStripped=!0;var a=t(4),r=t.n(a),o=t(22),s=t.n(o),l=t(6),d=t.n(l),c=t(10),u=t.n(c),p=function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"el-select-dropdown el-popper",class:[{"is-multiple":this.$parent.multiple},this.popperClass],style:{minWidth:this.minWidth}},[this._t("default")],2)};p._withStripped=!0;var h=t(5),m={name:"ElSelectDropdown",componentName:"ElSelectDropdown",mixins:[t.n(h).a],props:{placement:{default:"bottom-start"},boundariesPadding:{default:0},popperOptions:{default:function(){return{gpuAcceleration:!1}}},visibleArrow:{default:!0},appendToBody:{type:Boolean,default:!0}},data:function(){return{minWidth:""}},computed:{popperClass:function(){return this.$parent.popperClass}},watch:{"$parent.inputWidth":function(){this.minWidth=this.$parent.$el.getBoundingClientRect().width+"px"}},mounted:function(){var n=this;this.referenceElm=this.$parent.$refs.reference.$el,this.$parent.popperElm=this.popperElm=this.$el,this.$on("updatePopper",(function(){n.$parent.visible&&n.updatePopper()})),this.$on("destroyPopper",this.destroyPopper)}},g=t(0),f=Object(g.a)(m,p,[],!1,null,null,null);f.options.__file="packages/select/src/select-dropdown.vue";var v=f.exports,b=t(33),_=t(38),y=t.n(_),x=t(15),k=t.n(x),T=t(19),w=t.n(T),I=t(12),C=t.n(I),D=t(16),E=t(31),S=t.n(E),M=t(3),A=t(21),O={mixins:[r.a,d.a,s()("reference"),{data:function(){return{hoverOption:-1}},computed:{optionsAllDisabled:function(){return this.options.filter((function(n){return n.visible})).every((function(n){return n.disabled}))}},watch:{hoverIndex:function(n){var e=this;"number"==typeof n&&n>-1&&(this.hoverOption=this.options[n]||{}),this.options.forEach((function(n){n.hover=e.hoverOption===n}))}},methods:{navigateOptions:function(n){var e=this;if(this.visible){if(0!==this.options.length&&0!==this.filteredOptionsCount&&!this.optionsAllDisabled){"next"===n?(this.hoverIndex++,this.hoverIndex===this.options.length&&(this.hoverIndex=0)):"prev"===n&&(this.hoverIndex--,this.hoverIndex<0&&(this.hoverIndex=this.options.length-1));var t=this.options[this.hoverIndex];!0!==t.disabled&&!0!==t.groupDisabled&&t.visible||this.navigateOptions(n),this.$nextTick((function(){return e.scrollToOption(e.hoverOption)}))}}else this.visible=!0}}}],name:"ElSelect",componentName:"ElSelect",inject:{elForm:{default:""},elFormItem:{default:""}},provide:function(){return{select:this}},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},readonly:function(){return!this.filterable||this.multiple||!Object(M.isIE)()&&!Object(M.isEdge)()&&!this.visible},showClose:function(){var n=this.multiple?Array.isArray(this.value)&&this.value.length>0:void 0!==this.value&&null!==this.value&&""!==this.value;return this.clearable&&!this.selectDisabled&&this.inputHovering&&n},iconClass:function(){return this.remote&&this.filterable?"":this.visible?"arrow-up is-reverse":"arrow-up"},debounce:function(){return this.remote?300:0},emptyText:function(){return this.loading?this.loadingText||this.t("el.select.loading"):(!this.remote||""!==this.query||0!==this.options.length)&&(this.filterable&&this.query&&this.options.length>0&&0===this.filteredOptionsCount?this.noMatchText||this.t("el.select.noMatch"):0===this.options.length?this.noDataText||this.t("el.select.noData"):null)},showNewOption:function(){var n=this,e=this.options.filter((function(n){return!n.created})).some((function(e){return e.currentLabel===n.query}));return this.filterable&&this.allowCreate&&""!==this.query&&!e},selectSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},selectDisabled:function(){return this.disabled||(this.elForm||{}).disabled},collapseTagSize:function(){return["small","mini"].indexOf(this.selectSize)>-1?"mini":"small"},propPlaceholder:function(){return void 0!==this.placeholder?this.placeholder:this.t("el.select.placeholder")}},components:{ElInput:u.a,ElSelectMenu:v,ElOption:b.a,ElTag:y.a,ElScrollbar:k.a},directives:{Clickoutside:C.a},props:{name:String,id:String,value:{required:!0},autocomplete:{type:String,default:"off"},autoComplete:{type:String,validator:function(n){return!0}},automaticDropdown:Boolean,size:String,disabled:Boolean,clearable:Boolean,filterable:Boolean,allowCreate:Boolean,loading:Boolean,popperClass:String,remote:Boolean,loadingText:String,noMatchText:String,noDataText:String,remoteMethod:Function,filterMethod:Function,multiple:Boolean,multipleLimit:{type:Number,default:0},placeholder:{type:String,required:!1},defaultFirstOption:Boolean,reserveKeyword:Boolean,valueKey:{type:String,default:"value"},collapseTags:Boolean,popperAppendToBody:{type:Boolean,default:!0}},data:function(){return{options:[],cachedOptions:[],createdLabel:null,createdSelected:!1,selected:this.multiple?[]:{},inputLength:20,inputWidth:0,initialInputHeight:0,cachedPlaceHolder:"",optionsCount:0,filteredOptionsCount:0,visible:!1,softFocus:!1,selectedLabel:"",hoverIndex:-1,query:"",previousQuery:null,inputHovering:!1,currentPlaceholder:"",menuVisibleOnFocus:!1,isOnComposition:!1,isSilentBlur:!1}},watch:{selectDisabled:function(){var n=this;this.$nextTick((function(){n.resetInputHeight()}))},propPlaceholder:function(n){this.cachedPlaceHolder=this.currentPlaceholder=n},value:function(n,e){this.multiple&&(this.resetInputHeight(),n&&n.length>0||this.$refs.input&&""!==this.query?this.currentPlaceholder="":this.currentPlaceholder=this.cachedPlaceHolder,this.filterable&&!this.reserveKeyword&&(this.query="",this.handleQueryChange(this.query))),this.setSelected(),this.filterable&&!this.multiple&&(this.inputLength=20),Object(M.valueEquals)(n,e)||this.dispatch("ElFormItem","el.form.change",n)},visible:function(n){var e=this;n?(this.broadcast("ElSelectDropdown","updatePopper"),this.filterable&&(this.query=this.remote?"":this.selectedLabel,this.handleQueryChange(this.query),this.multiple?this.$refs.input.focus():(this.remote||(this.broadcast("ElOption","queryChange",""),this.broadcast("ElOptionGroup","queryChange")),this.selectedLabel&&(this.currentPlaceholder=this.selectedLabel,this.selectedLabel="")))):(this.broadcast("ElSelectDropdown","destroyPopper"),this.$refs.input&&this.$refs.input.blur(),this.query="",this.previousQuery=null,this.selectedLabel="",this.inputLength=20,this.menuVisibleOnFocus=!1,this.resetHoverIndex(),this.$nextTick((function(){e.$refs.input&&""===e.$refs.input.value&&0===e.selected.length&&(e.currentPlaceholder=e.cachedPlaceHolder)})),this.multiple||(this.selected&&(this.filterable&&this.allowCreate&&this.createdSelected&&this.createdLabel?this.selectedLabel=this.createdLabel:this.selectedLabel=this.selected.currentLabel,this.filterable&&(this.query=this.selectedLabel)),this.filterable&&(this.currentPlaceholder=this.cachedPlaceHolder))),this.$emit("visible-change",n)},options:function(){var n=this;if(!this.$isServer){this.$nextTick((function(){n.broadcast("ElSelectDropdown","updatePopper")})),this.multiple&&this.resetInputHeight();var e=this.$el.querySelectorAll("input");-1===[].indexOf.call(e,document.activeElement)&&this.setSelected(),this.defaultFirstOption&&(this.filterable||this.remote)&&this.filteredOptionsCount&&this.checkDefaultFirstOption()}}},methods:{handleNavigate:function(n){this.isOnComposition||this.navigateOptions(n)},handleComposition:function(n){var e=this,t=n.target.value;if("compositionend"===n.type)this.isOnComposition=!1,this.$nextTick((function(n){return e.handleQueryChange(t)}));else{var i=t[t.length-1]||"";this.isOnComposition=!Object(A.isKorean)(i)}},handleQueryChange:function(n){var e=this;this.previousQuery===n||this.isOnComposition||(null!==this.previousQuery||"function"!=typeof this.filterMethod&&"function"!=typeof this.remoteMethod?(this.previousQuery=n,this.$nextTick((function(){e.visible&&e.broadcast("ElSelectDropdown","updatePopper")})),this.hoverIndex=-1,this.multiple&&this.filterable&&this.$nextTick((function(){var n=15*e.$refs.input.value.length+20;e.inputLength=e.collapseTags?Math.min(50,n):n,e.managePlaceholder(),e.resetInputHeight()})),this.remote&&"function"==typeof this.remoteMethod?(this.hoverIndex=-1,this.remoteMethod(n)):"function"==typeof this.filterMethod?(this.filterMethod(n),this.broadcast("ElOptionGroup","queryChange")):(this.filteredOptionsCount=this.optionsCount,this.broadcast("ElOption","queryChange",n),this.broadcast("ElOptionGroup","queryChange")),this.defaultFirstOption&&(this.filterable||this.remote)&&this.filteredOptionsCount&&this.checkDefaultFirstOption()):this.previousQuery=n)},scrollToOption:function(n){var e=Array.isArray(n)&&n[0]?n[0].$el:n.$el;if(this.$refs.popper&&e){var t=this.$refs.popper.$el.querySelector(".el-select-dropdown__wrap");S()(t,e)}this.$refs.scrollbar&&this.$refs.scrollbar.handleScroll()},handleMenuEnter:function(){var n=this;this.$nextTick((function(){return n.scrollToOption(n.selected)}))},emitChange:function(n){Object(M.valueEquals)(this.value,n)||this.$emit("change",n)},getOption:function(n){for(var e=void 0,t="[object object]"===Object.prototype.toString.call(n).toLowerCase(),i="[object null]"===Object.prototype.toString.call(n).toLowerCase(),a="[object undefined]"===Object.prototype.toString.call(n).toLowerCase(),r=this.cachedOptions.length-1;r>=0;r--){var o=this.cachedOptions[r];if(t?Object(M.getValueByPath)(o.value,this.valueKey)===Object(M.getValueByPath)(n,this.valueKey):o.value===n){e=o;break}}if(e)return e;var s={value:n,currentLabel:t||i||a?"":String(n)};return this.multiple&&(s.hitState=!1),s},setSelected:function(){var n=this;if(!this.multiple){var e=this.getOption(this.value);return e.created?(this.createdLabel=e.currentLabel,this.createdSelected=!0):this.createdSelected=!1,this.selectedLabel=e.currentLabel,this.selected=e,void(this.filterable&&(this.query=this.selectedLabel))}var t=[];Array.isArray(this.value)&&this.value.forEach((function(e){t.push(n.getOption(e))})),this.selected=t,this.$nextTick((function(){n.resetInputHeight()}))},handleFocus:function(n){this.softFocus?this.softFocus=!1:((this.automaticDropdown||this.filterable)&&(this.filterable&&!this.visible&&(this.menuVisibleOnFocus=!0),this.visible=!0),this.$emit("focus",n))},blur:function(){this.visible=!1,this.$refs.reference.blur()},handleBlur:function(n){var e=this;setTimeout((function(){e.isSilentBlur?e.isSilentBlur=!1:e.$emit("blur",n)}),50),this.softFocus=!1},handleClearClick:function(n){this.deleteSelected(n)},doDestroy:function(){this.$refs.popper&&this.$refs.popper.doDestroy()},handleClose:function(){this.visible=!1},toggleLastOptionHitState:function(n){if(Array.isArray(this.selected)){var e=this.selected[this.selected.length-1];if(e)return!0===n||!1===n?(e.hitState=n,n):(e.hitState=!e.hitState,e.hitState)}},deletePrevTag:function(n){if(n.target.value.length<=0&&!this.toggleLastOptionHitState()){var e=this.value.slice();e.pop(),this.$emit("input",e),this.emitChange(e)}},managePlaceholder:function(){""!==this.currentPlaceholder&&(this.currentPlaceholder=this.$refs.input.value?"":this.cachedPlaceHolder)},resetInputState:function(n){8!==n.keyCode&&this.toggleLastOptionHitState(!1),this.inputLength=15*this.$refs.input.value.length+20,this.resetInputHeight()},resetInputHeight:function(){var n=this;this.collapseTags&&!this.filterable||this.$nextTick((function(){if(n.$refs.reference){var e=n.$refs.reference.$el.childNodes,t=[].filter.call(e,(function(n){return"INPUT"===n.tagName}))[0],i=n.$refs.tags,a=i?Math.round(i.getBoundingClientRect().height):0,r=n.initialInputHeight||40;t.style.height=0===n.selected.length?r+"px":Math.max(i?a+(a>r?6:0):0,r)+"px",n.visible&&!1!==n.emptyText&&n.broadcast("ElSelectDropdown","updatePopper")}}))},resetHoverIndex:function(){var n=this;setTimeout((function(){n.multiple?n.selected.length>0?n.hoverIndex=Math.min.apply(null,n.selected.map((function(e){return n.options.indexOf(e)}))):n.hoverIndex=-1:n.hoverIndex=n.options.indexOf(n.selected)}),300)},handleOptionSelect:function(n,e){var t=this;if(this.multiple){var i=(this.value||[]).slice(),a=this.getValueIndex(i,n.value);a>-1?i.splice(a,1):(this.multipleLimit<=0||i.length<this.multipleLimit)&&i.push(n.value),this.$emit("input",i),this.emitChange(i),n.created&&(this.query="",this.handleQueryChange(""),this.inputLength=20),this.filterable&&this.$refs.input.focus()}else this.$emit("input",n.value),this.emitChange(n.value),this.visible=!1;this.isSilentBlur=e,this.setSoftFocus(),this.visible||this.$nextTick((function(){t.scrollToOption(n)}))},setSoftFocus:function(){this.softFocus=!0;var n=this.$refs.input||this.$refs.reference;n&&n.focus()},getValueIndex:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments[1],t="[object object]"===Object.prototype.toString.call(e).toLowerCase();if(t){var i=this.valueKey,a=-1;return n.some((function(n,t){return Object(M.getValueByPath)(n,i)===Object(M.getValueByPath)(e,i)&&(a=t,!0)})),a}return n.indexOf(e)},toggleMenu:function(){this.selectDisabled||(this.menuVisibleOnFocus?this.menuVisibleOnFocus=!1:this.visible=!this.visible,this.visible&&(this.$refs.input||this.$refs.reference).focus())},selectOption:function(){this.visible?this.options[this.hoverIndex]&&this.handleOptionSelect(this.options[this.hoverIndex]):this.toggleMenu()},deleteSelected:function(n){n.stopPropagation();var e=this.multiple?[]:"";this.$emit("input",e),this.emitChange(e),this.visible=!1,this.$emit("clear")},deleteTag:function(n,e){var t=this.selected.indexOf(e);if(t>-1&&!this.selectDisabled){var i=this.value.slice();i.splice(t,1),this.$emit("input",i),this.emitChange(i),this.$emit("remove-tag",e.value)}n.stopPropagation()},onInputChange:function(){this.filterable&&this.query!==this.selectedLabel&&(this.query=this.selectedLabel,this.handleQueryChange(this.query))},onOptionDestroy:function(n){n>-1&&(this.optionsCount--,this.filteredOptionsCount--,this.options.splice(n,1))},resetInputWidth:function(){this.inputWidth=this.$refs.reference.$el.getBoundingClientRect().width},handleResize:function(){this.resetInputWidth(),this.multiple&&this.resetInputHeight()},checkDefaultFirstOption:function(){this.hoverIndex=-1;for(var n=!1,e=this.options.length-1;e>=0;e--)if(this.options[e].created){n=!0,this.hoverIndex=e;break}if(!n)for(var t=0;t!==this.options.length;++t){var i=this.options[t];if(this.query){if(!i.disabled&&!i.groupDisabled&&i.visible){this.hoverIndex=t;break}}else if(i.itemSelected){this.hoverIndex=t;break}}},getValueKey:function(n){return"[object object]"!==Object.prototype.toString.call(n.value).toLowerCase()?n.value:Object(M.getValueByPath)(n.value,this.valueKey)}},created:function(){var n=this;this.cachedPlaceHolder=this.currentPlaceholder=this.propPlaceholder,this.multiple&&!Array.isArray(this.value)&&this.$emit("input",[]),!this.multiple&&Array.isArray(this.value)&&this.$emit("input",""),this.debouncedOnInputChange=w()(this.debounce,(function(){n.onInputChange()})),this.debouncedQueryChange=w()(this.debounce,(function(e){n.handleQueryChange(e.target.value)})),this.$on("handleOptionClick",this.handleOptionSelect),this.$on("setSelected",this.setSelected)},mounted:function(){var n=this;this.multiple&&Array.isArray(this.value)&&this.value.length>0&&(this.currentPlaceholder=""),Object(D.addResizeListener)(this.$el,this.handleResize);var e=this.$refs.reference;if(e&&e.$el){var t=e.$el.querySelector("input");this.initialInputHeight=t.getBoundingClientRect().height||{medium:36,small:32,mini:28}[this.selectSize]}this.remote&&this.multiple&&this.resetInputHeight(),this.$nextTick((function(){e&&e.$el&&(n.inputWidth=e.$el.getBoundingClientRect().width)})),this.setSelected()},beforeDestroy:function(){this.$el&&this.handleResize&&Object(D.removeResizeListener)(this.$el,this.handleResize)}},P=Object(g.a)(O,i,[],!1,null,null,null);P.options.__file="packages/select/src/select.vue";var j=P.exports;j.install=function(n){n.component(j.name,j)};e.default=j}})},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=54)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},3:function(n,e){n.exports=t(10)},33:function(n,e,t){"use strict";var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("li",{directives:[{name:"show",rawName:"v-show",value:n.visible,expression:"visible"}],staticClass:"el-select-dropdown__item",class:{selected:n.itemSelected,"is-disabled":n.disabled||n.groupDisabled||n.limitReached,hover:n.hover},on:{mouseenter:n.hoverItem,click:function(e){return e.stopPropagation(),n.selectOptionClick(e)}}},[n._t("default",[t("span",[n._v(n._s(n.currentLabel))])])],2)};i._withStripped=!0;var a=t(4),r=t.n(a),o=t(3),s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},l={mixins:[r.a],name:"ElOption",componentName:"ElOption",inject:["select"],props:{value:{required:!0},label:[String,Number],created:Boolean,disabled:{type:Boolean,default:!1}},data:function(){return{index:-1,groupDisabled:!1,visible:!0,hitState:!1,hover:!1}},computed:{isObject:function(){return"[object object]"===Object.prototype.toString.call(this.value).toLowerCase()},currentLabel:function(){return this.label||(this.isObject?"":this.value)},currentValue:function(){return this.value||this.label||""},itemSelected:function(){return this.select.multiple?this.contains(this.select.value,this.value):this.isEqual(this.value,this.select.value)},limitReached:function(){return!!this.select.multiple&&(!this.itemSelected&&(this.select.value||[]).length>=this.select.multipleLimit&&this.select.multipleLimit>0)}},watch:{currentLabel:function(){this.created||this.select.remote||this.dispatch("ElSelect","setSelected")},value:function(n,e){var t=this.select,i=t.remote,a=t.valueKey;if(!this.created&&!i){if(a&&"object"===(void 0===n?"undefined":s(n))&&"object"===(void 0===e?"undefined":s(e))&&n[a]===e[a])return;this.dispatch("ElSelect","setSelected")}}},methods:{isEqual:function(n,e){if(this.isObject){var t=this.select.valueKey;return Object(o.getValueByPath)(n,t)===Object(o.getValueByPath)(e,t)}return n===e},contains:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments[1];if(this.isObject){var t=this.select.valueKey;return n&&n.some((function(n){return Object(o.getValueByPath)(n,t)===Object(o.getValueByPath)(e,t)}))}return n&&n.indexOf(e)>-1},handleGroupDisabled:function(n){this.groupDisabled=n},hoverItem:function(){this.disabled||this.groupDisabled||(this.select.hoverIndex=this.select.options.indexOf(this))},selectOptionClick:function(){!0!==this.disabled&&!0!==this.groupDisabled&&this.dispatch("ElSelect","handleOptionClick",[this,!0])},queryChange:function(n){this.visible=new RegExp(Object(o.escapeRegexpString)(n),"i").test(this.currentLabel)||this.created,this.visible||this.select.filteredOptionsCount--}},created:function(){this.select.options.push(this),this.select.cachedOptions.push(this),this.select.optionsCount++,this.select.filteredOptionsCount++,this.$on("queryChange",this.queryChange),this.$on("handleGroupDisabled",this.handleGroupDisabled)},beforeDestroy:function(){var n=this.select,e=n.selected,t=n.multiple?e:[e],i=this.select.cachedOptions.indexOf(this),a=t.indexOf(this);i>-1&&a<0&&this.select.cachedOptions.splice(i,1),this.select.onOptionDestroy(this.select.options.indexOf(this))}},d=t(0),c=Object(d.a)(l,i,[],!1,null,null,null);c.options.__file="packages/select/src/option.vue";e.a=c.exports},4:function(n,e){n.exports=t(24)},54:function(n,e,t){"use strict";t.r(e);var i=t(33);i.a.install=function(n){n.component(i.a.name,i.a)},e.default=i.a}})},function(n,e,t){n.exports=t(341)},function(n,e,t){"use strict";var i=t(342),a=t(343);function r(n){var e=0,t=0,i=0,a=0;return"detail"in n&&(t=n.detail),"wheelDelta"in n&&(t=-n.wheelDelta/120),"wheelDeltaY"in n&&(t=-n.wheelDeltaY/120),"wheelDeltaX"in n&&(e=-n.wheelDeltaX/120),"axis"in n&&n.axis===n.HORIZONTAL_AXIS&&(e=t,t=0),i=10*e,a=10*t,"deltaY"in n&&(a=n.deltaY),"deltaX"in n&&(i=n.deltaX),(i||a)&&n.deltaMode&&(1==n.deltaMode?(i*=40,a*=40):(i*=800,a*=800)),i&&!e&&(e=i<1?-1:1),a&&!t&&(t=a<1?-1:1),{spinX:e,spinY:t,pixelX:i,pixelY:a}}r.getEventType=function(){return i.firefox()?"DOMMouseScroll":a("wheel")?"wheel":"mousewheel"},n.exports=r},function(n,e){var t,i,a,r,o,s,l,d,c,u,p,h,m,g,f,v=!1;function b(){if(!v){v=!0;var n=navigator.userAgent,e=/(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(n),b=/(Mac OS X)|(Windows)|(Linux)/.exec(n);if(h=/\b(iPhone|iP[ao]d)/.exec(n),m=/\b(iP[ao]d)/.exec(n),u=/Android/i.exec(n),g=/FBAN\/\w+;/i.exec(n),f=/Mobile/i.exec(n),p=!!/Win64/.exec(n),e){(t=e[1]?parseFloat(e[1]):e[5]?parseFloat(e[5]):NaN)&&document&&document.documentMode&&(t=document.documentMode);var _=/(?:Trident\/(\d+.\d+))/.exec(n);s=_?parseFloat(_[1])+4:t,i=e[2]?parseFloat(e[2]):NaN,a=e[3]?parseFloat(e[3]):NaN,(r=e[4]?parseFloat(e[4]):NaN)?(e=/(?:Chrome\/(\d+\.\d+))/.exec(n),o=e&&e[1]?parseFloat(e[1]):NaN):o=NaN}else t=i=a=o=r=NaN;if(b){if(b[1]){var y=/(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(n);l=!y||parseFloat(y[1].replace("_","."))}else l=!1;d=!!b[2],c=!!b[3]}else l=d=c=!1}}var _={ie:function(){return b()||t},ieCompatibilityMode:function(){return b()||s>t},ie64:function(){return _.ie()&&p},firefox:function(){return b()||i},opera:function(){return b()||a},webkit:function(){return b()||r},safari:function(){return _.webkit()},chrome:function(){return b()||o},windows:function(){return b()||d},osx:function(){return b()||l},linux:function(){return b()||c},iphone:function(){return b()||h},mobile:function(){return b()||h||m||u||f},nativeApp:function(){return b()||g},android:function(){return b()||u},ipad:function(){return b()||m}};n.exports=_},function(n,e,t){"use strict";var i,a=t(344);a.canUseDOM&&(i=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""))
/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */,n.exports=function(n,e){if(!a.canUseDOM||e&&!("addEventListener"in document))return!1;var t="on"+n,r=t in document;if(!r){var o=document.createElement("div");o.setAttribute(t,"return;"),r="function"==typeof o[t]}return!r&&i&&"wheel"===n&&(r=document.implementation.hasFeature("Events.wheel","3.0")),r}},function(n,e,t){"use strict";var i=!("undefined"==typeof window||!window.document||!window.document.createElement),a={canUseDOM:i,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:i&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:i&&!!window.screen,isInWorker:!i};n.exports=a},function(n,e,t){"use strict";e.__esModule=!0;var i,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r=t(89),o=(i=r)&&i.__esModule?i:{default:i};var s,l=l||{};l.Dialog=function(n,e,t){var i=this;if(this.dialogNode=n,null===this.dialogNode||"dialog"!==this.dialogNode.getAttribute("role"))throw new Error("Dialog() requires a DOM element with ARIA role of dialog.");"string"==typeof e?this.focusAfterClosed=document.getElementById(e):"object"===(void 0===e?"undefined":a(e))?this.focusAfterClosed=e:this.focusAfterClosed=null,"string"==typeof t?this.focusFirst=document.getElementById(t):"object"===(void 0===t?"undefined":a(t))?this.focusFirst=t:this.focusFirst=null,this.focusFirst?this.focusFirst.focus():o.default.focusFirstDescendant(this.dialogNode),this.lastFocus=document.activeElement,s=function(n){i.trapFocus(n)},this.addListeners()},l.Dialog.prototype.addListeners=function(){document.addEventListener("focus",s,!0)},l.Dialog.prototype.removeListeners=function(){document.removeEventListener("focus",s,!0)},l.Dialog.prototype.closeDialog=function(){var n=this;this.removeListeners(),this.focusAfterClosed&&setTimeout((function(){n.focusAfterClosed.focus()}))},l.Dialog.prototype.trapFocus=function(n){o.default.IgnoreUtilFocusChanges||(this.dialogNode.contains(n.target)?this.lastFocus=n.target:(o.default.focusFirstDescendant(this.dialogNode),this.lastFocus===document.activeElement&&o.default.focusLastDescendant(this.dialogNode),this.lastFocus=document.activeElement))},e.default=l.Dialog},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},o=t(2),s=t(347),l=(i=s)&&i.__esModule?i:{default:i},d=t(367);function c(n){this.rules=null,this._messages=d.messages,this.define(n)}c.prototype={messages:function(n){return n&&(this._messages=(0,o.deepMerge)((0,d.newMessages)(),n)),this._messages},define:function(n){if(!n)throw new Error("Cannot configure a schema with no rules");if("object"!==(void 0===n?"undefined":r(n))||Array.isArray(n))throw new Error("Rules must be an object");this.rules={};var e=void 0,t=void 0;for(e in n)n.hasOwnProperty(e)&&(t=n[e],this.rules[e]=Array.isArray(t)?t:[t])},validate:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},s=n,l=t,u=i;if("function"==typeof l&&(u=l,l={}),!this.rules||0===Object.keys(this.rules).length)return u&&u(),Promise.resolve();function p(n){var e,t,i=void 0,a=[],r={};for(i=0;i<n.length;i++)e=n[i],t=void 0,Array.isArray(e)?a=(t=a).concat.apply(t,e):a.push(e);a.length?r=(0,o.convertFieldsError)(a):(a=null,r=null),u(a,r)}if(l.messages){var h=this.messages();h===d.messages&&(h=(0,d.newMessages)()),(0,o.deepMerge)(h,l.messages),l.messages=h}else l.messages=this.messages();var m=void 0,g=void 0,f={},v=l.keys||Object.keys(this.rules);v.forEach((function(t){m=e.rules[t],g=s[t],m.forEach((function(i){var r=i;"function"==typeof r.transform&&(s===n&&(s=a({},s)),g=s[t]=r.transform(g)),(r="function"==typeof r?{validator:r}:a({},r)).validator=e.getValidationMethod(r),r.field=t,r.fullField=r.fullField||t,r.type=e.getType(r),r.validator&&(f[t]=f[t]||[],f[t].push({rule:r,value:g,source:s,field:t}))}))}));var b={};return(0,o.asyncMap)(f,l,(function(n,e){var t=n.rule,i=!("object"!==t.type&&"array"!==t.type||"object"!==r(t.fields)&&"object"!==r(t.defaultField));function s(n,e){return a({},e,{fullField:t.fullField+"."+n})}function d(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],d=r;if(Array.isArray(d)||(d=[d]),!l.suppressWarning&&d.length&&c.warning("async-validator:",d),d.length&&t.message&&(d=[].concat(t.message)),d=d.map((0,o.complementError)(t)),l.first&&d.length)return b[t.field]=1,e(d);if(i){if(t.required&&!n.value)return d=t.message?[].concat(t.message).map((0,o.complementError)(t)):l.error?[l.error(t,(0,o.format)(l.messages.required,t.field))]:[],e(d);var u={};if(t.defaultField)for(var p in n.value)n.value.hasOwnProperty(p)&&(u[p]=t.defaultField);for(var h in u=a({},u,n.rule.fields))if(u.hasOwnProperty(h)){var m=Array.isArray(u[h])?u[h]:[u[h]];u[h]=m.map(s.bind(null,h))}var g=new c(u);g.messages(l.messages),n.rule.options&&(n.rule.options.messages=l.messages,n.rule.options.error=l.error),g.validate(n.value,n.rule.options||l,(function(n){var t=[];d&&d.length&&t.push.apply(t,d),n&&n.length&&t.push.apply(t,n),e(t.length?t:null)}))}else e(d)}i=i&&(t.required||!t.required&&n.value),t.field=n.field;var u=void 0;t.asyncValidator?u=t.asyncValidator(t,n.value,d,n.source,l):t.validator&&(!0===(u=t.validator(t,n.value,d,n.source,l))?d():!1===u?d(t.message||t.field+" fails"):u instanceof Array?d(u):u instanceof Error&&d(u.message)),u&&u.then&&u.then((function(){return d()}),(function(n){return d(n)}))}),(function(n){p(n)}))},getType:function(n){if(void 0===n.type&&n.pattern instanceof RegExp&&(n.type="pattern"),"function"!=typeof n.validator&&n.type&&!l.default.hasOwnProperty(n.type))throw new Error((0,o.format)("Unknown rule type %s",n.type));return n.type||"string"},getValidationMethod:function(n){if("function"==typeof n.validator)return n.validator;var e=Object.keys(n),t=e.indexOf("message");return-1!==t&&e.splice(t,1),1===e.length&&"required"===e[0]?l.default.required:l.default[this.getType(n)]||!1}},c.register=function(n,e){if("function"!=typeof e)throw new Error("Cannot register a validator by type, validator is not a function");l.default[n]=e},c.warning=o.warning,c.messages=d.messages,e.default=c},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=v(t(348)),a=v(t(354)),r=v(t(355)),o=v(t(356)),s=v(t(357)),l=v(t(358)),d=v(t(359)),c=v(t(360)),u=v(t(361)),p=v(t(362)),h=v(t(363)),m=v(t(364)),g=v(t(365)),f=v(t(366));function v(n){return n&&n.__esModule?n:{default:n}}e.default={string:i.default,method:a.default,number:r.default,boolean:o.default,regexp:s.default,integer:l.default,float:d.default,array:c.default,object:u.default,enum:p.default,pattern:h.default,date:m.default,url:f.default,hex:f.default,email:f.default,required:g.default}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e,"string")&&!n.required)return t();r.default.required(n,e,i,s,a,"string"),(0,o.isEmptyValue)(e,"string")||(r.default.type(n,e,i,s,a),r.default.range(n,e,i,s,a),r.default.pattern(n,e,i,s,a),!0===n.whitespace&&r.default.whitespace(n,e,i,s,a))}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e.default=n,e}(t(2));e.default=function(n,e,t,a,r){(/^\s+$/.test(e)||""===e)&&a.push(i.format(r.messages.whitespace,n.fullField))}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e.default=n,e}(t(2)),o=t(151),s=(i=o)&&i.__esModule?i:{default:i};var l={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,url:new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$","i"),hex:/^#?([a-f0-9]{6}|[a-f0-9]{3})$/i},d={integer:function(n){return d.number(n)&&parseInt(n,10)===n},float:function(n){return d.number(n)&&!d.integer(n)},array:function(n){return Array.isArray(n)},regexp:function(n){if(n instanceof RegExp)return!0;try{return!!new RegExp(n)}catch(n){return!1}},date:function(n){return"function"==typeof n.getTime&&"function"==typeof n.getMonth&&"function"==typeof n.getYear},number:function(n){return!isNaN(n)&&"number"==typeof n},object:function(n){return"object"===(void 0===n?"undefined":a(n))&&!d.array(n)},method:function(n){return"function"==typeof n},email:function(n){return"string"==typeof n&&!!n.match(l.email)&&n.length<255},url:function(n){return"string"==typeof n&&!!n.match(l.url)},hex:function(n){return"string"==typeof n&&!!n.match(l.hex)}};e.default=function(n,e,t,i,o){if(n.required&&void 0===e)(0,s.default)(n,e,t,i,o);else{var l=n.type;["integer","float","array","regexp","object","method","email","number","date","url","hex"].indexOf(l)>-1?d[l](e)||i.push(r.format(o.messages.types[l],n.fullField,n.type)):l&&(void 0===e?"undefined":a(e))!==n.type&&i.push(r.format(o.messages.types[l],n.fullField,n.type))}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e.default=n,e}(t(2));e.default=function(n,e,t,a,r){var o="number"==typeof n.len,s="number"==typeof n.min,l="number"==typeof n.max,d=e,c=null,u="number"==typeof e,p="string"==typeof e,h=Array.isArray(e);if(u?c="number":p?c="string":h&&(c="array"),!c)return!1;h&&(d=e.length),p&&(d=e.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"_").length),o?d!==n.len&&a.push(i.format(r.messages[c].len,n.fullField,n.len)):s&&!l&&d<n.min?a.push(i.format(r.messages[c].min,n.fullField,n.min)):l&&!s&&d>n.max?a.push(i.format(r.messages[c].max,n.fullField,n.max)):s&&l&&(d<n.min||d>n.max)&&a.push(i.format(r.messages[c].range,n.fullField,n.min,n.max))}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e.default=n,e}(t(2));e.default=function(n,e,t,a,r){n.enum=Array.isArray(n.enum)?n.enum:[],-1===n.enum.indexOf(e)&&a.push(i.format(r.messages.enum,n.fullField,n.enum.join(", ")))}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e.default=n,e}(t(2));e.default=function(n,e,t,a,r){if(n.pattern)if(n.pattern instanceof RegExp)n.pattern.lastIndex=0,n.pattern.test(e)||a.push(i.format(r.messages.pattern.mismatch,n.fullField,e,n.pattern));else if("string"==typeof n.pattern){new RegExp(n.pattern).test(e)||a.push(i.format(r.messages.pattern.mismatch,n.fullField,e,n.pattern))}}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e)&&!n.required)return t();r.default.required(n,e,i,s,a),void 0!==e&&r.default.type(n,e,i,s,a)}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if(""===e&&(e=void 0),(0,o.isEmptyValue)(e)&&!n.required)return t();r.default.required(n,e,i,s,a),void 0!==e&&(r.default.type(n,e,i,s,a),r.default.range(n,e,i,s,a))}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(2),r=t(7),o=(i=r)&&i.__esModule?i:{default:i};e.default=function(n,e,t,i,r){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,a.isEmptyValue)(e)&&!n.required)return t();o.default.required(n,e,i,s,r),void 0!==e&&o.default.type(n,e,i,s,r)}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e)&&!n.required)return t();r.default.required(n,e,i,s,a),(0,o.isEmptyValue)(e)||r.default.type(n,e,i,s,a)}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e)&&!n.required)return t();r.default.required(n,e,i,s,a),void 0!==e&&(r.default.type(n,e,i,s,a),r.default.range(n,e,i,s,a))}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e)&&!n.required)return t();r.default.required(n,e,i,s,a),void 0!==e&&(r.default.type(n,e,i,s,a),r.default.range(n,e,i,s,a))}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e,"array")&&!n.required)return t();r.default.required(n,e,i,s,a,"array"),(0,o.isEmptyValue)(e,"array")||(r.default.type(n,e,i,s,a),r.default.range(n,e,i,s,a))}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e)&&!n.required)return t();r.default.required(n,e,i,s,a),void 0!==e&&r.default.type(n,e,i,s,a)}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e)&&!n.required)return t();r.default.required(n,e,i,s,a),e&&r.default.enum(n,e,i,s,a)}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e,"string")&&!n.required)return t();r.default.required(n,e,i,s,a),(0,o.isEmptyValue)(e,"string")||r.default.pattern(n,e,i,s,a)}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e)&&!n.required)return t();if(r.default.required(n,e,i,s,a),!(0,o.isEmptyValue)(e)){var l=void 0;l="number"==typeof e?new Date(e):e,r.default.type(n,l,i,s,a),l&&r.default.range(n,l.getTime(),i,s,a)}}t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r=t(7),o=(i=r)&&i.__esModule?i:{default:i};e.default=function(n,e,t,i,r){var s=[],l=Array.isArray(e)?"array":void 0===e?"undefined":a(e);o.default.required(n,e,i,s,r,l),t(s)}},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,a=t(7),r=(i=a)&&i.__esModule?i:{default:i},o=t(2);e.default=function(n,e,t,i,a){var s=n.type,l=[];if(n.required||!n.required&&i.hasOwnProperty(n.field)){if((0,o.isEmptyValue)(e,s)&&!n.required)return t();r.default.required(n,e,i,l,a,s),(0,o.isEmptyValue)(e,s)||r.default.type(n,e,i,l,a)}t(l)}},function(n,e,t){"use strict";function i(){return{default:"Validation error on field %s",required:"%s is required",enum:"%s must be one of %s",whitespace:"%s cannot be empty",date:{format:"%s date %s is invalid for format %s",parse:"%s date could not be parsed, %s is invalid ",invalid:"%s date %s is invalid"},types:{string:"%s is not a %s",method:"%s is not a %s (function)",array:"%s is not an %s",object:"%s is not an %s",number:"%s is not a %s",date:"%s is not a %s",boolean:"%s is not a %s",integer:"%s is not an %s",float:"%s is not a %s",regexp:"%s is not a valid %s",email:"%s is not a valid %s",url:"%s is not a valid %s",hex:"%s is not a valid %s"},string:{len:"%s must be exactly %s characters",min:"%s must be at least %s characters",max:"%s cannot be longer than %s characters",range:"%s must be between %s and %s characters"},number:{len:"%s must equal %s",min:"%s cannot be less than %s",max:"%s cannot be greater than %s",range:"%s must be between %s and %s"},array:{len:"%s must be exactly %s in length",min:"%s cannot be less than %s in length",max:"%s cannot be greater than %s in length",range:"%s must be between %s and %s in length"},pattern:{mismatch:"%s value %s does not match pattern %s"},clone:function(){var n=JSON.parse(JSON.stringify(this));return n.clone=this.clone,n}}}Object.defineProperty(e,"__esModule",{value:!0}),e.newMessages=i;e.messages=i()},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=87)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},10:function(n,e){n.exports=t(83)},2:function(n,e){n.exports=t(20)},22:function(n,e){n.exports=t(87)},3:function(n,e){n.exports=t(10)},30:function(n,e,t){"use strict";var i=t(2),a=t(3);e.a={bind:function(n,e,t){var r=null,o=void 0,s=Object(a.isMac)()?100:200,l=function(){return t.context[e.expression].apply()},d=function(){Date.now()-o<s&&l(),clearInterval(r),r=null};Object(i.on)(n,"mousedown",(function(n){0===n.button&&(o=Date.now(),Object(i.once)(document,"mouseup",d),clearInterval(r),r=setInterval(l,s))}))}}},87:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{class:["el-input-number",n.inputNumberSize?"el-input-number--"+n.inputNumberSize:"",{"is-disabled":n.inputNumberDisabled},{"is-without-controls":!n.controls},{"is-controls-right":n.controlsAtRight}],on:{dragstart:function(n){n.preventDefault()}}},[n.controls?t("span",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.decrease,expression:"decrease"}],staticClass:"el-input-number__decrease",class:{"is-disabled":n.minDisabled},attrs:{role:"button"},on:{keydown:function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.decrease(e)}}},[t("i",{class:"el-icon-"+(n.controlsAtRight?"arrow-down":"minus")})]):n._e(),n.controls?t("span",{directives:[{name:"repeat-click",rawName:"v-repeat-click",value:n.increase,expression:"increase"}],staticClass:"el-input-number__increase",class:{"is-disabled":n.maxDisabled},attrs:{role:"button"},on:{keydown:function(e){return!("button"in e)&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:n.increase(e)}}},[t("i",{class:"el-icon-"+(n.controlsAtRight?"arrow-up":"plus")})]):n._e(),t("el-input",{ref:"input",attrs:{value:n.displayValue,placeholder:n.placeholder,disabled:n.inputNumberDisabled,size:n.inputNumberSize,max:n.max,min:n.min,name:n.name,label:n.label},on:{blur:n.handleBlur,focus:n.handleFocus,input:n.handleInput,change:n.handleInputChange},nativeOn:{keydown:[function(e){return!("button"in e)&&n._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"])?null:(e.preventDefault(),n.increase(e))},function(e){return!("button"in e)&&n._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"])?null:(e.preventDefault(),n.decrease(e))}]}})],1)};i._withStripped=!0;var a=t(10),r=t.n(a),o=t(22),s=t.n(o),l=t(30),d={name:"ElInputNumber",mixins:[s()("input")],inject:{elForm:{default:""},elFormItem:{default:""}},directives:{repeatClick:l.a},components:{ElInput:r.a},props:{step:{type:Number,default:1},stepStrictly:{type:Boolean,default:!1},max:{type:Number,default:1/0},min:{type:Number,default:-1/0},value:{},disabled:Boolean,size:String,controls:{type:Boolean,default:!0},controlsPosition:{type:String,default:""},name:String,label:String,placeholder:String,precision:{type:Number,validator:function(n){return n>=0&&n===parseInt(n,10)}}},data:function(){return{currentValue:0,userInput:null}},watch:{value:{immediate:!0,handler:function(n){var e=void 0===n?n:Number(n);if(void 0!==e){if(isNaN(e))return;if(this.stepStrictly){var t=this.getPrecision(this.step),i=Math.pow(10,t);e=Math.round(e/this.step)*i*this.step/i}void 0!==this.precision&&(e=this.toPrecision(e,this.precision))}e>=this.max&&(e=this.max),e<=this.min&&(e=this.min),this.currentValue=e,this.userInput=null,this.$emit("input",e)}}},computed:{minDisabled:function(){return this._decrease(this.value,this.step)<this.min},maxDisabled:function(){return this._increase(this.value,this.step)>this.max},numPrecision:function(){var n=this.value,e=this.step,t=this.getPrecision,i=this.precision,a=t(e);return void 0!==i?(a>i&&console.warn("[Element Warn][InputNumber]precision should not be less than the decimal places of step"),i):Math.max(t(n),a)},controlsAtRight:function(){return this.controls&&"right"===this.controlsPosition},_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},inputNumberSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},inputNumberDisabled:function(){return this.disabled||!!(this.elForm||{}).disabled},displayValue:function(){if(null!==this.userInput)return this.userInput;var n=this.currentValue;if("number"==typeof n){if(this.stepStrictly){var e=this.getPrecision(this.step),t=Math.pow(10,e);n=Math.round(n/this.step)*t*this.step/t}void 0!==this.precision&&(n=n.toFixed(this.precision))}return n}},methods:{toPrecision:function(n,e){return void 0===e&&(e=this.numPrecision),parseFloat(Math.round(n*Math.pow(10,e))/Math.pow(10,e))},getPrecision:function(n){if(void 0===n)return 0;var e=n.toString(),t=e.indexOf("."),i=0;return-1!==t&&(i=e.length-t-1),i},_increase:function(n,e){if("number"!=typeof n&&void 0!==n)return this.currentValue;var t=Math.pow(10,this.numPrecision);return this.toPrecision((t*n+t*e)/t)},_decrease:function(n,e){if("number"!=typeof n&&void 0!==n)return this.currentValue;var t=Math.pow(10,this.numPrecision);return this.toPrecision((t*n-t*e)/t)},increase:function(){if(!this.inputNumberDisabled&&!this.maxDisabled){var n=this.value||0,e=this._increase(n,this.step);this.setCurrentValue(e)}},decrease:function(){if(!this.inputNumberDisabled&&!this.minDisabled){var n=this.value||0,e=this._decrease(n,this.step);this.setCurrentValue(e)}},handleBlur:function(n){this.$emit("blur",n)},handleFocus:function(n){this.$emit("focus",n)},setCurrentValue:function(n){var e=this.currentValue;"number"==typeof n&&void 0!==this.precision&&(n=this.toPrecision(n,this.precision)),n>=this.max&&(n=this.max),n<=this.min&&(n=this.min),e!==n&&(this.userInput=null,this.$emit("input",n),this.$emit("change",n,e),this.currentValue=n)},handleInput:function(n){this.userInput=n},handleInputChange:function(n){var e=""===n?void 0:Number(n);isNaN(e)&&""!==n||this.setCurrentValue(e),this.userInput=null},select:function(){this.$refs.input.select()}},mounted:function(){var n=this.$refs.input.$refs.input;n.setAttribute("role","spinbutton"),n.setAttribute("aria-valuemax",this.max),n.setAttribute("aria-valuemin",this.min),n.setAttribute("aria-valuenow",this.currentValue),n.setAttribute("aria-disabled",this.inputNumberDisabled)},updated:function(){this.$refs&&this.$refs.input&&this.$refs.input.$refs.input.setAttribute("aria-valuenow",this.currentValue)}},c=t(0),u=Object(c.a)(d,i,[],!1,null,null,null);u.options.__file="packages/input-number/src/input-number.vue";var p=u.exports;p.install=function(n){n.component(p.name,p)};e.default=p}})},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=61)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},15:function(n,e){n.exports=t(86)},18:function(n,e){n.exports=t(146)},21:function(n,e){n.exports=t(51)},26:function(n,e){n.exports=t(148)},3:function(n,e){n.exports=t(10)},31:function(n,e){n.exports=t(88)},41:function(n,e){n.exports=t(89)},52:function(n,e){n.exports=t(152)},6:function(n,e){n.exports=t(81)},61:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{class:["el-cascader-panel",this.border&&"is-bordered"],on:{keydown:this.handleKeyDown}},this._l(this.menus,(function(n,t){return e("cascader-menu",{key:t,ref:"menu",refInFor:!0,attrs:{index:t,nodes:n}})})),1)};i._withStripped=!0;var a=t(26),r=t.n(a),o=t(15),s=t.n(o),l=t(18),d=t.n(l),c=t(52),u=t.n(c),p=t(3),h=function(n){return n.stopPropagation()},m={inject:["panel"],components:{ElCheckbox:d.a,ElRadio:u.a},props:{node:{required:!0},nodeId:String},computed:{config:function(){return this.panel.config},isLeaf:function(){return this.node.isLeaf},isDisabled:function(){return this.node.isDisabled},checkedValue:function(){return this.panel.checkedValue},isChecked:function(){return this.node.isSameNode(this.checkedValue)},inActivePath:function(){return this.isInPath(this.panel.activePath)},inCheckedPath:function(){var n=this;return!!this.config.checkStrictly&&this.panel.checkedNodePaths.some((function(e){return n.isInPath(e)}))},value:function(){return this.node.getValueByOption()}},methods:{handleExpand:function(){var n=this,e=this.panel,t=this.node,i=this.isDisabled,a=this.config,r=a.multiple;!a.checkStrictly&&i||t.loading||(a.lazy&&!t.loaded?e.lazyLoad(t,(function(){var e=n.isLeaf;if(e||n.handleExpand(),r){var i=!!e&&t.checked;n.handleMultiCheckChange(i)}})):e.handleExpand(t))},handleCheckChange:function(){var n=this.panel,e=this.value,t=this.node;n.handleCheckChange(e),n.handleExpand(t)},handleMultiCheckChange:function(n){this.node.doCheck(n),this.panel.calculateMultiCheckedValue()},isInPath:function(n){var e=this.node;return(n[e.level-1]||{}).uid===e.uid},renderPrefix:function(n){var e=this.isLeaf,t=this.isChecked,i=this.config,a=i.checkStrictly;return i.multiple?this.renderCheckbox(n):a?this.renderRadio(n):e&&t?this.renderCheckIcon(n):null},renderPostfix:function(n){var e=this.node,t=this.isLeaf;return e.loading?this.renderLoadingIcon(n):t?null:this.renderExpandIcon(n)},renderCheckbox:function(n){var e=this.node,t=this.config,i=this.isDisabled,a={on:{change:this.handleMultiCheckChange},nativeOn:{}};return t.checkStrictly&&(a.nativeOn.click=h),n("el-checkbox",r()([{attrs:{value:e.checked,indeterminate:e.indeterminate,disabled:i}},a]))},renderRadio:function(n){var e=this.checkedValue,t=this.value,i=this.isDisabled;return Object(p.isEqual)(t,e)&&(t=e),n("el-radio",{attrs:{value:e,label:t,disabled:i},on:{change:this.handleCheckChange},nativeOn:{click:h}},[n("span")])},renderCheckIcon:function(n){return n("i",{class:"el-icon-check el-cascader-node__prefix"})},renderLoadingIcon:function(n){return n("i",{class:"el-icon-loading el-cascader-node__postfix"})},renderExpandIcon:function(n){return n("i",{class:"el-icon-arrow-right el-cascader-node__postfix"})},renderContent:function(n){var e=this.panel,t=this.node,i=e.renderLabelFn;return n("span",{class:"el-cascader-node__label"},[(i?i({node:t,data:t.data}):null)||t.label])}},render:function(n){var e=this,t=this.inActivePath,i=this.inCheckedPath,a=this.isChecked,o=this.isLeaf,s=this.isDisabled,l=this.config,d=this.nodeId,c=l.expandTrigger,u=l.checkStrictly,p=l.multiple,h=!u&&s,m={on:{}};return"click"===c?m.on.click=this.handleExpand:(m.on.mouseenter=function(n){e.handleExpand(),e.$emit("expand",n)},m.on.focus=function(n){e.handleExpand(),e.$emit("expand",n)}),!o||s||u||p||(m.on.click=this.handleCheckChange),n("li",r()([{attrs:{role:"menuitem",id:d,"aria-expanded":t,tabindex:h?null:-1},class:{"el-cascader-node":!0,"is-selectable":u,"in-active-path":t,"in-checked-path":i,"is-active":a,"is-disabled":h}},m]),[this.renderPrefix(n),this.renderContent(n),this.renderPostfix(n)])}},g=t(0),f=Object(g.a)(m,void 0,void 0,!1,null,null,null);f.options.__file="packages/cascader-panel/src/cascader-node.vue";var v=f.exports,b=t(6),_={name:"ElCascaderMenu",mixins:[t.n(b).a],inject:["panel"],components:{ElScrollbar:s.a,CascaderNode:v},props:{nodes:{type:Array,required:!0},index:Number},data:function(){return{activeNode:null,hoverTimer:null,id:Object(p.generateId)()}},computed:{isEmpty:function(){return!this.nodes.length},menuId:function(){return"cascader-menu-"+this.id+"-"+this.index}},methods:{handleExpand:function(n){this.activeNode=n.target},handleMouseMove:function(n){var e=this.activeNode,t=this.hoverTimer,i=this.$refs.hoverZone;if(e&&i)if(e.contains(n.target)){clearTimeout(t);var a=this.$el.getBoundingClientRect().left,r=n.clientX-a,o=this.$el,s=o.offsetWidth,l=o.offsetHeight,d=e.offsetTop,c=d+e.offsetHeight;i.innerHTML='\n          <path style="pointer-events: auto;" fill="transparent" d="M'+r+" "+d+" L"+s+" 0 V"+d+' Z" />\n          <path style="pointer-events: auto;" fill="transparent" d="M'+r+" "+c+" L"+s+" "+l+" V"+c+' Z" />\n        '}else t||(this.hoverTimer=setTimeout(this.clearHoverZone,this.panel.config.hoverThreshold))},clearHoverZone:function(){var n=this.$refs.hoverZone;n&&(n.innerHTML="")},renderEmptyText:function(n){return n("div",{class:"el-cascader-menu__empty-text"},[this.t("el.cascader.noData")])},renderNodeList:function(n){var e=this.menuId,t=this.panel.isHoverMenu,i={on:{}};t&&(i.on.expand=this.handleExpand);var a=this.nodes.map((function(t,a){var o=t.hasChildren;return n("cascader-node",r()([{key:t.uid,attrs:{node:t,"node-id":e+"-"+a,"aria-haspopup":o,"aria-owns":o?e:null}},i]))}));return[].concat(a,[t?n("svg",{ref:"hoverZone",class:"el-cascader-menu__hover-zone"}):null])}},render:function(n){var e=this.isEmpty,t=this.menuId,i={nativeOn:{}};return this.panel.isHoverMenu&&(i.nativeOn.mousemove=this.handleMouseMove),n("el-scrollbar",r()([{attrs:{tag:"ul",role:"menu",id:t,"wrap-class":"el-cascader-menu__wrap","view-class":{"el-cascader-menu__list":!0,"is-empty":e}},class:"el-cascader-menu"},i]),[e?this.renderEmptyText(n):this.renderNodeList(n)])}},y=Object(g.a)(_,void 0,void 0,!1,null,null,null);y.options.__file="packages/cascader-panel/src/cascader-menu.vue";var x=y.exports,k=t(21),T=function(){function n(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}();var w=0,I=function(){function n(e,t,i){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.data=e,this.config=t,this.parent=i||null,this.level=this.parent?this.parent.level+1:1,this.uid=w++,this.initState(),this.initChildren()}return n.prototype.initState=function(){var n=this.config,e=n.value,t=n.label;this.value=this.data[e],this.label=this.data[t],this.pathNodes=this.calculatePathNodes(),this.path=this.pathNodes.map((function(n){return n.value})),this.pathLabels=this.pathNodes.map((function(n){return n.label})),this.loading=!1,this.loaded=!1},n.prototype.initChildren=function(){var e=this,t=this.config,i=t.children,a=this.data[i];this.hasChildren=Array.isArray(a),this.children=(a||[]).map((function(i){return new n(i,t,e)}))},n.prototype.calculatePathNodes=function(){for(var n=[this],e=this.parent;e;)n.unshift(e),e=e.parent;return n},n.prototype.getPath=function(){return this.path},n.prototype.getValue=function(){return this.value},n.prototype.getValueByOption=function(){return this.config.emitPath?this.getPath():this.getValue()},n.prototype.getText=function(n,e){return n?this.pathLabels.join(e):this.label},n.prototype.isSameNode=function(n){var e=this.getValueByOption();return this.config.multiple&&Array.isArray(n)?n.some((function(n){return Object(p.isEqual)(n,e)})):Object(p.isEqual)(n,e)},n.prototype.broadcast=function(n){for(var e=arguments.length,t=Array(e>1?e-1:0),i=1;i<e;i++)t[i-1]=arguments[i];var a="onParent"+Object(p.capitalize)(n);this.children.forEach((function(e){e&&(e.broadcast.apply(e,[n].concat(t)),e[a]&&e[a].apply(e,t))}))},n.prototype.emit=function(n){var e=this.parent,t="onChild"+Object(p.capitalize)(n);if(e){for(var i=arguments.length,a=Array(i>1?i-1:0),r=1;r<i;r++)a[r-1]=arguments[r];e[t]&&e[t].apply(e,a),e.emit.apply(e,[n].concat(a))}},n.prototype.onParentCheck=function(n){this.isDisabled||this.setCheckState(n)},n.prototype.onChildCheck=function(){var n=this.children.filter((function(n){return!n.isDisabled})),e=!!n.length&&n.every((function(n){return n.checked}));this.setCheckState(e)},n.prototype.setCheckState=function(n){var e=this.children.length,t=this.children.reduce((function(n,e){return n+(e.checked?1:e.indeterminate?.5:0)}),0);this.checked=n,this.indeterminate=t!==e&&t>0},n.prototype.syncCheckState=function(n){var e=this.getValueByOption(),t=this.isSameNode(n,e);this.doCheck(t)},n.prototype.doCheck=function(n){this.checked!==n&&(this.config.checkStrictly?this.checked=n:(this.broadcast("check",n),this.setCheckState(n),this.emit("check")))},T(n,[{key:"isDisabled",get:function(){var n=this.data,e=this.parent,t=this.config,i=t.disabled,a=t.checkStrictly;return n[i]||!a&&e&&e.isDisabled}},{key:"isLeaf",get:function(){var n=this.data,e=this.loaded,t=this.hasChildren,i=this.children,a=this.config,r=a.lazy,o=a.leaf;if(r){var s=Object(k.isDef)(n[o])?n[o]:!!e&&!i.length;return this.hasChildren=!s,s}return!t}}]),n}();var C=function n(e,t){return e.reduce((function(e,i){return i.isLeaf?e.push(i):(!t&&e.push(i),e=e.concat(n(i.children,t))),e}),[])},D=function(){function n(e,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.config=t,this.initNodes(e)}return n.prototype.initNodes=function(n){var e=this;n=Object(p.coerceTruthyValueToArray)(n),this.nodes=n.map((function(n){return new I(n,e.config)})),this.flattedNodes=this.getFlattedNodes(!1,!1),this.leafNodes=this.getFlattedNodes(!0,!1)},n.prototype.appendNode=function(n,e){var t=new I(n,this.config,e);(e?e.children:this.nodes).push(t)},n.prototype.appendNodes=function(n,e){var t=this;(n=Object(p.coerceTruthyValueToArray)(n)).forEach((function(n){return t.appendNode(n,e)}))},n.prototype.getNodes=function(){return this.nodes},n.prototype.getFlattedNodes=function(n){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=n?this.leafNodes:this.flattedNodes;return e?t:C(this.nodes,n)},n.prototype.getNodeByValue=function(n){var e=this.getFlattedNodes(!1,!this.config.lazy).filter((function(e){return Object(p.valueEquals)(e.path,n)||e.value===n}));return e&&e.length?e[0]:null},n}(),E=t(9),S=t.n(E),M=t(41),A=t.n(M),O=t(31),P=t.n(O),j=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},z=A.a.keys,R={expandTrigger:"click",multiple:!1,checkStrictly:!1,emitPath:!0,lazy:!1,lazyLoad:p.noop,value:"value",label:"label",children:"children",leaf:"leaf",disabled:"disabled",hoverThreshold:500},$=function(n){return!n.getAttribute("aria-owns")},L=function(n,e){var t=n.parentNode;if(t){var i=t.querySelectorAll('.el-cascader-node[tabindex="-1"]');return i[Array.prototype.indexOf.call(i,n)+e]||null}return null},U=function(n,e){if(n){var t=n.id.split("-");return Number(t[t.length-2])}},N=function(n){n&&(n.focus(),!$(n)&&n.click())},q={name:"ElCascaderPanel",components:{CascaderMenu:x},props:{value:{},options:Array,props:Object,border:{type:Boolean,default:!0},renderLabel:Function},provide:function(){return{panel:this}},data:function(){return{checkedValue:null,checkedNodePaths:[],store:[],menus:[],activePath:[],loadCount:0}},computed:{config:function(){return S()(j({},R),this.props||{})},multiple:function(){return this.config.multiple},checkStrictly:function(){return this.config.checkStrictly},leafOnly:function(){return!this.checkStrictly},isHoverMenu:function(){return"hover"===this.config.expandTrigger},renderLabelFn:function(){return this.renderLabel||this.$scopedSlots.default}},watch:{value:function(){this.syncCheckedValue(),this.checkStrictly&&this.calculateCheckedNodePaths()},options:{handler:function(){this.initStore()},immediate:!0,deep:!0},checkedValue:function(n){Object(p.isEqual)(n,this.value)||(this.checkStrictly&&this.calculateCheckedNodePaths(),this.$emit("input",n),this.$emit("change",n))}},mounted:function(){this.isEmptyValue(this.value)||this.syncCheckedValue()},methods:{initStore:function(){var n=this.config,e=this.options;n.lazy&&Object(p.isEmpty)(e)?this.lazyLoad():(this.store=new D(e,n),this.menus=[this.store.getNodes()],this.syncMenuState())},syncCheckedValue:function(){var n=this.value,e=this.checkedValue;Object(p.isEqual)(n,e)||(this.activePath=[],this.checkedValue=n,this.syncMenuState())},syncMenuState:function(){var n=this.multiple,e=this.checkStrictly;this.syncActivePath(),n&&this.syncMultiCheckState(),e&&this.calculateCheckedNodePaths(),this.$nextTick(this.scrollIntoView)},syncMultiCheckState:function(){var n=this;this.getFlattedNodes(this.leafOnly).forEach((function(e){e.syncCheckState(n.checkedValue)}))},isEmptyValue:function(n){var e=this.multiple,t=this.config.emitPath;return!(!e&&!t)&&Object(p.isEmpty)(n)},syncActivePath:function(){var n=this,e=this.store,t=this.multiple,i=this.activePath,a=this.checkedValue;if(Object(p.isEmpty)(i))if(this.isEmptyValue(a))this.activePath=[],this.menus=[e.getNodes()];else{var r=t?a[0]:a,o=((this.getNodeByValue(r)||{}).pathNodes||[]).slice(0,-1);this.expandNodes(o)}else{var s=i.map((function(e){return n.getNodeByValue(e.getValue())}));this.expandNodes(s)}},expandNodes:function(n){var e=this;n.forEach((function(n){return e.handleExpand(n,!0)}))},calculateCheckedNodePaths:function(){var n=this,e=this.checkedValue,t=this.multiple?Object(p.coerceTruthyValueToArray)(e):[e];this.checkedNodePaths=t.map((function(e){var t=n.getNodeByValue(e);return t?t.pathNodes:[]}))},handleKeyDown:function(n){var e=n.target;switch(n.keyCode){case z.up:var t=L(e,-1);N(t);break;case z.down:var i=L(e,1);N(i);break;case z.left:var a=this.$refs.menu[U(e)-1];if(a){var r=a.$el.querySelector('.el-cascader-node[aria-expanded="true"]');N(r)}break;case z.right:var o=this.$refs.menu[U(e)+1];if(o){var s=o.$el.querySelector('.el-cascader-node[tabindex="-1"]');N(s)}break;case z.enter:!function(n){if(n){var e=n.querySelector("input");e?e.click():$(n)&&n.click()}}(e);break;case z.esc:case z.tab:this.$emit("close");break;default:return}},handleExpand:function(n,e){var t=this.activePath,i=n.level,a=t.slice(0,i-1),r=this.menus.slice(0,i);if(n.isLeaf||(a.push(n),r.push(n.children)),this.activePath=a,this.menus=r,!e){var o=a.map((function(n){return n.getValue()})),s=t.map((function(n){return n.getValue()}));Object(p.valueEquals)(o,s)||(this.$emit("active-item-change",o),this.$emit("expand-change",o))}},handleCheckChange:function(n){this.checkedValue=n},lazyLoad:function(n,e){var t=this,i=this.config;n||(n=n||{root:!0,level:0},this.store=new D([],i),this.menus=[this.store.getNodes()]),n.loading=!0;i.lazyLoad(n,(function(i){var a=n.root?null:n;if(i&&i.length&&t.store.appendNodes(i,a),n.loading=!1,n.loaded=!0,Array.isArray(t.checkedValue)){var r=t.checkedValue[t.loadCount++],o=t.config.value,s=t.config.leaf;if(Array.isArray(i)&&i.filter((function(n){return n[o]===r})).length>0){var l=t.store.getNodeByValue(r);l.data[s]||t.lazyLoad(l,(function(){t.handleExpand(l)})),t.loadCount===t.checkedValue.length&&t.$parent.computePresentText()}}e&&e(i)}))},calculateMultiCheckedValue:function(){this.checkedValue=this.getCheckedNodes(this.leafOnly).map((function(n){return n.getValueByOption()}))},scrollIntoView:function(){this.$isServer||(this.$refs.menu||[]).forEach((function(n){var e=n.$el;if(e){var t=e.querySelector(".el-scrollbar__wrap"),i=e.querySelector(".el-cascader-node.is-active")||e.querySelector(".el-cascader-node.in-active-path");P()(t,i)}}))},getNodeByValue:function(n){return this.store.getNodeByValue(n)},getFlattedNodes:function(n){var e=!this.config.lazy;return this.store.getFlattedNodes(n,e)},getCheckedNodes:function(n){var e=this.checkedValue;return this.multiple?this.getFlattedNodes(n).filter((function(n){return n.checked})):this.isEmptyValue(e)?[]:[this.getNodeByValue(e)]},clearCheckedNodes:function(){var n=this.config,e=this.leafOnly,t=n.multiple,i=n.emitPath;t?(this.getCheckedNodes(e).filter((function(n){return!n.isDisabled})).forEach((function(n){return n.doCheck(!1)})),this.calculateMultiCheckedValue()):this.checkedValue=i?[]:null}}},B=Object(g.a)(q,i,[],!1,null,null,null);B.options.__file="packages/cascader-panel/src/cascader-panel.vue";var F=B.exports;F.install=function(n){n.component(F.name,F)};e.default=F},9:function(n,e){n.exports=t(50)}})},function(n,e,t){n.exports=function(n){var e={};function t(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(i,a,function(e){return n[e]}.bind(null,a));return i},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/dist/",t(t.s=78)}({0:function(n,e,t){"use strict";function i(n,e,t,i,a,r,o,s){var l,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),i&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},d._ssrRegister=l):a&&(l=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(n,e){return l.call(e),c(n,e)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:d}}t.d(e,"a",(function(){return i}))},2:function(n,e){n.exports=t(20)},3:function(n,e){n.exports=t(10)},5:function(n,e){n.exports=t(49)},7:function(n,e){n.exports=t(1)},78:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("span",[t("transition",{attrs:{name:n.transition},on:{"after-enter":n.handleAfterEnter,"after-leave":n.handleAfterLeave}},[t("div",{directives:[{name:"show",rawName:"v-show",value:!n.disabled&&n.showPopper,expression:"!disabled && showPopper"}],ref:"popper",staticClass:"el-popover el-popper",class:[n.popperClass,n.content&&"el-popover--plain"],style:{width:n.width+"px"},attrs:{role:"tooltip",id:n.tooltipId,"aria-hidden":n.disabled||!n.showPopper?"true":"false"}},[n.title?t("div",{staticClass:"el-popover__title",domProps:{textContent:n._s(n.title)}}):n._e(),n._t("default",[n._v(n._s(n.content))])],2)]),t("span",{ref:"wrapper",staticClass:"el-popover__reference-wrapper"},[n._t("reference")],2)],1)};i._withStripped=!0;var a=t(5),r=t.n(a),o=t(2),s=t(3),l={name:"ElPopover",mixins:[r.a],props:{trigger:{type:String,default:"click",validator:function(n){return["click","focus","hover","manual"].indexOf(n)>-1}},openDelay:{type:Number,default:0},closeDelay:{type:Number,default:200},title:String,disabled:Boolean,content:String,reference:{},popperClass:String,width:{},visibleArrow:{default:!0},arrowOffset:{type:Number,default:0},transition:{type:String,default:"fade-in-linear"},tabindex:{type:Number,default:0}},computed:{tooltipId:function(){return"el-popover-"+Object(s.generateId)()}},watch:{showPopper:function(n){this.disabled||(n?this.$emit("show"):this.$emit("hide"))}},mounted:function(){var n=this,e=this.referenceElm=this.reference||this.$refs.reference,t=this.popper||this.$refs.popper;!e&&this.$refs.wrapper.children&&(e=this.referenceElm=this.$refs.wrapper.children[0]),e&&(Object(o.addClass)(e,"el-popover__reference"),e.setAttribute("aria-describedby",this.tooltipId),e.setAttribute("tabindex",this.tabindex),t.setAttribute("tabindex",0),"click"!==this.trigger&&(Object(o.on)(e,"focusin",(function(){n.handleFocus();var t=e.__vue__;t&&"function"==typeof t.focus&&t.focus()})),Object(o.on)(t,"focusin",this.handleFocus),Object(o.on)(e,"focusout",this.handleBlur),Object(o.on)(t,"focusout",this.handleBlur)),Object(o.on)(e,"keydown",this.handleKeydown),Object(o.on)(e,"click",this.handleClick)),"click"===this.trigger?(Object(o.on)(e,"click",this.doToggle),Object(o.on)(document,"click",this.handleDocumentClick)):"hover"===this.trigger?(Object(o.on)(e,"mouseenter",this.handleMouseEnter),Object(o.on)(t,"mouseenter",this.handleMouseEnter),Object(o.on)(e,"mouseleave",this.handleMouseLeave),Object(o.on)(t,"mouseleave",this.handleMouseLeave)):"focus"===this.trigger&&(this.tabindex<0&&console.warn("[Element Warn][Popover]a negative taindex means that the element cannot be focused by tab key"),e.querySelector("input, textarea")?(Object(o.on)(e,"focusin",this.doShow),Object(o.on)(e,"focusout",this.doClose)):(Object(o.on)(e,"mousedown",this.doShow),Object(o.on)(e,"mouseup",this.doClose)))},beforeDestroy:function(){this.cleanup()},deactivated:function(){this.cleanup()},methods:{doToggle:function(){this.showPopper=!this.showPopper},doShow:function(){this.showPopper=!0},doClose:function(){this.showPopper=!1},handleFocus:function(){Object(o.addClass)(this.referenceElm,"focusing"),"click"!==this.trigger&&"focus"!==this.trigger||(this.showPopper=!0)},handleClick:function(){Object(o.removeClass)(this.referenceElm,"focusing")},handleBlur:function(){Object(o.removeClass)(this.referenceElm,"focusing"),"click"!==this.trigger&&"focus"!==this.trigger||(this.showPopper=!1)},handleMouseEnter:function(){var n=this;clearTimeout(this._timer),this.openDelay?this._timer=setTimeout((function(){n.showPopper=!0}),this.openDelay):this.showPopper=!0},handleKeydown:function(n){27===n.keyCode&&"manual"!==this.trigger&&this.doClose()},handleMouseLeave:function(){var n=this;clearTimeout(this._timer),this.closeDelay?this._timer=setTimeout((function(){n.showPopper=!1}),this.closeDelay):this.showPopper=!1},handleDocumentClick:function(n){var e=this.reference||this.$refs.reference,t=this.popper||this.$refs.popper;!e&&this.$refs.wrapper.children&&(e=this.referenceElm=this.$refs.wrapper.children[0]),this.$el&&e&&!this.$el.contains(n.target)&&!e.contains(n.target)&&t&&!t.contains(n.target)&&(this.showPopper=!1)},handleAfterEnter:function(){this.$emit("after-enter")},handleAfterLeave:function(){this.$emit("after-leave"),this.doDestroy()},cleanup:function(){(this.openDelay||this.closeDelay)&&clearTimeout(this._timer)}},destroyed:function(){var n=this.reference;Object(o.off)(n,"click",this.doToggle),Object(o.off)(n,"mouseup",this.doClose),Object(o.off)(n,"mousedown",this.doShow),Object(o.off)(n,"focusin",this.doShow),Object(o.off)(n,"focusout",this.doClose),Object(o.off)(n,"mousedown",this.doShow),Object(o.off)(n,"mouseup",this.doClose),Object(o.off)(n,"mouseleave",this.handleMouseLeave),Object(o.off)(n,"mouseenter",this.handleMouseEnter),Object(o.off)(document,"click",this.handleDocumentClick)}},d=t(0),c=Object(d.a)(l,i,[],!1,null,null,null);c.options.__file="packages/popover/src/main.vue";var u=c.exports,p=function(n,e,t){var i=e.expression?e.value:e.arg,a=t.context.$refs[i];a&&(Array.isArray(a)?a[0].$refs.reference=n:a.$refs.reference=n)},h={bind:function(n,e,t){p(n,e,t)},inserted:function(n,e,t){p(n,e,t)}},m=t(7);t.n(m).a.directive("popover",h),u.install=function(n){n.directive("popover",h),n.component(u.name,u)},u.directive=h;e.default=u}})},function(n,e,t){},function(n,e){n.exports={cdnBase:"https://mpqq.gtimg.cn/",cdnPath:"undefined"!=typeof process&&process.env&&"test"===process.env.BUILD_ENV?"bot-wiki/test/":"bot-wiki/online/"}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(153)},function(n,e,t){"use strict";t(154)},function(n,e,t){t(378),n.exports=self.fetch.bind(self)},function(n,e,t){"use strict";t.r(e),t.d(e,"Headers",(function(){return m})),t.d(e,"Request",(function(){return x})),t.d(e,"Response",(function(){return T})),t.d(e,"DOMException",(function(){return I})),t.d(e,"fetch",(function(){return C}));var i="undefined"!=typeof globalThis&&globalThis||"undefined"!=typeof self&&self||"undefined"!=typeof global&&global||{},a="URLSearchParams"in i,r="Symbol"in i&&"iterator"in Symbol,o="FileReader"in i&&"Blob"in i&&function(){try{return new Blob,!0}catch(n){return!1}}(),s="FormData"in i,l="ArrayBuffer"in i;if(l)var d=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],c=ArrayBuffer.isView||function(n){return n&&d.indexOf(Object.prototype.toString.call(n))>-1};function u(n){if("string"!=typeof n&&(n=String(n)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(n)||""===n)throw new TypeError('Invalid character in header field name: "'+n+'"');return n.toLowerCase()}function p(n){return"string"!=typeof n&&(n=String(n)),n}function h(n){var e={next:function(){var e=n.shift();return{done:void 0===e,value:e}}};return r&&(e[Symbol.iterator]=function(){return e}),e}function m(n){this.map={},n instanceof m?n.forEach((function(n,e){this.append(e,n)}),this):Array.isArray(n)?n.forEach((function(n){if(2!=n.length)throw new TypeError("Headers constructor: expected name/value pair to be length 2, found"+n.length);this.append(n[0],n[1])}),this):n&&Object.getOwnPropertyNames(n).forEach((function(e){this.append(e,n[e])}),this)}function g(n){if(!n._noBody)return n.bodyUsed?Promise.reject(new TypeError("Already read")):void(n.bodyUsed=!0)}function f(n){return new Promise((function(e,t){n.onload=function(){e(n.result)},n.onerror=function(){t(n.error)}}))}function v(n){var e=new FileReader,t=f(e);return e.readAsArrayBuffer(n),t}function b(n){if(n.slice)return n.slice(0);var e=new Uint8Array(n.byteLength);return e.set(new Uint8Array(n)),e.buffer}function _(){return this.bodyUsed=!1,this._initBody=function(n){var e;this.bodyUsed=this.bodyUsed,this._bodyInit=n,n?"string"==typeof n?this._bodyText=n:o&&Blob.prototype.isPrototypeOf(n)?this._bodyBlob=n:s&&FormData.prototype.isPrototypeOf(n)?this._bodyFormData=n:a&&URLSearchParams.prototype.isPrototypeOf(n)?this._bodyText=n.toString():l&&o&&((e=n)&&DataView.prototype.isPrototypeOf(e))?(this._bodyArrayBuffer=b(n.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):l&&(ArrayBuffer.prototype.isPrototypeOf(n)||c(n))?this._bodyArrayBuffer=b(n):this._bodyText=n=Object.prototype.toString.call(n):(this._noBody=!0,this._bodyText=""),this.headers.get("content-type")||("string"==typeof n?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):a&&URLSearchParams.prototype.isPrototypeOf(n)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},o&&(this.blob=function(){var n=g(this);if(n)return n;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))}),this.arrayBuffer=function(){if(this._bodyArrayBuffer){var n=g(this);return n||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}if(o)return this.blob().then(v);throw new Error("could not read as ArrayBuffer")},this.text=function(){var n,e,t,i,a,r=g(this);if(r)return r;if(this._bodyBlob)return n=this._bodyBlob,e=new FileReader,t=f(e),i=/charset=([A-Za-z0-9_-]+)/.exec(n.type),a=i?i[1]:"utf-8",e.readAsText(n,a),t;if(this._bodyArrayBuffer)return Promise.resolve(function(n){for(var e=new Uint8Array(n),t=new Array(e.length),i=0;i<e.length;i++)t[i]=String.fromCharCode(e[i]);return t.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},s&&(this.formData=function(){return this.text().then(k)}),this.json=function(){return this.text().then(JSON.parse)},this}m.prototype.append=function(n,e){n=u(n),e=p(e);var t=this.map[n];this.map[n]=t?t+", "+e:e},m.prototype.delete=function(n){delete this.map[u(n)]},m.prototype.get=function(n){return n=u(n),this.has(n)?this.map[n]:null},m.prototype.has=function(n){return this.map.hasOwnProperty(u(n))},m.prototype.set=function(n,e){this.map[u(n)]=p(e)},m.prototype.forEach=function(n,e){for(var t in this.map)this.map.hasOwnProperty(t)&&n.call(e,this.map[t],t,this)},m.prototype.keys=function(){var n=[];return this.forEach((function(e,t){n.push(t)})),h(n)},m.prototype.values=function(){var n=[];return this.forEach((function(e){n.push(e)})),h(n)},m.prototype.entries=function(){var n=[];return this.forEach((function(e,t){n.push([t,e])})),h(n)},r&&(m.prototype[Symbol.iterator]=m.prototype.entries);var y=["CONNECT","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT","TRACE"];function x(n,e){if(!(this instanceof x))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');var t,a,r=(e=e||{}).body;if(n instanceof x){if(n.bodyUsed)throw new TypeError("Already read");this.url=n.url,this.credentials=n.credentials,e.headers||(this.headers=new m(n.headers)),this.method=n.method,this.mode=n.mode,this.signal=n.signal,r||null==n._bodyInit||(r=n._bodyInit,n.bodyUsed=!0)}else this.url=String(n);if(this.credentials=e.credentials||this.credentials||"same-origin",!e.headers&&this.headers||(this.headers=new m(e.headers)),this.method=(t=e.method||this.method||"GET",a=t.toUpperCase(),y.indexOf(a)>-1?a:t),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal||function(){if("AbortController"in i)return(new AbortController).signal}(),this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&r)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(r),!("GET"!==this.method&&"HEAD"!==this.method||"no-store"!==e.cache&&"no-cache"!==e.cache)){var o=/([?&])_=[^&]*/;if(o.test(this.url))this.url=this.url.replace(o,"$1_="+(new Date).getTime());else{this.url+=(/\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}}function k(n){var e=new FormData;return n.trim().split("&").forEach((function(n){if(n){var t=n.split("="),i=t.shift().replace(/\+/g," "),a=t.join("=").replace(/\+/g," ");e.append(decodeURIComponent(i),decodeURIComponent(a))}})),e}function T(n,e){if(!(this instanceof T))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');if(e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.status<200||this.status>599)throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");this.ok=this.status>=200&&this.status<300,this.statusText=void 0===e.statusText?"":""+e.statusText,this.headers=new m(e.headers),this.url=e.url||"",this._initBody(n)}x.prototype.clone=function(){return new x(this,{body:this._bodyInit})},_.call(x.prototype),_.call(T.prototype),T.prototype.clone=function(){return new T(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new m(this.headers),url:this.url})},T.error=function(){var n=new T(null,{status:200,statusText:""});return n.ok=!1,n.status=0,n.type="error",n};var w=[301,302,303,307,308];T.redirect=function(n,e){if(-1===w.indexOf(e))throw new RangeError("Invalid status code");return new T(null,{status:e,headers:{location:n}})};var I=i.DOMException;try{new I}catch(n){(I=function(n,e){this.message=n,this.name=e;var t=Error(n);this.stack=t.stack}).prototype=Object.create(Error.prototype),I.prototype.constructor=I}function C(n,e){return new Promise((function(t,a){var r=new x(n,e);if(r.signal&&r.signal.aborted)return a(new I("Aborted","AbortError"));var s=new XMLHttpRequest;function d(){s.abort()}if(s.onload=function(){var n,e,i={statusText:s.statusText,headers:(n=s.getAllResponseHeaders()||"",e=new m,n.replace(/\r?\n[\t ]+/g," ").split("\r").map((function(n){return 0===n.indexOf("\n")?n.substr(1,n.length):n})).forEach((function(n){var t=n.split(":"),i=t.shift().trim();if(i){var a=t.join(":").trim();try{e.append(i,a)}catch(n){console.warn("Response "+n.message)}}})),e)};0===r.url.indexOf("file://")&&(s.status<200||s.status>599)?i.status=200:i.status=s.status,i.url="responseURL"in s?s.responseURL:i.headers.get("X-Request-URL");var a="response"in s?s.response:s.responseText;setTimeout((function(){t(new T(a,i))}),0)},s.onerror=function(){setTimeout((function(){a(new TypeError("Network request failed"))}),0)},s.ontimeout=function(){setTimeout((function(){a(new TypeError("Network request timed out"))}),0)},s.onabort=function(){setTimeout((function(){a(new I("Aborted","AbortError"))}),0)},s.open(r.method,function(n){try{return""===n&&i.location.href?i.location.href:n}catch(e){return n}}(r.url),!0),"include"===r.credentials?s.withCredentials=!0:"omit"===r.credentials&&(s.withCredentials=!1),"responseType"in s&&(o?s.responseType="blob":l&&(s.responseType="arraybuffer")),e&&"object"==typeof e.headers&&!(e.headers instanceof m||i.Headers&&e.headers instanceof i.Headers)){var c=[];Object.getOwnPropertyNames(e.headers).forEach((function(n){c.push(u(n)),s.setRequestHeader(n,p(e.headers[n]))})),r.headers.forEach((function(n,e){-1===c.indexOf(e)&&s.setRequestHeader(e,n)}))}else r.headers.forEach((function(n,e){s.setRequestHeader(e,n)}));r.signal&&(r.signal.addEventListener("abort",d),s.onreadystatechange=function(){4===s.readyState&&r.signal.removeEventListener("abort",d)}),s.send(void 0===r._bodyInit?null:r._bodyInit)}))}C.polyfill=!0,i.fetch||(i.fetch=C,i.Headers=m,i.Request=x,i.Response=T)},function(n,e,t){"use strict";var i=t(380),a=t(163),r=t(92),o=Object.prototype.hasOwnProperty,s={brackets:function(n){return n+"[]"},comma:"comma",indices:function(n,e){return n+"["+e+"]"},repeat:function(n){return n}},l=Array.isArray,d=Array.prototype.push,c=function(n,e){d.apply(n,l(e)?e:[e])},u=Date.prototype.toISOString,p=r.default,h={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:"indices",charset:"utf-8",charsetSentinel:!1,commaRoundTrip:!1,delimiter:"&",encode:!0,encodeDotInKeys:!1,encoder:a.encode,encodeValuesOnly:!1,filter:void 0,format:p,formatter:r.formatters[p],indices:!1,serializeDate:function(n){return u.call(n)},skipNulls:!1,strictNullHandling:!1},m={},g=function n(e,t,r,o,s,d,u,p,g,f,v,b,_,y,x,k,T,w){for(var I,C=e,D=w,E=0,S=!1;void 0!==(D=D.get(m))&&!S;){var M=D.get(e);if(E+=1,void 0!==M){if(M===E)throw new RangeError("Cyclic object value");S=!0}void 0===D.get(m)&&(E=0)}if("function"==typeof f?C=f(t,C):C instanceof Date?C=_(C):"comma"===r&&l(C)&&(C=a.maybeMap(C,(function(n){return n instanceof Date?_(n):n}))),null===C){if(d)return g&&!k?g(t,h.encoder,T,"key",y):t;C=""}if("string"==typeof(I=C)||"number"==typeof I||"boolean"==typeof I||"symbol"==typeof I||"bigint"==typeof I||a.isBuffer(C))return g?[x(k?t:g(t,h.encoder,T,"key",y))+"="+x(g(C,h.encoder,T,"value",y))]:[x(t)+"="+x(String(C))];var A,O=[];if(void 0===C)return O;if("comma"===r&&l(C))k&&g&&(C=a.maybeMap(C,g)),A=[{value:C.length>0?C.join(",")||null:void 0}];else if(l(f))A=f;else{var P=Object.keys(C);A=v?P.sort(v):P}var j=p?String(t).replace(/\./g,"%2E"):String(t),z=o&&l(C)&&1===C.length?j+"[]":j;if(s&&l(C)&&0===C.length)return z+"[]";for(var R=0;R<A.length;++R){var $=A[R],L="object"==typeof $&&$&&void 0!==$.value?$.value:C[$];if(!u||null!==L){var U=b&&p?String($).replace(/\./g,"%2E"):String($),N=l(C)?"function"==typeof r?r(z,U):z:z+(b?"."+U:"["+U+"]");w.set(e,E);var q=i();q.set(m,w),c(O,n(L,N,r,o,s,d,u,p,"comma"===r&&k&&l(C)?null:g,f,v,b,_,y,x,k,T,q))}}return O};n.exports=function(n,e){var t,a=n,d=function(n){if(!n)return h;if(void 0!==n.allowEmptyArrays&&"boolean"!=typeof n.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==n.encodeDotInKeys&&"boolean"!=typeof n.encodeDotInKeys)throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==n.encoder&&void 0!==n.encoder&&"function"!=typeof n.encoder)throw new TypeError("Encoder has to be a function.");var e=n.charset||h.charset;if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=r.default;if(void 0!==n.format){if(!o.call(r.formatters,n.format))throw new TypeError("Unknown format option provided.");t=n.format}var i,a=r.formatters[t],d=h.filter;if(("function"==typeof n.filter||l(n.filter))&&(d=n.filter),i=n.arrayFormat in s?n.arrayFormat:"indices"in n?n.indices?"indices":"repeat":h.arrayFormat,"commaRoundTrip"in n&&"boolean"!=typeof n.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var c=void 0===n.allowDots?!0===n.encodeDotInKeys||h.allowDots:!!n.allowDots;return{addQueryPrefix:"boolean"==typeof n.addQueryPrefix?n.addQueryPrefix:h.addQueryPrefix,allowDots:c,allowEmptyArrays:"boolean"==typeof n.allowEmptyArrays?!!n.allowEmptyArrays:h.allowEmptyArrays,arrayFormat:i,charset:e,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:h.charsetSentinel,commaRoundTrip:!!n.commaRoundTrip,delimiter:void 0===n.delimiter?h.delimiter:n.delimiter,encode:"boolean"==typeof n.encode?n.encode:h.encode,encodeDotInKeys:"boolean"==typeof n.encodeDotInKeys?n.encodeDotInKeys:h.encodeDotInKeys,encoder:"function"==typeof n.encoder?n.encoder:h.encoder,encodeValuesOnly:"boolean"==typeof n.encodeValuesOnly?n.encodeValuesOnly:h.encodeValuesOnly,filter:d,format:t,formatter:a,serializeDate:"function"==typeof n.serializeDate?n.serializeDate:h.serializeDate,skipNulls:"boolean"==typeof n.skipNulls?n.skipNulls:h.skipNulls,sort:"function"==typeof n.sort?n.sort:null,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:h.strictNullHandling}}(e);"function"==typeof d.filter?a=(0,d.filter)("",a):l(d.filter)&&(t=d.filter);var u=[];if("object"!=typeof a||null===a)return"";var p=s[d.arrayFormat],m="comma"===p&&d.commaRoundTrip;t||(t=Object.keys(a)),d.sort&&t.sort(d.sort);for(var f=i(),v=0;v<t.length;++v){var b=t[v],_=a[b];d.skipNulls&&null===_||c(u,g(_,b,p,m,d.allowEmptyArrays,d.strictNullHandling,d.skipNulls,d.encodeDotInKeys,d.encode?d.encoder:null,d.filter,d.sort,d.allowDots,d.serializeDate,d.format,d.formatter,d.encodeValuesOnly,d.charset,f))}var y=u.join(d.delimiter),x=!0===d.addQueryPrefix?"?":"";return d.charsetSentinel&&("iso-8859-1"===d.charset?x+="utf8=%26%2310003%3B&":x+="utf8=%E2%9C%93&"),y.length>0?x+y:""}},function(n,e,t){"use strict";var i=t(29),a=t(53),r=t(382),o=t(155),s=t(407)||o||r;n.exports=function(){var n,e={assert:function(n){if(!e.has(n))throw new i("Side channel does not contain "+a(n))},delete:function(e){return!!n&&n.delete(e)},get:function(e){return n&&n.get(e)},has:function(e){return!!n&&n.has(e)},set:function(e,t){n||(n=s()),n.set(e,t)}};return e}},function(n,e){},function(n,e,t){"use strict";var i=t(53),a=t(29),r=function(n,e,t){for(var i,a=n;null!=(i=a.next);a=i)if(i.key===e)return a.next=i.next,t||(i.next=n.next,n.next=i),i};n.exports=function(){var n,e={assert:function(n){if(!e.has(n))throw new a("Side channel does not contain "+i(n))},delete:function(e){var t=n&&n.next,i=function(n,e){if(n)return r(n,e,!0)}(n,e);return i&&t&&t===i&&(n=void 0),!!i},get:function(e){return function(n,e){if(n){var t=r(n,e);return t&&t.value}}(n,e)},has:function(e){return function(n,e){return!!n&&!!r(n,e)}(n,e)},set:function(e,t){n||(n={next:void 0}),function(n,e,t){var i=r(n,e);i?i.value=t:n.next={key:e,next:n.next,value:t}}(n,e,t)}};return e}},function(n,e,t){"use strict";n.exports=Error},function(n,e,t){"use strict";n.exports=EvalError},function(n,e,t){"use strict";n.exports=RangeError},function(n,e,t){"use strict";n.exports=ReferenceError},function(n,e,t){"use strict";n.exports=SyntaxError},function(n,e,t){"use strict";n.exports=URIError},function(n,e,t){"use strict";n.exports=Math.abs},function(n,e,t){"use strict";n.exports=Math.floor},function(n,e,t){"use strict";n.exports=Math.max},function(n,e,t){"use strict";n.exports=Math.min},function(n,e,t){"use strict";n.exports=Math.pow},function(n,e,t){"use strict";n.exports=Math.round},function(n,e,t){"use strict";var i=t(396);n.exports=function(n){return i(n)||0===n?n:n<0?-1:1}},function(n,e,t){"use strict";n.exports=Number.isNaN||function(n){return n!=n}},function(n,e,t){"use strict";n.exports=Object.getOwnPropertyDescriptor},function(n,e,t){"use strict";var i=Object.defineProperty||!1;if(i)try{i({},"a",{value:1})}catch(n){i=!1}n.exports=i},function(n,e,t){"use strict";var i="undefined"!=typeof Symbol&&Symbol,a=t(400);n.exports=function(){return"function"==typeof i&&("function"==typeof Symbol&&("symbol"==typeof i("foo")&&("symbol"==typeof Symbol("bar")&&a())))}},function(n,e,t){"use strict";n.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var n={},e=Symbol("test"),t=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;for(var i in n[e]=42,n)return!1;if("function"==typeof Object.keys&&0!==Object.keys(n).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(n).length)return!1;var a=Object.getOwnPropertySymbols(n);if(1!==a.length||a[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(n,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(n,e);if(42!==r.value||!0!==r.enumerable)return!1}return!0}},function(n,e,t){"use strict";var i=t(158),a=t(159),r=t(402);n.exports=i?function(n){return i(n)}:a?function(n){if(!n||"object"!=typeof n&&"function"!=typeof n)throw new TypeError("getProto: not an object");return a(n)}:r?function(n){return r(n)}:null},function(n,e,t){"use strict";var i,a=t(160),r=t(157);try{i=[].__proto__===Array.prototype}catch(n){if(!n||"object"!=typeof n||!("code"in n)||"ERR_PROTO_ACCESS"!==n.code)throw n}var o=!!i&&r&&r(Object.prototype,"__proto__"),s=Object,l=s.getPrototypeOf;n.exports=o&&"function"==typeof o.get?a([o.get]):"function"==typeof l&&function(n){return l(null==n?n:s(n))}},function(n,e,t){"use strict";var i="Function.prototype.bind called on incompatible ",a=Object.prototype.toString,r=Math.max,o=function(n,e){for(var t=[],i=0;i<n.length;i+=1)t[i]=n[i];for(var a=0;a<e.length;a+=1)t[a+n.length]=e[a];return t},s=function(n,e){for(var t=[],i=e||0,a=0;i<n.length;i+=1,a+=1)t[a]=n[i];return t},l=function(n,e){for(var t="",i=0;i<n.length;i+=1)t+=n[i],i+1<n.length&&(t+=e);return t};n.exports=function(n){var e=this;if("function"!=typeof e||"[object Function]"!==a.apply(e))throw new TypeError(i+e);for(var t,d=s(arguments,1),c=function(){if(this instanceof t){var i=e.apply(this,o(d,arguments));return Object(i)===i?i:this}return e.apply(n,o(d,arguments))},u=r(0,e.length-d.length),p=[],h=0;h<u;h++)p[h]="$"+h;if(t=Function("binder","return function ("+l(p,",")+"){ return binder.apply(this,arguments); }")(c),e.prototype){var m=function(){};m.prototype=e.prototype,t.prototype=new m,m.prototype=null}return t}},function(n,e,t){"use strict";var i=t(54),a=t(161),r=t(91),o=t(405);n.exports=o||i.call(r,a)},function(n,e,t){"use strict";n.exports="undefined"!=typeof Reflect&&Reflect&&Reflect.apply},function(n,e,t){"use strict";var i=Function.prototype.call,a=Object.prototype.hasOwnProperty,r=t(54);n.exports=r.call(i,a)},function(n,e,t){"use strict";var i=t(90),a=t(162),r=t(53),o=t(155),s=t(29),l=i("%WeakMap%",!0),d=a("WeakMap.prototype.get",!0),c=a("WeakMap.prototype.set",!0),u=a("WeakMap.prototype.has",!0),p=a("WeakMap.prototype.delete",!0);n.exports=l?function(){var n,e,t={assert:function(n){if(!t.has(n))throw new s("Side channel does not contain "+r(n))},delete:function(t){if(l&&t&&("object"==typeof t||"function"==typeof t)){if(n)return p(n,t)}else if(o&&e)return e.delete(t);return!1},get:function(t){return l&&t&&("object"==typeof t||"function"==typeof t)&&n?d(n,t):e&&e.get(t)},has:function(t){return l&&t&&("object"==typeof t||"function"==typeof t)&&n?u(n,t):!!e&&e.has(t)},set:function(t,i){l&&t&&("object"==typeof t||"function"==typeof t)?(n||(n=new l),c(n,t,i)):o&&(e||(e=o()),e.set(t,i))}};return t}:o},function(n,e,t){"use strict";var i=t(163),a=Object.prototype.hasOwnProperty,r=Array.isArray,o={allowDots:!1,allowEmptyArrays:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decodeDotInKeys:!1,decoder:i.decode,delimiter:"&",depth:5,duplicates:"combine",ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictDepth:!1,strictNullHandling:!1,throwOnLimitExceeded:!1},s=function(n){return n.replace(/&#(\d+);/g,(function(n,e){return String.fromCharCode(parseInt(e,10))}))},l=function(n,e,t){if(n&&"string"==typeof n&&e.comma&&n.indexOf(",")>-1)return n.split(",");if(e.throwOnLimitExceeded&&t>=e.arrayLimit)throw new RangeError("Array limit exceeded. Only "+e.arrayLimit+" element"+(1===e.arrayLimit?"":"s")+" allowed in an array.");return n},d=function(n,e,t,r){if(n){var o=t.allowDots?n.replace(/\.([^.[]+)/g,"[$1]"):n,s=/(\[[^[\]]*])/g,d=t.depth>0&&/(\[[^[\]]*])/.exec(o),c=d?o.slice(0,d.index):o,u=[];if(c){if(!t.plainObjects&&a.call(Object.prototype,c)&&!t.allowPrototypes)return;u.push(c)}for(var p=0;t.depth>0&&null!==(d=s.exec(o))&&p<t.depth;){if(p+=1,!t.plainObjects&&a.call(Object.prototype,d[1].slice(1,-1))&&!t.allowPrototypes)return;u.push(d[1])}if(d){if(!0===t.strictDepth)throw new RangeError("Input depth exceeded depth option of "+t.depth+" and strictDepth is true");u.push("["+o.slice(d.index)+"]")}return function(n,e,t,a){var r=0;if(n.length>0&&"[]"===n[n.length-1]){var o=n.slice(0,-1).join("");r=Array.isArray(e)&&e[o]?e[o].length:0}for(var s=a?e:l(e,t,r),d=n.length-1;d>=0;--d){var c,u=n[d];if("[]"===u&&t.parseArrays)c=t.allowEmptyArrays&&(""===s||t.strictNullHandling&&null===s)?[]:i.combine([],s);else{c=t.plainObjects?{__proto__:null}:{};var p="["===u.charAt(0)&&"]"===u.charAt(u.length-1)?u.slice(1,-1):u,h=t.decodeDotInKeys?p.replace(/%2E/g,"."):p,m=parseInt(h,10);t.parseArrays||""!==h?!isNaN(m)&&u!==h&&String(m)===h&&m>=0&&t.parseArrays&&m<=t.arrayLimit?(c=[])[m]=s:"__proto__"!==h&&(c[h]=s):c={0:s}}s=c}return s}(u,e,t,r)}};n.exports=function(n,e){var t=function(n){if(!n)return o;if(void 0!==n.allowEmptyArrays&&"boolean"!=typeof n.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==n.decodeDotInKeys&&"boolean"!=typeof n.decodeDotInKeys)throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==n.decoder&&void 0!==n.decoder&&"function"!=typeof n.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");if(void 0!==n.throwOnLimitExceeded&&"boolean"!=typeof n.throwOnLimitExceeded)throw new TypeError("`throwOnLimitExceeded` option must be a boolean");var e=void 0===n.charset?o.charset:n.charset,t=void 0===n.duplicates?o.duplicates:n.duplicates;if("combine"!==t&&"first"!==t&&"last"!==t)throw new TypeError("The duplicates option must be either combine, first, or last");return{allowDots:void 0===n.allowDots?!0===n.decodeDotInKeys||o.allowDots:!!n.allowDots,allowEmptyArrays:"boolean"==typeof n.allowEmptyArrays?!!n.allowEmptyArrays:o.allowEmptyArrays,allowPrototypes:"boolean"==typeof n.allowPrototypes?n.allowPrototypes:o.allowPrototypes,allowSparse:"boolean"==typeof n.allowSparse?n.allowSparse:o.allowSparse,arrayLimit:"number"==typeof n.arrayLimit?n.arrayLimit:o.arrayLimit,charset:e,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:o.charsetSentinel,comma:"boolean"==typeof n.comma?n.comma:o.comma,decodeDotInKeys:"boolean"==typeof n.decodeDotInKeys?n.decodeDotInKeys:o.decodeDotInKeys,decoder:"function"==typeof n.decoder?n.decoder:o.decoder,delimiter:"string"==typeof n.delimiter||i.isRegExp(n.delimiter)?n.delimiter:o.delimiter,depth:"number"==typeof n.depth||!1===n.depth?+n.depth:o.depth,duplicates:t,ignoreQueryPrefix:!0===n.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof n.interpretNumericEntities?n.interpretNumericEntities:o.interpretNumericEntities,parameterLimit:"number"==typeof n.parameterLimit?n.parameterLimit:o.parameterLimit,parseArrays:!1!==n.parseArrays,plainObjects:"boolean"==typeof n.plainObjects?n.plainObjects:o.plainObjects,strictDepth:"boolean"==typeof n.strictDepth?!!n.strictDepth:o.strictDepth,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:o.strictNullHandling,throwOnLimitExceeded:"boolean"==typeof n.throwOnLimitExceeded&&n.throwOnLimitExceeded}}(e);if(""===n||null==n)return t.plainObjects?{__proto__:null}:{};for(var c="string"==typeof n?function(n,e){var t={__proto__:null},d=e.ignoreQueryPrefix?n.replace(/^\?/,""):n;d=d.replace(/%5B/gi,"[").replace(/%5D/gi,"]");var c=e.parameterLimit===1/0?void 0:e.parameterLimit,u=d.split(e.delimiter,e.throwOnLimitExceeded?c+1:c);if(e.throwOnLimitExceeded&&u.length>c)throw new RangeError("Parameter limit exceeded. Only "+c+" parameter"+(1===c?"":"s")+" allowed.");var p,h=-1,m=e.charset;if(e.charsetSentinel)for(p=0;p<u.length;++p)0===u[p].indexOf("utf8=")&&("utf8=%E2%9C%93"===u[p]?m="utf-8":"utf8=%26%2310003%3B"===u[p]&&(m="iso-8859-1"),h=p,p=u.length);for(p=0;p<u.length;++p)if(p!==h){var g,f,v=u[p],b=v.indexOf("]="),_=-1===b?v.indexOf("="):b+1;-1===_?(g=e.decoder(v,o.decoder,m,"key"),f=e.strictNullHandling?null:""):(g=e.decoder(v.slice(0,_),o.decoder,m,"key"),f=i.maybeMap(l(v.slice(_+1),e,r(t[g])?t[g].length:0),(function(n){return e.decoder(n,o.decoder,m,"value")}))),f&&e.interpretNumericEntities&&"iso-8859-1"===m&&(f=s(String(f))),v.indexOf("[]=")>-1&&(f=r(f)?[f]:f);var y=a.call(t,g);y&&"combine"===e.duplicates?t[g]=i.combine(t[g],f):y&&"last"!==e.duplicates||(t[g]=f)}return t}(n,t):n,u=t.plainObjects?{__proto__:null}:{},p=Object.keys(c),h=0;h<p.length;++h){var m=p[h],g=d(m,c[m],t,"string"==typeof n);u=i.merge(u,g,t)}return!0===t.allowSparse?u:i.compact(u)}},function(n,e,t){"use strict";t(164)},function(n,e,t){"use strict";t(165)},function(n,e,t){"use strict";t(166)},function(n,e,t){"use strict";t.r(e);t(12),t(25),t(57);var i=t(1);function a(n,e){for(var t in e)n[t]=e[t];return n}var r=/[!'()*]/g,o=function(n){return"%"+n.charCodeAt(0).toString(16)},s=/%2C/g,l=function(n){return encodeURIComponent(n).replace(r,o).replace(s,",")};function d(n){try{return decodeURIComponent(n)}catch(n){0}return n}var c=function(n){return null==n||"object"==typeof n?n:String(n)};function u(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),i=d(t.shift()),a=t.length>0?d(t.join("=")):null;void 0===e[i]?e[i]=a:Array.isArray(e[i])?e[i].push(a):e[i]=[e[i],a]})),e):e}function p(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return l(e);if(Array.isArray(t)){var i=[];return t.forEach((function(n){void 0!==n&&(null===n?i.push(l(e)):i.push(l(e)+"="+l(n)))})),i.join("&")}return l(e)+"="+l(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var h=/\/?$/;function m(n,e,t,i){var a=i&&i.options.stringifyQuery,r=e.query||{};try{r=g(r)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:r,params:e.params||{},fullPath:b(e,a),matched:n?v(n):[]};return t&&(o.redirectedFrom=b(t,a)),Object.freeze(o)}function g(n){if(Array.isArray(n))return n.map(g);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=g(n[t]);return e}return n}var f=m(null,{path:"/"});function v(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function b(n,e){var t=n.path,i=n.query;void 0===i&&(i={});var a=n.hash;return void 0===a&&(a=""),(t||"/")+(e||p)(i)+a}function _(n,e,t){return e===f?n===e:!!e&&(n.path&&e.path?n.path.replace(h,"")===e.path.replace(h,"")&&(t||n.hash===e.hash&&y(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&y(n.query,e.query)&&y(n.params,e.params))))}function y(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),i=Object.keys(e).sort();return t.length===i.length&&t.every((function(t,a){var r=n[t];if(i[a]!==t)return!1;var o=e[t];return null==r||null==o?r===o:"object"==typeof r&&"object"==typeof o?y(r,o):String(r)===String(o)}))}function x(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var i in t.instances){var a=t.instances[i],r=t.enteredCbs[i];if(a&&r){delete t.enteredCbs[i];for(var o=0;o<r.length;o++)a._isBeingDestroyed||r[o](a)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,i=e.children,r=e.parent,o=e.data;o.routerView=!0;for(var s=r.$createElement,l=t.name,d=r.$route,c=r._routerViewCache||(r._routerViewCache={}),u=0,p=!1;r&&r._routerRoot!==r;){var h=r.$vnode?r.$vnode.data:{};h.routerView&&u++,h.keepAlive&&r._directInactive&&r._inactive&&(p=!0),r=r.$parent}if(o.routerViewDepth=u,p){var m=c[l],g=m&&m.component;return g?(m.configProps&&T(g,o,m.route,m.configProps),s(g,o,i)):s()}var f=d.matched[u],v=f&&f.components[l];if(!f||!v)return c[l]=null,s();c[l]={component:v},o.registerRouteInstance=function(n,e){var t=f.instances[l];(e&&t!==n||!e&&t===n)&&(f.instances[l]=e)},(o.hook||(o.hook={})).prepatch=function(n,e){f.instances[l]=e.componentInstance},o.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==f.instances[l]&&(f.instances[l]=n.componentInstance),x(d)};var b=f.props&&f.props[l];return b&&(a(c[l],{route:d,configProps:b}),T(v,o,d,b)),s(v,o,i)}};function T(n,e,t,i){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,i);if(r){r=e.props=a({},r);var o=e.attrs=e.attrs||{};for(var s in r)n.props&&s in n.props||(o[s]=r[s],delete r[s])}}function w(n,e,t){var i=n.charAt(0);if("/"===i)return n;if("?"===i||"#"===i)return e+n;var a=e.split("/");t&&a[a.length-1]||a.pop();for(var r=n.replace(/^\//,"").split("/"),o=0;o<r.length;o++){var s=r[o];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function I(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var C=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},D=q,E=P,S=function(n,e){return z(P(n,e),e)},M=z,A=N,O=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function P(n,e){for(var t,i=[],a=0,r=0,o="",s=e&&e.delimiter||"/";null!=(t=O.exec(n));){var l=t[0],d=t[1],c=t.index;if(o+=n.slice(r,c),r=c+l.length,d)o+=d[1];else{var u=n[r],p=t[2],h=t[3],m=t[4],g=t[5],f=t[6],v=t[7];o&&(i.push(o),o="");var b=null!=p&&null!=u&&u!==p,_="+"===f||"*"===f,y="?"===f||"*"===f,x=t[2]||s,k=m||g;i.push({name:h||a++,prefix:p||"",delimiter:x,optional:y,repeat:_,partial:b,asterisk:!!v,pattern:k?$(k):v?".*":"[^"+R(x)+"]+?"})}}return r<n.length&&(o+=n.substr(r)),o&&i.push(o),i}function j(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function z(n,e){for(var t=new Array(n.length),i=0;i<n.length;i++)"object"==typeof n[i]&&(t[i]=new RegExp("^(?:"+n[i].pattern+")$",U(e)));return function(e,i){for(var a="",r=e||{},o=(i||{}).pretty?j:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var d,c=r[l.name];if(null==c){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(C(c)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(c)+"`");if(0===c.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<c.length;u++){if(d=o(c[u]),!t[s].test(d))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(d)+"`");a+=(0===u?l.prefix:l.delimiter)+d}}else{if(d=l.asterisk?encodeURI(c).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(c),!t[s].test(d))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+d+'"');a+=l.prefix+d}}else a+=l}return a}}function R(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function $(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function L(n,e){return n.keys=e,n}function U(n){return n&&n.sensitive?"":"i"}function N(n,e,t){C(e)||(t=e||t,e=[]);for(var i=(t=t||{}).strict,a=!1!==t.end,r="",o=0;o<n.length;o++){var s=n[o];if("string"==typeof s)r+=R(s);else{var l=R(s.prefix),d="(?:"+s.pattern+")";e.push(s),s.repeat&&(d+="(?:"+l+d+")*"),r+=d=s.optional?s.partial?l+"("+d+")?":"(?:"+l+"("+d+"))?":l+"("+d+")"}}var c=R(t.delimiter||"/"),u=r.slice(-c.length)===c;return i||(r=(u?r.slice(0,-c.length):r)+"(?:"+c+"(?=$))?"),r+=a?"$":i&&u?"":"(?="+c+"|$)",L(new RegExp("^"+r,U(t)),e)}function q(n,e,t){return C(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var i=0;i<t.length;i++)e.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return L(n,e)}(n,e):C(n)?function(n,e,t){for(var i=[],a=0;a<n.length;a++)i.push(q(n[a],e,t).source);return L(new RegExp("(?:"+i.join("|")+")",U(t)),e)}(n,e,t):function(n,e,t){return N(P(n,t),e,t)}(n,e,t)}D.parse=E,D.compile=S,D.tokensToFunction=M,D.tokensToRegExp=A;var B=Object.create(null);function F(n,e,t){e=e||{};try{var i=B[n]||(B[n]=D.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),i(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function V(n,e,t,i){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var o=(r=a({},n)).params;return o&&"object"==typeof o&&(r.params=a({},o)),r}if(!r.path&&r.params&&e){(r=a({},r))._normalized=!0;var s=a(a({},e.params),r.params);if(e.name)r.name=e.name,r.params=s;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;r.path=F(l,s,e.path)}else 0;return r}var d=function(n){var e="",t="",i=n.indexOf("#");i>=0&&(e=n.slice(i),n=n.slice(0,i));var a=n.indexOf("?");return a>=0&&(t=n.slice(a+1),n=n.slice(0,a)),{path:n,query:t,hash:e}}(r.path||""),p=e&&e.path||"/",h=d.path?w(d.path,p,t||r.append):p,m=function(n,e,t){void 0===e&&(e={});var i,a=t||u;try{i=a(n||"")}catch(n){i={}}for(var r in e){var o=e[r];i[r]=Array.isArray(o)?o.map(c):c(o)}return i}(d.query,r.query,i&&i.options.parseQuery),g=r.hash||d.hash;return g&&"#"!==g.charAt(0)&&(g="#"+g),{_normalized:!0,path:h,query:m,hash:g}}var G,H=function(){},W={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,i=this.$route,r=t.resolve(this.to,i,this.append),o=r.location,s=r.route,l=r.href,d={},c=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,g=null==u?"router-link-exact-active":u,f=null==this.activeClass?p:this.activeClass,v=null==this.exactActiveClass?g:this.exactActiveClass,b=s.redirectedFrom?m(null,V(s.redirectedFrom),null,t):s;d[v]=_(i,b,this.exactPath),d[f]=this.exact||this.exactPath?d[v]:function(n,e){return 0===n.path.replace(h,"/").indexOf(e.path.replace(h,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(i,b);var y=d[v]?this.ariaCurrentValue:null,x=function(n){Q(n)&&(e.replace?t.replace(o,H):t.push(o,H))},k={click:Q};Array.isArray(this.event)?this.event.forEach((function(n){k[n]=x})):k[this.event]=x;var T={class:d},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:x,isActive:d[f],isExactActive:d[v]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?n():n("span",{},w)}if("a"===this.tag)T.on=k,T.attrs={href:l,"aria-current":y};else{var I=function n(e){var t;if(e)for(var i=0;i<e.length;i++){if("a"===(t=e[i]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(I){I.isStatic=!1;var C=I.data=a({},I.data);for(var D in C.on=C.on||{},C.on){var E=C.on[D];D in k&&(C.on[D]=Array.isArray(E)?E:[E])}for(var S in k)S in C.on?C.on[S].push(k[S]):C.on[S]=x;var M=I.data.attrs=a({},I.data.attrs);M.href=l,M["aria-current"]=y}else T.on=k}return n(this.tag,T,this.$slots.default)}};function Q(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var K="undefined"!=typeof window;function Y(n,e,t,i,a){var r=e||[],o=t||Object.create(null),s=i||Object.create(null);n.forEach((function(n){!function n(e,t,i,a,r,o){var s=a.path,l=a.name;0;var d=a.pathToRegexpOptions||{},c=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return I(e.path+"/"+n)}(s,r,d.strict);"boolean"==typeof a.caseSensitive&&(d.sensitive=a.caseSensitive);var u={path:c,regex:X(c,d),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:l,parent:r,matchAs:o,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var r=o?I(o+"/"+a.path):void 0;n(e,t,i,a,u,r)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==a.alias)for(var p=Array.isArray(a.alias)?a.alias:[a.alias],h=0;h<p.length;++h){0;var m={path:p[h],children:a.children};n(e,t,i,m,r,u.path||"/")}l&&(i[l]||(i[l]=u))}(r,o,s,n,a)}));for(var l=0,d=r.length;l<d;l++)"*"===r[l]&&(r.push(r.splice(l,1)[0]),d--,l--);return{pathList:r,pathMap:o,nameMap:s}}function X(n,e){return D(n,[],e)}function J(n,e){var t=Y(n),i=t.pathList,a=t.pathMap,r=t.nameMap;function o(n,t,o){var s=V(n,t,!1,e),d=s.name;if(d){var c=r[d];if(!c)return l(null,s);var u=c.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&u.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=F(c.path,s.params),l(c,s,o)}if(s.path){s.params={};for(var h=0;h<i.length;h++){var m=i[h],g=a[m];if(Z(g.regex,s.path,s.params))return l(g,s,o)}}return l(null,s)}function s(n,t){var i=n.redirect,a="function"==typeof i?i(m(n,t,null,e)):i;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,t);var s=a,d=s.name,c=s.path,u=t.query,p=t.hash,h=t.params;if(u=s.hasOwnProperty("query")?s.query:u,p=s.hasOwnProperty("hash")?s.hash:p,h=s.hasOwnProperty("params")?s.params:h,d){r[d];return o({_normalized:!0,name:d,query:u,hash:p,params:h},void 0,t)}if(c){var g=function(n,e){return w(n,e.parent?e.parent.path:"/",!0)}(c,n);return o({_normalized:!0,path:F(g,h),query:u,hash:p},void 0,t)}return l(null,t)}function l(n,t,i){return n&&n.redirect?s(n,i||t):n&&n.matchAs?function(n,e,t){var i=o({_normalized:!0,path:F(t,e.params)});if(i){var a=i.matched,r=a[a.length-1];return e.params=i.params,l(r,e)}return l(null,e)}(0,t,n.matchAs):m(n,t,i,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?r[n]:void 0;Y([e||n],i,a,r,t),t&&t.alias.length&&Y(t.alias.map((function(n){return{path:n,children:[e]}})),i,a,r,t)},getRoutes:function(){return i.map((function(n){return a[n]}))},addRoutes:function(n){Y(n,i,a,r)}}}function Z(n,e,t){var i=e.match(n);if(!i)return!1;if(!t)return!0;for(var a=1,r=i.length;a<r;++a){var o=n.keys[a-1];o&&(t[o.name||"pathMatch"]="string"==typeof i[a]?d(i[a]):i[a])}return!0}var nn=K&&window.performance&&window.performance.now?window.performance:Date;function en(){return nn.now().toFixed(3)}var tn=en();function an(){return tn}function rn(n){return tn=n}var on=Object.create(null);function sn(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=a({},window.history.state);return t.key=an(),window.history.replaceState(t,"",e),window.addEventListener("popstate",cn),function(){window.removeEventListener("popstate",cn)}}function ln(n,e,t,i){if(n.app){var a=n.options.scrollBehavior;a&&n.app.$nextTick((function(){var r=function(){var n=an();if(n)return on[n]}(),o=a.call(n,e,t,i?r:null);o&&("function"==typeof o.then?o.then((function(n){gn(n,r)})).catch((function(n){0})):gn(o,r))}))}}function dn(){var n=an();n&&(on[n]={x:window.pageXOffset,y:window.pageYOffset})}function cn(n){dn(),n.state&&n.state.key&&rn(n.state.key)}function un(n){return hn(n.x)||hn(n.y)}function pn(n){return{x:hn(n.x)?n.x:window.pageXOffset,y:hn(n.y)?n.y:window.pageYOffset}}function hn(n){return"number"==typeof n}var mn=/^#\d/;function gn(n,e){var t,i="object"==typeof n;if(i&&"string"==typeof n.selector){var a=mn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(a){var r=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),i=n.getBoundingClientRect();return{x:i.left-t.left-e.x,y:i.top-t.top-e.y}}(a,r={x:hn((t=r).x)?t.x:0,y:hn(t.y)?t.y:0})}else un(n)&&(e=pn(n))}else i&&un(n)&&(e=pn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var fn,vn=K&&((-1===(fn=window.navigator.userAgent).indexOf("Android 2.")&&-1===fn.indexOf("Android 4.0")||-1===fn.indexOf("Mobile Safari")||-1!==fn.indexOf("Chrome")||-1!==fn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function bn(n,e){dn();var t=window.history;try{if(e){var i=a({},t.state);i.key=an(),t.replaceState(i,"",n)}else t.pushState({key:rn(en())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function _n(n){bn(n,!0)}var yn={redirected:2,aborted:4,cancelled:8,duplicated:16};function xn(n,e){return Tn(n,e,yn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return wn.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function kn(n,e){return Tn(n,e,yn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Tn(n,e,t,i){var a=new Error(i);return a._isRouter=!0,a.from=n,a.to=e,a.type=t,a}var wn=["params","query","hash"];function In(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Cn(n,e){return In(n)&&n._isRouter&&(null==e||n.type===e)}function Dn(n,e,t){var i=function(a){a>=n.length?t():n[a]?e(n[a],(function(){i(a+1)})):i(a+1)};i(0)}function En(n){return function(e,t,i){var a=!1,r=0,o=null;Sn(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){a=!0,r++;var l,d=On((function(e){var a;((a=e).__esModule||An&&"Module"===a[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:G.extend(e),t.components[s]=e,--r<=0&&i()})),c=On((function(n){var e="Failed to resolve async component "+s+": "+n;o||(o=In(n)?n:new Error(e),i(o))}));try{l=n(d,c)}catch(n){c(n)}if(l)if("function"==typeof l.then)l.then(d,c);else{var u=l.component;u&&"function"==typeof u.then&&u.then(d,c)}}})),a||i()}}function Sn(n,e){return Mn(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Mn(n){return Array.prototype.concat.apply([],n)}var An="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function On(n){var e=!1;return function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];if(!e)return e=!0,n.apply(this,t)}}var Pn=function(n,e){this.router=n,this.base=function(n){if(!n)if(K){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=f,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function jn(n,e,t,i){var a=Sn(n,(function(n,i,a,r){var o=function(n,e){"function"!=typeof n&&(n=G.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,i,a,r)})):t(o,i,a,r)}));return Mn(i?a.reverse():a)}function zn(n,e){if(e)return function(){return n.apply(e,arguments)}}Pn.prototype.listen=function(n){this.cb=n},Pn.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Pn.prototype.onError=function(n){this.errorCbs.push(n)},Pn.prototype.transitionTo=function(n,e,t){var i,a=this;try{i=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var r=this.current;this.confirmTransition(i,(function(){a.updateRoute(i),e&&e(i),a.ensureURL(),a.router.afterHooks.forEach((function(n){n&&n(i,r)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(n){n(i)})))}),(function(n){t&&t(n),n&&!a.ready&&(Cn(n,yn.redirected)&&r===f||(a.ready=!0,a.readyErrorCbs.forEach((function(e){e(n)}))))}))},Pn.prototype.confirmTransition=function(n,e,t){var i=this,a=this.current;this.pending=n;var r,o,s=function(n){!Cn(n)&&In(n)&&(i.errorCbs.length?i.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,d=a.matched.length-1;if(_(n,a)&&l===d&&n.matched[l]===a.matched[d])return this.ensureURL(),n.hash&&ln(this.router,a,n,!1),s(((o=Tn(r=a,n,yn.duplicated,'Avoided redundant navigation to current location: "'+r.fullPath+'".')).name="NavigationDuplicated",o));var c=function(n,e){var t,i=Math.max(n.length,e.length);for(t=0;t<i&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=c.updated,p=c.deactivated,h=c.activated,m=[].concat(function(n){return jn(n,"beforeRouteLeave",zn,!0)}(p),this.router.beforeHooks,function(n){return jn(n,"beforeRouteUpdate",zn)}(u),h.map((function(n){return n.beforeEnter})),En(h)),g=function(e,t){if(i.pending!==n)return s(kn(a,n));try{e(n,a,(function(e){!1===e?(i.ensureURL(!0),s(function(n,e){return Tn(n,e,yn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(a,n))):In(e)?(i.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(xn(a,n)),"object"==typeof e&&e.replace?i.replace(e):i.push(e)):t(e)}))}catch(n){s(n)}};Dn(m,g,(function(){Dn(function(n){return jn(n,"beforeRouteEnter",(function(n,e,t,i){return function(n,e,t){return function(i,a,r){return n(i,a,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),r(n)}))}}(n,t,i)}))}(h).concat(i.router.resolveHooks),g,(function(){if(i.pending!==n)return s(kn(a,n));i.pending=null,e(n),i.router.app&&i.router.app.$nextTick((function(){x(n)}))}))}))},Pn.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Pn.prototype.setupListeners=function(){},Pn.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=f,this.pending=null};var Rn=function(n){function e(e,t){n.call(this,e,t),this._startLocation=$n(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,i=vn&&t;i&&this.listeners.push(sn());var a=function(){var t=n.current,a=$n(n.base);n.current===f&&a===n._startLocation||n.transitionTo(a,(function(n){i&&ln(e,n,t,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){bn(I(i.base+n.fullPath)),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){_n(I(i.base+n.fullPath)),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if($n(this.base)!==this.current.fullPath){var e=I(this.base+this.current.fullPath);n?bn(e):_n(e)}},e.prototype.getCurrentLocation=function(){return $n(this.base)},e}(Pn);function $n(n){var e=window.location.pathname,t=e.toLowerCase(),i=n.toLowerCase();return!n||t!==i&&0!==t.indexOf(I(i+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Ln=function(n){function e(e,t,i){n.call(this,e,t),i&&function(n){var e=$n(n);if(!/^\/#/.test(e))return window.location.replace(I(n+"/#"+e)),!0}(this.base)||Un()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=vn&&e;t&&this.listeners.push(sn());var i=function(){var e=n.current;Un()&&n.transitionTo(Nn(),(function(i){t&&ln(n.router,i,e,!0),vn||Fn(i.fullPath)}))},a=vn?"popstate":"hashchange";window.addEventListener(a,i),this.listeners.push((function(){window.removeEventListener(a,i)}))}},e.prototype.push=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){Bn(n.fullPath),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var i=this,a=this.current;this.transitionTo(n,(function(n){Fn(n.fullPath),ln(i.router,n,a,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Nn()!==e&&(n?Bn(e):Fn(e))},e.prototype.getCurrentLocation=function(){return Nn()},e}(Pn);function Un(){var n=Nn();return"/"===n.charAt(0)||(Fn("/"+n),!1)}function Nn(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function qn(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Bn(n){vn?bn(qn(n)):window.location.hash=n}function Fn(n){vn?_n(qn(n)):window.location.replace(qn(n))}var Vn=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var i=this;this.transitionTo(n,(function(n){i.stack=i.stack.slice(0,i.index+1).concat(n),i.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var i=this;this.transitionTo(n,(function(n){i.stack=i.stack.slice(0,i.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var i=this.stack[t];this.confirmTransition(i,(function(){var n=e.current;e.index=t,e.updateRoute(i),e.router.afterHooks.forEach((function(e){e&&e(i,n)}))}),(function(n){Cn(n,yn.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Pn),Gn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=J(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!vn&&!1!==n.fallback,this.fallback&&(e="hash"),K||(e="abstract"),this.mode=e,e){case"history":this.history=new Rn(this,n.base);break;case"hash":this.history=new Ln(this,n.base,this.fallback);break;case"abstract":this.history=new Vn(this,n.base);break;default:0}},Hn={currentRoute:{configurable:!0}};Gn.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Hn.currentRoute.get=function(){return this.history&&this.history.current},Gn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Rn||t instanceof Ln){var i=function(n){t.setupListeners(),function(n){var i=t.current,a=e.options.scrollBehavior;vn&&a&&"fullPath"in n&&ln(e,n,i,!1)}(n)};t.transitionTo(t.getCurrentLocation(),i,i)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Gn.prototype.beforeEach=function(n){return Qn(this.beforeHooks,n)},Gn.prototype.beforeResolve=function(n){return Qn(this.resolveHooks,n)},Gn.prototype.afterEach=function(n){return Qn(this.afterHooks,n)},Gn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Gn.prototype.onError=function(n){this.history.onError(n)},Gn.prototype.push=function(n,e,t){var i=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){i.history.push(n,e,t)}));this.history.push(n,e,t)},Gn.prototype.replace=function(n,e,t){var i=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){i.history.replace(n,e,t)}));this.history.replace(n,e,t)},Gn.prototype.go=function(n){this.history.go(n)},Gn.prototype.back=function(){this.go(-1)},Gn.prototype.forward=function(){this.go(1)},Gn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Gn.prototype.resolve=function(n,e,t){var i=V(n,e=e||this.history.current,t,this),a=this.match(i,e),r=a.redirectedFrom||a.fullPath;return{location:i,route:a,href:function(n,e,t){var i="hash"===t?"#"+e:e;return n?I(n+"/"+i):i}(this.history.base,r,this.mode),normalizedTo:i,resolved:a}},Gn.prototype.getRoutes=function(){return this.matcher.getRoutes()},Gn.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==f&&this.history.transitionTo(this.history.getCurrentLocation())},Gn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==f&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Gn.prototype,Hn);var Wn=Gn;function Qn(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Gn.install=function n(e){if(!n.installed||G!==e){n.installed=!0,G=e;var t=function(n){return void 0!==n},i=function(n,e){var i=n.$options._parentVnode;t(i)&&t(i=i.data)&&t(i=i.registerRouteInstance)&&i(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,i(this,this)},destroyed:function(){i(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",k),e.component("RouterLink",W);var a=e.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},Gn.version="3.6.5",Gn.isNavigationFailure=Cn,Gn.NavigationFailureType=yn,Gn.START_LOCATION=f,K&&window.Vue&&window.Vue.use(Gn);t(200),t(35),t(209);var Kn=t(0),Yn=t(167),Xn=t.n(Yn),Jn=t(168),Zn=t.n(Jn),ne={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${Zn()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=te(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=ie(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return Xn()([{name:"description",content:this.$description}],n,this.siteMeta,ae)},updateCanonicalLink(){ee(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",te(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){ie(null,this.currentMetaTags),ee()}};function ee(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function te(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function ie(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function ae(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}t(58);var re=t(55),oe=t.n(re),se={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:oe()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),i=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+t;for(let n=0;n<e.length;n++){const r=e[n],o=e[n+1],s=0===n&&0===t||t>=r.parentElement.offsetTop+10&&(!o||t<o.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(r.hash)){const t=r;if(a===i)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},le=t(56),de=t.n(le),ce={mounted(){de.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||i.default.component(n.name)||de.a.start(),t()}),this.$router.afterEach(()=>{de.a.done(),this.isSidebarOpen=!1})}};t(320),t(321);class ue{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var pe={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new ue).show({text:"Copied！",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},he="auto",me="zoom-in",ge="zoom-out",fe="grab",ve="move";function be(n,e,t){var i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a={passive:!1};i?n.addEventListener(e,t,a):n.removeEventListener(e,t,a)}function _e(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function ye(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function xe(n,e,t){!function(n){var e=ke,t=Te;if(n.transition){var i=n.transition;delete n.transition,n[e]=i}if(n.transform){var a=n.transform;delete n.transform,n[t]=a}}(e);var i=n.style,a={};for(var r in e)t&&(a[r]=i[r]||""),i[r]=e[r];return a}var ke="transition",Te="transform",we="transform",Ie="transitionend";var Ce=function(){},De={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Ce,onClose:Ce,onGrab:Ce,onMove:Ce,onRelease:Ce,onBeforeOpen:Ce,onBeforeClose:Ce,onBeforeGrab:Ce,onBeforeRelease:Ce,onImageLoading:Ce,onImageLoaded:Ce},Ee={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Me(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var i=this.lastScrollPosition.x-e,a=this.lastScrollPosition.y-t,r=this.options.scrollThreshold;(Math.abs(a)>=r||Math.abs(i)>=r)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Se(n)&&!Me(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Se(n)&&!Me(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,i=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,i)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,i=e.clientY;this.move(t,i)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Se(n){return 0===n.button}function Me(n){return n.metaKey||n.ctrlKey}var Ae={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,xe(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),be(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){xe(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Pe=function(){function n(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}(),je=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},ze={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=ye(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,i=n.transitionDuration,a=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?fe:ge,transition:we+"\n        "+i+"s\n        "+a,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=xe(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,xe(this.el,{transform:"none"})},grab:function(n,e,t){var i=Re(),a=i.x-n,r=i.y-e;xe(this.el,{cursor:ve,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+r)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var i=Re(),a=i.x-n,r=i.y-e;xe(this.el,{transition:we,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+r)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){xe(this.el,this.styleClose)},restoreOpenStyle:function(){xe(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Re(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,i=this.instance.options,a=i.customSize,r=i.scaleBase;if(!a&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(a&&"object"===(void 0===a?"undefined":Oe(a)))return{x:a.width/this.rect.width,y:a.height/this.rect.height};var o=this.rect.width/2,s=this.rect.height/2,l=Re(),d={x:l.x-o,y:l.y-s},c=d.x/o,u=d.y/s,p=r+Math.min(c,u);if(a&&"string"==typeof a){var h=t||this.el.naturalWidth,m=e||this.el.naturalHeight,g=parseFloat(a)*h/(100*this.rect.width),f=parseFloat(a)*m/(100*this.rect.height);if(p>g||p>f)return{x:g,y:f}}return{x:p,y:p}}};function Re(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function $e(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(i){be(n,i,e[i],t)}))}var Le=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(ze),this.overlay=Object.create(Ae),this.handler=Object.create(Ee),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=je({},De,e),this.overlay.init(this),this.handler.init(this)}return Pe(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=me,be(n,"click",this.handler.click),this.options.preloadImage&&_e(ye(n)));return this}},{key:"config",value:function(n){return n?(je(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var i="string"==typeof n?document.querySelector(n):n;if("IMG"===i.tagName){if(this.options.onBeforeOpen(i),this.target.init(i,this),!this.options.preloadImage){var a=this.target.srcOriginal;null!=a&&(this.options.onImageLoading(i),_e(a,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),be(document,"scroll",this.handler.scroll),be(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&be(window,"resize",this.handler.resizeWindow);var r=function n(){be(i,Ie,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&$e(document,e.handler,!0),t(i)};return be(i,Ie,r),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=he,this.overlay.fadeOut(),this.target.zoomOut(),be(document,"scroll",this.handler.scroll,!1),be(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&be(window,"resize",this.handler.resizeWindow,!1);var i=function i(){be(t,Ie,i,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&$e(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return be(t,Ie,i),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var a=this.target.el;this.options.onBeforeGrab(a),this.released=!1,this.target.grab(n,e,t);var r=function n(){be(a,Ie,n,!1),i(a)};return be(a,Ie,r),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=ve,this.target.move(n,e,t);var a=this.target.el,r=function n(){be(a,Ie,n,!1),i(a)};return be(a,Ie,r),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=he,this.target.restoreOpenStyle();var i=function i(){be(t,Ie,i,!1),n.lock=!1,n.released=!0,e(t)};return be(t,Ie,i),this}}}]),n}();const Ue=".theme-default-content img:not(.no-zoom):not(.disable-zooming)",Ne=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),qe=Number("500");class Be{constructor(){this.instance=new Le(Ne)}update(n=Ue){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=Ue,e=qe){setTimeout(()=>this.update(n),e)}}var Fe=[ne,se,ce,pe,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new Be,this.$vuepress.zooming.updateDelay()}}],Ve={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return Object(Kn.h)("layout",n),i.default.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},Ge=t(11),He=Object(Ge.a)(Ve,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;Object(Kn.f)(He,"mixins",Fe);const We=[{name:"v-12d12f04",path:"/business/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-12d12f04").then(t)}},{path:"/business/index.html",redirect:"/business/"},{name:"v-48a99384",path:"/changelog/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-48a99384").then(t)}},{path:"/changelog/index.html",redirect:"/changelog/"},{name:"v-254b0c64",path:"/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-254b0c64").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-a11afcc4",path:"/develop/api-v2/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a11afcc4").then(t)}},{path:"/develop/api-v2/index.html",redirect:"/develop/api-v2/"},{name:"v-d8f6f926",path:"/develop/api-v2/client-func/intro/baseinfo.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-d8f6f926").then(t)}},{name:"v-6edd88e6",path:"/develop/api-v2/client-func/intro/datacard.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6edd88e6").then(t)}},{name:"v-3ac09f7e",path:"/develop/api-v2/dev-prepare/error-trace/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3ac09f7e").then(t)}},{path:"/develop/api-v2/dev-prepare/error-trace/index.html",redirect:"/develop/api-v2/dev-prepare/error-trace/"},{name:"v-28a0c253",path:"/develop/api-v2/dev-prepare/error-trace/openapi.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-28a0c253").then(t)}},{name:"v-3d40d5ad",path:"/develop/api-v2/client-func/intro/find.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3d40d5ad").then(t)}},{name:"v-07e873e5",path:"/develop/api-v2/dev-prepare/error-trace/websocket.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-07e873e5").then(t)}},{name:"v-947d5584",path:"/develop/api-v2/dev-prepare/interface-framework/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-947d5584").then(t)}},{path:"/develop/api-v2/dev-prepare/interface-framework/index.html",redirect:"/develop/api-v2/dev-prepare/interface-framework/"},{name:"v-7ecfd877",path:"/develop/api-v2/dev-prepare/interface-framework/api-use.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7ecfd877").then(t)}},{name:"v-3f0a1d6d",path:"/develop/api-v2/dev-prepare/interface-framework/event-emit.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3f0a1d6d").then(t)}},{name:"v-720a53ed",path:"/develop/api-v2/dev-prepare/interface-framework/opcode.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-720a53ed").then(t)}},{name:"v-25967209",path:"/develop/api-v2/dev-prepare/interface-framework/reference.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-25967209").then(t)}},{name:"v-4c3b09e7",path:"/develop/api-v2/dev-prepare/unique-id.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4c3b09e7").then(t)}},{name:"v-0591060d",path:"/develop/api-v2/gateway/error/data/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0591060d").then(t)}},{name:"v-266976e9",path:"/develop/api-v2/gateway/error/error.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-266976e9").then(t)}},{name:"v-d3fd96e6",path:"/develop/api-v2/dev-prepare/interface-framework/sign.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-d3fd96e6").then(t)}},{name:"v-1b9126da",path:"/develop/api-v2/openapi/emoji/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1b9126da").then(t)}},{name:"v-cc6f5f5e",path:"/develop/api-v2/openapi/error/error.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-cc6f5f5e").then(t)}},{name:"v-3a924e8d",path:"/develop/api-v2/openapi/error/data/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3a924e8d").then(t)}},{name:"v-f506fd66",path:"/develop/api-v2/openapi/member/delete_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-f506fd66").then(t)}},{name:"v-161381a3",path:"/develop/api-v2/openapi/member/get_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-161381a3").then(t)}},{name:"v-59b19f0d",path:"/develop/api-v2/openapi/member/get_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-59b19f0d").then(t)}},{name:"v-5ec66dad",path:"/develop/api-v2/openapi/member/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5ec66dad").then(t)}},{name:"v-a98dede6",path:"/develop/api-v2/openapi/reaction/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a98dede6").then(t)}},{name:"v-5efc5a9b",path:"/develop/api-v2/openapi/user/me.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5efc5a9b").then(t)}},{name:"v-53b4fcea",path:"/develop/api-v2/openapi/user/guilds.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-53b4fcea").then(t)}},{name:"v-b6a66a66",path:"/develop/api-v2/openapi/user/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b6a66a66").then(t)}},{name:"v-0cc041b7",path:"/develop/api-v2/openapi/wss/url_get.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0cc041b7").then(t)}},{name:"v-58b25779",path:"/develop/api-v2/openapi/wss/shard_url_get.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-58b25779").then(t)}},{name:"v-0886d424",path:"/develop/api-v2/server-inter/channel/api_permissions/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0886d424").then(t)}},{path:"/develop/api-v2/server-inter/channel/api_permissions/index.html",redirect:"/develop/api-v2/server-inter/channel/api_permissions/"},{name:"v-234805c4",path:"/develop/api-v2/server-inter/channel/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-234805c4").then(t)}},{path:"/develop/api-v2/server-inter/channel/index.html",redirect:"/develop/api-v2/server-inter/channel/"},{name:"v-6732c15e",path:"/develop/api-v2/server-inter/channel/api_permissions/get_guild_api_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6732c15e").then(t)}},{name:"v-452e0b4d",path:"/develop/api-v2/server-inter/channel/api_permissions/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-452e0b4d").then(t)}},{name:"v-356d6496",path:"/develop/api-v2/server-inter/channel/api_permissions/post_api_permission_demand.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-356d6496").then(t)}},{name:"v-0352f9f0",path:"/develop/api-v2/server-inter/channel/content/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0352f9f0").then(t)}},{path:"/develop/api-v2/server-inter/channel/content/index.html",redirect:"/develop/api-v2/server-inter/channel/content/"},{name:"v-223dea19",path:"/develop/api-v2/server-inter/channel/content/announces/delete_channel_announces.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-223dea19").then(t)}},{name:"v-793415b9",path:"/develop/api-v2/server-inter/channel/content/announces/delete_guild_announces.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-793415b9").then(t)}},{name:"v-41c362ed",path:"/develop/api-v2/server-inter/channel/content/announces/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-41c362ed").then(t)}},{name:"v-594deb22",path:"/develop/api-v2/server-inter/channel/content/announces/post_channel_announces.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-594deb22").then(t)}},{name:"v-3ebc95cd",path:"/develop/api-v2/server-inter/channel/content/audio/audio_control.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3ebc95cd").then(t)}},{name:"v-e3e9b362",path:"/develop/api-v2/server-inter/channel/content/announces/post_guild_announces.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e3e9b362").then(t)}},{name:"v-6bba1e7f",path:"/develop/api-v2/server-inter/channel/content/audio/delete_mic.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6bba1e7f").then(t)}},{name:"v-07f32226",path:"/develop/api-v2/server-inter/channel/content/audio/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-07f32226").then(t)}},{name:"v-da90b626",path:"/develop/api-v2/server-inter/channel/content/audio/put_mic.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-da90b626").then(t)}},{name:"v-fe06bc26",path:"/develop/api-v2/server-inter/channel/content/forum/delete_thread.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-fe06bc26").then(t)}},{name:"v-09a6c0cd",path:"/develop/api-v2/server-inter/channel/content/forum/forum.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-09a6c0cd").then(t)}},{name:"v-df929b56",path:"/develop/api-v2/server-inter/channel/content/forum/get_thread.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-df929b56").then(t)}},{name:"v-7ad9c581",path:"/develop/api-v2/server-inter/channel/content/forum/get_threads_list.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7ad9c581").then(t)}},{name:"v-5d2e05cd",path:"/develop/api-v2/server-inter/channel/content/forum/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5d2e05cd").then(t)}},{name:"v-434a2c3a",path:"/develop/api-v2/server-inter/channel/content/forum/open_forum.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-434a2c3a").then(t)}},{name:"v-17187b45",path:"/develop/api-v2/server-inter/channel/content/pins/delete_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-17187b45").then(t)}},{name:"v-b161d272",path:"/develop/api-v2/server-inter/channel/content/forum/put_thread.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b161d272").then(t)}},{name:"v-04bf5527",path:"/develop/api-v2/server-inter/channel/content/pins/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-04bf5527").then(t)}},{name:"v-71f8884d",path:"/develop/api-v2/server-inter/channel/content/pins/put_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-71f8884d").then(t)}},{name:"v-541917f1",path:"/develop/api-v2/server-inter/channel/content/schedule/delete_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-541917f1").then(t)}},{name:"v-02f306a6",path:"/develop/api-v2/server-inter/channel/content/pins/get_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-02f306a6").then(t)}},{name:"v-9c4e54a6",path:"/develop/api-v2/server-inter/channel/content/schedule/get_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-9c4e54a6").then(t)}},{name:"v-e6c05416",path:"/develop/api-v2/server-inter/channel/content/schedule/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e6c05416").then(t)}},{name:"v-20fb459b",path:"/develop/api-v2/server-inter/channel/content/schedule/post_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-20fb459b").then(t)}},{name:"v-71ff77be",path:"/develop/api-v2/server-inter/channel/content/schedule/get_schedules.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-71ff77be").then(t)}},{name:"v-3fb1bf3e",path:"/develop/api-v2/server-inter/channel/manage/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3fb1bf3e").then(t)}},{path:"/develop/api-v2/server-inter/channel/manage/index.html",redirect:"/develop/api-v2/server-inter/channel/manage/"},{name:"v-1cd54bcd",path:"/develop/api-v2/server-inter/channel/manage/channel/delete_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1cd54bcd").then(t)}},{name:"v-41cd760d",path:"/develop/api-v2/server-inter/channel/manage/channel/get_channels.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-41cd760d").then(t)}},{name:"v-1f13079d",path:"/develop/api-v2/server-inter/channel/manage/channel/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1f13079d").then(t)}},{name:"v-68c9fbbb",path:"/develop/api-v2/server-inter/channel/manage/channel/get_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-68c9fbbb").then(t)}},{name:"v-28cf9dd2",path:"/develop/api-v2/server-inter/channel/manage/channel/patch_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-28cf9dd2").then(t)}},{name:"v-f814c55e",path:"/develop/api-v2/server-inter/channel/manage/channel/post_channels.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-f814c55e").then(t)}},{name:"v-5fef905b",path:"/develop/api-v2/server-inter/channel/manage/event/guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5fef905b").then(t)}},{name:"v-370f150a",path:"/develop/api-v2/server-inter/channel/manage/event/channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-370f150a").then(t)}},{name:"v-4a364e6d",path:"/develop/api-v2/server-inter/channel/manage/guild/guilds.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4a364e6d").then(t)}},{name:"v-0904d6fb",path:"/develop/api-v2/server-inter/channel/manage/guild/get_guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0904d6fb").then(t)}},{name:"v-332e983d",path:"/develop/api-v2/server-inter/channel/manage/guild/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-332e983d").then(t)}},{name:"v-89b04ec2",path:"/develop/api-v2/server-inter/channel/manage/user/me.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-89b04ec2").then(t)}},{name:"v-cad47de4",path:"/develop/api-v2/server-inter/channel/miniapp/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-cad47de4").then(t)}},{path:"/develop/api-v2/server-inter/channel/miniapp/index.html",redirect:"/develop/api-v2/server-inter/channel/miniapp/"},{name:"v-b60326e6",path:"/develop/api-v2/server-inter/channel/manage/user/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b60326e6").then(t)}},{name:"v-bcdcc626",path:"/develop/api-v2/server-inter/channel/miniapp/interface.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-bcdcc626").then(t)}},{name:"v-96e857a6",path:"/develop/api-v2/server-inter/channel/content/schedule/patch_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-96e857a6").then(t)}},{name:"v-05bf3b5e",path:"/develop/api-v2/server-inter/channel/role-group/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-05bf3b5e").then(t)}},{path:"/develop/api-v2/server-inter/channel/role-group/index.html",redirect:"/develop/api-v2/server-inter/channel/role-group/"},{name:"v-59b26021",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-59b26021").then(t)}},{name:"v-02661611",path:"/develop/api-v2/server-inter/channel/miniapp/opendata.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-02661611").then(t)}},{name:"v-627fe80d",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-627fe80d").then(t)}},{name:"v-98a6b1b6",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_roles_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-98a6b1b6").then(t)}},{name:"v-ae4352a2",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ae4352a2").then(t)}},{name:"v-1019bc26",path:"/develop/api-v2/server-inter/channel/role-group/delete_guild_member_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1019bc26").then(t)}},{name:"v-32c1f1f3",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_roles_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-32c1f1f3").then(t)}},{name:"v-a6c0997e",path:"/develop/api-v2/server-inter/channel/role-group/get_guild_roles.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a6c0997e").then(t)}},{name:"v-0bf5fcb6",path:"/develop/api-v2/server-inter/channel/role-group/delete_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0bf5fcb6").then(t)}},{name:"v-3539c7ad",path:"/develop/api-v2/server-inter/channel/role-group/patch_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3539c7ad").then(t)}},{name:"v-18052b93",path:"/develop/api-v2/server-inter/channel/role-group/put_guild_member_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-18052b93").then(t)}},{name:"v-b058cf62",path:"/develop/api-v2/server-inter/channel/role-group/post_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b058cf62").then(t)}},{name:"v-06cbb81e",path:"/develop/api-v2/server-inter/channel/role/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-06cbb81e").then(t)}},{path:"/develop/api-v2/server-inter/channel/role/index.html",redirect:"/develop/api-v2/server-inter/channel/role/"},{name:"v-773986e6",path:"/develop/api-v2/server-inter/channel/role/audio_or_live_channel_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-773986e6").then(t)}},{name:"v-5ea07855",path:"/develop/api-v2/server-inter/channel/role/get_online_nums.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5ea07855").then(t)}},{name:"v-6e78da2d",path:"/develop/api-v2/server-inter/channel/role/member/delete_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6e78da2d").then(t)}},{name:"v-0a712ae6",path:"/develop/api-v2/server-inter/channel/role/guild_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0a712ae6").then(t)}},{name:"v-269b33ad",path:"/develop/api-v2/server-inter/channel/role/member/get_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-269b33ad").then(t)}},{name:"v-45721f76",path:"/develop/api-v2/server-inter/channel/role/member/get_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-45721f76").then(t)}},{name:"v-0a79194e",path:"/develop/api-v2/server-inter/channel/role/member/get_role_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0a79194e").then(t)}},{name:"v-e973c266",path:"/develop/api-v2/server-inter/channel/role/member/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e973c266").then(t)}},{name:"v-0e76ec4b",path:"/develop/api-v2/server-inter/channel/role/member/role_model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0e76ec4b").then(t)}},{name:"v-34cbea84",path:"/develop/api-v2/server-inter/channel/speak/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-34cbea84").then(t)}},{path:"/develop/api-v2/server-inter/channel/speak/index.html",redirect:"/develop/api-v2/server-inter/channel/speak/"},{name:"v-1de8f42d",path:"/develop/api-v2/server-inter/channel/speak/patch_guild_member_mute.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1de8f42d").then(t)}},{name:"v-5fe6706d",path:"/develop/api-v2/server-inter/channel/speak/patch_guild_mute_multi_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5fe6706d").then(t)}},{name:"v-10ca2451",path:"/develop/api-v2/server-inter/channel/speak/patch_guild_mute.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-10ca2451").then(t)}},{name:"v-0934f526",path:"/develop/api-v2/server-inter/channel/speak/setting/message_setting.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0934f526").then(t)}},{name:"v-1b592a66",path:"/develop/api-v2/server-inter/channel/speak/setting/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1b592a66").then(t)}},{name:"v-0ad45a04",path:"/develop/api-v2/server-inter/group/manage/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0ad45a04").then(t)}},{path:"/develop/api-v2/server-inter/group/manage/index.html",redirect:"/develop/api-v2/server-inter/group/manage/"},{name:"v-3202e1e8",path:"/develop/api-v2/server-inter/group/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3202e1e8").then(t)}},{path:"/develop/api-v2/server-inter/group/index.html",redirect:"/develop/api-v2/server-inter/group/"},{name:"v-030ad4ca",path:"/develop/api-v2/server-inter/group/manage/event.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-030ad4ca").then(t)}},{name:"v-3955f456",path:"/develop/api-v2/server-inter/message/dms/delete_dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3955f456").then(t)}},{name:"v-80ccf088",path:"/develop/api-v2/server-inter/message/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-80ccf088").then(t)}},{path:"/develop/api-v2/server-inter/message/index.html",redirect:"/develop/api-v2/server-inter/message/"},{name:"v-72cba642",path:"/develop/api-v2/server-inter/message/dms/direct_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-72cba642").then(t)}},{name:"v-4c27396d",path:"/develop/api-v2/server-inter/message/dms/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4c27396d").then(t)}},{name:"v-5a69cfab",path:"/develop/api-v2/server-inter/message/dms/post_dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5a69cfab").then(t)}},{name:"v-2cbfda8d",path:"/develop/api-v2/server-inter/message/message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2cbfda8d").then(t)}},{name:"v-a7e8d6a6",path:"/develop/api-v2/server-inter/message/message_format.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a7e8d6a6").then(t)}},{name:"v-ea42ece6",path:"/develop/api-v2/server-inter/message/dms/post_dms_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ea42ece6").then(t)}},{name:"v-eca22ec4",path:"/develop/api-v2/server-inter/message/send-receive/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-eca22ec4").then(t)}},{path:"/develop/api-v2/server-inter/message/send-receive/index.html",redirect:"/develop/api-v2/server-inter/message/send-receive/"},{name:"v-182f304f",path:"/develop/api-v2/server-inter/message/send-receive/reset.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-182f304f").then(t)}},{name:"v-448cc4e6",path:"/develop/api-v2/server-inter/message/post_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-448cc4e6").then(t)}},{name:"v-4a2c9f39",path:"/develop/api-v2/server-inter/message/send-receive/event.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4a2c9f39").then(t)}},{name:"v-7c5f43a6",path:"/develop/api-v2/server-inter/message/send-receive/rich-media.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7c5f43a6").then(t)}},{name:"v-4c1170cd",path:"/develop/api-v2/server-inter/message/send-receive/send.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4c1170cd").then(t)}},{name:"v-759a1463",path:"/develop/api-v2/server-inter/message/template/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-759a1463").then(t)}},{name:"v-a53196ec",path:"/develop/api-v2/server-inter/message/trans/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a53196ec").then(t)}},{path:"/develop/api-v2/server-inter/message/trans/index.html",redirect:"/develop/api-v2/server-inter/message/trans/"},{name:"v-d7256ae6",path:"/develop/api-v2/server-inter/message/trans/emoji.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-d7256ae6").then(t)}},{name:"v-58fa6266",path:"/develop/api-v2/server-inter/message/trans/msg-btn.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-58fa6266").then(t)}},{name:"v-7b26e01e",path:"/develop/api-v2/server-inter/message/type/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7b26e01e").then(t)}},{path:"/develop/api-v2/server-inter/message/type/index.html",redirect:"/develop/api-v2/server-inter/message/type/"},{name:"v-6debebfb",path:"/develop/api-v2/server-inter/message/trans/text-chain.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6debebfb").then(t)}},{name:"v-b025b1fe",path:"/develop/api-v2/server-inter/message/type/ark.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b025b1fe").then(t)}},{name:"v-4ca878ee",path:"/develop/api-v2/server-inter/message/type/audio.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4ca878ee").then(t)}},{name:"v-276e6003",path:"/develop/api-v2/server-inter/message/type/embed.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-276e6003").then(t)}},{name:"v-58967c02",path:"/develop/api-v2/server-inter/message/type/image.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-58967c02").then(t)}},{name:"v-4a353466",path:"/develop/api-v2/server-inter/message/type/file.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4a353466").then(t)}},{name:"v-6656b58e",path:"/develop/api-v2/server-inter/message/type/rich-text.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6656b58e").then(t)}},{name:"v-140e83ed",path:"/develop/api-v2/server-inter/message/type/markdown.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-140e83ed").then(t)}},{name:"v-7a73490a",path:"/develop/api-v2/server-inter/message/type/sticker.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7a73490a").then(t)}},{name:"v-0ee39f2d",path:"/develop/api-v2/server-inter/message/type/template/template_23.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0ee39f2d").then(t)}},{name:"v-1877a9e6",path:"/develop/api-v2/server-inter/message/type/template/template_24.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1877a9e6").then(t)}},{name:"v-f6b384a6",path:"/develop/api-v2/server-inter/message/type/text.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-f6b384a6").then(t)}},{name:"v-5996becd",path:"/develop/api-v2/server-inter/message/type/template/template_37.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5996becd").then(t)}},{name:"v-3c5ddbbf",path:"/develop/api-v2/server-inter/message/type/video.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3c5ddbbf").then(t)}},{name:"v-24ceddbe",path:"/develop/api-v2/server-inter/user/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-24ceddbe").then(t)}},{path:"/develop/api-v2/server-inter/user/index.html",redirect:"/develop/api-v2/server-inter/user/"},{name:"v-6bc707f8",path:"/develop/api-v2/server-inter/user/manage/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6bc707f8").then(t)}},{path:"/develop/api-v2/server-inter/user/manage/index.html",redirect:"/develop/api-v2/server-inter/user/manage/"},{name:"v-07811e6d",path:"/develop/api-v2/server-inter/user/manage/event.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-07811e6d").then(t)}},{name:"v-444ef428",path:"/develop/gosdk/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-444ef428").then(t)}},{path:"/develop/gosdk/index.html",redirect:"/develop/gosdk/"},{name:"v-0bff128d",path:"/develop/gosdk/api/announce/create_guild_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0bff128d").then(t)}},{name:"v-9b0d7c6a",path:"/develop/gosdk/api/announce/delete_channel_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-9b0d7c6a").then(t)}},{name:"v-03005017",path:"/develop/gosdk/api/announce/post_recommended_channels.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-03005017").then(t)}},{name:"v-1015976b",path:"/develop/gosdk/api/announce/delete_guild_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1015976b").then(t)}},{name:"v-d37f87a6",path:"/develop/gosdk/api/announce/create_channel_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-d37f87a6").then(t)}},{name:"v-2232b1cd",path:"/develop/gosdk/api/api_permissions/post_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2232b1cd").then(t)}},{name:"v-4d1916d9",path:"/develop/gosdk/api/channel/create_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4d1916d9").then(t)}},{name:"v-54832fad",path:"/develop/gosdk/api/api_permissions/get_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-54832fad").then(t)}},{name:"v-77f1f0bb",path:"/develop/gosdk/api/channel/delete_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-77f1f0bb").then(t)}},{name:"v-d0f51066",path:"/develop/gosdk/api/channel/get_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-d0f51066").then(t)}},{name:"v-5b201c51",path:"/develop/gosdk/api/audio/post_audio.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5b201c51").then(t)}},{name:"v-34b08827",path:"/develop/gosdk/api/channel/get_channels.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-34b08827").then(t)}},{name:"v-266b20ff",path:"/develop/gosdk/api/channel/update_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-266b20ff").then(t)}},{name:"v-6133b68d",path:"/develop/gosdk/api/channel_permissions/get_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6133b68d").then(t)}},{name:"v-03bffa66",path:"/develop/gosdk/api/channel_permissions/get_channel_roles_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-03bffa66").then(t)}},{name:"v-9c279b82",path:"/develop/gosdk/api/channel_permissions/update_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-9c279b82").then(t)}},{name:"v-218357cd",path:"/develop/gosdk/api/guild/get_guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-218357cd").then(t)}},{name:"v-250f0203",path:"/develop/gosdk/api/channel_permissions/update_channel_roles_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-250f0203").then(t)}},{name:"v-1f0f00d9",path:"/develop/gosdk/api/direct_msg/post_direct_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1f0f00d9").then(t)}},{name:"v-5b570bde",path:"/develop/gosdk/api/direct_msg/create_direct_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5b570bde").then(t)}},{name:"v-0049f0ad",path:"/develop/gosdk/api/guild/guild_role/create_guild_role_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0049f0ad").then(t)}},{name:"v-9fa51432",path:"/develop/gosdk/api/guild/guild_role/delete_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-9fa51432").then(t)}},{name:"v-bb6832e6",path:"/develop/gosdk/api/guild/guild_role/delete_guild_role_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-bb6832e6").then(t)}},{name:"v-56428d7a",path:"/develop/gosdk/api/guild/guild_role/get_guild_roles.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-56428d7a").then(t)}},{name:"v-ef261bba",path:"/develop/gosdk/api/guild/guild_role/update_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ef261bba").then(t)}},{name:"v-d513fcee",path:"/develop/gosdk/api/guild/guild_role/create_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-d513fcee").then(t)}},{name:"v-7f65bab2",path:"/develop/gosdk/api/member/delete_guild_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7f65bab2").then(t)}},{name:"v-71bd640d",path:"/develop/gosdk/api/member/get_guild_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-71bd640d").then(t)}},{name:"v-42ed2266",path:"/develop/gosdk/api/message/get_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-42ed2266").then(t)}},{name:"v-590f1313",path:"/develop/gosdk/api/member/get_guild_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-590f1313").then(t)}},{name:"v-a3971b92",path:"/develop/gosdk/api/message/get_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a3971b92").then(t)}},{name:"v-be25097a",path:"/develop/gosdk/api/message/message_format.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-be25097a").then(t)}},{name:"v-4c55b506",path:"/develop/gosdk/api/message/message_template.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4c55b506").then(t)}},{name:"v-6ee39926",path:"/develop/gosdk/api/message/message_reference.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6ee39926").then(t)}},{name:"v-8e2f504a",path:"/develop/gosdk/api/message/post_ark_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-8e2f504a").then(t)}},{name:"v-aa3319de",path:"/develop/gosdk/api/message/post_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-aa3319de").then(t)}},{name:"v-73a726a6",path:"/develop/gosdk/api/mute/mute_all.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-73a726a6").then(t)}},{name:"v-572d4b6f",path:"/develop/gosdk/api/message/recall_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-572d4b6f").then(t)}},{name:"v-6b2cc4cf",path:"/develop/gosdk/api/pins_message/delete_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6b2cc4cf").then(t)}},{name:"v-38f3ad26",path:"/develop/gosdk/api/pins_message/put_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-38f3ad26").then(t)}},{name:"v-30ac920d",path:"/develop/gosdk/api/pins_message/get_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-30ac920d").then(t)}},{name:"v-423c25dd",path:"/develop/gosdk/api/mute/mute_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-423c25dd").then(t)}},{name:"v-2f6e0543",path:"/develop/gosdk/api/reaction/delete_reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2f6e0543").then(t)}},{name:"v-acd36226",path:"/develop/gosdk/api/reaction/post_reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-acd36226").then(t)}},{name:"v-82a1a0ea",path:"/develop/gosdk/api/schedule/delete_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-82a1a0ea").then(t)}},{name:"v-587befe6",path:"/develop/gosdk/api/schedule/get_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-587befe6").then(t)}},{name:"v-22ed0f7b",path:"/develop/gosdk/api/schedule/get_schedules.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-22ed0f7b").then(t)}},{name:"v-32a61847",path:"/develop/gosdk/api/schedule/update_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-32a61847").then(t)}},{name:"v-43f3ab35",path:"/develop/gosdk/api/schedule/post_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-43f3ab35").then(t)}},{name:"v-72809de6",path:"/develop/gosdk/api/user/me.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-72809de6").then(t)}},{name:"v-69a3d206",path:"/develop/gosdk/model/announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-69a3d206").then(t)}},{name:"v-51063227",path:"/develop/gosdk/model/api_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-51063227").then(t)}},{name:"v-ffe26726",path:"/develop/gosdk/model/audio.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ffe26726").then(t)}},{name:"v-28e4d12a",path:"/develop/gosdk/api/user/me_guilds.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-28e4d12a").then(t)}},{name:"v-b5feab66",path:"/develop/gosdk/model/channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b5feab66").then(t)}},{name:"v-f76b258e",path:"/develop/gosdk/model/channel_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-f76b258e").then(t)}},{name:"v-3d0bb0ad",path:"/develop/gosdk/model/dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3d0bb0ad").then(t)}},{name:"v-4d36f66d",path:"/develop/gosdk/model/emoji.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4d36f66d").then(t)}},{name:"v-1279841b",path:"/develop/gosdk/model/member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1279841b").then(t)}},{name:"v-5255e166",path:"/develop/gosdk/model/guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5255e166").then(t)}},{name:"v-53308a66",path:"/develop/gosdk/model/message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-53308a66").then(t)}},{name:"v-758e5903",path:"/develop/gosdk/model/pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-758e5903").then(t)}},{name:"v-97f3b4ba",path:"/develop/gosdk/model/role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-97f3b4ba").then(t)}},{name:"v-4d19bb7d",path:"/develop/gosdk/model/reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4d19bb7d").then(t)}},{name:"v-0adf9ab9",path:"/develop/gosdk/model/user.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0adf9ab9").then(t)}},{name:"v-001cac21",path:"/develop/gosdk/model/schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-001cac21").then(t)}},{name:"v-bc235c66",path:"/develop/gosdk/websocket/listen_events.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-bc235c66").then(t)}},{name:"v-71917040",path:"/develop/nodesdk/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-71917040").then(t)}},{path:"/develop/nodesdk/index.html",redirect:"/develop/nodesdk/"},{name:"v-b04be47e",path:"/develop/nodesdk/announce/delete_channel_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b04be47e").then(t)}},{name:"v-154f157e",path:"/develop/nodesdk/announce/patch_guild_recommend.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-154f157e").then(t)}},{name:"v-518722eb",path:"/develop/nodesdk/announce/post_channel_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-518722eb").then(t)}},{name:"v-3fb920be",path:"/develop/nodesdk/announce/delete_guild_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3fb920be").then(t)}},{name:"v-5ecaac8b",path:"/develop/nodesdk/announce/post_guild_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5ecaac8b").then(t)}},{name:"v-356490cd",path:"/develop/nodesdk/api_permissions/get_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-356490cd").then(t)}},{name:"v-6097c74d",path:"/develop/nodesdk/announce/post_guild_recommend.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6097c74d").then(t)}},{name:"v-66d773ad",path:"/develop/nodesdk/api_permissions/post_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-66d773ad").then(t)}},{name:"v-0c95e2cd",path:"/develop/nodesdk/audio/audio_control.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0c95e2cd").then(t)}},{name:"v-d1e2f026",path:"/develop/nodesdk/audio/bot_off_mic.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-d1e2f026").then(t)}},{name:"v-03c7bdd6",path:"/develop/nodesdk/changelog/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-03c7bdd6").then(t)}},{path:"/develop/nodesdk/changelog/index.html",redirect:"/develop/nodesdk/changelog/"},{name:"v-6b8813f1",path:"/develop/nodesdk/channel/delete_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6b8813f1").then(t)}},{name:"v-dfdc5d92",path:"/develop/nodesdk/audio/bot_on_mic.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-dfdc5d92").then(t)}},{name:"v-454e93a6",path:"/develop/nodesdk/channel/get_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-454e93a6").then(t)}},{name:"v-01afe12d",path:"/develop/nodesdk/channel/patch_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-01afe12d").then(t)}},{name:"v-176c6466",path:"/develop/nodesdk/channel/post_channels.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-176c6466").then(t)}},{name:"v-429e3cce",path:"/develop/nodesdk/channel_permissions/get_channel_role_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-429e3cce").then(t)}},{name:"v-b0c78dc6",path:"/develop/nodesdk/channel/get_channels.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b0c78dc6").then(t)}},{name:"v-787c290b",path:"/develop/nodesdk/channel_permissions/put_channel_role_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-787c290b").then(t)}},{name:"v-e42846f2",path:"/develop/nodesdk/dms/post_dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e42846f2").then(t)}},{name:"v-0e69c4e6",path:"/develop/nodesdk/channel_permissions/put_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0e69c4e6").then(t)}},{name:"v-75d44e6d",path:"/develop/nodesdk/channel_permissions/get_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-75d44e6d").then(t)}},{name:"v-1e883079",path:"/develop/nodesdk/guild/delete_guild_member_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1e883079").then(t)}},{name:"v-0ef7d38d",path:"/develop/nodesdk/error/error.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0ef7d38d").then(t)}},{name:"v-2c02facd",path:"/develop/nodesdk/dms/post_dms_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2c02facd").then(t)}},{name:"v-53d9502d",path:"/develop/nodesdk/guild/delete_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-53d9502d").then(t)}},{name:"v-b57398a6",path:"/develop/nodesdk/guild/get_guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b57398a6").then(t)}},{name:"v-783ae9a2",path:"/develop/nodesdk/guild/guilds.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-783ae9a2").then(t)}},{name:"v-21352306",path:"/develop/nodesdk/guild/patch_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-21352306").then(t)}},{name:"v-b7b390a6",path:"/develop/nodesdk/guild/get_guild_roles.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b7b390a6").then(t)}},{name:"v-6f9c4066",path:"/develop/nodesdk/guild/put_guild_member_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6f9c4066").then(t)}},{name:"v-725590e6",path:"/develop/nodesdk/guild/post_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-725590e6").then(t)}},{name:"v-e1722716",path:"/develop/nodesdk/member/delete_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e1722716").then(t)}},{name:"v-30fec46a",path:"/develop/nodesdk/member/get_voice_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-30fec46a").then(t)}},{name:"v-042ee0ad",path:"/develop/nodesdk/member/get_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-042ee0ad").then(t)}},{name:"v-5de8c571",path:"/develop/nodesdk/member/get_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5de8c571").then(t)}},{name:"v-0fe4a4f1",path:"/develop/nodesdk/message/delete_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0fe4a4f1").then(t)}},{name:"v-4eef646d",path:"/develop/nodesdk/message/get_message_of_id.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4eef646d").then(t)}},{name:"v-3d1d9cb3",path:"/develop/nodesdk/message/message_template.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3d1d9cb3").then(t)}},{name:"v-232db9ad",path:"/develop/nodesdk/message/post_ark_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-232db9ad").then(t)}},{name:"v-6b25410e",path:"/develop/nodesdk/message/message_format.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6b25410e").then(t)}},{name:"v-228f036d",path:"/develop/nodesdk/message/post_keyboard_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-228f036d").then(t)}},{name:"v-3331c466",path:"/develop/nodesdk/message/post_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3331c466").then(t)}},{name:"v-de24c766",path:"/develop/nodesdk/message/post_reference_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-de24c766").then(t)}},{name:"v-e1c3a526",path:"/develop/nodesdk/model/audio.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e1c3a526").then(t)}},{name:"v-25accec9",path:"/develop/nodesdk/model/announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-25accec9").then(t)}},{name:"v-3502b333",path:"/develop/nodesdk/model/api_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3502b333").then(t)}},{name:"v-493b728d",path:"/develop/nodesdk/model/channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-493b728d").then(t)}},{name:"v-6775fb6d",path:"/develop/nodesdk/model/emoji.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6775fb6d").then(t)}},{name:"v-1c39df05",path:"/develop/nodesdk/model/channel_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1c39df05").then(t)}},{name:"v-443c562d",path:"/develop/nodesdk/model/dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-443c562d").then(t)}},{name:"v-60b1ad0d",path:"/develop/nodesdk/model/guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-60b1ad0d").then(t)}},{name:"v-6f025eb2",path:"/develop/nodesdk/model/member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6f025eb2").then(t)}},{name:"v-21880566",path:"/develop/nodesdk/model/inline_keyboard.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-21880566").then(t)}},{name:"v-1192520d",path:"/develop/nodesdk/model/message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1192520d").then(t)}},{name:"v-c2d779e2",path:"/develop/nodesdk/model/pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-c2d779e2").then(t)}},{name:"v-eae6396e",path:"/develop/nodesdk/model/reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-eae6396e").then(t)}},{name:"v-79da6daf",path:"/develop/nodesdk/model/role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-79da6daf").then(t)}},{name:"v-623c076d",path:"/develop/nodesdk/model/schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-623c076d").then(t)}},{name:"v-900787f6",path:"/develop/nodesdk/model/user.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-900787f6").then(t)}},{name:"v-0003000d",path:"/develop/nodesdk/mute/mute_all.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0003000d").then(t)}},{name:"v-aebcebda",path:"/develop/nodesdk/mute/mute_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-aebcebda").then(t)}},{name:"v-58a3d20d",path:"/develop/nodesdk/mute/mute_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-58a3d20d").then(t)}},{name:"v-871b4d76",path:"/develop/nodesdk/pins_message/delete_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-871b4d76").then(t)}},{name:"v-0c39c52d",path:"/develop/nodesdk/pins_message/get_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0c39c52d").then(t)}},{name:"v-0cb42a4d",path:"/develop/nodesdk/pins_message/put_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0cb42a4d").then(t)}},{name:"v-a64c1d8e",path:"/develop/nodesdk/reaction/delete_reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a64c1d8e").then(t)}},{name:"v-fb864e66",path:"/develop/nodesdk/reaction/get_reaction_user_list.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-fb864e66").then(t)}},{name:"v-5ef23463",path:"/develop/nodesdk/reaction/post_reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5ef23463").then(t)}},{name:"v-207c3481",path:"/develop/nodesdk/schedule/delete_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-207c3481").then(t)}},{name:"v-52fbc8a6",path:"/develop/nodesdk/schedule/patch_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-52fbc8a6").then(t)}},{name:"v-49654e2d",path:"/develop/nodesdk/schedule/get_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-49654e2d").then(t)}},{name:"v-df64ea9e",path:"/develop/nodesdk/schedule/get_schedules.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-df64ea9e").then(t)}},{name:"v-7588b826",path:"/develop/nodesdk/user/guilds.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7588b826").then(t)}},{name:"v-218409ab",path:"/develop/nodesdk/schedule/post_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-218409ab").then(t)}},{name:"v-35a13f58",path:"/develop/pythonsdk/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-35a13f58").then(t)}},{path:"/develop/pythonsdk/index.html",redirect:"/develop/pythonsdk/"},{name:"v-287f2926",path:"/develop/nodesdk/user/me.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-287f2926").then(t)}},{name:"v-6d5699e6",path:"/develop/nodesdk/wss/model.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6d5699e6").then(t)}},{name:"v-20d75376",path:"/develop/pythonsdk/api/announce/create_channel_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-20d75376").then(t)}},{name:"v-e5a924b6",path:"/develop/pythonsdk/api/announce/create_guild_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e5a924b6").then(t)}},{name:"v-ccf6a73a",path:"/develop/pythonsdk/api/announce/delete_channel_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ccf6a73a").then(t)}},{name:"v-9cc9c0a6",path:"/develop/pythonsdk/api/api_permissions/get_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-9cc9c0a6").then(t)}},{name:"v-4794f9fa",path:"/develop/pythonsdk/api/announce/delete_guild_announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4794f9fa").then(t)}},{name:"v-4f8a3ced",path:"/develop/pythonsdk/api/audio/audio_off_mic.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4f8a3ced").then(t)}},{name:"v-2572bc37",path:"/develop/pythonsdk/api/audio/audio_on_mic.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2572bc37").then(t)}},{name:"v-5c070569",path:"/develop/pythonsdk/api/audio/post_audio.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5c070569").then(t)}},{name:"v-3d911f66",path:"/develop/pythonsdk/api/api_permissions/post_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3d911f66").then(t)}},{name:"v-9c41da1e",path:"/develop/pythonsdk/api/channel/create_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-9c41da1e").then(t)}},{name:"v-5fb5275a",path:"/develop/pythonsdk/api/channel/delete_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5fb5275a").then(t)}},{name:"v-6172b04d",path:"/develop/pythonsdk/api/channel/get_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6172b04d").then(t)}},{name:"v-235dc1bf",path:"/develop/pythonsdk/api/channel/get_channels.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-235dc1bf").then(t)}},{name:"v-c0ef08d2",path:"/develop/pythonsdk/api/channel/update_channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-c0ef08d2").then(t)}},{name:"v-8868cd8a",path:"/develop/pythonsdk/api/channel_permissions/get_channel_role_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-8868cd8a").then(t)}},{name:"v-da3e93e6",path:"/develop/pythonsdk/api/channel_permissions/get_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-da3e93e6").then(t)}},{name:"v-373a50d7",path:"/develop/pythonsdk/api/channel_permissions/update_channel_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-373a50d7").then(t)}},{name:"v-414f814d",path:"/develop/pythonsdk/api/channel_permissions/update_channel_role_permissions.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-414f814d").then(t)}},{name:"v-7fa9669e",path:"/develop/pythonsdk/api/dms/create_dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7fa9669e").then(t)}},{name:"v-9630672e",path:"/develop/pythonsdk/api/dms/post_dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-9630672e").then(t)}},{name:"v-2c7d264d",path:"/develop/pythonsdk/api/guild/get_guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2c7d264d").then(t)}},{name:"v-bac0b6a6",path:"/develop/pythonsdk/api/guild/guild_role/create_guild_role_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-bac0b6a6").then(t)}},{name:"v-57a408be",path:"/develop/pythonsdk/api/guild/guild_role/create_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-57a408be").then(t)}},{name:"v-10d325db",path:"/develop/pythonsdk/api/guild/guild_role/get_guild_roles.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-10d325db").then(t)}},{name:"v-43ce4b0d",path:"/develop/pythonsdk/api/guild/guild_role/delete_guild_role_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-43ce4b0d").then(t)}},{name:"v-39d9007f",path:"/develop/pythonsdk/api/guild/guild_role/delete_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-39d9007f").then(t)}},{name:"v-8887bd82",path:"/develop/pythonsdk/api/member/delete_guild_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-8887bd82").then(t)}},{name:"v-07296fab",path:"/develop/pythonsdk/api/member/get_guild_members.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-07296fab").then(t)}},{name:"v-1b56848a",path:"/develop/pythonsdk/api/guild/guild_role/update_guild_role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1b56848a").then(t)}},{name:"v-4a6468e6",path:"/develop/pythonsdk/api/member/get_guild_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4a6468e6").then(t)}},{name:"v-16a33966",path:"/develop/pythonsdk/api/message/get_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-16a33966").then(t)}},{name:"v-e3d7e0d6",path:"/develop/pythonsdk/api/message/message_template.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e3d7e0d6").then(t)}},{name:"v-44fb964a",path:"/develop/pythonsdk/api/message/message_format.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-44fb964a").then(t)}},{name:"v-e77aeb66",path:"/develop/pythonsdk/api/message/post_keyboard_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e77aeb66").then(t)}},{name:"v-c6cabb1a",path:"/develop/pythonsdk/api/message/post_ark_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-c6cabb1a").then(t)}},{name:"v-65363ba6",path:"/develop/pythonsdk/api/message/post_reference_messages.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-65363ba6").then(t)}},{name:"v-5c097a29",path:"/develop/pythonsdk/api/message/post_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5c097a29").then(t)}},{name:"v-994b6bf2",path:"/develop/pythonsdk/api/message/recall_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-994b6bf2").then(t)}},{name:"v-c6c256a6",path:"/develop/pythonsdk/api/mute/mute_all.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-c6c256a6").then(t)}},{name:"v-62634816",path:"/develop/pythonsdk/api/mute/mute_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-62634816").then(t)}},{name:"v-4fe449e9",path:"/develop/pythonsdk/api/mute/mute_multi_member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4fe449e9").then(t)}},{name:"v-2017c68d",path:"/develop/pythonsdk/api/pins_message/get_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2017c68d").then(t)}},{name:"v-edd20332",path:"/develop/pythonsdk/api/pins_message/delete_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-edd20332").then(t)}},{name:"v-06b895db",path:"/develop/pythonsdk/api/reaction/delete_reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-06b895db").then(t)}},{name:"v-cd6ddb26",path:"/develop/pythonsdk/api/pins_message/put_pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-cd6ddb26").then(t)}},{name:"v-7b93bb26",path:"/develop/pythonsdk/api/reaction/get_reaction_users.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7b93bb26").then(t)}},{name:"v-dc5e13f6",path:"/develop/pythonsdk/api/reaction/post_reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-dc5e13f6").then(t)}},{name:"v-194e4e23",path:"/develop/pythonsdk/api/schedule/delete_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-194e4e23").then(t)}},{name:"v-78768ee6",path:"/develop/pythonsdk/api/schedule/get_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-78768ee6").then(t)}},{name:"v-24a449da",path:"/develop/pythonsdk/api/schedule/get_schedules.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-24a449da").then(t)}},{name:"v-b037bf66",path:"/develop/pythonsdk/api/schedule/post_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-b037bf66").then(t)}},{name:"v-85ca1042",path:"/develop/pythonsdk/api/schedule/update_schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-85ca1042").then(t)}},{name:"v-4952848d",path:"/develop/pythonsdk/api/user/me.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4952848d").then(t)}},{name:"v-e92069fa",path:"/develop/pythonsdk/api/user/me_guilds.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-e92069fa").then(t)}},{name:"v-2e55e20a",path:"/develop/pythonsdk/changelog/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2e55e20a").then(t)}},{path:"/develop/pythonsdk/changelog/index.html",redirect:"/develop/pythonsdk/changelog/"},{name:"v-02085015",path:"/develop/pythonsdk/model/announce.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-02085015").then(t)}},{name:"v-1d268482",path:"/develop/pythonsdk/model/api_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-1d268482").then(t)}},{name:"v-896ad926",path:"/develop/pythonsdk/model/audio.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-896ad926").then(t)}},{name:"v-6da20066",path:"/develop/pythonsdk/model/channel.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-6da20066").then(t)}},{name:"v-7c630a51",path:"/develop/pythonsdk/model/channel_permission.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7c630a51").then(t)}},{name:"v-dd0df526",path:"/develop/pythonsdk/model/emoji.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-dd0df526").then(t)}},{name:"v-ed61c066",path:"/develop/pythonsdk/model/guild.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ed61c066").then(t)}},{name:"v-64345a0d",path:"/develop/pythonsdk/model/inline_keyboard.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-64345a0d").then(t)}},{name:"v-7f2650ad",path:"/develop/pythonsdk/model/dms.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7f2650ad").then(t)}},{name:"v-7c7206b3",path:"/develop/pythonsdk/model/member.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7c7206b3").then(t)}},{name:"v-2bbdee4d",path:"/develop/pythonsdk/model/message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-2bbdee4d").then(t)}},{name:"v-ed9e72ca",path:"/develop/pythonsdk/model/pins_message.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ed9e72ca").then(t)}},{name:"v-5349e18a",path:"/develop/pythonsdk/model/role.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5349e18a").then(t)}},{name:"v-4b13e6d1",path:"/develop/pythonsdk/model/user.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-4b13e6d1").then(t)}},{name:"v-3ec5678e",path:"/develop/pythonsdk/model/schedule.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3ec5678e").then(t)}},{name:"v-5e80d495",path:"/develop/pythonsdk/model/reaction.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-5e80d495").then(t)}},{name:"v-a9a94810",path:"/newfeature/eleven/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-a9a94810").then(t)}},{path:"/newfeature/eleven/index.html",redirect:"/newfeature/eleven/"},{name:"v-0486517e",path:"/newfeature/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0486517e").then(t)}},{path:"/newfeature/index.html",redirect:"/newfeature/"},{name:"v-34ff9b66",path:"/develop/pythonsdk/websocket/listen_events.html",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-34ff9b66").then(t)}},{name:"v-63c3d856",path:"/newfeature/five/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-63c3d856").then(t)}},{path:"/newfeature/five/index.html",redirect:"/newfeature/five/"},{name:"v-7e08d754",path:"/newfeature/nine/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-7e08d754").then(t)}},{path:"/newfeature/nine/index.html",redirect:"/newfeature/nine/"},{name:"v-ce009004",path:"/newfeature/seven/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-ce009004").then(t)}},{path:"/newfeature/seven/index.html",redirect:"/newfeature/seven/"},{name:"v-3074783e",path:"/newfeature/ten/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-3074783e").then(t)}},{path:"/newfeature/ten/index.html",redirect:"/newfeature/ten/"},{name:"v-0792f49e",path:"/newfeature/six/",component:He,beforeEnter:(n,e,t)=>{Object(Kn.a)("Layout","v-0792f49e").then(t)}},{path:"/newfeature/six/index.html",redirect:"/newfeature/six/"},{path:"*",component:He}],Qe={title:" QQ机器人文档",description:"QQ小程序是连接年轻用户的新方式，覆盖8亿新生代活跃网民。轻便快捷的开发模式，将能在QQ内被轻松获取和传播。",base:"/",headTags:[["link",{rel:"icon",type:"image/x-icon",href:"/favicon.ico"}],["meta",{name:"viewport",content:"width=device-width,initial-scale=1,user-scalable=no"}]],pages:[{title:"运营规范",frontmatter:{sidebar:"auto"},regularPath:"/business/",relativePath:"business/README.md",key:"v-12d12f04",path:"/business/",headers:[{level:2,title:"一、 原则及相关说明",slug:"一、-原则及相关说明",normalizedTitle:"一、 原则及相关说明",charIndex:11},{level:2,title:"二、 具体运营规范",slug:"二、-具体运营规范",normalizedTitle:"二、 具体运营规范",charIndex:167},{level:3,title:"1. 注册提交规范",slug:"_1-注册提交规范",normalizedTitle:"1. 注册提交规范",charIndex:482},{level:3,title:"2. 基本信息规范",slug:"_2-基本信息规范",normalizedTitle:"2. 基本信息规范",charIndex:805},{level:3,title:"3. 功能设置规范",slug:"_3-功能设置规范",normalizedTitle:"3. 功能设置规范",charIndex:1740},{level:3,title:"4. 主体规范",slug:"_4-主体规范",normalizedTitle:"4. 主体规范",charIndex:2198},{level:3,title:"5.行为规范",slug:"_5-行为规范",normalizedTitle:"5.行为规范",charIndex:2568},{level:3,title:"6. 信息内容规范",slug:"_6-信息内容规范",normalizedTitle:"6. 信息内容规范",charIndex:6421},{level:3,title:"7. 商标与商业外观",slug:"_7-商标与商业外观",normalizedTitle:"7. 商标与商业外观",charIndex:7547},{level:3,title:"8. 用户产生内容规范",slug:"_8-用户产生内容规范",normalizedTitle:"8. 用户产生内容规范",charIndex:7931},{level:3,title:"9. 可用性和完整性规范",slug:"_9-可用性和完整性规范",normalizedTitle:"9. 可用性和完整性规范",charIndex:8040},{level:3,title:"10. 技术实现规范",slug:"_10-技术实现规范",normalizedTitle:"10. 技术实现规范",charIndex:8278},{level:3,title:"11. 数据安全",slug:"_11-数据安全",normalizedTitle:"11. 数据安全",charIndex:8453},{level:2,title:"三、遵守当地法律监管",slug:"三、遵守当地法律监管",normalizedTitle:"三、遵守当地法律监管",charIndex:9178},{level:2,title:"四、机器人平台运营规范免责声明",slug:"四、机器人平台运营规范免责声明",normalizedTitle:"四、机器人平台运营规范免责声明",charIndex:9326},{level:2,title:"五、动态文档",slug:"五、动态文档",normalizedTitle:"五、动态文档",charIndex:9444}],lastUpdated:"11/9/2023, 7:28:06 AM",lastUpdatedTimestamp:1699514886e3,headersStr:"一、 原则及相关说明 二、 具体运营规范 1. 注册提交规范 2. 基本信息规范 3. 功能设置规范 4. 主体规范 5.行为规范 6. 信息内容规范 7. 商标与商业外观 8. 用户产生内容规范 9. 可用性和完整性规范 10. 技术实现规范 11. 数据安全 三、遵守当地法律监管 四、机器人平台运营规范免责声明 五、动态文档",content:"# 运营规范\n\n\n# 一、 原则及相关说明\n\nQQ 机器人是开发者提供连接用户的全新消息服务平台，构建友好的沟通和管理模式。在开始 QQ 机器人的开发前，我们希望 QQ 机器人开发者（以下也称为\"你\"）已经仔细阅读了《QQ开放平台服务协议》。希望这些规范，能够一定程度上帮助你解决开发、运营 QQ 机器人过程中所遇到的疑问。\n\n\n# 二、 具体运营规范\n\n使用 QQ 机器人平台的服务，你必须阅读并遵守《QQ开放平台服务协议》，以及腾讯为此制定和公开发布的专项规则等。\n\n本运营规范是在上述协议及规则基础上进行解释和说明，相关内容旨在帮助你更加清晰地理解和遵守相关协议和规则，以便能够更加顺利地在 QQ 机器人平台进行运营，而不是修改或变更上述协议及规则中的任何条款。\n\n如果我们认为你的 QQ 机器人违反了我们的条款、相关平台规则或法律法规，或对 QQ 、 QQ 机器人开放平台造成了影响，则 QQ 有权对你的 QQ 机器人采取 强制措施 ，包括但不限于 限制你的 QQ 机器人访问平台功能 、 封禁 QQ 机器人 、 要求删除数据 、 终止协议等 。\n\n\n# 1. 注册提交规范\n\n（1） 提供给用户可以联络到开发者的链接或电子邮箱等有效联系方式。\n\n（2） 提供给平台联络到开发者的管理员已实名认证的 QQ 号，并保证该 QQ 号真实有效。\n\n（3） 你所提交的 QQ 机器人，不得关联至你不具有完整合法权益或不具备完整授权的网站、应用程序、产品或服务等。\n\n（4） 为保障平台和其他用户的安全、稳定，我们会在你提交 QQ 机器人、运营 QQ 机器人等全过程中，要求你提供相应的材料、进行相应的修改等补充和调整，你应当按照我们的要求协助我们进行审核，否则，将影响审核的结果。\n\n（5） 不允许批量注册、重复提交大量相似的 QQ 机器人。\n\n（6） 不允许相同问题或同类型问题，拒不修改反复提审。\n\n\n# 2. 基本信息规范\n\n（1） QQ 机器人的账号具有唯一性，不可重复。\n\n（2） QQ 机器人名称、头像、简介、描述等信息不得含有政治敏感、色情、暴力血腥、恐怖内容及国家法律法规禁止的其他违法内容； 未经授权不得使用第三方享有合法权益的商标、品牌标识等内容或与之相似的内容、信息、特殊角标，侵犯他人合法知识产权；也不得含有其他侵犯他人合法权益（包括但不限于肖像权、名誉权、隐私权、姓名权等）的内容。\n\n（3） QQ 机器人的名称、简介、头像包含如下内容，将无法通过审核：\n\n▶️ 带有民族歧视性质的内容。\n\n▶️ 夸大宣传并带有欺骗性的内容。\n\n▶️ 特殊符号、空格、火星文或无意义文字组合。\n\n▶️ 含有 QQ 、微信、微博、网址、邮箱、手机号等联系信息。\n\n▶️ 广告营销词语，包含且不限于：代购、推销、门店、兼职、淘宝店、钜惠。\n\n▶️ 冒用他人、社会公众人物、明星、其他企业及组织名号等。\n\n▶️ 易被理解为腾讯官方性质的名称，如\"腾讯\"、\" QQ \"等。\n\n▶️ 单独以省份、城市名作为名称，如中国、北京、东城区等。\n\n▶️ 国家机关所在地、特定地点的名称或者标志性建筑物的名称。\n\n▶️ 政府官方性质词汇，包含但不限于发布、平安、文明、清风。\n\n▶️ 包含但不限于中考、高考、托福、等具有官方教育机构性质的名称。\n\n▶️ \"国家级\"、\"最高级\"等新广告法明令禁止的极限用语。\n\n▶️ 以电话、邮件、日历、斗地主、麻将等广义归纳类、普遍且不具有识别性的词汇命名，建议修改为品牌商标/公司名称关键字+产品描述/功能描述的组合。\n\n▶️ 包含其他违反法律法规或与 QQ 机器人功能或内容无关、干扰搜索结果的词语。或在名称中包含热门搜索词及关键词堆砌，与搜索系统进行规则对抗。\n\n▶️ 包含水印信息，使用二维码作为头像。\n\n（4） 包含其他违反法律法规或与 QQ 机器人功能或内容无关、干扰搜索结果的词语。或在名称中包含热门搜索词及关键词堆砌，与搜索系统进行规则对抗。\n\n（5） 无正当理由， QQ 机器人的名称和简介、描述不得与已有 QQ 机器人或公众号重复或混淆；不得以添加无实质意义的字母、符号等任何方式作为避开、绕开 QQ 机器人的平台规则及规范。\n\n\n# 3. 功能设置规范\n\n（1） QQ 机器人所实际提供的服务和内容，需与 QQ 机器人的简介一致，且不存在隐藏类目。\n\n（2） QQ 机器人的核心功能，必须在机器人配置首页得到体现。\n\n（3） QQ 机器人向用户提供基本的功能指引。\n\n（4） QQ 机器人的功能不能过于简单，提供的功能不应与其他 QQ 机器人同质化严重。\n\n（5） 未经腾讯公司授权的情况下， QQ 机器人的添加，必须是免费的，不得设置付费添加。\n\n（6） 未经允许或未经腾讯公司授权的情况下， QQ 机器人功能的使用，不得依赖于其他 QQ 机器人。即不得以使用其他 QQ 机器人为条件，也不得依赖于其他应用程序，即不得以使用其他应用程序为条件；未经允许或未经腾讯公司授权的情况下，也不得展示或者推荐其他 QQ 机器人或公众号。\n\n（7） QQ 机器人应设置侵权投诉机制，处理用户间的权益纠纷。\n\n（8） QQ 机器人应按照国家法律、法规等政策的规定，对可能涉及不宜未成年人接触的内容或服务予以提醒或处理，保护未成年人的身心健康和合法权益。\n\n\n# 4. 主体规范\n\n（1） QQ 机器人的开发、运营应当符合法律、法规等规范性文件的规定，任何有合理理由认为存在违反法律、法规或监管要求的情况的，将会被拒绝。\n\n（2） 你应当按照我们的要求提供相应的审批、备案等资质文件材料，否则，我们有理由相信你提交的 QQ 机器人存在违反法律、法规或监管要求的情况。你所提交的资质文件材料，均应为真实、合法、有效、完整的。腾讯将在合法权限和能力范围内对你的 QQ 机器人进行发布审核，如我们发现你提交的文件材料存在任何伪造、造假情况，我们有权对拒绝你的 QQ 机器人或对其采取强制措施，并保留追究你相应的法律责任的权利。\n\n（3） 任何有合理理由认为从事或为从事违法行为、非法活动提供便利、协助的，将会被拒绝。\n\n（4） 未取得法定许可证件或牌照，发布、传播或从事相关经营活动的，我们有权拒绝。\n\n\n# 5.行为规范\n\n# 5.1 内容安全\n\n * 违规内容 ： QQ 机器人涉及未设置过滤违法、违规等不当信息内容的机制。建议调用内容安全检测接口校验文本/图片是否含有敏感内容，提升信息安全防护能力，降低被恶意利用导致传播恶意内容的风险。\n * 处罚规则 ： 一经发现将根据违规程度对该 QQ 机器人帐号封禁搜索，添加能力，直至下架处理。\n\n# 5.2 刷量行为\n\n * 违规内容： 不得存在恶意刷票、刷粉、刷单等行为。包括但不限于通过第三方技术、工具等进行刷票、刷粉、刷单等行为或为上述行为提供工具或服务。\n * 处罚规则： 一经发现将根据违规程度对该 QQ 机器人采取相应的处理措施直至封号处理。\n\n# 5.3 网赚行为\n\n * 违规内容： 存在自行或协助他人以拟人程序、利诱其他用户参与、转发、下载或委托刷单平台等方式的行为。如：诱导转发内容获取利益，包括但不限于现金、礼品、积分等；诱导下载 APP 或使用 APP 获取收益等。（对于有其他主要功能的 QQ 机器人，分享获利只是活动促销手段的，不视为网赚）。\n * 处罚规则： 一经发现将对该 QQ 机器人帐号进行封号处理。\n\n# 5.4 外挂行为\n\n * 违规内容： 未经腾讯书面许可，不得使用或推荐、介绍使用插件、外挂或其他违规第三方工具、服务接入本服务和相关系统。如：售卖或宣传外挂类游戏软件、辅助性破解功能软件等。\n * 处罚规则： 帐号仅售卖或宣传外挂软件、无其他功能的 QQ 机器人，将被永久封号。\n\n# 5.5 侵犯名誉/商誉/隐私/肖像行为\n\n * 违规内容： 擅自使用他人已经登记注册的企业名称或商标，侵犯他人企业名称专用权及商标专用权以及企业商誉。擅自使用他人名称、头像，侵害他人名誉权、肖像权等合法权利。未经授权发送、传播他人个人隐私资料，侵犯他人隐私权等合法权益。\n * 处罚规则： 一经发现将根据违规程度对该 QQ 机器人侵权名称、头像等违规内容清空直至下架处理。\n\n# 5.6 侵犯知识产权行为\n\n * 违规内容： 未经腾讯书面同意，任何开发者不得自行或与其他第三方共同利用腾讯的服务，侵犯其他主体的知识产权，包括但不限于文字、图片、视频、音频、软件等。\n * 处罚规则： 一经发现将根据违规程度对该 QQ 机器人侵权内容清空直至下架处理。\n\n# 5.7 多级分销经营行为\n\n * 违规内容： 不得通过 QQ 机器人实施多级分销欺诈行为，发布分销信息诱导用户进行添加、分享或直接参与。\n   * 通过培养用户粉丝，分级佣金的形式进行多级分销的行为；\n   * 以虚拟社区运营，形成上下级代理，诱导组建团队的多级分销行为；\n   * 通过实物销售，发展下级代理，多层级抽取销售利润的多级分销行为。\n * 处罚规则： 一经发现将根据违规程度对该 QQ 机器人进行限制功能直至主体封禁处理，并有权拒绝再向该主体提供服务。\n\n# 5.8 互推行为\n\n * 违规内容： 未经腾讯书面同意，任何开发者不得自行或与其他第三方共同利用腾讯的服务对 QQ 机器人进行推荐、推广、排行或集中设立跳转等，也不得为上述行为提供任何协助或便利。\n * 处罚规则： 一经发现将根据违规程度对该 QQ 机器人采取限制功能直至封号处理。\n\n# 5.9 欺诈行为\n\n * 违规内容： 包括但不限于虚假红包、虚假活动、虚假宣传，仿冒腾讯官方或他人业务等，对用户进行欺诈的行为。\n * 处罚规则： 一经发现将对该 QQ 机器人帐号封号处理。\n\n# 5.10 收集用户个人信息的行为\n\n * 违规内容： 不符合以下运营规范的行为，视为违规：在采集用户数据之前，必须确保经过用户同意，并向用户如实披露数据用途、使用范围等相关信息。\n   * 不得非法收集或窃取用户密码或其他个人数据。\n   * 除非相关法律要求，或经用户同意，否则不得要求用户输入个人信息（手机号、出生日期等）才可使用其功能，或收集用户密码或者用户个人信息（包括但不限于，手机号、身份证号、生日、住址等）。\n   * 若用户要求，你应该删除接收的所有关于该用户的数据，除非依据法律、法规你有权要求保留这些数据。\n   * 若你终止使用 QQ 机器人，则应立即删除从 QQ 和 QQ 机器人接收的所有用户数据。\n   * 不允许向 QQ 机器人其他用户或任何第三方显示用户手机号、电子邮箱地址和出生日期等信息。\n   * 不允许将用户 QQ 号、名称、微信号、手机号、电子邮箱地址和出生日期等信息用于任何未经用户及 QQ 平台授权的用途。\n   * 不允许进行反射查找、跟踪、关联、挖掘、获取或利用用户 QQ 号、名称、微信号、手机号、电子邮箱地址和出生日期等信息从事与 QQ 机器人所公示身份无关的行为。\n   * 不允许在未经用户明确同意、未向用户如实披露数据用途、使用范围等相关信息的情形下，复制、存储、使用或传输用户数据。\n   * 通过 QQ 接收的数据，需保持数据为最新并利用这些数据改善 QQ 机器人的用户体验。\n   * 未经腾讯公司授权或允许，不得将 QQ 机器人的数据加入搜索引擎或目录。\n   * 未经腾讯公司授权或允许，不得使用从 QQ 和 QQ 机器人接收的数据用以做出有关资格的决定，包括决定是否批准或拒绝某项申请，或对某项贷款收取多少利息等。\n   * 若你的 QQ 机器人主体被第三方收购或合并，则你从 QQ 和 QQ 机器人接收的数据仅能在你的 QQ 机器人内继续使用。\n   * 未经腾讯同意，不得通过 QQ 机器人服务收集、存储、抓取、获得或要求用户提供包括但不限于 QQ 或其服务平台的信息内容、用户数据等腾讯认为属于敏感信息范畴的数据（包括但不限于 QQ 号码、 QQ 密码、微信帐号、微信密码、用户关系链、好友列表数据、银行账号和密码等），也不得将所合法获得的前述数据自行或提供给其用户、客户用于创建、补充或维护自身关系链。\n * 处罚规则： 经发现将封禁该 QQ 机器人帐号相应接口权限，视情节严重进行下架直至封号处理。\n\n# 5.11 混淆行为\n\n * 违规内容： 用与主体信息不完全相符的 QQ 机器人名称、头像、简介、描述、所提供的功能等信息，不得对用户产生以下不适宜的混淆、误认、联想或影响。具体如下：恶意混淆腾讯官方功能。\n   * 恶意混淆其为相关政府机构、事业单位、社会团体等组织机构开发、运营的（无论该组织是否真实存在）。\n * 处罚规则： 一经发现将对该 QQ 机器人帐号封号处理。\n\n# 5.12 滥用接口能力行为\n\n * 违规内容： QQ 机器人应当合法、合规、正当、善意地使用腾讯提供的各项功能、接口和能力等，使用时应当遵循 QQ 机器人相关的协议规则，保护 QQ 用户和其他第三方的合法权益，并符合腾讯对 QQ 机器人所提倡的各项要求和建议。不得自行或协助他人滥用、不正当使用、非善意使用上述功能、接口、能力等，包括但不限于利用相关接口、功能、能力等协助第三方从事违反 QQ 机器人相关协议和规则的行为。\n * 处罚规则： 一经发现将根据违规程度对该 QQ 机器人的接口能力进行封禁，直至封号处理。\n\n# 5.13 过度营销行为\n\n * 违规内容： 存在过度营销、展示或传播骚扰信息或垃圾信息等行为，对用户造成骚扰。\n * 处罚规则： 一经发现将根据违规程度对该 QQ 机器人帐号进行更新消息接口能力封禁或封号下架处理。\n\n# 5.14 违反平台运营规范的其他内容\n\n（1） 不得存在导致腾讯软件在终端设备系统、应用程序商店、市场等必要的使用环境或下载渠道中发生下架、下线、终止提供服务、不兼容等不利影响的内容；\n\n（2） 开发者应当正当使用腾讯提供的服务，不得自行或与其他第三方共同对腾讯提供的服务进行干扰或不正当使用，包括但不限于替换跳转页面、流量劫持等。否则，一经发现，腾讯有权对相关 QQ 机器人采取限制功能直至封禁处理，并有权拒绝再向该主体提供服务；\n\n（3） 不得提供任何主动设置或引导用户以隐藏、掩饰、更改等方式不披露用户真实身份的通讯、社交、信息交互的服务。一经发现存在此类行为， QQ 有权对其进行限制功能直至封禁处理，并有权拒绝再向该主体提供服务；\n\n（4） 完成注册后，如帐号长期未登录， QQ 机器人可能被终止使用，终止使用后注册所使用的邮箱、身份证、 QQ 号等信息可能将被取消注册状态；\n\n（5） 你应当确保你所开发或运营的 QQ 机器人代码不侵犯他人的合法权益，也不得违反任何开源软件的许可证要求。未经权利方许可，你不得复制、使用、传播或恶意仿写相关代码。因代码相同或相似引发的争议，腾讯有权运用技术手段独立对争议代码相似度、侵权恶意程度等进行判断和处理；\n\n（6） 未经允许或未经腾讯公司授权的情况下， QQ 机器人功能的使用，不得依赖于其他 QQ 机器人，即不得以使用其他 QQ 机器人为条件，也不得依赖于其他应用程序，即不得以使用其他应用程序为条件；未经允许或未经腾讯公司授权的情况下，也不得展示或者推荐其他 QQ 机器人或公众号；\n\n（7） 你应当已经阅读、同意包括但不限于《Apple Developer Program 许可协议》《App Store 审核指南》 等终端设备系统、应用程序商店、市场等的协议规范，你所开发或运营的 QQ 机器人不得从事违反上述协议或规范的行为。\n\n\n# 6. 信息内容规范\n\n# 6.1 违反国家法律法规禁止的内容\n\n * 违规内容： QQ 机器人不得发布、传送、传播、储存国家法律法规禁止的以下信息内容，否则视为违规：\n   * 反对宪法所确定基本原则，危害国家安全、泄露国家秘密、颠覆国家政权、破坏国家统一 、损害国家荣誉和利益；\n   * 反政府、反社会，或存在煽动性的涉政言论、散布谣言，扰乱社会秩序，破坏社会稳定；\n   * 煽动民族仇恨、民族歧视、破坏民族团结、破坏国家宗教政策、宣扬邪教和封建迷信；\n   * 展示人或动物被杀戮、致残、枪击、针刺或其他伤害的真实图片，描述暴力或虐待儿童的，或包含宣扬暴力血腥内容；\n   * 包含赌博、竞猜和抽奖信息的。\n   * 含有虚假、欺诈或冒充类内容，包括但不限于虚假红包、虚假活动、虚假宣传，仿冒腾讯官方或他人业务，可能造成 QQ 用户混淆；\n   * 公然侮辱或者诽谤他人，揭露他人隐私，侵害他人合法权益的；\n   * 未经授权，擅自使用他人商标、版权内容等，以及其他侵犯他人合法知识产权的；\n   * 任何召集、鼓动犯罪或有明显违背社会善良风俗行为的；\n   * 其他任何违反法律法规的内容。\n * 处罚规则： 违法违规类帐号一经发现将进行永久封号处理。\n\n# 6.2 色情低俗内容\n\n * 违规内容： 传播淫秽、色情或低俗信息，包括但不限于暴露图片、挑逗内容等，或包含非法色情交易的信息。推送云盘，小视频买卖等色情资源，进行不当牟利。\n   * 通过 QQ 机器人进行色情引流。\n   * 在 QQ 机器人内直接推送色情内容。\n * 处罚规则 ： 一经发现将根据违规程度对该 QQ 机器人采取相应的处理措施。\n\n# 6.3 垃圾广告\n\n * 违规内容： 存在过度营销、展示或传播骚扰信息或垃圾信息等行为，对用户造成骚扰。精仿高仿产品类垃圾广告。\n   * 丰胸、减肥、增高、壮阳、性保健类垃圾广告。\n   * 包含虚假夸大类推广信息，存在违反现行广告法等情形。\n   * 病症类、性器官保养类垃圾广告。\n * 处理规则： 一经发现将对该 QQ 机器人帐号进行封号处理。\n\n# 6.4 其他违反平台规则的信息\n\nQQ 机器人的内容，也不得含有以下违反平台规则的信息：\n\n（1） 主要为营销或广告用途，或者出现虚假夸大或其他违反广告法的广告信息。\n\n（2） 对用户产生误导、严重破坏用户体验，损害用户利益的谣言类内容。\n\n（3） 存在违反与腾讯签订的、任何形式的服务协议、平台协议、功能协议的内容。\n\n（4） 存在违反腾讯为相关软件、服务、功能等而制定的管理、运营规范、规则的内容。\n\n（5） 其他涉及违法违规或违反平台相关规则的内容。\n\n\n# 7. 商标与商业外观\n\n（1） QQ 机器人必须遵守商标、著作权等知识产权法律法规以及腾讯关于知识产权使用的相关规则。\n\n（2） 使用他人商标、他人享有著作权内容等涉及他人知识产权的内容需要在帐号申请时如实说明，并根据要求提供相关权利证书或授权证明等。非权利人或未经授权的，不得使用他人享有知识产权的内容。\n\n（3） 非腾讯官方帐号，禁止在帐号名称、输出内容中出现与腾讯已有知识产权内容相同（如'腾讯'、'QQ'、'Tencent'、'WeChat' 、'QQ'等）、相近似（例如，腾迅、tencet、wecha 等）的字样，或者容易与目前已有腾讯产品设计主题、外观等相混淆的内容。\n\n（4） 非腾讯公司实际运营的 QQ 机器人，不得误导和暗示用户腾讯公司是该 QQ 机器人运营者，或者误导和暗示用户腾讯公司以任何形式表示认可其质量、服务或与其存在合作关系。\n\n\n# 8. 用户产生内容规范\n\n（1） QQ 机器人的服务提供者，应设置过滤违法、违规等不当信息内容的机制，保证用户产生内容符合信息内容的规定。\n\n（2） 被投诉 QQ 机器人存在不当内容时，需提供及时回应的机制。\n\n\n# 9. 可用性和完整性规范\n\n（1） 提交的 QQ 机器人应该是一个完成品，要求可以运行，且不得为测试版。\n\n（2） QQ 机器人程序不应造成 QQ 客户端崩溃或程序本身崩溃。\n\n（3） 不应存在严重 Bug（如无法响应、响应严重滞后等）。\n\n（4） 开发者应保证已发布 QQ 机器人的使用流畅性、稳定性和安全性，若因 QQ 机器人自身原因导致其向用户提供的服务中断且未能在腾讯认为的合理期限内修复的，腾讯有权采取包括但不限于临时封禁等处理措施，以维护良好的用户体验。\n\n\n# 10. 技术实现规范\n\n（1） 遵守 QQ 机器人开发文档和开发规范中的规则和约定。\n\n（2） QQ 机器人开发者允许并授权 QQ 团队对提交的代码进行漏洞安全测试。\n\n（3） 系统安全要求\n\n▶️ 严禁利用手机系统、 QQ 或其他软件或硬件的技术漏洞，一旦发现将回收 QQ 机器人主体的帐号资格。\n\n▶️ 不得利用 QQ 机器人传播病毒。\n\n\n# 11. 数据安全\n\n（1） 请谨慎保管好你的帐号、密码和密钥。\n\n（2） 若使用第三方合作伙伴服务，那么应同合作伙伴签署合同，以保护你从 QQ 获取的任何信息，限制其对这些信息的使用并保持信息的保密性。\n\n（3） 不得要求用户降低手机操作系统安全性（如要求 iPhone 用户越狱、Android 用户 ROOT 等）后，方能使用相关功能。\n\n（4） 未经用户许可， QQ 机器人不得以任何形式将所收集的用户数据向任何第三方进行泄漏、提供、披露或许可获取。\n\n（5） QQ 机器人收集用户的数据后，应当采取必要、合理、有效的安全保护措施，防止任何形式的用户数据被盗、泄漏、披露等事件。\n\n（6） QQ 机器人收集用户的数据后，若发生任何形式的用户数据被盗、泄漏、披露等事件，应当立即采取合法、有效的措施防止损害结果的扩大，并依法向有关部门进行报告。\n\n（7） 在特定 QQ 机器人中收集的用户数据仅可以在该特定 QQ 机器人中使用，不得将其使用在该特定 QQ 机器人之外或为其他任何目的进行使用，即使你可能同时注册了两个以上的 QQ 机器人。\n\n（8） 在终止或被终止使用 QQ 机器人服务后，应当在 24 小时内采取合法、有效的措施将所获取的用户数据进行不可恢复、不可撤销地完全删除，除非事先已经获得用户书面、明确的同意继续授权留存其数据。\n\n（9） 用户的个人信息和数据安全应当受到谨慎、高度的关注和保障， QQ 机器人如需使用能够识别用户个人身份信息、个人信用评分信息、征信信息等的技术或功能，包括但不限于人脸核身、指纹识别、虹膜识别、声纹识别等生物识别技术或功能，应当使用 QQ 机器人平台提供的或其他经平台认可或同意的技术或功能。\n\n\n# 三、遵守当地法律监管\n\n你在使用 QQ 机器人平台服务的过程中应当遵守当地相关的法律法规，并尊重当地的道德和风俗习惯。如果你的行为违反了当地法律法规或道德风俗，你应当为此独立承担责任。\n\nQQ 机器人开发者应避免因使用本服务而使腾讯卷入政治和公共事件，否则腾讯有权暂停或终止对你的服务。\n\n\n# 四、机器人平台运营规范免责声明\n\nQQ 机器人开发者明确了解并同意，关于 QQ 机器人服务，腾讯不提供任何种类的明示或暗示担保或条件，包括但不限于商业适售性、特定用途适用性等。你对 QQ 机器人的使用行为必须自行承担相应风险。\n\n\n# 五、动态文档\n\n这是一份动态更新的文档，我们会根据新出现的问题、相关法律法规更新或产品运营的需要来对其内容进行修改并更新，制定新的规则，保证 QQ 用户的体验。你应能反复查看以便获得最新信息，请定期了解更新情况。",normalizedContent:"# 运营规范\n\n\n# 一、 原则及相关说明\n\nqq 机器人是开发者提供连接用户的全新消息服务平台，构建友好的沟通和管理模式。在开始 qq 机器人的开发前，我们希望 qq 机器人开发者（以下也称为\"你\"）已经仔细阅读了《qq开放平台服务协议》。希望这些规范，能够一定程度上帮助你解决开发、运营 qq 机器人过程中所遇到的疑问。\n\n\n# 二、 具体运营规范\n\n使用 qq 机器人平台的服务，你必须阅读并遵守《qq开放平台服务协议》，以及腾讯为此制定和公开发布的专项规则等。\n\n本运营规范是在上述协议及规则基础上进行解释和说明，相关内容旨在帮助你更加清晰地理解和遵守相关协议和规则，以便能够更加顺利地在 qq 机器人平台进行运营，而不是修改或变更上述协议及规则中的任何条款。\n\n如果我们认为你的 qq 机器人违反了我们的条款、相关平台规则或法律法规，或对 qq 、 qq 机器人开放平台造成了影响，则 qq 有权对你的 qq 机器人采取 强制措施 ，包括但不限于 限制你的 qq 机器人访问平台功能 、 封禁 qq 机器人 、 要求删除数据 、 终止协议等 。\n\n\n# 1. 注册提交规范\n\n（1） 提供给用户可以联络到开发者的链接或电子邮箱等有效联系方式。\n\n（2） 提供给平台联络到开发者的管理员已实名认证的 qq 号，并保证该 qq 号真实有效。\n\n（3） 你所提交的 qq 机器人，不得关联至你不具有完整合法权益或不具备完整授权的网站、应用程序、产品或服务等。\n\n（4） 为保障平台和其他用户的安全、稳定，我们会在你提交 qq 机器人、运营 qq 机器人等全过程中，要求你提供相应的材料、进行相应的修改等补充和调整，你应当按照我们的要求协助我们进行审核，否则，将影响审核的结果。\n\n（5） 不允许批量注册、重复提交大量相似的 qq 机器人。\n\n（6） 不允许相同问题或同类型问题，拒不修改反复提审。\n\n\n# 2. 基本信息规范\n\n（1） qq 机器人的账号具有唯一性，不可重复。\n\n（2） qq 机器人名称、头像、简介、描述等信息不得含有政治敏感、色情、暴力血腥、恐怖内容及国家法律法规禁止的其他违法内容； 未经授权不得使用第三方享有合法权益的商标、品牌标识等内容或与之相似的内容、信息、特殊角标，侵犯他人合法知识产权；也不得含有其他侵犯他人合法权益（包括但不限于肖像权、名誉权、隐私权、姓名权等）的内容。\n\n（3） qq 机器人的名称、简介、头像包含如下内容，将无法通过审核：\n\n▶️ 带有民族歧视性质的内容。\n\n▶️ 夸大宣传并带有欺骗性的内容。\n\n▶️ 特殊符号、空格、火星文或无意义文字组合。\n\n▶️ 含有 qq 、微信、微博、网址、邮箱、手机号等联系信息。\n\n▶️ 广告营销词语，包含且不限于：代购、推销、门店、兼职、淘宝店、钜惠。\n\n▶️ 冒用他人、社会公众人物、明星、其他企业及组织名号等。\n\n▶️ 易被理解为腾讯官方性质的名称，如\"腾讯\"、\" qq \"等。\n\n▶️ 单独以省份、城市名作为名称，如中国、北京、东城区等。\n\n▶️ 国家机关所在地、特定地点的名称或者标志性建筑物的名称。\n\n▶️ 政府官方性质词汇，包含但不限于发布、平安、文明、清风。\n\n▶️ 包含但不限于中考、高考、托福、等具有官方教育机构性质的名称。\n\n▶️ \"国家级\"、\"最高级\"等新广告法明令禁止的极限用语。\n\n▶️ 以电话、邮件、日历、斗地主、麻将等广义归纳类、普遍且不具有识别性的词汇命名，建议修改为品牌商标/公司名称关键字+产品描述/功能描述的组合。\n\n▶️ 包含其他违反法律法规或与 qq 机器人功能或内容无关、干扰搜索结果的词语。或在名称中包含热门搜索词及关键词堆砌，与搜索系统进行规则对抗。\n\n▶️ 包含水印信息，使用二维码作为头像。\n\n（4） 包含其他违反法律法规或与 qq 机器人功能或内容无关、干扰搜索结果的词语。或在名称中包含热门搜索词及关键词堆砌，与搜索系统进行规则对抗。\n\n（5） 无正当理由， qq 机器人的名称和简介、描述不得与已有 qq 机器人或公众号重复或混淆；不得以添加无实质意义的字母、符号等任何方式作为避开、绕开 qq 机器人的平台规则及规范。\n\n\n# 3. 功能设置规范\n\n（1） qq 机器人所实际提供的服务和内容，需与 qq 机器人的简介一致，且不存在隐藏类目。\n\n（2） qq 机器人的核心功能，必须在机器人配置首页得到体现。\n\n（3） qq 机器人向用户提供基本的功能指引。\n\n（4） qq 机器人的功能不能过于简单，提供的功能不应与其他 qq 机器人同质化严重。\n\n（5） 未经腾讯公司授权的情况下， qq 机器人的添加，必须是免费的，不得设置付费添加。\n\n（6） 未经允许或未经腾讯公司授权的情况下， qq 机器人功能的使用，不得依赖于其他 qq 机器人。即不得以使用其他 qq 机器人为条件，也不得依赖于其他应用程序，即不得以使用其他应用程序为条件；未经允许或未经腾讯公司授权的情况下，也不得展示或者推荐其他 qq 机器人或公众号。\n\n（7） qq 机器人应设置侵权投诉机制，处理用户间的权益纠纷。\n\n（8） qq 机器人应按照国家法律、法规等政策的规定，对可能涉及不宜未成年人接触的内容或服务予以提醒或处理，保护未成年人的身心健康和合法权益。\n\n\n# 4. 主体规范\n\n（1） qq 机器人的开发、运营应当符合法律、法规等规范性文件的规定，任何有合理理由认为存在违反法律、法规或监管要求的情况的，将会被拒绝。\n\n（2） 你应当按照我们的要求提供相应的审批、备案等资质文件材料，否则，我们有理由相信你提交的 qq 机器人存在违反法律、法规或监管要求的情况。你所提交的资质文件材料，均应为真实、合法、有效、完整的。腾讯将在合法权限和能力范围内对你的 qq 机器人进行发布审核，如我们发现你提交的文件材料存在任何伪造、造假情况，我们有权对拒绝你的 qq 机器人或对其采取强制措施，并保留追究你相应的法律责任的权利。\n\n（3） 任何有合理理由认为从事或为从事违法行为、非法活动提供便利、协助的，将会被拒绝。\n\n（4） 未取得法定许可证件或牌照，发布、传播或从事相关经营活动的，我们有权拒绝。\n\n\n# 5.行为规范\n\n# 5.1 内容安全\n\n * 违规内容 ： qq 机器人涉及未设置过滤违法、违规等不当信息内容的机制。建议调用内容安全检测接口校验文本/图片是否含有敏感内容，提升信息安全防护能力，降低被恶意利用导致传播恶意内容的风险。\n * 处罚规则 ： 一经发现将根据违规程度对该 qq 机器人帐号封禁搜索，添加能力，直至下架处理。\n\n# 5.2 刷量行为\n\n * 违规内容： 不得存在恶意刷票、刷粉、刷单等行为。包括但不限于通过第三方技术、工具等进行刷票、刷粉、刷单等行为或为上述行为提供工具或服务。\n * 处罚规则： 一经发现将根据违规程度对该 qq 机器人采取相应的处理措施直至封号处理。\n\n# 5.3 网赚行为\n\n * 违规内容： 存在自行或协助他人以拟人程序、利诱其他用户参与、转发、下载或委托刷单平台等方式的行为。如：诱导转发内容获取利益，包括但不限于现金、礼品、积分等；诱导下载 app 或使用 app 获取收益等。（对于有其他主要功能的 qq 机器人，分享获利只是活动促销手段的，不视为网赚）。\n * 处罚规则： 一经发现将对该 qq 机器人帐号进行封号处理。\n\n# 5.4 外挂行为\n\n * 违规内容： 未经腾讯书面许可，不得使用或推荐、介绍使用插件、外挂或其他违规第三方工具、服务接入本服务和相关系统。如：售卖或宣传外挂类游戏软件、辅助性破解功能软件等。\n * 处罚规则： 帐号仅售卖或宣传外挂软件、无其他功能的 qq 机器人，将被永久封号。\n\n# 5.5 侵犯名誉/商誉/隐私/肖像行为\n\n * 违规内容： 擅自使用他人已经登记注册的企业名称或商标，侵犯他人企业名称专用权及商标专用权以及企业商誉。擅自使用他人名称、头像，侵害他人名誉权、肖像权等合法权利。未经授权发送、传播他人个人隐私资料，侵犯他人隐私权等合法权益。\n * 处罚规则： 一经发现将根据违规程度对该 qq 机器人侵权名称、头像等违规内容清空直至下架处理。\n\n# 5.6 侵犯知识产权行为\n\n * 违规内容： 未经腾讯书面同意，任何开发者不得自行或与其他第三方共同利用腾讯的服务，侵犯其他主体的知识产权，包括但不限于文字、图片、视频、音频、软件等。\n * 处罚规则： 一经发现将根据违规程度对该 qq 机器人侵权内容清空直至下架处理。\n\n# 5.7 多级分销经营行为\n\n * 违规内容： 不得通过 qq 机器人实施多级分销欺诈行为，发布分销信息诱导用户进行添加、分享或直接参与。\n   * 通过培养用户粉丝，分级佣金的形式进行多级分销的行为；\n   * 以虚拟社区运营，形成上下级代理，诱导组建团队的多级分销行为；\n   * 通过实物销售，发展下级代理，多层级抽取销售利润的多级分销行为。\n * 处罚规则： 一经发现将根据违规程度对该 qq 机器人进行限制功能直至主体封禁处理，并有权拒绝再向该主体提供服务。\n\n# 5.8 互推行为\n\n * 违规内容： 未经腾讯书面同意，任何开发者不得自行或与其他第三方共同利用腾讯的服务对 qq 机器人进行推荐、推广、排行或集中设立跳转等，也不得为上述行为提供任何协助或便利。\n * 处罚规则： 一经发现将根据违规程度对该 qq 机器人采取限制功能直至封号处理。\n\n# 5.9 欺诈行为\n\n * 违规内容： 包括但不限于虚假红包、虚假活动、虚假宣传，仿冒腾讯官方或他人业务等，对用户进行欺诈的行为。\n * 处罚规则： 一经发现将对该 qq 机器人帐号封号处理。\n\n# 5.10 收集用户个人信息的行为\n\n * 违规内容： 不符合以下运营规范的行为，视为违规：在采集用户数据之前，必须确保经过用户同意，并向用户如实披露数据用途、使用范围等相关信息。\n   * 不得非法收集或窃取用户密码或其他个人数据。\n   * 除非相关法律要求，或经用户同意，否则不得要求用户输入个人信息（手机号、出生日期等）才可使用其功能，或收集用户密码或者用户个人信息（包括但不限于，手机号、身份证号、生日、住址等）。\n   * 若用户要求，你应该删除接收的所有关于该用户的数据，除非依据法律、法规你有权要求保留这些数据。\n   * 若你终止使用 qq 机器人，则应立即删除从 qq 和 qq 机器人接收的所有用户数据。\n   * 不允许向 qq 机器人其他用户或任何第三方显示用户手机号、电子邮箱地址和出生日期等信息。\n   * 不允许将用户 qq 号、名称、微信号、手机号、电子邮箱地址和出生日期等信息用于任何未经用户及 qq 平台授权的用途。\n   * 不允许进行反射查找、跟踪、关联、挖掘、获取或利用用户 qq 号、名称、微信号、手机号、电子邮箱地址和出生日期等信息从事与 qq 机器人所公示身份无关的行为。\n   * 不允许在未经用户明确同意、未向用户如实披露数据用途、使用范围等相关信息的情形下，复制、存储、使用或传输用户数据。\n   * 通过 qq 接收的数据，需保持数据为最新并利用这些数据改善 qq 机器人的用户体验。\n   * 未经腾讯公司授权或允许，不得将 qq 机器人的数据加入搜索引擎或目录。\n   * 未经腾讯公司授权或允许，不得使用从 qq 和 qq 机器人接收的数据用以做出有关资格的决定，包括决定是否批准或拒绝某项申请，或对某项贷款收取多少利息等。\n   * 若你的 qq 机器人主体被第三方收购或合并，则你从 qq 和 qq 机器人接收的数据仅能在你的 qq 机器人内继续使用。\n   * 未经腾讯同意，不得通过 qq 机器人服务收集、存储、抓取、获得或要求用户提供包括但不限于 qq 或其服务平台的信息内容、用户数据等腾讯认为属于敏感信息范畴的数据（包括但不限于 qq 号码、 qq 密码、微信帐号、微信密码、用户关系链、好友列表数据、银行账号和密码等），也不得将所合法获得的前述数据自行或提供给其用户、客户用于创建、补充或维护自身关系链。\n * 处罚规则： 经发现将封禁该 qq 机器人帐号相应接口权限，视情节严重进行下架直至封号处理。\n\n# 5.11 混淆行为\n\n * 违规内容： 用与主体信息不完全相符的 qq 机器人名称、头像、简介、描述、所提供的功能等信息，不得对用户产生以下不适宜的混淆、误认、联想或影响。具体如下：恶意混淆腾讯官方功能。\n   * 恶意混淆其为相关政府机构、事业单位、社会团体等组织机构开发、运营的（无论该组织是否真实存在）。\n * 处罚规则： 一经发现将对该 qq 机器人帐号封号处理。\n\n# 5.12 滥用接口能力行为\n\n * 违规内容： qq 机器人应当合法、合规、正当、善意地使用腾讯提供的各项功能、接口和能力等，使用时应当遵循 qq 机器人相关的协议规则，保护 qq 用户和其他第三方的合法权益，并符合腾讯对 qq 机器人所提倡的各项要求和建议。不得自行或协助他人滥用、不正当使用、非善意使用上述功能、接口、能力等，包括但不限于利用相关接口、功能、能力等协助第三方从事违反 qq 机器人相关协议和规则的行为。\n * 处罚规则： 一经发现将根据违规程度对该 qq 机器人的接口能力进行封禁，直至封号处理。\n\n# 5.13 过度营销行为\n\n * 违规内容： 存在过度营销、展示或传播骚扰信息或垃圾信息等行为，对用户造成骚扰。\n * 处罚规则： 一经发现将根据违规程度对该 qq 机器人帐号进行更新消息接口能力封禁或封号下架处理。\n\n# 5.14 违反平台运营规范的其他内容\n\n（1） 不得存在导致腾讯软件在终端设备系统、应用程序商店、市场等必要的使用环境或下载渠道中发生下架、下线、终止提供服务、不兼容等不利影响的内容；\n\n（2） 开发者应当正当使用腾讯提供的服务，不得自行或与其他第三方共同对腾讯提供的服务进行干扰或不正当使用，包括但不限于替换跳转页面、流量劫持等。否则，一经发现，腾讯有权对相关 qq 机器人采取限制功能直至封禁处理，并有权拒绝再向该主体提供服务；\n\n（3） 不得提供任何主动设置或引导用户以隐藏、掩饰、更改等方式不披露用户真实身份的通讯、社交、信息交互的服务。一经发现存在此类行为， qq 有权对其进行限制功能直至封禁处理，并有权拒绝再向该主体提供服务；\n\n（4） 完成注册后，如帐号长期未登录， qq 机器人可能被终止使用，终止使用后注册所使用的邮箱、身份证、 qq 号等信息可能将被取消注册状态；\n\n（5） 你应当确保你所开发或运营的 qq 机器人代码不侵犯他人的合法权益，也不得违反任何开源软件的许可证要求。未经权利方许可，你不得复制、使用、传播或恶意仿写相关代码。因代码相同或相似引发的争议，腾讯有权运用技术手段独立对争议代码相似度、侵权恶意程度等进行判断和处理；\n\n（6） 未经允许或未经腾讯公司授权的情况下， qq 机器人功能的使用，不得依赖于其他 qq 机器人，即不得以使用其他 qq 机器人为条件，也不得依赖于其他应用程序，即不得以使用其他应用程序为条件；未经允许或未经腾讯公司授权的情况下，也不得展示或者推荐其他 qq 机器人或公众号；\n\n（7） 你应当已经阅读、同意包括但不限于《apple developer program 许可协议》《app store 审核指南》 等终端设备系统、应用程序商店、市场等的协议规范，你所开发或运营的 qq 机器人不得从事违反上述协议或规范的行为。\n\n\n# 6. 信息内容规范\n\n# 6.1 违反国家法律法规禁止的内容\n\n * 违规内容： qq 机器人不得发布、传送、传播、储存国家法律法规禁止的以下信息内容，否则视为违规：\n   * 反对宪法所确定基本原则，危害国家安全、泄露国家秘密、颠覆国家政权、破坏国家统一 、损害国家荣誉和利益；\n   * 反政府、反社会，或存在煽动性的涉政言论、散布谣言，扰乱社会秩序，破坏社会稳定；\n   * 煽动民族仇恨、民族歧视、破坏民族团结、破坏国家宗教政策、宣扬邪教和封建迷信；\n   * 展示人或动物被杀戮、致残、枪击、针刺或其他伤害的真实图片，描述暴力或虐待儿童的，或包含宣扬暴力血腥内容；\n   * 包含赌博、竞猜和抽奖信息的。\n   * 含有虚假、欺诈或冒充类内容，包括但不限于虚假红包、虚假活动、虚假宣传，仿冒腾讯官方或他人业务，可能造成 qq 用户混淆；\n   * 公然侮辱或者诽谤他人，揭露他人隐私，侵害他人合法权益的；\n   * 未经授权，擅自使用他人商标、版权内容等，以及其他侵犯他人合法知识产权的；\n   * 任何召集、鼓动犯罪或有明显违背社会善良风俗行为的；\n   * 其他任何违反法律法规的内容。\n * 处罚规则： 违法违规类帐号一经发现将进行永久封号处理。\n\n# 6.2 色情低俗内容\n\n * 违规内容： 传播淫秽、色情或低俗信息，包括但不限于暴露图片、挑逗内容等，或包含非法色情交易的信息。推送云盘，小视频买卖等色情资源，进行不当牟利。\n   * 通过 qq 机器人进行色情引流。\n   * 在 qq 机器人内直接推送色情内容。\n * 处罚规则 ： 一经发现将根据违规程度对该 qq 机器人采取相应的处理措施。\n\n# 6.3 垃圾广告\n\n * 违规内容： 存在过度营销、展示或传播骚扰信息或垃圾信息等行为，对用户造成骚扰。精仿高仿产品类垃圾广告。\n   * 丰胸、减肥、增高、壮阳、性保健类垃圾广告。\n   * 包含虚假夸大类推广信息，存在违反现行广告法等情形。\n   * 病症类、性器官保养类垃圾广告。\n * 处理规则： 一经发现将对该 qq 机器人帐号进行封号处理。\n\n# 6.4 其他违反平台规则的信息\n\nqq 机器人的内容，也不得含有以下违反平台规则的信息：\n\n（1） 主要为营销或广告用途，或者出现虚假夸大或其他违反广告法的广告信息。\n\n（2） 对用户产生误导、严重破坏用户体验，损害用户利益的谣言类内容。\n\n（3） 存在违反与腾讯签订的、任何形式的服务协议、平台协议、功能协议的内容。\n\n（4） 存在违反腾讯为相关软件、服务、功能等而制定的管理、运营规范、规则的内容。\n\n（5） 其他涉及违法违规或违反平台相关规则的内容。\n\n\n# 7. 商标与商业外观\n\n（1） qq 机器人必须遵守商标、著作权等知识产权法律法规以及腾讯关于知识产权使用的相关规则。\n\n（2） 使用他人商标、他人享有著作权内容等涉及他人知识产权的内容需要在帐号申请时如实说明，并根据要求提供相关权利证书或授权证明等。非权利人或未经授权的，不得使用他人享有知识产权的内容。\n\n（3） 非腾讯官方帐号，禁止在帐号名称、输出内容中出现与腾讯已有知识产权内容相同（如'腾讯'、'qq'、'tencent'、'wechat' 、'qq'等）、相近似（例如，腾迅、tencet、wecha 等）的字样，或者容易与目前已有腾讯产品设计主题、外观等相混淆的内容。\n\n（4） 非腾讯公司实际运营的 qq 机器人，不得误导和暗示用户腾讯公司是该 qq 机器人运营者，或者误导和暗示用户腾讯公司以任何形式表示认可其质量、服务或与其存在合作关系。\n\n\n# 8. 用户产生内容规范\n\n（1） qq 机器人的服务提供者，应设置过滤违法、违规等不当信息内容的机制，保证用户产生内容符合信息内容的规定。\n\n（2） 被投诉 qq 机器人存在不当内容时，需提供及时回应的机制。\n\n\n# 9. 可用性和完整性规范\n\n（1） 提交的 qq 机器人应该是一个完成品，要求可以运行，且不得为测试版。\n\n（2） qq 机器人程序不应造成 qq 客户端崩溃或程序本身崩溃。\n\n（3） 不应存在严重 bug（如无法响应、响应严重滞后等）。\n\n（4） 开发者应保证已发布 qq 机器人的使用流畅性、稳定性和安全性，若因 qq 机器人自身原因导致其向用户提供的服务中断且未能在腾讯认为的合理期限内修复的，腾讯有权采取包括但不限于临时封禁等处理措施，以维护良好的用户体验。\n\n\n# 10. 技术实现规范\n\n（1） 遵守 qq 机器人开发文档和开发规范中的规则和约定。\n\n（2） qq 机器人开发者允许并授权 qq 团队对提交的代码进行漏洞安全测试。\n\n（3） 系统安全要求\n\n▶️ 严禁利用手机系统、 qq 或其他软件或硬件的技术漏洞，一旦发现将回收 qq 机器人主体的帐号资格。\n\n▶️ 不得利用 qq 机器人传播病毒。\n\n\n# 11. 数据安全\n\n（1） 请谨慎保管好你的帐号、密码和密钥。\n\n（2） 若使用第三方合作伙伴服务，那么应同合作伙伴签署合同，以保护你从 qq 获取的任何信息，限制其对这些信息的使用并保持信息的保密性。\n\n（3） 不得要求用户降低手机操作系统安全性（如要求 iphone 用户越狱、android 用户 root 等）后，方能使用相关功能。\n\n（4） 未经用户许可， qq 机器人不得以任何形式将所收集的用户数据向任何第三方进行泄漏、提供、披露或许可获取。\n\n（5） qq 机器人收集用户的数据后，应当采取必要、合理、有效的安全保护措施，防止任何形式的用户数据被盗、泄漏、披露等事件。\n\n（6） qq 机器人收集用户的数据后，若发生任何形式的用户数据被盗、泄漏、披露等事件，应当立即采取合法、有效的措施防止损害结果的扩大，并依法向有关部门进行报告。\n\n（7） 在特定 qq 机器人中收集的用户数据仅可以在该特定 qq 机器人中使用，不得将其使用在该特定 qq 机器人之外或为其他任何目的进行使用，即使你可能同时注册了两个以上的 qq 机器人。\n\n（8） 在终止或被终止使用 qq 机器人服务后，应当在 24 小时内采取合法、有效的措施将所获取的用户数据进行不可恢复、不可撤销地完全删除，除非事先已经获得用户书面、明确的同意继续授权留存其数据。\n\n（9） 用户的个人信息和数据安全应当受到谨慎、高度的关注和保障， qq 机器人如需使用能够识别用户个人身份信息、个人信用评分信息、征信信息等的技术或功能，包括但不限于人脸核身、指纹识别、虹膜识别、声纹识别等生物识别技术或功能，应当使用 qq 机器人平台提供的或其他经平台认可或同意的技术或功能。\n\n\n# 三、遵守当地法律监管\n\n你在使用 qq 机器人平台服务的过程中应当遵守当地相关的法律法规，并尊重当地的道德和风俗习惯。如果你的行为违反了当地法律法规或道德风俗，你应当为此独立承担责任。\n\nqq 机器人开发者应避免因使用本服务而使腾讯卷入政治和公共事件，否则腾讯有权暂停或终止对你的服务。\n\n\n# 四、机器人平台运营规范免责声明\n\nqq 机器人开发者明确了解并同意，关于 qq 机器人服务，腾讯不提供任何种类的明示或暗示担保或条件，包括但不限于商业适售性、特定用途适用性等。你对 qq 机器人的使用行为必须自行承担相应风险。\n\n\n# 五、动态文档\n\n这是一份动态更新的文档，我们会根据新出现的问题、相关法律法规更新或产品运营的需要来对其内容进行修改并更新，制定新的规则，保证 qq 用户的体验。你应能反复查看以便获得最新信息，请定期了解更新情况。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"文档更新日志",frontmatter:{sidebar:"auto"},regularPath:"/changelog/",relativePath:"changelog/README.md",key:"v-48a99384",path:"/changelog/",headers:[{level:2,title:"2022-06-17",slug:"_2022-06-17",normalizedTitle:"2022-06-17",charIndex:13},{level:2,title:"2022-06-15",slug:"_2022-06-15",normalizedTitle:"2022-06-15",charIndex:189},{level:2,title:"2022-06-14",slug:"_2022-06-14",normalizedTitle:"2022-06-14",charIndex:346},{level:2,title:"2022-06-13",slug:"_2022-06-13",normalizedTitle:"2022-06-13",charIndex:399},{level:2,title:"2022-06-11",slug:"_2022-06-11",normalizedTitle:"2022-06-11",charIndex:555},{level:2,title:"2022-01-13",slug:"_2022-01-13",normalizedTitle:"2022-01-13",charIndex:601},{level:2,title:"2022-01-12",slug:"_2022-01-12",normalizedTitle:"2022-01-12",charIndex:693},{level:2,title:"2022-01-11",slug:"_2022-01-11",normalizedTitle:"2022-01-11",charIndex:799},{level:2,title:"2022-01-10",slug:"_2022-01-10",normalizedTitle:"2022-01-10",charIndex:876},{level:2,title:"2022-01-08",slug:"_2022-01-08",normalizedTitle:"2022-01-08",charIndex:1067},{level:2,title:"2022-01-06",slug:"_2022-01-06",normalizedTitle:"2022-01-06",charIndex:1312},{level:2,title:"2022-01-05",slug:"_2022-01-05",normalizedTitle:"2022-01-05",charIndex:1407},{level:2,title:"2022-01-02",slug:"_2022-01-02",normalizedTitle:"2022-01-02",charIndex:1468},{level:2,title:"2022-01-01",slug:"_2022-01-01",normalizedTitle:"2022-01-01",charIndex:1514},{level:2,title:"2021-12-31",slug:"_2021-12-31",normalizedTitle:"2021-12-31",charIndex:1594},{level:2,title:"2021-12-30",slug:"_2021-12-30",normalizedTitle:"2021-12-30",charIndex:1642},{level:2,title:"2021-12-29",slug:"_2021-12-29",normalizedTitle:"2021-12-29",charIndex:1718},{level:2,title:"2021-12-28",slug:"_2021-12-28",normalizedTitle:"2021-12-28",charIndex:1794},{level:2,title:"2021-12-27",slug:"_2021-12-27",normalizedTitle:"2021-12-27",charIndex:1927},{level:2,title:"2021-12-26",slug:"_2021-12-26",normalizedTitle:"2021-12-26",charIndex:2103},{level:2,title:"2021-12-25",slug:"_2021-12-25",normalizedTitle:"2021-12-25",charIndex:2282},{level:2,title:"2021-12-24",slug:"_2021-12-24",normalizedTitle:"2021-12-24",charIndex:2500},{level:2,title:"2021-12-23",slug:"_2021-12-23",normalizedTitle:"2021-12-23",charIndex:2705},{level:2,title:"2021-12-22",slug:"_2021-12-22",normalizedTitle:"2021-12-22",charIndex:3269},{level:2,title:"2021-12-21",slug:"_2021-12-21",normalizedTitle:"2021-12-21",charIndex:3509},{level:2,title:"2021-12-20",slug:"_2021-12-20",normalizedTitle:"2021-12-20",charIndex:3892},{level:2,title:"2021-12-19",slug:"_2021-12-19",normalizedTitle:"2021-12-19",charIndex:4288}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"2022-06-17 2022-06-15 2022-06-14 2022-06-13 2022-06-11 2022-01-13 2022-01-12 2022-01-11 2022-01-10 2022-01-08 2022-01-06 2022-01-05 2022-01-02 2022-01-01 2021-12-31 2021-12-30 2021-12-29 2021-12-28 2021-12-27 2021-12-26 2021-12-25 2021-12-24 2021-12-23 2021-12-22 2021-12-21 2021-12-20 2021-12-19",content:"# 文档更新日志\n\n\n# 2022-06-17\n\n * feat: 完善ws事件中Message数据的构建 (9564cb2)\n * feat: 完善ws事件中User-Member数据的构建 (109c74e)\n * feat: 完善ws事件中Reaction、Audio、DirectMessage 以及 Forum（Thread类）数据的构建 (26af7ad)\n\n\n# 2022-06-15\n\n * feat: 优化gateway, api, flags, http中的部分逻辑构建与冗余代码 (727ed73)\n * docs: 更新文档中的部分demo (a24bf94)\n * feat: 优化撤回消息api的用法&优化handle消息参数的返回值 (166496e)\n\n\n# 2022-06-14\n\n * fix: 修复撤回消息隐藏小灰条没有生效的问题 (6c37dd6)\n\n\n# 2022-06-13\n\n * feat: 优化指令装饰器并新增指令装饰器demo (40576451)\n * feat: botpy 1.0 版本合入 (8a30abe2)\n * feat: 优化http模块&新增频道成员事件的Member构建&优化代码逻辑统一性，去除部分冗余代码 (0add0b9)\n\n\n# 2022-06-11\n\n * fix: 优化logging模块 (9162c24)\n\n\n# 2022-01-13\n\n * docs(changlog): 同步changlog (46f5921)\n * perf(ci): 更新changlog脚本 (ef0d549)\n\n\n# 2022-01-12\n\n * feat: 添加表情相关文档 (b4eac75)\n * feat: 补充子频道私密类型参数 (aec5c56)\n * feat: 补充获取频道列表的参数 (79c67fb)\n\n\n# 2022-01-11\n\n * feat: 添加日程API (9d88b23)\n * feat: 更新messageAPI文档 (2e23754)\n\n\n# 2022-01-10\n\n * feat: 调整changelog脚本，支持pythonsdk变更记录的同步 (02750b5)\n * perf(nodesdk): 优化文档内容和结构 (ad20cb7)\n * docs: 同步文档changelog (c47acd3)\n * feat(docs): 增加changelog、优化nodesdk安装指引: (707d7d0)\n\n\n# 2022-01-08\n\n * docs: 删除不必要的修改 (12ddbcc)\n * docs: 更新examples的链接 (c421bce)\n * perf(sync-script): 优化同步脚本细节 (855bae4)\n * ci(changelog): 增加生成changlog的脚本 (652e67a)\n * feat: 添加公告API (2906d10)\n * feat: 添加撤回消息API (17ed691)\n * feat: 添加禁言API (cb2ea97)\n\n\n# 2022-01-06\n\n * docs: 更新文档 (b032bbe)\n * 介绍-个人认证修改 (adada41)\n * 介绍-接入流程-个人主体认证修改标点 (62b7ff0)\n\n\n# 2022-01-05\n\n * feat(nodesdk): nodesdk改名，同步更新文档 (34de70b)\n\n\n# 2022-01-02\n\n * docs: 更新消息推送限制描述 (6cbc6b2)\n\n\n# 2022-01-01\n\n * feat: 添加接口接入版本号标志 (065ea92)\n * feat: 添加子频道身份组权限API (a128d8e)\n\n\n# 2021-12-31\n\n * docs: 修改特殊接口申请文案描述 (a8ac215)\n\n\n# 2021-12-30\n\n * fix: 统一描述 (a758db9)\n * docs: 更新'身份组成员'操作相关参数描述 (bf34b56)\n\n\n# 2021-12-29\n\n * docs: 调整'子频道权限'相关描述 (ef50ee4)\n * feat: 增加贡献者展示 (7b84ec5)\n\n\n# 2021-12-28\n\n * fix: 修复API页面'禁用Edit on Github 失效'的bug (124f442)\n * chore: pr被merge时触发消息提醒 (82191b4)\n * [doc]增加多个监听事件的示例 (581e893)\n\n\n# 2021-12-27\n\n * docs: 添加更新日志链接 (463d8da)\n * chore: add commit lint (adef0b6)\n * perf: sync脚本抽离 (fefe941)\n * ci: 增加构建标志 (620ee24)\n * feat: 支持配置不需要展示EditOnGithub的页面 (2765673)\n\n\n# 2021-12-26\n\n * style: 解决md文件格式问题 (0ffa175)\n * feat: 增加内网api文档同步工具 (0191ffb)\n * feat: 移除api目录，改为内网同步 (b4494d4)\n * chore: add lint-md (68220b3)\n * update issue action (da3c5c1)\n\n\n# 2021-12-25\n\n * Update README.md (ec49252)\n * Update issues.yml (4a6ab1c)\n * update issue action (58ab27b)\n * fix: 修复安装指引 (be50052)\n * doc: 更新nodesdk介绍页 (98a8d94)\n * update notifier (2f1b254)\n * fix: 文档修缮 (a97b59b)\n\n\n# 2021-12-24\n\n * [fix]修改参数 (c923591)\n * sync from inner api (9e45210)\n * fix: local dev error (c801b80)\n * fix: process环境问题 (3ab4212)\n * style: pwd button position (613c804)\n * fix: npm script (b428f9b)\n\n\n# 2021-12-23\n\n * [fix]增加事件的详细说明 (b04b74b)\n * [fix]修复文档的不规范问题 (6e9ca66)\n * [fix]修复文档的不规范问题 (7204a24)\n * [fix]修复目录不显示的问题 (1b96249)\n * doc : 填加pythonesdk菜单 (1c3fa00)\n * [feat]修改文档树形菜单的排列 (92a6c33)\n * [feat]修改文档树形菜单的排列 (4679750)\n * [feat]增加python-sdk的完整的接口文档代码 (427fbe1)\n * [feat]增加python-sdk的完整的接口文档代码 (b0ff937)\n * feat: cdn区分test构建环境 (424d288)\n * fix: 文档修缮 (488d044)\n * feat: 静态资源走cdn (f457fe2)\n * fix: nodesdk文档修缮 (8598b93)\n * fix : 子频道权限修改参数校正 (78e85e2)\n * perf(pwa): 更新pwa提示文案样式 (30d8f18)\n * fix : 修复频道身份组文档描述 (9c7fadc)\n * feat(pwa): 添加pwa功能，用于页面更新推送 (6003678)\n\n\n# 2021-12-22\n\n * [feat]增加python-sdk的基础框架文档，需要继续完善，勿使用 (43b1422)\n * chore(pwa): 更新pwa插件 (0bc926d)\n * doc: 更新文档描述 (371c88e)\n * fix(nodesdk): sdk中channel字段描述修复 (c34fdfc)\n * fix: 文档主页个人主体账号类型错误 (23e3816)\n * sync from inner api docs (6a7d3a9)\n\n\n# 2021-12-21\n\n * doc: 完善sdk文档 (cda440c)\n * fix: 增加链接 (3a88542)\n * ci: fix pr title (e8a9f2d)\n * ci: 补充针对pr、issues的通知 (0cd3dbc)\n * fix(nodesdk): 完善私域机器人添加描述 (5ea1f23)\n * doc(api): 更新小程序相关api功能介绍 (ec7236c)\n * doc: 完善sdk文档 (f4e8042)\n * sync from inner (76106a9)\n * sync from bbteam_projects/group_pro/docs (a379fef)\n * fix: 修改npm包链接 (23a6935)\n * doc(nodesdk): 更新nodesdk文档描述 (c41d11d)\n\n\n# 2021-12-20\n\n * perf(pwa): 添加pwa插件 (09dacb3)\n * perf(pwa): 添加pwa插件 (23c77e7)\n * feat(github): 添加在github上编辑连接 (19997b9)\n * doc(nodesdk): 完善nodesdk使用文档 (af7f9a4)\n * chore(lint): 调整markdown提交lint规则 (2743bc2)\n * doc: 完善文档描述 (0a06a93)\n * ci: set private to true (5e1d87f)\n * docs: 补充共建说明 (76c1bc2)\n * docs: add MIT License (73372a0)\n * docs: readme补充目录结构说明 (18261ce)\n * perf: 去除changelog (212a3aa)\n\n\n# 2021-12-19\n\n * init: 文档项目开源初始化 (f5835b6)",normalizedContent:"# 文档更新日志\n\n\n# 2022-06-17\n\n * feat: 完善ws事件中message数据的构建 (9564cb2)\n * feat: 完善ws事件中user-member数据的构建 (109c74e)\n * feat: 完善ws事件中reaction、audio、directmessage 以及 forum（thread类）数据的构建 (26af7ad)\n\n\n# 2022-06-15\n\n * feat: 优化gateway, api, flags, http中的部分逻辑构建与冗余代码 (727ed73)\n * docs: 更新文档中的部分demo (a24bf94)\n * feat: 优化撤回消息api的用法&优化handle消息参数的返回值 (166496e)\n\n\n# 2022-06-14\n\n * fix: 修复撤回消息隐藏小灰条没有生效的问题 (6c37dd6)\n\n\n# 2022-06-13\n\n * feat: 优化指令装饰器并新增指令装饰器demo (40576451)\n * feat: botpy 1.0 版本合入 (8a30abe2)\n * feat: 优化http模块&新增频道成员事件的member构建&优化代码逻辑统一性，去除部分冗余代码 (0add0b9)\n\n\n# 2022-06-11\n\n * fix: 优化logging模块 (9162c24)\n\n\n# 2022-01-13\n\n * docs(changlog): 同步changlog (46f5921)\n * perf(ci): 更新changlog脚本 (ef0d549)\n\n\n# 2022-01-12\n\n * feat: 添加表情相关文档 (b4eac75)\n * feat: 补充子频道私密类型参数 (aec5c56)\n * feat: 补充获取频道列表的参数 (79c67fb)\n\n\n# 2022-01-11\n\n * feat: 添加日程api (9d88b23)\n * feat: 更新messageapi文档 (2e23754)\n\n\n# 2022-01-10\n\n * feat: 调整changelog脚本，支持pythonsdk变更记录的同步 (02750b5)\n * perf(nodesdk): 优化文档内容和结构 (ad20cb7)\n * docs: 同步文档changelog (c47acd3)\n * feat(docs): 增加changelog、优化nodesdk安装指引: (707d7d0)\n\n\n# 2022-01-08\n\n * docs: 删除不必要的修改 (12ddbcc)\n * docs: 更新examples的链接 (c421bce)\n * perf(sync-script): 优化同步脚本细节 (855bae4)\n * ci(changelog): 增加生成changlog的脚本 (652e67a)\n * feat: 添加公告api (2906d10)\n * feat: 添加撤回消息api (17ed691)\n * feat: 添加禁言api (cb2ea97)\n\n\n# 2022-01-06\n\n * docs: 更新文档 (b032bbe)\n * 介绍-个人认证修改 (adada41)\n * 介绍-接入流程-个人主体认证修改标点 (62b7ff0)\n\n\n# 2022-01-05\n\n * feat(nodesdk): nodesdk改名，同步更新文档 (34de70b)\n\n\n# 2022-01-02\n\n * docs: 更新消息推送限制描述 (6cbc6b2)\n\n\n# 2022-01-01\n\n * feat: 添加接口接入版本号标志 (065ea92)\n * feat: 添加子频道身份组权限api (a128d8e)\n\n\n# 2021-12-31\n\n * docs: 修改特殊接口申请文案描述 (a8ac215)\n\n\n# 2021-12-30\n\n * fix: 统一描述 (a758db9)\n * docs: 更新'身份组成员'操作相关参数描述 (bf34b56)\n\n\n# 2021-12-29\n\n * docs: 调整'子频道权限'相关描述 (ef50ee4)\n * feat: 增加贡献者展示 (7b84ec5)\n\n\n# 2021-12-28\n\n * fix: 修复api页面'禁用edit on github 失效'的bug (124f442)\n * chore: pr被merge时触发消息提醒 (82191b4)\n * [doc]增加多个监听事件的示例 (581e893)\n\n\n# 2021-12-27\n\n * docs: 添加更新日志链接 (463d8da)\n * chore: add commit lint (adef0b6)\n * perf: sync脚本抽离 (fefe941)\n * ci: 增加构建标志 (620ee24)\n * feat: 支持配置不需要展示editongithub的页面 (2765673)\n\n\n# 2021-12-26\n\n * style: 解决md文件格式问题 (0ffa175)\n * feat: 增加内网api文档同步工具 (0191ffb)\n * feat: 移除api目录，改为内网同步 (b4494d4)\n * chore: add lint-md (68220b3)\n * update issue action (da3c5c1)\n\n\n# 2021-12-25\n\n * update readme.md (ec49252)\n * update issues.yml (4a6ab1c)\n * update issue action (58ab27b)\n * fix: 修复安装指引 (be50052)\n * doc: 更新nodesdk介绍页 (98a8d94)\n * update notifier (2f1b254)\n * fix: 文档修缮 (a97b59b)\n\n\n# 2021-12-24\n\n * [fix]修改参数 (c923591)\n * sync from inner api (9e45210)\n * fix: local dev error (c801b80)\n * fix: process环境问题 (3ab4212)\n * style: pwd button position (613c804)\n * fix: npm script (b428f9b)\n\n\n# 2021-12-23\n\n * [fix]增加事件的详细说明 (b04b74b)\n * [fix]修复文档的不规范问题 (6e9ca66)\n * [fix]修复文档的不规范问题 (7204a24)\n * [fix]修复目录不显示的问题 (1b96249)\n * doc : 填加pythonesdk菜单 (1c3fa00)\n * [feat]修改文档树形菜单的排列 (92a6c33)\n * [feat]修改文档树形菜单的排列 (4679750)\n * [feat]增加python-sdk的完整的接口文档代码 (427fbe1)\n * [feat]增加python-sdk的完整的接口文档代码 (b0ff937)\n * feat: cdn区分test构建环境 (424d288)\n * fix: 文档修缮 (488d044)\n * feat: 静态资源走cdn (f457fe2)\n * fix: nodesdk文档修缮 (8598b93)\n * fix : 子频道权限修改参数校正 (78e85e2)\n * perf(pwa): 更新pwa提示文案样式 (30d8f18)\n * fix : 修复频道身份组文档描述 (9c7fadc)\n * feat(pwa): 添加pwa功能，用于页面更新推送 (6003678)\n\n\n# 2021-12-22\n\n * [feat]增加python-sdk的基础框架文档，需要继续完善，勿使用 (43b1422)\n * chore(pwa): 更新pwa插件 (0bc926d)\n * doc: 更新文档描述 (371c88e)\n * fix(nodesdk): sdk中channel字段描述修复 (c34fdfc)\n * fix: 文档主页个人主体账号类型错误 (23e3816)\n * sync from inner api docs (6a7d3a9)\n\n\n# 2021-12-21\n\n * doc: 完善sdk文档 (cda440c)\n * fix: 增加链接 (3a88542)\n * ci: fix pr title (e8a9f2d)\n * ci: 补充针对pr、issues的通知 (0cd3dbc)\n * fix(nodesdk): 完善私域机器人添加描述 (5ea1f23)\n * doc(api): 更新小程序相关api功能介绍 (ec7236c)\n * doc: 完善sdk文档 (f4e8042)\n * sync from inner (76106a9)\n * sync from bbteam_projects/group_pro/docs (a379fef)\n * fix: 修改npm包链接 (23a6935)\n * doc(nodesdk): 更新nodesdk文档描述 (c41d11d)\n\n\n# 2021-12-20\n\n * perf(pwa): 添加pwa插件 (09dacb3)\n * perf(pwa): 添加pwa插件 (23c77e7)\n * feat(github): 添加在github上编辑连接 (19997b9)\n * doc(nodesdk): 完善nodesdk使用文档 (af7f9a4)\n * chore(lint): 调整markdown提交lint规则 (2743bc2)\n * doc: 完善文档描述 (0a06a93)\n * ci: set private to true (5e1d87f)\n * docs: 补充共建说明 (76c1bc2)\n * docs: add mit license (73372a0)\n * docs: readme补充目录结构说明 (18261ce)\n * perf: 去除changelog (212a3aa)\n\n\n# 2021-12-19\n\n * init: 文档项目开源初始化 (f5835b6)",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"QQ 机器人",frontmatter:{sidebar:"auto"},regularPath:"/",relativePath:"README.md",key:"v-254b0c64",path:"/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:13},{level:2,title:"亮点",slug:"亮点",normalizedTitle:"亮点",charIndex:62},{level:2,title:"接入流程",slug:"接入流程",normalizedTitle:"接入流程",charIndex:250},{level:3,title:"1. 阅读文档",slug:"_1-阅读文档",normalizedTitle:"1. 阅读文档",charIndex:259},{level:3,title:"2. 企业主体入驻",slug:"_2-企业主体入驻",normalizedTitle:"2. 企业主体入驻",charIndex:342},{level:3,title:"3 个人主体入驻",slug:"_3-个人主体入驻",normalizedTitle:"3 个人主体入驻",charIndex:1384},{level:3,title:"4 创建应用",slug:"_4-创建应用",normalizedTitle:"4 创建应用",charIndex:1752},{level:3,title:"5. 机器人发布流程",slug:"_5-机器人发布流程",normalizedTitle:"5. 机器人发布流程",charIndex:1869},{level:3,title:"6. 基础信息设置",slug:"_6-基础信息设置",normalizedTitle:"6. 基础信息设置",charIndex:1947},{level:3,title:"7. 开发场景选择",slug:"_7-开发场景选择",normalizedTitle:"7. 开发场景选择",charIndex:2163},{level:3,title:"8. 开发基础设置",slug:"_8-开发基础设置",normalizedTitle:"8. 开发基础设置",charIndex:3414},{level:3,title:"9. 发布设置",slug:"_9-发布设置",normalizedTitle:"9. 发布设置",charIndex:4450},{level:3,title:"10. 使用范围与人员配置",slug:"_10-使用范围与人员配置",normalizedTitle:"10. 使用范围与人员配置",charIndex:6200},{level:3,title:"11. 成员管理",slug:"_11-成员管理",normalizedTitle:"11. 成员管理",charIndex:6754},{level:3,title:"12. 高阶功能",slug:"_12-高阶功能",normalizedTitle:"12. 高阶功能",charIndex:7009}],lastUpdated:"1/5/2024, 4:01:20 AM",lastUpdatedTimestamp:170442728e4,headersStr:"简介 亮点 接入流程 1. 阅读文档 2. 企业主体入驻 3 个人主体入驻 4 创建应用 5. 机器人发布流程 6. 基础信息设置 7. 开发场景选择 8. 开发基础设置 9. 发布设置 10. 使用范围与人员配置 11. 成员管理 12. 高阶功能",content:'# QQ 机器人\n\n\n# 简介\n\nQQ 机器人通过开放的平台承载机器人的定制化功能，让开发者获得更畅快的开发体验。\n\n\n# 亮点\n\n便捷：通过开放接口的形式，QQ 开放平台允许开发者进行机器人定制化开发。\n\n高效：提供一套标准化、易接入的API与websocket事件，可以帮助开发者实现机器人的快速开发和迭代。\n\n趣味：机器人创新 C 端交互方式，通过指令的方式承载服务，让多样化服务变得触手可达。\n\n赋能：频道、群、单聊等QQ场景全面打通，深度融入QQ社交生态，用户基础大，服务范围广。\n\n\n# 接入流程\n\n\n# 1. 阅读文档\n\n为了更高效的进驻到 QQ 机器人平台，建议先阅读下列文档后再启动进驻工作：\n\n运营规范 | QQ机器人文档\n\n开发说明 | QQ机器人文档\n\n\n# 2. 企业主体入驻\n\n> 企业主体入驻开发者默认支持频道、群场景开发能力；个人主体入驻开发者默认仅支持频道场景开发能力。除默认开通的能力外，后续其他接口能力申请上，企业开发者与个人开发者也存在差异。\n\n# 步骤总览\n\n注意\n\n企业入驻需要提供工商信息，包括：营业执照、对公账号，如不具备的用户请前往个人入口进行入驻。 邮箱一旦填写完毕进入激活步骤，则被占用，不可修改，所以选错主体类型的用户需要更换邮箱重新注册。\n\n# 2.1 点击「立即注册」\n\n温馨提示\n\n服务的三个类目，将鼠标放上去，将会有相关应用的文档及对应便捷入口，在注册前可先阅读相关文档。\n\n# 2.2 选择企业\n\n# 2.3 填写邮箱\n\n温馨提示\n\n之前已经注册过的邮箱不需再注册，直接去登陆界面登陆即可。\n\n# 2.4 激活邮箱\n\n温馨提示\n\n如未收到邮件，请检查垃圾箱或者点击重新发送进行尝试。\n\n# 2.5 上传工商信息\n\n温馨提示\n\n请务必确认上传的营业执照与填写的主体信息保持一致，账号注册完毕，后续还存在其他主体认证步骤，信息不一致将会导致后续步骤出现问题。\n\n# 2.6 绑定管理员\n\n温馨提示\n\n姓名和身份证号码务必与手机号码对应运营商实名登记的信息一致，否则会提示错误。\n\n# 2.7 资质审核\n\n * 管理员绑定完成后账号即注册成功，进入应用管理页后，需进行后续企业资质审核步骤。\n * 此步骤可与第三步创建应用同步进行，但此步骤需尽快完成，否则会影响应用的提审。\n * 入口：点击页面提示条上的「查看详情」，即可进入详情页面查看进度。\n\n# 资质审核详细流程\n\n * 审核中-资料审核：  注册完成即自动进入工商信息审核，此步骤无需开发者操作，但请随时关注状态变更。\n\n * 审核中-待打款：  填写银行信息，点击查看详情，进入二级页面填写对公账户的银行信息，如系统没有对应【银行所在地的区】，可选择同市其他区。\n\n * 审核中-银行打款中：  如银行信息审核无误，则 3 天内腾讯公司将会对填写的对公银行账户进行 1 元以下小额打款，请关注银行收款。\n   \n   * 打款帐号主体：深圳市腾讯计算机系统有限公司，打款银行账号：755901658210820。\n\n * 审核中-校验金额：  收到打款后，请在规定时间内于开发者管理端回填收到的打款金额进行验证。\n   \n   * 金额校验次数有限，请确认收到打款后进入二级页面，填写具体的金额，如次数用完且校验不通过，该账号将被冻结。\n\n\n# 3 个人主体入驻\n\n> 企业主体入驻开发者默认支持频道、群场景开发能力；个人主体入驻开发者默认仅支持频道场景开发能力。除默认开通的能力外，后续其他接口能力申请上，企业开发者与个人开发者也存在差异。\n\n# 步骤总览\n\n# 3.1 点击「立即注册」\n\n温馨提示\n\n服务的三个类目，将鼠标放上去，将会有相关应用的文档及对应便捷入口，在注册前可先阅读相关文档。\n\n# 3.2 选择个人\n\n# 3.3 填写邮箱\n\n温馨提示\n\n之前已经注册过的邮箱不需再注册，直接去登陆界面登陆即可。\n\n# 3.4 激活邮箱\n\n温馨提示\n\n如未收到邮件，请检查垃圾箱或者点击重新发送进行尝试。\n\n# 3.6 绑定管理员\n\n温馨提示\n\n姓名和身份证号码务必与手机号码对应运营商实名登记的信息一致，否则会提示错误。\n\n绑定成功即可进入应用管理页开始创建应用。\n\n\n# 4 创建应用\n\n创建机器人。\n\n# 4.1 点击「创建机器人」\n\n# 4.2 填写资料\n\n# 4.2.1 机器人资料填写页面\n\n# 4.2.2 进入管理端\n\n资料提交成功后，即会生成appid，点击对应的应用即可跳转管理端。\n\n\n# 5. 机器人发布流程\n\n> 建议按照首页发布流程，分别完成机器人配置、开发、提交审核；审核通过并手动上线后，方可在QQ客户端添加机器人至对应场景。\n\n\n# 6. 基础信息设置\n\n> 机器人创建后首次上线前，在相关功能配置提交审核时，机器人基本信息将一并提交审核；\n> \n> 机器人首次上线后，机器人基本信息修改将单独提交审核，审核完成前其他模块不可提交审核；\n> \n> 基本信息修改限制：每月可修改5次。\n\n操作步骤：\n\n（1）点击「修改」进入编辑，完成基础信息修改\n\n（2）点击保存，扫描二维码确认保存\n\n（3）等待审核通过\n\n（4）审核通过后，前往「发布设置」，点击「上线」\n\n\n# 7. 开发场景选择\n\n> 在沙箱配置页面，不同类型开发者支持开发不同场景机器人功能\n\n可开发的场景与开发者认证身份有关，详细如下：\n\n认证身份    QQ频道   QQ群    消息列表单聊\n企业开发者   ✅      ✅      申请后可开发\n个人开发者   ✅      暂不开放   暂不开放\n\n# 7.1 配置沙箱环境\n\n> 建议开发者根据实际的需要，选择在不同场景开发机器人，完成对应场景的沙箱环境配置。配置沙箱后，开发者可在「功能配置」、「使用范围与人员」页面解锁相应场景的配置能力。\n\n沙箱频道仅可设置当前用户为频道主/管理员的频道、沙箱群仅可设置当前用户为群主/群管理员的群，且沙箱频道成员、沙箱群成员不可大于20人。\n\n温馨提示\n\n（1）配置沙箱群/频道，需要先在QQ客户端创建符合沙箱要求的QQ群/QQ频道；\n（2）在频道场景，机器人仍然保留「公域」/「私域」机器人的区分，设置为公域机器人保存确认后不可切换为私域机器人，但在「使用范围与人员」可设置公域机器人的允许添加范围：“全部用户可添加”/“仅白名单用户可添加”；\n（3）配置沙箱频道/群后，机器人会出现在沙箱频道/沙箱群的机器人列表当中。\n\n# 7.2 添加机器人至沙箱环境\n\n配置好沙箱环境后，可通过机器人资料卡将测试机器人添加进沙箱频道/沙箱群/沙箱账号，沙箱群/沙箱频道也可通过群/频道设置页的机器人列表添加机器人。\n\n# 7.2.1 添加到沙箱频道\n\n方法一：移动端点击沙箱频道封面图--\x3e选择「机器人」进入商店页--\x3e点击添加测试机器人\n\n方法二：移动端登陆管理员QQ号--\x3e扫描管理端频道机器人二维码--\x3e打开机器人资料卡--\x3e添加至频道--\x3e选择配置好的沙箱频道--\x3e确认添加\n\n温馨提示\n\n二维码可在「使用范围与人员」页面扫描。\n\n【进入私信沙箱】\n\n沙箱频道添加好测试机器人后，已经配置沙箱私信账号的QQ号，从沙箱频道打开机器人资料卡，选择私信，即进入私信沙箱环境\n\n温馨提示\n\n当账号在「沙箱配置」-「在频道私信配置」完成配置后，该账号从任意渠道进入该机器人的频道私信窗口，拉到的该机器人指令面板、基础信息资料等内容均为沙箱环境信息。\n\n# 7.2.2 添加到沙箱群\n\n方法一：移动端点击沙箱群"设置"--\x3e选择「群机器人」进入商店页--\x3e点击添加测试机器人\n\n方法二：移动端登陆管理员QQ号--\x3e扫描管理端QQ群和消息列表机器人二维码--\x3e打开机器人web资料卡--\x3e点击「添加到机器人」--\x3e跳转到native资料卡--\x3e分享到沙箱群--\x3e打开native资料卡--\x3e点击「添加到本群」--\x3e选择配置好的沙箱群--\x3e授权确认添加\n\n温馨提示\n\n二维码可在「使用范围与人员」页面扫描\n\n# 7.2.3 添加到沙箱账号消息列表\n\n移动端登陆管理员QQ号--\x3e扫描管理端QQ群和消息列表机器人二维码--\x3e打开机器人资料卡--\x3e点击"发消息"--\x3e授权确认添加--\x3e进入消息列表开启沙箱单聊对话\n\n\n# 8. 开发基础设置\n\n> 获取与配置开发所需信息\n\n# 8.1 机器人 AppID\n\n此处主要展示机器人QQ号、AppID、Token、AppSecret。\n\n温馨提示\n\n此信息不要对外传播\n\n# 8.2 回调地址\n\n在跳转h5需要OAuth的时候使用 （如机器人服务是跳转小程序，可忽略），回调地址上限为10条。\n\n# 8.3 消息URL白名单配置\n\n填写机器人下发消息中所包含的链接域名，域名需在此处提交后才可生效，域名上限为20条，每年可修改50次。\n\n温馨提示\n\n域名需提前进行 ICP 备案，并通过域名校验才可报备成功。\n\n# 8.4 频道用户意见反馈\n\n为了帮助开发者获取 C 端用户对于机器人的评价与反馈，平台在频道场景为开发者接入了"兔小巢反馈空间"，开发者可以通过创建产品反馈空间。\n\n频道用户意见反馈： 点击进入登陆后，根据提示创建产品，将会获得一个兔小巢反馈空间，C 端用户所填写的机器人反馈将同步至此空间，开发者以后可登陆此空间查看用户反馈。\n\n产品ID填写： 需要在此处填写兔小巢反馈空间的产品 ID，C 端用户的机器人反馈才可同步至此处，详细获取路径如开发者端提示：设置--\x3e产品设置--\x3e产品 ID。\n\n温馨提示\n\n兔小巢创建与使用详情可点击用户反馈空间创建攻略\n\n# 8.5 IP白名单配置\n\n为了防范接口调用安全风险，平台将支持机器人配置IP白名单。（当前只针对新增机器人默认启用ip白名单，后续会逐渐对旧的机器人进行灰度）\n\nIP白名单功能启用之后，开放平台将会在正式环境对开发者的部署IP进行限制：只有白名单IP才能连接websocket和调用OPENAPI的接口。当前IP白名单只作用于正式环境，不影响机器人在沙箱环境的使用。接口域名如下：\n\n * 获取调用凭证：https://bots.qq.com/app/getAppAccessToken 不区分正式环境、沙箱环境\n * 正式环境：https://api.sgroup.qq.com/\n * 沙箱环境：https://sandbox.api.sgroup.qq.com 沙箱环境地址只会收到在开发者平台配置的沙箱频道、沙箱私信QQ号、沙箱群、沙箱单聊QQ号的事件，且调用openapi仅能操作沙箱环境\n\n对于新增机器人，平台默认启用IP白名单功能，并限制只有填写了IP白名单才能提审和上线。\n\n温馨提示\n\nIP白名单目的是保证开发者安全，请配置有效的公网唯一IP。\n\n\n# 9. 发布设置\n\n开发者可以通过【发布设置】来配置机器人指令与服务，此处配置的指令与服务将会在C端指令面板、资料卡等处展示，以便用户与机器人快捷完成交互，后端逻辑均需通过代码开发实现。\n\n# 9.1 功能配置\n\n功能配置分为服务配置、指令配置、快捷菜单配置。其中指令面板对应C端频道、群、消息列表单聊场景下输入框“/”拉起的指令面板，指令面板的服务与指令在“服务配置”、“指令配置”页面分别操作配置；快捷菜单对应C端消息列表单聊场景下拉起的输入框下的功能面板，快捷菜单的服务与指令在同一页面下操作配置。\n\n# 9.1.1 服务配置\n\n> 消息列表单聊、群聊、频道文字子频道 “/” 指令面板与机器人资料卡「服务」所展示的供用户快捷跳转机器人服务小程序页面的功能，开发者需在管理端配置，可配置功能上限为24个。\n\n * 名称：请简单凝练的描述功能，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 介绍：请简单的对功能进行介绍，字数不超过40个中文字符或 80个英文字符，内容需符合平台运营规范。\n\n * appID：请输入小程序服务的ID号。\n\n * path：请输入小程序的路径。\n\n * extendData：请输入小程序 extendData，目前仅频道场景可用。\n   \n   * 获取频道和当前人信息 | QQ机器人文档\n\n * 权限菜单：请选择本服务是开放给所有用户还是仅针对频道主和管理员。\n\n * 使用场景：请选择该指令所需配置的用户场景，包括QQ频道、频道私信、QQ群、消息列表等共四个场景，实际所展示的可配置场景取决于当前机器人开发者的角色、所具备的场景权限和沙箱配置状态。\n\n注意\n\nextendData仅支持在频道场景下开放频道ID、子频道ID，群场景、消息列表单聊场景暂无相关字段开放； 当配置了extendData字段且使用场景同时支持频道及其他场景时，用户在非频道场景打开该服务小程序，频道ID、子频道ID返回为空。\n\n# 9.1.2 指令配置\n\n> 消息列表单聊、群聊、频道文字子频道 “/” 指令面板与机器人资料卡「指令」所展示的供用户快捷输入的指令入口，开发者需在管理端配置，可配置功能上限为24个。\n\n * 指令名：请简单凝练地描述指令，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 指令介绍：请简单的对指令进行描述，字数不超过15个中文字符或30个英文字符，内容需符合平台运营规范。\n\n * 权限菜单：请选择本指令是开放给所有用户还是仅针对频道主和管理员。\n\n * 使用场景：请选择该指令所需配置的用户场景，包括QQ频道、频道私信、QQ群、消息列表等共四个场景，实际所展示的可配置场景取决于当前机器人开发者的角色、所具备的场景权限和沙箱配置状态。\n\n开发者可添加、删减指令，管理端配置的功能顺序与 C 端机器人指令集展示的功能顺序一致，建议将常用/核心的指令前置。\n\n# 9.1.3 快捷菜单\n\n服务\n\n> 开发者需在管理端配置用于 C 端的消息列表单聊场景快捷菜单的小程序服务，可配置功能上限为12个。\n\n * 名称：请简单凝练的描述功能，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 介绍：请简单的对功能进行介绍，字数不超过40个中文字符或 80个英文字符，内容需符合平台运营规范。\n\n * appID：请输入小程序服务的ID号。\n\n * path：请输入小程序的路径。\n\n指令\n\n> 开发者需在管理端配置用于 C 端的消息列表单聊场景快捷菜单的功能指令，可配置功能上限为12个。\n\n * 指令名：请简单凝练地描述指令，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 指令介绍：请简单的对指令进行描述，字数不超过15个中文字符或30个英文字符，内容需符合平台运营规范。\n\n注意\n\n指令、服务和快捷菜单模块暂不需要单独提审，自测完成后，填写自测报告与自测报告一起提审。\n\n# 9.2 自测报告\n\n开发者需下载机器人自测报告模版，在自测频道内根据模板要求测试机器人的功能，并填写完自测报告后上传。\n\n * 自测报告：机器人自测报告模板。\n\n\n# 10. 使用范围与人员配置\n\n> 开发者可根据机器人实际运营需要控制可添加机器人至频道、群、消息列表单聊的范围。\n\n * 机器人首次上线前，开发者可配置各场景下机器人使用范围为"全量"/"白名单"，切换为白名单后需等待机器人完成首次上线审核后方可配置添加白名单。\n * 机器人首次上线后，使用范围的从"全量"切换为"白名单"无需等待审核结果，立即生效；使用范围从"白名单"切换为"全量"时需要等待审核结果。\n * 审核结果返回前，不可重复提交审核。\n * 频道白名单、群白名单、消息列表单聊用户白名单上限各20条。\n\n温馨提示\n\n * 将频道/群/消息列表单聊的使用范围设置为全量，即允许全部频道/群/用户通过机器人资料卡添加该机器人，开发者可将机器人资料卡通过链接、二维码等形式分享给频道主/群主/管理员、用户进行机器人添加\n * 频道/群/消息列表单聊的使用范围设置为白名单，即仅允许白名单内频道的频道主/管理员、群的群主/管理员、用户通过资料卡添加该机器人至对应频道群、消息列表单聊；\n * 将指定频道、群、用户从白名单删除后，并不会在C端移除机器人与该频道、群、用户的关系链，但在QQ客户端操作机器人移除后，无法再通过机器人资料卡添加该机器人，并可能影响机器人在该关系链场景的消息对话服务。\n\n\n# 11. 成员管理\n\n# 11.1 角色\n\n开发者管理端的角色共有两种：管理员和普通成员。\n\n * 管理员 ：支持修改，但仅管理员本人可操作\n * 普通成员 ：可添加最大限度为50人\n\n# 11.2 权限\n\n * 登陆权限 ：拥有该权限的成员可登陆和查看开发者管理端信息，但不可编辑。\n * 发布权限 ：拥有该权限的成员可编辑和提交服务、指令等模块。\n * 开发设置 ：拥有该权限的成员可编辑和提交回调地址、URL 模块。\n\n温馨提示\n\n登陆权限是基础权限，要拥有发布权限和开发权限的前提是拥有登陆权限\n\n\n# 12. 高阶功能\n\n# 12.1 基础消息功能\n\n【消息类型】机器人发送消息分为主动消息和被动消息：\n\n * 被动消息 ：严格的 AB 对话形式（用户艾特机器人发送 A，机器人回复 B），被动消息有效期为5分钟。\n * 主动消息 ：主动触发类型的消息，满足条件机器人主动发送（如定时提醒），主动消息无需在管理者平台进行上传审核。\n\n【主动消息限制 】\n\n * 主动消息每日每个频道限制发送20条，且仅允许在2个子频道下发主动消息。\n * 暂不开放"入群欢迎语"服务。\n * 监听事件"当机器人被添加进频道"后，限制机器人仅在1个子频道内下发主动消息。\n * 普通消息不支持图文+文本，如需配置图文+文本，可使用ark消息实现。\n\n# 12.2 Markdown能力申请\n\n * 申请方式：点击 QQ机器人消息模板能力，填写申请表进行能力申请。\n\n * 申请条件：\n   \n   * 私域机器人：已审核上架、使用目的 场景合理；\n   * 公域机器人：已审核上架、过去7天平均使用频道数达3个及以上、使用目的 场景合理。\n   * 群机器人：已审核上架、过去7天平均使用群数达3个及以上、使用目的 场景合理。\n\n * 审核周期： 每月15-20日统一审核，审核结果会进行邮件通知。\n\n机器人平台联系邮箱：QQ_Bot_API@Tencent.com',normalizedContent:'# qq 机器人\n\n\n# 简介\n\nqq 机器人通过开放的平台承载机器人的定制化功能，让开发者获得更畅快的开发体验。\n\n\n# 亮点\n\n便捷：通过开放接口的形式，qq 开放平台允许开发者进行机器人定制化开发。\n\n高效：提供一套标准化、易接入的api与websocket事件，可以帮助开发者实现机器人的快速开发和迭代。\n\n趣味：机器人创新 c 端交互方式，通过指令的方式承载服务，让多样化服务变得触手可达。\n\n赋能：频道、群、单聊等qq场景全面打通，深度融入qq社交生态，用户基础大，服务范围广。\n\n\n# 接入流程\n\n\n# 1. 阅读文档\n\n为了更高效的进驻到 qq 机器人平台，建议先阅读下列文档后再启动进驻工作：\n\n运营规范 | qq机器人文档\n\n开发说明 | qq机器人文档\n\n\n# 2. 企业主体入驻\n\n> 企业主体入驻开发者默认支持频道、群场景开发能力；个人主体入驻开发者默认仅支持频道场景开发能力。除默认开通的能力外，后续其他接口能力申请上，企业开发者与个人开发者也存在差异。\n\n# 步骤总览\n\n注意\n\n企业入驻需要提供工商信息，包括：营业执照、对公账号，如不具备的用户请前往个人入口进行入驻。 邮箱一旦填写完毕进入激活步骤，则被占用，不可修改，所以选错主体类型的用户需要更换邮箱重新注册。\n\n# 2.1 点击「立即注册」\n\n温馨提示\n\n服务的三个类目，将鼠标放上去，将会有相关应用的文档及对应便捷入口，在注册前可先阅读相关文档。\n\n# 2.2 选择企业\n\n# 2.3 填写邮箱\n\n温馨提示\n\n之前已经注册过的邮箱不需再注册，直接去登陆界面登陆即可。\n\n# 2.4 激活邮箱\n\n温馨提示\n\n如未收到邮件，请检查垃圾箱或者点击重新发送进行尝试。\n\n# 2.5 上传工商信息\n\n温馨提示\n\n请务必确认上传的营业执照与填写的主体信息保持一致，账号注册完毕，后续还存在其他主体认证步骤，信息不一致将会导致后续步骤出现问题。\n\n# 2.6 绑定管理员\n\n温馨提示\n\n姓名和身份证号码务必与手机号码对应运营商实名登记的信息一致，否则会提示错误。\n\n# 2.7 资质审核\n\n * 管理员绑定完成后账号即注册成功，进入应用管理页后，需进行后续企业资质审核步骤。\n * 此步骤可与第三步创建应用同步进行，但此步骤需尽快完成，否则会影响应用的提审。\n * 入口：点击页面提示条上的「查看详情」，即可进入详情页面查看进度。\n\n# 资质审核详细流程\n\n * 审核中-资料审核：  注册完成即自动进入工商信息审核，此步骤无需开发者操作，但请随时关注状态变更。\n\n * 审核中-待打款：  填写银行信息，点击查看详情，进入二级页面填写对公账户的银行信息，如系统没有对应【银行所在地的区】，可选择同市其他区。\n\n * 审核中-银行打款中：  如银行信息审核无误，则 3 天内腾讯公司将会对填写的对公银行账户进行 1 元以下小额打款，请关注银行收款。\n   \n   * 打款帐号主体：深圳市腾讯计算机系统有限公司，打款银行账号：755901658210820。\n\n * 审核中-校验金额：  收到打款后，请在规定时间内于开发者管理端回填收到的打款金额进行验证。\n   \n   * 金额校验次数有限，请确认收到打款后进入二级页面，填写具体的金额，如次数用完且校验不通过，该账号将被冻结。\n\n\n# 3 个人主体入驻\n\n> 企业主体入驻开发者默认支持频道、群场景开发能力；个人主体入驻开发者默认仅支持频道场景开发能力。除默认开通的能力外，后续其他接口能力申请上，企业开发者与个人开发者也存在差异。\n\n# 步骤总览\n\n# 3.1 点击「立即注册」\n\n温馨提示\n\n服务的三个类目，将鼠标放上去，将会有相关应用的文档及对应便捷入口，在注册前可先阅读相关文档。\n\n# 3.2 选择个人\n\n# 3.3 填写邮箱\n\n温馨提示\n\n之前已经注册过的邮箱不需再注册，直接去登陆界面登陆即可。\n\n# 3.4 激活邮箱\n\n温馨提示\n\n如未收到邮件，请检查垃圾箱或者点击重新发送进行尝试。\n\n# 3.6 绑定管理员\n\n温馨提示\n\n姓名和身份证号码务必与手机号码对应运营商实名登记的信息一致，否则会提示错误。\n\n绑定成功即可进入应用管理页开始创建应用。\n\n\n# 4 创建应用\n\n创建机器人。\n\n# 4.1 点击「创建机器人」\n\n# 4.2 填写资料\n\n# 4.2.1 机器人资料填写页面\n\n# 4.2.2 进入管理端\n\n资料提交成功后，即会生成appid，点击对应的应用即可跳转管理端。\n\n\n# 5. 机器人发布流程\n\n> 建议按照首页发布流程，分别完成机器人配置、开发、提交审核；审核通过并手动上线后，方可在qq客户端添加机器人至对应场景。\n\n\n# 6. 基础信息设置\n\n> 机器人创建后首次上线前，在相关功能配置提交审核时，机器人基本信息将一并提交审核；\n> \n> 机器人首次上线后，机器人基本信息修改将单独提交审核，审核完成前其他模块不可提交审核；\n> \n> 基本信息修改限制：每月可修改5次。\n\n操作步骤：\n\n（1）点击「修改」进入编辑，完成基础信息修改\n\n（2）点击保存，扫描二维码确认保存\n\n（3）等待审核通过\n\n（4）审核通过后，前往「发布设置」，点击「上线」\n\n\n# 7. 开发场景选择\n\n> 在沙箱配置页面，不同类型开发者支持开发不同场景机器人功能\n\n可开发的场景与开发者认证身份有关，详细如下：\n\n认证身份    qq频道   qq群    消息列表单聊\n企业开发者   ✅      ✅      申请后可开发\n个人开发者   ✅      暂不开放   暂不开放\n\n# 7.1 配置沙箱环境\n\n> 建议开发者根据实际的需要，选择在不同场景开发机器人，完成对应场景的沙箱环境配置。配置沙箱后，开发者可在「功能配置」、「使用范围与人员」页面解锁相应场景的配置能力。\n\n沙箱频道仅可设置当前用户为频道主/管理员的频道、沙箱群仅可设置当前用户为群主/群管理员的群，且沙箱频道成员、沙箱群成员不可大于20人。\n\n温馨提示\n\n（1）配置沙箱群/频道，需要先在qq客户端创建符合沙箱要求的qq群/qq频道；\n（2）在频道场景，机器人仍然保留「公域」/「私域」机器人的区分，设置为公域机器人保存确认后不可切换为私域机器人，但在「使用范围与人员」可设置公域机器人的允许添加范围：“全部用户可添加”/“仅白名单用户可添加”；\n（3）配置沙箱频道/群后，机器人会出现在沙箱频道/沙箱群的机器人列表当中。\n\n# 7.2 添加机器人至沙箱环境\n\n配置好沙箱环境后，可通过机器人资料卡将测试机器人添加进沙箱频道/沙箱群/沙箱账号，沙箱群/沙箱频道也可通过群/频道设置页的机器人列表添加机器人。\n\n# 7.2.1 添加到沙箱频道\n\n方法一：移动端点击沙箱频道封面图--\x3e选择「机器人」进入商店页--\x3e点击添加测试机器人\n\n方法二：移动端登陆管理员qq号--\x3e扫描管理端频道机器人二维码--\x3e打开机器人资料卡--\x3e添加至频道--\x3e选择配置好的沙箱频道--\x3e确认添加\n\n温馨提示\n\n二维码可在「使用范围与人员」页面扫描。\n\n【进入私信沙箱】\n\n沙箱频道添加好测试机器人后，已经配置沙箱私信账号的qq号，从沙箱频道打开机器人资料卡，选择私信，即进入私信沙箱环境\n\n温馨提示\n\n当账号在「沙箱配置」-「在频道私信配置」完成配置后，该账号从任意渠道进入该机器人的频道私信窗口，拉到的该机器人指令面板、基础信息资料等内容均为沙箱环境信息。\n\n# 7.2.2 添加到沙箱群\n\n方法一：移动端点击沙箱群"设置"--\x3e选择「群机器人」进入商店页--\x3e点击添加测试机器人\n\n方法二：移动端登陆管理员qq号--\x3e扫描管理端qq群和消息列表机器人二维码--\x3e打开机器人web资料卡--\x3e点击「添加到机器人」--\x3e跳转到native资料卡--\x3e分享到沙箱群--\x3e打开native资料卡--\x3e点击「添加到本群」--\x3e选择配置好的沙箱群--\x3e授权确认添加\n\n温馨提示\n\n二维码可在「使用范围与人员」页面扫描\n\n# 7.2.3 添加到沙箱账号消息列表\n\n移动端登陆管理员qq号--\x3e扫描管理端qq群和消息列表机器人二维码--\x3e打开机器人资料卡--\x3e点击"发消息"--\x3e授权确认添加--\x3e进入消息列表开启沙箱单聊对话\n\n\n# 8. 开发基础设置\n\n> 获取与配置开发所需信息\n\n# 8.1 机器人 appid\n\n此处主要展示机器人qq号、appid、token、appsecret。\n\n温馨提示\n\n此信息不要对外传播\n\n# 8.2 回调地址\n\n在跳转h5需要oauth的时候使用 （如机器人服务是跳转小程序，可忽略），回调地址上限为10条。\n\n# 8.3 消息url白名单配置\n\n填写机器人下发消息中所包含的链接域名，域名需在此处提交后才可生效，域名上限为20条，每年可修改50次。\n\n温馨提示\n\n域名需提前进行 icp 备案，并通过域名校验才可报备成功。\n\n# 8.4 频道用户意见反馈\n\n为了帮助开发者获取 c 端用户对于机器人的评价与反馈，平台在频道场景为开发者接入了"兔小巢反馈空间"，开发者可以通过创建产品反馈空间。\n\n频道用户意见反馈： 点击进入登陆后，根据提示创建产品，将会获得一个兔小巢反馈空间，c 端用户所填写的机器人反馈将同步至此空间，开发者以后可登陆此空间查看用户反馈。\n\n产品id填写： 需要在此处填写兔小巢反馈空间的产品 id，c 端用户的机器人反馈才可同步至此处，详细获取路径如开发者端提示：设置--\x3e产品设置--\x3e产品 id。\n\n温馨提示\n\n兔小巢创建与使用详情可点击用户反馈空间创建攻略\n\n# 8.5 ip白名单配置\n\n为了防范接口调用安全风险，平台将支持机器人配置ip白名单。（当前只针对新增机器人默认启用ip白名单，后续会逐渐对旧的机器人进行灰度）\n\nip白名单功能启用之后，开放平台将会在正式环境对开发者的部署ip进行限制：只有白名单ip才能连接websocket和调用openapi的接口。当前ip白名单只作用于正式环境，不影响机器人在沙箱环境的使用。接口域名如下：\n\n * 获取调用凭证：https://bots.qq.com/app/getappaccesstoken 不区分正式环境、沙箱环境\n * 正式环境：https://api.sgroup.qq.com/\n * 沙箱环境：https://sandbox.api.sgroup.qq.com 沙箱环境地址只会收到在开发者平台配置的沙箱频道、沙箱私信qq号、沙箱群、沙箱单聊qq号的事件，且调用openapi仅能操作沙箱环境\n\n对于新增机器人，平台默认启用ip白名单功能，并限制只有填写了ip白名单才能提审和上线。\n\n温馨提示\n\nip白名单目的是保证开发者安全，请配置有效的公网唯一ip。\n\n\n# 9. 发布设置\n\n开发者可以通过【发布设置】来配置机器人指令与服务，此处配置的指令与服务将会在c端指令面板、资料卡等处展示，以便用户与机器人快捷完成交互，后端逻辑均需通过代码开发实现。\n\n# 9.1 功能配置\n\n功能配置分为服务配置、指令配置、快捷菜单配置。其中指令面板对应c端频道、群、消息列表单聊场景下输入框“/”拉起的指令面板，指令面板的服务与指令在“服务配置”、“指令配置”页面分别操作配置；快捷菜单对应c端消息列表单聊场景下拉起的输入框下的功能面板，快捷菜单的服务与指令在同一页面下操作配置。\n\n# 9.1.1 服务配置\n\n> 消息列表单聊、群聊、频道文字子频道 “/” 指令面板与机器人资料卡「服务」所展示的供用户快捷跳转机器人服务小程序页面的功能，开发者需在管理端配置，可配置功能上限为24个。\n\n * 名称：请简单凝练的描述功能，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 介绍：请简单的对功能进行介绍，字数不超过40个中文字符或 80个英文字符，内容需符合平台运营规范。\n\n * appid：请输入小程序服务的id号。\n\n * path：请输入小程序的路径。\n\n * extenddata：请输入小程序 extenddata，目前仅频道场景可用。\n   \n   * 获取频道和当前人信息 | qq机器人文档\n\n * 权限菜单：请选择本服务是开放给所有用户还是仅针对频道主和管理员。\n\n * 使用场景：请选择该指令所需配置的用户场景，包括qq频道、频道私信、qq群、消息列表等共四个场景，实际所展示的可配置场景取决于当前机器人开发者的角色、所具备的场景权限和沙箱配置状态。\n\n注意\n\nextenddata仅支持在频道场景下开放频道id、子频道id，群场景、消息列表单聊场景暂无相关字段开放； 当配置了extenddata字段且使用场景同时支持频道及其他场景时，用户在非频道场景打开该服务小程序，频道id、子频道id返回为空。\n\n# 9.1.2 指令配置\n\n> 消息列表单聊、群聊、频道文字子频道 “/” 指令面板与机器人资料卡「指令」所展示的供用户快捷输入的指令入口，开发者需在管理端配置，可配置功能上限为24个。\n\n * 指令名：请简单凝练地描述指令，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 指令介绍：请简单的对指令进行描述，字数不超过15个中文字符或30个英文字符，内容需符合平台运营规范。\n\n * 权限菜单：请选择本指令是开放给所有用户还是仅针对频道主和管理员。\n\n * 使用场景：请选择该指令所需配置的用户场景，包括qq频道、频道私信、qq群、消息列表等共四个场景，实际所展示的可配置场景取决于当前机器人开发者的角色、所具备的场景权限和沙箱配置状态。\n\n开发者可添加、删减指令，管理端配置的功能顺序与 c 端机器人指令集展示的功能顺序一致，建议将常用/核心的指令前置。\n\n# 9.1.3 快捷菜单\n\n服务\n\n> 开发者需在管理端配置用于 c 端的消息列表单聊场景快捷菜单的小程序服务，可配置功能上限为12个。\n\n * 名称：请简单凝练的描述功能，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 介绍：请简单的对功能进行介绍，字数不超过40个中文字符或 80个英文字符，内容需符合平台运营规范。\n\n * appid：请输入小程序服务的id号。\n\n * path：请输入小程序的路径。\n\n指令\n\n> 开发者需在管理端配置用于 c 端的消息列表单聊场景快捷菜单的功能指令，可配置功能上限为12个。\n\n * 指令名：请简单凝练地描述指令，字数不超过8个中文字符或 16个英文字符，内容需符合平台运营规范。\n\n * 指令介绍：请简单的对指令进行描述，字数不超过15个中文字符或30个英文字符，内容需符合平台运营规范。\n\n注意\n\n指令、服务和快捷菜单模块暂不需要单独提审，自测完成后，填写自测报告与自测报告一起提审。\n\n# 9.2 自测报告\n\n开发者需下载机器人自测报告模版，在自测频道内根据模板要求测试机器人的功能，并填写完自测报告后上传。\n\n * 自测报告：机器人自测报告模板。\n\n\n# 10. 使用范围与人员配置\n\n> 开发者可根据机器人实际运营需要控制可添加机器人至频道、群、消息列表单聊的范围。\n\n * 机器人首次上线前，开发者可配置各场景下机器人使用范围为"全量"/"白名单"，切换为白名单后需等待机器人完成首次上线审核后方可配置添加白名单。\n * 机器人首次上线后，使用范围的从"全量"切换为"白名单"无需等待审核结果，立即生效；使用范围从"白名单"切换为"全量"时需要等待审核结果。\n * 审核结果返回前，不可重复提交审核。\n * 频道白名单、群白名单、消息列表单聊用户白名单上限各20条。\n\n温馨提示\n\n * 将频道/群/消息列表单聊的使用范围设置为全量，即允许全部频道/群/用户通过机器人资料卡添加该机器人，开发者可将机器人资料卡通过链接、二维码等形式分享给频道主/群主/管理员、用户进行机器人添加\n * 频道/群/消息列表单聊的使用范围设置为白名单，即仅允许白名单内频道的频道主/管理员、群的群主/管理员、用户通过资料卡添加该机器人至对应频道群、消息列表单聊；\n * 将指定频道、群、用户从白名单删除后，并不会在c端移除机器人与该频道、群、用户的关系链，但在qq客户端操作机器人移除后，无法再通过机器人资料卡添加该机器人，并可能影响机器人在该关系链场景的消息对话服务。\n\n\n# 11. 成员管理\n\n# 11.1 角色\n\n开发者管理端的角色共有两种：管理员和普通成员。\n\n * 管理员 ：支持修改，但仅管理员本人可操作\n * 普通成员 ：可添加最大限度为50人\n\n# 11.2 权限\n\n * 登陆权限 ：拥有该权限的成员可登陆和查看开发者管理端信息，但不可编辑。\n * 发布权限 ：拥有该权限的成员可编辑和提交服务、指令等模块。\n * 开发设置 ：拥有该权限的成员可编辑和提交回调地址、url 模块。\n\n温馨提示\n\n登陆权限是基础权限，要拥有发布权限和开发权限的前提是拥有登陆权限\n\n\n# 12. 高阶功能\n\n# 12.1 基础消息功能\n\n【消息类型】机器人发送消息分为主动消息和被动消息：\n\n * 被动消息 ：严格的 ab 对话形式（用户艾特机器人发送 a，机器人回复 b），被动消息有效期为5分钟。\n * 主动消息 ：主动触发类型的消息，满足条件机器人主动发送（如定时提醒），主动消息无需在管理者平台进行上传审核。\n\n【主动消息限制 】\n\n * 主动消息每日每个频道限制发送20条，且仅允许在2个子频道下发主动消息。\n * 暂不开放"入群欢迎语"服务。\n * 监听事件"当机器人被添加进频道"后，限制机器人仅在1个子频道内下发主动消息。\n * 普通消息不支持图文+文本，如需配置图文+文本，可使用ark消息实现。\n\n# 12.2 markdown能力申请\n\n * 申请方式：点击 qq机器人消息模板能力，填写申请表进行能力申请。\n\n * 申请条件：\n   \n   * 私域机器人：已审核上架、使用目的 场景合理；\n   * 公域机器人：已审核上架、过去7天平均使用频道数达3个及以上、使用目的 场景合理。\n   * 群机器人：已审核上架、过去7天平均使用群数达3个及以上、使用目的 场景合理。\n\n * 审核周期： 每月15-20日统一审核，审核结果会进行邮件通知。\n\n机器人平台联系邮箱：qq_bot_api@tencent.com',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"账号注册",frontmatter:{},regularPath:"/develop/api-v2/",relativePath:"develop/api-v2/README.md",key:"v-a11afcc4",path:"/develop/api-v2/",lastUpdated:"11/20/2024, 3:40:09 AM",lastUpdatedTimestamp:1732074009e3,headersStr:null,content:"# 账号注册\n\nQQ 机器人：一个机器人可以被添加到 群聊/频道 内对话，QQ 用户也可以直接跟机器人 单独对话。\n\n开发者账号主体要求：\n\n * 单聊对话：【定向邀请】\n * 群聊场景：仅支持企业主体【个人主体暂不支持】\n * 频道场景：企业主体与个人主体均可申请\n\n注册地址：QQ 开放平台\n\n注册创建机器人后：获得的开发机器人接入票据 AppID AppSecret Token\n\n名称          描述          备注\nAppID       机器人 ID      必须使用\nAppSecret   机器人密钥       用于在 oauth 场景进行请求签名的密钥\nToken       机器人 Token   可用于调用开放接口的鉴权，建议使用更安全的 access token 的鉴权方式\n\n开发过程中如遇任何问题，可联系QQ机器人反馈助手开通。\n\n快速搭建机器人服务端请参考：botgo sdk",normalizedContent:"# 账号注册\n\nqq 机器人：一个机器人可以被添加到 群聊/频道 内对话，qq 用户也可以直接跟机器人 单独对话。\n\n开发者账号主体要求：\n\n * 单聊对话：【定向邀请】\n * 群聊场景：仅支持企业主体【个人主体暂不支持】\n * 频道场景：企业主体与个人主体均可申请\n\n注册地址：qq 开放平台\n\n注册创建机器人后：获得的开发机器人接入票据 appid appsecret token\n\n名称          描述          备注\nappid       机器人 id      必须使用\nappsecret   机器人密钥       用于在 oauth 场景进行请求签名的密钥\ntoken       机器人 token   可用于调用开放接口的鉴权，建议使用更安全的 access token 的鉴权方式\n\n开发过程中如遇任何问题，可联系qq机器人反馈助手开通。\n\n快速搭建机器人服务端请参考：botgo sdk",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"基础消息对话",frontmatter:{},regularPath:"/develop/api-v2/client-func/intro/baseinfo.html",relativePath:"develop/api-v2/client-func/intro/baseinfo.md",key:"v-d8f6f926",path:"/develop/api-v2/client-func/intro/baseinfo.html",headers:[{level:2,title:"对话场景",slug:"对话场景",normalizedTitle:"对话场景",charIndex:13},{level:2,title:"消息类型",slug:"消息类型",normalizedTitle:"消息类型",charIndex:86},{level:2,title:"指令面板",slug:"指令面板",normalizedTitle:"指令面板",charIndex:227},{level:2,title:"自定义菜单",slug:"自定义菜单",normalizedTitle:"自定义菜单",charIndex:303},{level:2,title:"消息交互",slug:"消息交互",normalizedTitle:"消息交互",charIndex:371}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"对话场景 消息类型 指令面板 自定义菜单 消息交互",content:"# 基础消息对话\n\n\n# 对话场景\n\n说明\n\n机器人可以被添加各种聊天场景下\n\n单聊   群聊   文字子频道   频道私信\n                  \n\n\n# 消息类型\n\n说明\n\n在对话场景里面可以使用的消息类型，以下消息类型均涉及，详情请参考服务端接口=>消息类型章节。\n\n * 文本\n * 表情\n * 图片\n * 图文\n * 视频\n * 语音\n * 文件\n * Ark 消息\n * Embed 消息\n * Markdown 消息\n\n\n# 指令面板\n\n说明\n\n输入 / 或者 @机器人，唤起的一个操作面板，开发者可在机器人管理端自定义设置展示内容和点击动作。\n\n/   @\n    \n\n\n# 自定义菜单\n\n说明\n\n在单聊场景下有一个'快捷菜单'面板，开发者可在机器人管理端自定义设置里面的按钮内容和按钮动作。\n\n单聊\n\n\n\n# 消息交互\n\n说明\n\n在各种消息场景内，开发者可在消息体上实现自定义一些与用户的交互方式。\n\n消息按钮   文字链\n       ",normalizedContent:"# 基础消息对话\n\n\n# 对话场景\n\n说明\n\n机器人可以被添加各种聊天场景下\n\n单聊   群聊   文字子频道   频道私信\n                  \n\n\n# 消息类型\n\n说明\n\n在对话场景里面可以使用的消息类型，以下消息类型均涉及，详情请参考服务端接口=>消息类型章节。\n\n * 文本\n * 表情\n * 图片\n * 图文\n * 视频\n * 语音\n * 文件\n * ark 消息\n * embed 消息\n * markdown 消息\n\n\n# 指令面板\n\n说明\n\n输入 / 或者 @机器人，唤起的一个操作面板，开发者可在机器人管理端自定义设置展示内容和点击动作。\n\n/   @\n    \n\n\n# 自定义菜单\n\n说明\n\n在单聊场景下有一个'快捷菜单'面板，开发者可在机器人管理端自定义设置里面的按钮内容和按钮动作。\n\n单聊\n\n\n\n# 消息交互\n\n说明\n\n在各种消息场景内，开发者可在消息体上实现自定义一些与用户的交互方式。\n\n消息按钮   文字链\n       ",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"资料卡与设置",frontmatter:{},regularPath:"/develop/api-v2/client-func/intro/datacard.html",relativePath:"develop/api-v2/client-func/intro/datacard.md",key:"v-6edd88e6",path:"/develop/api-v2/client-func/intro/datacard.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 资料卡与设置\n\n说明\n\n在机器人资料页里，包含有基本介绍展示、服务跳转、指令介绍与使用、基本设置、添加删除机器人等功能。\n\n * 功能介绍\n * 服务与指令\n * 设置相关\n * 添加使用",normalizedContent:"# 资料卡与设置\n\n说明\n\n在机器人资料页里，包含有基本介绍展示、服务跳转、指令介绍与使用、基本设置、添加删除机器人等功能。\n\n * 功能介绍\n * 服务与指令\n * 设置相关\n * 添加使用",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"错误与调试",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/error-trace/",relativePath:"develop/api-v2/dev-prepare/error-trace/README.md",key:"v-3ac09f7e",path:"/develop/api-v2/dev-prepare/error-trace/",headers:[{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:12},{level:2,title:"有关 traceID",slug:"有关-traceid",normalizedTitle:"有关 traceid",charIndex:20}],lastUpdated:"12/20/2023, 8:46:30 AM",lastUpdatedTimestamp:170306199e4,headersStr:"错误码 有关 traceID",content:"# 错误与调试\n\n\n# 错误码\n\n\n# 有关 traceID\n\n在 openapi 的返回 http 头上，有一个 X-Tps-trace-ID 自定义头部，是平台的链路追踪 ID，如果开发者有无法自己定位的问题，需要找平台协助的时候，可以提取这个 ID，提交给平台方。\n\n方便查询相关日志。",normalizedContent:"# 错误与调试\n\n\n# 错误码\n\n\n# 有关 traceid\n\n在 openapi 的返回 http 头上，有一个 x-tps-trace-id 自定义头部，是平台的链路追踪 id，如果开发者有无法自己定位的问题，需要找平台协助的时候，可以提取这个 id，提交给平台方。\n\n方便查询相关日志。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"openapi",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/error-trace/openapi.html",relativePath:"develop/api-v2/dev-prepare/error-trace/openapi.md",key:"v-28a0c253",path:"/develop/api-v2/dev-prepare/error-trace/openapi.html",headers:[{level:3,title:"错误码介绍",slug:"错误码介绍",normalizedTitle:"错误码介绍",charIndex:14},{level:3,title:"HTTP状态码",slug:"http状态码",normalizedTitle:"http状态码",charIndex:196},{level:3,title:"平台接口错误码",slug:"平台接口错误码",normalizedTitle:"平台接口错误码",charIndex:416}],lastUpdated:"3/12/2024, 12:37:56 PM",lastUpdatedTimestamp:1710247076e3,headersStr:"错误码介绍 HTTP状态码 平台接口错误码",content:'# openapi\n\n\n# 错误码介绍\n\n错误码分为两部分：\n\n * http status code 2XX / 4XX / 5XX\n * http responese body: {code: "", message: ""} 具体业务返回码\n\n说明\n\n当 http code 不是 2XX 的时候，http 的 responese body 中还会有平台的错误码信息。\n\n如：\n\n\n# HTTP状态码\n\n值         含义\n200       成功\n204       成功，但是无包体，一般用于删除操作\n201,202   异步操作成功，虽然说成功，但是会返回一个 error body，需要特殊处理\n401       认证失败\n404       未找到 API\n405       http method 不允许\n429       频率限制\n500       处理失败\n504       处理失败\n\n\n# 平台接口错误码\n\n值                 含义\n10001             UnknownAccount 账号异常\n10003             UnknownChannel 子频道异常\n10004             UnknownGuild 频道异常\n11281             ErrorCheckAdminFailed 检查是否是管理员失败，系统错误，一般重试一次会好，最多只能重试一次\n11282             ErrorCheckAdminNotPass\n                  检查是否是管理员未通过，该接口需要管理员权限，但是用户在添加机器人的时候并未授予该权限，属于逻辑错误，可以提示用户进行授权\n11251             ErrorWrongAppid 参数中的 appid 错误，开发者填的 token 错误，appid 无法识别\n11252             ErrorCheckAppPrivilegeFailed 检查应用权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11253             ErrorCheckAppPrivilegeNotPass\n                  检查应用权限不通过，该机器人应用未获得调用该接口的权限，需要向平台申请\n11254             ErrorInterfaceForbidden 应用接口被封禁，该机器人虽然获得了该接口权限，但是被封禁了。\n11261             ErrorWrongAppid 参数中缺少 appid，同 11251\n11262             ErrorCheckRobot 当前接口不支持使用机器人 Bot Token 调用\n11263             ErrorCheckGuildAuth 检查频道权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11264             ErrorGuildAuthNotPass\n                  检查小站权限未通过，管理员添加机器人的时候未授予该接口权限，属于逻辑错误，可提示用户进行授权，如果已经给予授权，请检查传递的\n                  guild id 是否正确\n11265             ErrorRobotHasBaned 机器人已经被封禁\n11241             ErrorWrongToken 参数中缺少 token\n11242             ErrorCheckTokenFailed 校验 token 失败，系统错误，一般重试一次会好，最多只能重试一次\n11243             ErrorCheckTokenNotPass 校验 token 未通过，用户填充的 token 错误，需要开发者进行检查\n11273             ErrorCheckUserAuth 检查用户权限失败，当前接口不支持使用 Bearer Token 调用\n11274             ErrorUserAuthNotPass 检查用户权限未通过，用户 OAuth\n                  授权时未给与该接口权限，可提示用户重新进行授权\n11275             ErrorWrongAppid 无 appid ，同 11251\n11301             ErrorGetHTTPHeader HTTP Header 无效\n11302             ErrorGetHeaderUIN HTTP Header 无效\n11303             ErrorGetNick 获取昵称失败\n11304             ErrorGetAvatar 获取头像失败\n11305             ErrorGetGuildID 获取频道 ID 失败\n11306             ErrorGetGuildInfo 获取频道信息失败\n12001             ReplaceIDFailed 替换 id 失败\n12002             RequestInvalid 请求体错误\n12003             ResponseInvalid 回包错误\n20028             ChannelHitWriteRateLimit 子频道消息触发限频\n50006             CannotSendEmptyMessage 消息为空\n50035             InvalidFormBody form-data 内容异常\n50037             带有markdown消息只支持 markdown 或者 keyboard 组合\n50038             非同频道同子频道\n50039             获取消息失败\n50040             消息模版类型错误\n50041             markdown 有空值\n50042             markdown 列表长达最大值\n50043             guild_id 转换失败\n50045             不能回复机器人自己产生的消息\n50046             非 at 机器人消息\n50047             非机器人产生的消息 或者 at 机器人消息\n50048             message id 不能为空\n50049             只能修改含有 keyboard 元素的消息\n50050             修改消息时，keyboard 元素不能为空\n50051             只能修改机器人自己发送的消息\n50053             修改消息错误\n50054             markdown 模版参数错误\n50055             无效的 markdown content\n50056             不允许发送 markdown content\n50057             markdown 参数只支持原生语法或者模版二选一\n301000~301099     子频道权限错误\n301000            参数错误\n301001            查询频道信息错误\n301002            查询子频道权限错误\n301003            修改子频道权限错误\n301004            私密子频道关联的人数到达上限\n301005            调用 Rpc 服务失败\n301006            非群成员没有查询权限\n301007            参数超过数量限制\n302000            参数错误\n302001            查询频道信息错误\n302002            查询日程列表失败\n302003            查询日程失败\n302004            修改日程失败\n302005            删除日程失败\n302006            创建日程失败\n302007            获取创建者信息失败\n302008            子频道 ID 不能为空\n302009            频道系统错误，请联系客服\n302010            暂无修改日程权限\n302011            日程活动已被删除\n302012            每天只能创建 10 个日程，明天再来吧！\n302013            创建日程触发安全打击\n302014            日程持续时间超过 7 天，请重新选择\n302015            开始时间不能早于当前时间\n302016            结束时间不能早于开始时间\n302017            Schedule 对象为空\n302018            参数类型转换失败\n302019            调用下游失败，请联系客服\n302020            日程内容违规、账号违规\n302021            频道内当日新增活动达上限\n302022            不能绑定非当前频道的子频道\n302023            开始时跳转不可绑定日程子频道\n302024            绑定的子频道不存在\n304003            URL_NOT_ALLOWED url 未报备\n304004            ARK_NOT_ALLOWED 没有发 ark 消息权限\n304005            EMBED_LIMIT embed 长度超限\n304006            SERVER_CONFIG 后台配置错误\n304007            GET_GUILD 查询频道异常\n304008            GET_BOT 查询机器人异常\n304009            GET_CHENNAL 查询子频道异常\n304010            CHANGE_IMAGE_URL 图片转存错误\n304011            NO_TEMPLATE 模板不存在\n304012            GET_TEMPLATE 取模板错误\n304014            TEMPLATE_PRIVILEGE 没有模板权限\n304016            SEND_ERROR 发消息错误\n304017            UPLOAD_IMAGE 图片上传错误\n304018            SESSION_NOT_EXIST 机器人没连上 gateway\n304019            AT_EVERYONE_TIMES @全体成员 次数超限\n304020            FILE_SIZE 文件大小超限\n304021            GET_FILE 下载文件错误\n304022            PUSH_TIME 推送消息时间限制\n304023            PUSH_MSG_ASYNC_OK 推送消息异步调用成功, 等待人工审核\n304024            REPLY_MSG_ASYNC_OK 回复消息异步调用成功, 等待人工审核\n304025            BEAT 消息被打击\n304026            MSG_ID 回复的消息 id 错误\n304027            MSG_EXPIRE 回复的消息过期\n304028            MSG_PROTECT 非 At 当前用户的消息不允许回复\n304029            CORPUS_ERROR 调语料服务错误\n304030            CORPUS_NOT_MATCH 语料不匹配\n304031            私信已关闭\n304032            私信不存在\n304033            拉私信错误\n304034            不是私信成员\n304035            推送消息超过子频道数量限制\n304036            没有 markdown 模板的权限\n304037            没有发消息按钮组件的权限\n304038            消息按钮组件不存在\n304039            消息按钮组件解析错误\n304040            消息按钮组件消息内容错误\n304044            取消息设置错误\n304045            子频道主动消息数限频\n304046            不允许在此子频道发主动消息\n304047            主动消息推送超过限制的子频道数\n304048            不允许在此频道发主动消息\n304049            私信主动消息数限频\n304050            私信主动消息总量限频\n304051            消息设置引导请求构造错误\n304052            发消息设置引导超频\n306001            param invalid 撤回消息参数错误\n306002            msgid error 消息 id 错误\n306003            fail to get message 获取消息错误(可重试)\n306004            no permission to delete message 没有撤回此消息的权限\n306005            retract message error 消息撤回失败(可重试)\n306006            fail to get channel 获取子频道失败(可重试)\n306007            非当前群的消息\n306008            非当前机器人发送的消息\n306009            非与当前用户发送的消息\n306010            内部错误\n306011            超出可撤回消息时间\n501000~501999     公告错误\n501001            参数校验失败\n501002            创建子频道公告失败(可重试)\n501003            删除子频道公告失败(可重试)\n501004            获取频道信息失败(可重试)\n501005            MessageID 错误\n501006            创建频道全局公告失败(可重试)\n501007            删除频道全局公告失败(可重试)\n501008            MessageID 不存在\n501009            MessageID 解析失败\n501010            此条消息非子频道内消息\n501011            创建精华消息失败(可重试)\n501012            删除精华消息失败(可重试)\n501013            精华消息超过最大数量\n501014            安全打击\n501015            此消息不允许设置\n501016            频道公告子频道推荐超过最大数量\n501017            非频道主或管理员\n501018            推荐子频道 ID 无效\n501019            公告类型错误\n501020            创建推荐子频道类型频道公告失败\n502000~502099     禁言相关错误\n502001            频道 id 无效\n502002            频道 id 为空\n502003            用户 id 无效\n502004            用户 id 为空\n502005            timestamp 不合法\n502006            timestamp 无效\n502007            参数转换错误\n502008            rpc 调用失败\n502009            安全打击\n502010            请求头错误\n503001            频道 id 无效\n503002            频道 id 为空\n503003            获取子频道信息失败\n503004            超出发布帖子的频次限制\n503005            帖子标题为空\n503006            帖子内容为空\n503007            帖子ID为空\n503008            获取X-Uin失败\n503009            帖子ID无效或不合法\n503010            通过Uin获取TinyID失败\n503011            帖子ID里面的时间戳无效或不合法\n503012            帖子不存在或已删除\n503013            服务器内部错误\n503014            帖子JSON内容解析失败\n503015            帖子内容转换失败\n503016            链接数量超过限制\n503017            字数超过限制\n503018            图片数量超过限制\n503019            视频数量超过限制\n503020            标题长度超过限制\n504000~504999     消息频率相关错误\n504001            请求参数无效错误\n504002            获取 HTTP 头失败\n504003            获取 BOT UIN 错误\n504004            获取消息频率设置信息错误\n610000-619999     频道权限错误 ~~\n610001            获取频道 ID 失败\n610002            获取 HTTP 头失败\n610003            获取机器人号码失败\n610004            获取机器人角色失败\n610005            获取机器人角色内部错误\n610006            拉取机器人权限列表失败\n610007            机器人不在频道内\n610008            无效参数\n610009            获取 API 接口详情失败\n610010            API 接口已授权\n610011            获取机器人信息失败\n610012            限频失败\n610013            已限频\n610014            api 授权链接发送失败\n620001-629999     表情表态错误\n620001            表情表态无效参数\n620002            已经达到表情反应的类型数量上限\n620003            已经设置过该表情表态\n620004            没有设置过该表情表态\n620005            没有权限设置表情表态\n620006            操作限频\n620007            表情表态操作失败，请重试\n630001-639999     互动回调数据更新\n630001            互动回调数据更新无效参数\n630002            互动回调数据更新获取AppID失败\n630003            互动回调数据AppID不匹配\n630004            互动回调数据更新内部存储错误\n630005            互动回调数据更新内部存储读取错误\n630006            互动回调数据更新读取请求AppID失败\n630007            互动回调数据太大\n1000000~2999999   发消息错误\n1100100           安全打击：消息被限频\n1100101           安全打击：内容涉及敏感，请返回修改\n1100102           安全打击：抱歉，暂未获得新功能体验资格\n1100103           安全打击\n1100104           安全打击：该群已失效或当前群已不存在\n1100300           系统内部错误\n1100301           调用方不是群成员\n1100302           获取指定频道名称失败\n1100303           主页频道非管理员不允许发消息\n1100304           @次数鉴权失败\n1100305           TinyId 转换 Uin 失败\n1100306           非私有频道成员\n1100307           非白名单应用子频道\n1100308           触发频道内限频\n1100499           其他错误\n3000000~3999999   编辑消息错误\n3300006           安全打击',normalizedContent:'# openapi\n\n\n# 错误码介绍\n\n错误码分为两部分：\n\n * http status code 2xx / 4xx / 5xx\n * http responese body: {code: "", message: ""} 具体业务返回码\n\n说明\n\n当 http code 不是 2xx 的时候，http 的 responese body 中还会有平台的错误码信息。\n\n如：\n\n\n# http状态码\n\n值         含义\n200       成功\n204       成功，但是无包体，一般用于删除操作\n201,202   异步操作成功，虽然说成功，但是会返回一个 error body，需要特殊处理\n401       认证失败\n404       未找到 api\n405       http method 不允许\n429       频率限制\n500       处理失败\n504       处理失败\n\n\n# 平台接口错误码\n\n值                 含义\n10001             unknownaccount 账号异常\n10003             unknownchannel 子频道异常\n10004             unknownguild 频道异常\n11281             errorcheckadminfailed 检查是否是管理员失败，系统错误，一般重试一次会好，最多只能重试一次\n11282             errorcheckadminnotpass\n                  检查是否是管理员未通过，该接口需要管理员权限，但是用户在添加机器人的时候并未授予该权限，属于逻辑错误，可以提示用户进行授权\n11251             errorwrongappid 参数中的 appid 错误，开发者填的 token 错误，appid 无法识别\n11252             errorcheckappprivilegefailed 检查应用权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11253             errorcheckappprivilegenotpass\n                  检查应用权限不通过，该机器人应用未获得调用该接口的权限，需要向平台申请\n11254             errorinterfaceforbidden 应用接口被封禁，该机器人虽然获得了该接口权限，但是被封禁了。\n11261             errorwrongappid 参数中缺少 appid，同 11251\n11262             errorcheckrobot 当前接口不支持使用机器人 bot token 调用\n11263             errorcheckguildauth 检查频道权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11264             errorguildauthnotpass\n                  检查小站权限未通过，管理员添加机器人的时候未授予该接口权限，属于逻辑错误，可提示用户进行授权，如果已经给予授权，请检查传递的\n                  guild id 是否正确\n11265             errorrobothasbaned 机器人已经被封禁\n11241             errorwrongtoken 参数中缺少 token\n11242             errorchecktokenfailed 校验 token 失败，系统错误，一般重试一次会好，最多只能重试一次\n11243             errorchecktokennotpass 校验 token 未通过，用户填充的 token 错误，需要开发者进行检查\n11273             errorcheckuserauth 检查用户权限失败，当前接口不支持使用 bearer token 调用\n11274             erroruserauthnotpass 检查用户权限未通过，用户 oauth\n                  授权时未给与该接口权限，可提示用户重新进行授权\n11275             errorwrongappid 无 appid ，同 11251\n11301             errorgethttpheader http header 无效\n11302             errorgetheaderuin http header 无效\n11303             errorgetnick 获取昵称失败\n11304             errorgetavatar 获取头像失败\n11305             errorgetguildid 获取频道 id 失败\n11306             errorgetguildinfo 获取频道信息失败\n12001             replaceidfailed 替换 id 失败\n12002             requestinvalid 请求体错误\n12003             responseinvalid 回包错误\n20028             channelhitwriteratelimit 子频道消息触发限频\n50006             cannotsendemptymessage 消息为空\n50035             invalidformbody form-data 内容异常\n50037             带有markdown消息只支持 markdown 或者 keyboard 组合\n50038             非同频道同子频道\n50039             获取消息失败\n50040             消息模版类型错误\n50041             markdown 有空值\n50042             markdown 列表长达最大值\n50043             guild_id 转换失败\n50045             不能回复机器人自己产生的消息\n50046             非 at 机器人消息\n50047             非机器人产生的消息 或者 at 机器人消息\n50048             message id 不能为空\n50049             只能修改含有 keyboard 元素的消息\n50050             修改消息时，keyboard 元素不能为空\n50051             只能修改机器人自己发送的消息\n50053             修改消息错误\n50054             markdown 模版参数错误\n50055             无效的 markdown content\n50056             不允许发送 markdown content\n50057             markdown 参数只支持原生语法或者模版二选一\n301000~301099     子频道权限错误\n301000            参数错误\n301001            查询频道信息错误\n301002            查询子频道权限错误\n301003            修改子频道权限错误\n301004            私密子频道关联的人数到达上限\n301005            调用 rpc 服务失败\n301006            非群成员没有查询权限\n301007            参数超过数量限制\n302000            参数错误\n302001            查询频道信息错误\n302002            查询日程列表失败\n302003            查询日程失败\n302004            修改日程失败\n302005            删除日程失败\n302006            创建日程失败\n302007            获取创建者信息失败\n302008            子频道 id 不能为空\n302009            频道系统错误，请联系客服\n302010            暂无修改日程权限\n302011            日程活动已被删除\n302012            每天只能创建 10 个日程，明天再来吧！\n302013            创建日程触发安全打击\n302014            日程持续时间超过 7 天，请重新选择\n302015            开始时间不能早于当前时间\n302016            结束时间不能早于开始时间\n302017            schedule 对象为空\n302018            参数类型转换失败\n302019            调用下游失败，请联系客服\n302020            日程内容违规、账号违规\n302021            频道内当日新增活动达上限\n302022            不能绑定非当前频道的子频道\n302023            开始时跳转不可绑定日程子频道\n302024            绑定的子频道不存在\n304003            url_not_allowed url 未报备\n304004            ark_not_allowed 没有发 ark 消息权限\n304005            embed_limit embed 长度超限\n304006            server_config 后台配置错误\n304007            get_guild 查询频道异常\n304008            get_bot 查询机器人异常\n304009            get_chennal 查询子频道异常\n304010            change_image_url 图片转存错误\n304011            no_template 模板不存在\n304012            get_template 取模板错误\n304014            template_privilege 没有模板权限\n304016            send_error 发消息错误\n304017            upload_image 图片上传错误\n304018            session_not_exist 机器人没连上 gateway\n304019            at_everyone_times @全体成员 次数超限\n304020            file_size 文件大小超限\n304021            get_file 下载文件错误\n304022            push_time 推送消息时间限制\n304023            push_msg_async_ok 推送消息异步调用成功, 等待人工审核\n304024            reply_msg_async_ok 回复消息异步调用成功, 等待人工审核\n304025            beat 消息被打击\n304026            msg_id 回复的消息 id 错误\n304027            msg_expire 回复的消息过期\n304028            msg_protect 非 at 当前用户的消息不允许回复\n304029            corpus_error 调语料服务错误\n304030            corpus_not_match 语料不匹配\n304031            私信已关闭\n304032            私信不存在\n304033            拉私信错误\n304034            不是私信成员\n304035            推送消息超过子频道数量限制\n304036            没有 markdown 模板的权限\n304037            没有发消息按钮组件的权限\n304038            消息按钮组件不存在\n304039            消息按钮组件解析错误\n304040            消息按钮组件消息内容错误\n304044            取消息设置错误\n304045            子频道主动消息数限频\n304046            不允许在此子频道发主动消息\n304047            主动消息推送超过限制的子频道数\n304048            不允许在此频道发主动消息\n304049            私信主动消息数限频\n304050            私信主动消息总量限频\n304051            消息设置引导请求构造错误\n304052            发消息设置引导超频\n306001            param invalid 撤回消息参数错误\n306002            msgid error 消息 id 错误\n306003            fail to get message 获取消息错误(可重试)\n306004            no permission to delete message 没有撤回此消息的权限\n306005            retract message error 消息撤回失败(可重试)\n306006            fail to get channel 获取子频道失败(可重试)\n306007            非当前群的消息\n306008            非当前机器人发送的消息\n306009            非与当前用户发送的消息\n306010            内部错误\n306011            超出可撤回消息时间\n501000~501999     公告错误\n501001            参数校验失败\n501002            创建子频道公告失败(可重试)\n501003            删除子频道公告失败(可重试)\n501004            获取频道信息失败(可重试)\n501005            messageid 错误\n501006            创建频道全局公告失败(可重试)\n501007            删除频道全局公告失败(可重试)\n501008            messageid 不存在\n501009            messageid 解析失败\n501010            此条消息非子频道内消息\n501011            创建精华消息失败(可重试)\n501012            删除精华消息失败(可重试)\n501013            精华消息超过最大数量\n501014            安全打击\n501015            此消息不允许设置\n501016            频道公告子频道推荐超过最大数量\n501017            非频道主或管理员\n501018            推荐子频道 id 无效\n501019            公告类型错误\n501020            创建推荐子频道类型频道公告失败\n502000~502099     禁言相关错误\n502001            频道 id 无效\n502002            频道 id 为空\n502003            用户 id 无效\n502004            用户 id 为空\n502005            timestamp 不合法\n502006            timestamp 无效\n502007            参数转换错误\n502008            rpc 调用失败\n502009            安全打击\n502010            请求头错误\n503001            频道 id 无效\n503002            频道 id 为空\n503003            获取子频道信息失败\n503004            超出发布帖子的频次限制\n503005            帖子标题为空\n503006            帖子内容为空\n503007            帖子id为空\n503008            获取x-uin失败\n503009            帖子id无效或不合法\n503010            通过uin获取tinyid失败\n503011            帖子id里面的时间戳无效或不合法\n503012            帖子不存在或已删除\n503013            服务器内部错误\n503014            帖子json内容解析失败\n503015            帖子内容转换失败\n503016            链接数量超过限制\n503017            字数超过限制\n503018            图片数量超过限制\n503019            视频数量超过限制\n503020            标题长度超过限制\n504000~504999     消息频率相关错误\n504001            请求参数无效错误\n504002            获取 http 头失败\n504003            获取 bot uin 错误\n504004            获取消息频率设置信息错误\n610000-619999     频道权限错误 ~~\n610001            获取频道 id 失败\n610002            获取 http 头失败\n610003            获取机器人号码失败\n610004            获取机器人角色失败\n610005            获取机器人角色内部错误\n610006            拉取机器人权限列表失败\n610007            机器人不在频道内\n610008            无效参数\n610009            获取 api 接口详情失败\n610010            api 接口已授权\n610011            获取机器人信息失败\n610012            限频失败\n610013            已限频\n610014            api 授权链接发送失败\n620001-629999     表情表态错误\n620001            表情表态无效参数\n620002            已经达到表情反应的类型数量上限\n620003            已经设置过该表情表态\n620004            没有设置过该表情表态\n620005            没有权限设置表情表态\n620006            操作限频\n620007            表情表态操作失败，请重试\n630001-639999     互动回调数据更新\n630001            互动回调数据更新无效参数\n630002            互动回调数据更新获取appid失败\n630003            互动回调数据appid不匹配\n630004            互动回调数据更新内部存储错误\n630005            互动回调数据更新内部存储读取错误\n630006            互动回调数据更新读取请求appid失败\n630007            互动回调数据太大\n1000000~2999999   发消息错误\n1100100           安全打击：消息被限频\n1100101           安全打击：内容涉及敏感，请返回修改\n1100102           安全打击：抱歉，暂未获得新功能体验资格\n1100103           安全打击\n1100104           安全打击：该群已失效或当前群已不存在\n1100300           系统内部错误\n1100301           调用方不是群成员\n1100302           获取指定频道名称失败\n1100303           主页频道非管理员不允许发消息\n1100304           @次数鉴权失败\n1100305           tinyid 转换 uin 失败\n1100306           非私有频道成员\n1100307           非白名单应用子频道\n1100308           触发频道内限频\n1100499           其他错误\n3000000~3999999   编辑消息错误\n3300006           安全打击',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"分享推荐与搜索",frontmatter:{},regularPath:"/develop/api-v2/client-func/intro/find.html",relativePath:"develop/api-v2/client-func/intro/find.md",key:"v-3d40d5ad",path:"/develop/api-v2/client-func/intro/find.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 分享推荐与搜索\n\n说明\n\n在添加与发现场景内，逐步开放更多的发现路径。\n\n分享机器人   群管理推荐位   频道管理推荐位   群聊加号面板\n支持      支持       支持        暂未支持\n\n机器人QQ号搜索   昵称搜索   机器人分类搜索\n支持         暂未支持   暂未支持",normalizedContent:"# 分享推荐与搜索\n\n说明\n\n在添加与发现场景内，逐步开放更多的发现路径。\n\n分享机器人   群管理推荐位   频道管理推荐位   群聊加号面板\n支持      支持       支持        暂未支持\n\n机器人qq号搜索   昵称搜索   机器人分类搜索\n支持         暂未支持   暂未支持",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"websocket",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/error-trace/websocket.html",relativePath:"develop/api-v2/dev-prepare/error-trace/websocket.md",key:"v-07e873e5",path:"/develop/api-v2/dev-prepare/error-trace/websocket.html",headers:[{level:3,title:"错误码 code",slug:"错误码-code",normalizedTitle:"错误码 code",charIndex:16},{level:3,title:"针对 websocket 错误码的简单处理逻辑",slug:"针对-websocket-错误码的简单处理逻辑",normalizedTitle:"针对 websocket 错误码的简单处理逻辑",charIndex:1164}],lastUpdated:"12/20/2023, 8:46:30 AM",lastUpdatedTimestamp:170306199e4,headersStr:"错误码 code 针对 websocket 错误码的简单处理逻辑",content:"# websocket\n\n\n# 错误码 code\n\n值           含义                                      是否可以重试 RESUME   是否可以重试 IDENTIFY\n4001        无效的 opcode                              否               否\n4002        无效的 payload                             否               否\n4007        seq 错误                                  否               是\n4006        无效的 session id，无法继续 resume，请 identify   否               是\n4008        发送 payload 过快，请重新连接，并遵守连接后返回的频控信息       是               是\n4009        连接过期，请重连并执行 resume 进行重新连接               是               是\n4010        无效的 shard                               否               否\n4011        连接需要处理的 guild 过多，请进行合理的分片               否               否\n4012        无效的 version                             否               否\n4013        无效的 intent                              否               否\n4014        intent 无权限                              否               否\n4014        intent 无权限                              否               否\n4900~4913   内部错误，请重连                                否               是\n4914        机器人已下架,只允许连接沙箱环境,请断开连接,检验当前连接环境         否               否\n4915        机器人已封禁,不允许连接,请断开连接,申请解封后再连接             否               否\n\n\n# 针对 websocket 错误码的简单处理逻辑\n\n * 4009 可以重新发起 resume\n * 4914，4915 不可以连接，请联系官方解封\n * 其他错误，请重新发起 identify",normalizedContent:"# websocket\n\n\n# 错误码 code\n\n值           含义                                      是否可以重试 resume   是否可以重试 identify\n4001        无效的 opcode                              否               否\n4002        无效的 payload                             否               否\n4007        seq 错误                                  否               是\n4006        无效的 session id，无法继续 resume，请 identify   否               是\n4008        发送 payload 过快，请重新连接，并遵守连接后返回的频控信息       是               是\n4009        连接过期，请重连并执行 resume 进行重新连接               是               是\n4010        无效的 shard                               否               否\n4011        连接需要处理的 guild 过多，请进行合理的分片               否               否\n4012        无效的 version                             否               否\n4013        无效的 intent                              否               否\n4014        intent 无权限                              否               否\n4014        intent 无权限                              否               否\n4900~4913   内部错误，请重连                                否               是\n4914        机器人已下架,只允许连接沙箱环境,请断开连接,检验当前连接环境         否               否\n4915        机器人已封禁,不允许连接,请断开连接,申请解封后再连接             否               否\n\n\n# 针对 websocket 错误码的简单处理逻辑\n\n * 4009 可以重新发起 resume\n * 4914，4915 不可以连接，请联系官方解封\n * 其他错误，请重新发起 identify",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"接口通信基础框架",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/interface-framework/",relativePath:"develop/api-v2/dev-prepare/interface-framework/README.md",key:"v-947d5584",path:"/develop/api-v2/dev-prepare/interface-framework/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 接口通信基础框架\n\n接口通信基础框架，BOT 开发者对接 QQ 机器人开放平台提供的接口能力，开发出一款让普通 QQ 用户可用的机器人。",normalizedContent:"# 接口通信基础框架\n\n接口通信基础框架，bot 开发者对接 qq 机器人开放平台提供的接口能力，开发出一款让普通 qq 用户可用的机器人。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"接口调用与鉴权",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/interface-framework/api-use.html",relativePath:"develop/api-v2/dev-prepare/interface-framework/api-use.md",key:"v-7ecfd877",path:"/develop/api-v2/dev-prepare/interface-framework/api-use.html",headers:[{level:2,title:"获取调用凭证",slug:"获取调用凭证",normalizedTitle:"获取调用凭证",charIndex:99},{level:2,title:"鉴权方式",slug:"鉴权方式",normalizedTitle:"鉴权方式",charIndex:951}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"获取调用凭证 鉴权方式",content:'# 接口调用与鉴权\n\n说明\n\nQQ 机器人 服务端开放的 openapi 接口，均使用 https 方式进行调用，通过 AccessToken 机制实现对 openapi 接口调用的鉴权。\n\n\n# 获取调用凭证\n\n * 请求\n\n基本\nHTTP URL      https://bots.qq.com/app/getAppAccessToken\nHTTP Method   POST\n\n * 请求参数\n\n属性             类型       必填   说明\nappId          string   是    在开放平台管理端上获得。\nclientSecret   string   是    在开放平台管理端上获得。\n\n * 返回参数\n\n属性             类型       说明\naccess_token   string   获取到的凭证。\nexpires_in     number   凭证有效时间，单位：秒。目前是7200秒之内的值。\n\n * 错误码\n\n错误码   错误码取值\n0     ok\n\n * 调用示例\n\ncurl --location \'https://bots.qq.com/app/getAppAccessToken\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n  "appId": "APPID",\n  "clientSecret": "CLIENTSECRET"\n}\'\n\n\n1\n2\n3\n4\n5\n6\n\n * 返回示例\n\n{\n  "access_token": "ACCESS_TOKEN",\n  "expires_in": "7200"\n}\n\n\n1\n2\n3\n4\n\n * 其他说明\n\n目前 access_token 生命周期默认 7200 秒，每次请求不会刷新新的 access_token，开发者需要在过期后自行刷新 access_token，保证调用链路权限正常。\n\n在上一个 access_token 接近过期时间 60 秒内，获取 access_token 时，会获得一个新的 access_token，老的 access_token 在这个60秒内仍然有效。\n\n\n# 鉴权方式\n\n在每次调用 https 的 openapi 开放接口请求的时候，需要在 header 内引入 access_token 进行调用权限验证。\n\n统一地址\n\nhttps://api.sgroup.qq.com\n\n\n1\n\n\n请求头\n\n名称              类型       必填   描述\nAuthorization   string   是    格式值："QQBot ACCESS_TOKEN"\n\n示例\n\n{\n  "headers": {\n    "Authorization": "QQBot {ACCESS_TOKEN}"\n  }\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 接口调用与鉴权\n\n说明\n\nqq 机器人 服务端开放的 openapi 接口，均使用 https 方式进行调用，通过 accesstoken 机制实现对 openapi 接口调用的鉴权。\n\n\n# 获取调用凭证\n\n * 请求\n\n基本\nhttp url      https://bots.qq.com/app/getappaccesstoken\nhttp method   post\n\n * 请求参数\n\n属性             类型       必填   说明\nappid          string   是    在开放平台管理端上获得。\nclientsecret   string   是    在开放平台管理端上获得。\n\n * 返回参数\n\n属性             类型       说明\naccess_token   string   获取到的凭证。\nexpires_in     number   凭证有效时间，单位：秒。目前是7200秒之内的值。\n\n * 错误码\n\n错误码   错误码取值\n0     ok\n\n * 调用示例\n\ncurl --location \'https://bots.qq.com/app/getappaccesstoken\' \\\n--header \'content-type: application/json\' \\\n--data \'{\n  "appid": "appid",\n  "clientsecret": "clientsecret"\n}\'\n\n\n1\n2\n3\n4\n5\n6\n\n * 返回示例\n\n{\n  "access_token": "access_token",\n  "expires_in": "7200"\n}\n\n\n1\n2\n3\n4\n\n * 其他说明\n\n目前 access_token 生命周期默认 7200 秒，每次请求不会刷新新的 access_token，开发者需要在过期后自行刷新 access_token，保证调用链路权限正常。\n\n在上一个 access_token 接近过期时间 60 秒内，获取 access_token 时，会获得一个新的 access_token，老的 access_token 在这个60秒内仍然有效。\n\n\n# 鉴权方式\n\n在每次调用 https 的 openapi 开放接口请求的时候，需要在 header 内引入 access_token 进行调用权限验证。\n\n统一地址\n\nhttps://api.sgroup.qq.com\n\n\n1\n\n\n请求头\n\n名称              类型       必填   描述\nauthorization   string   是    格式值："qqbot access_token"\n\n示例\n\n{\n  "headers": {\n    "authorization": "qqbot {access_token}"\n  }\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"事件订阅与通知",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/interface-framework/event-emit.html",relativePath:"develop/api-v2/dev-prepare/interface-framework/event-emit.md",key:"v-3f0a1d6d",path:"/develop/api-v2/dev-prepare/interface-framework/event-emit.html",headers:[{level:2,title:"通用数据结构 Payload",slug:"通用数据结构-payload",normalizedTitle:"通用数据结构 payload",charIndex:142},{level:3,title:"OpCode 含义",slug:"opcode-含义",normalizedTitle:"opcode 含义",charIndex:516},{level:2,title:"Webhook方式",slug:"webhook方式",normalizedTitle:"webhook方式",charIndex:1524},{level:3,title:"签名校验",slug:"签名校验",normalizedTitle:"签名校验",charIndex:1624},{level:3,title:"回调地址及事件监听配置",slug:"回调地址及事件监听配置",normalizedTitle:"回调地址及事件监听配置",charIndex:1671},{level:2,title:"WebSocket方式",slug:"websocket方式",normalizedTitle:"websocket方式",charIndex:3837},{level:3,title:"发起连接到 Gateway",slug:"发起连接到-gateway",normalizedTitle:"发起连接到 gateway",charIndex:3928},{level:3,title:"登录鉴权获得 Session",slug:"登录鉴权获得-session",normalizedTitle:"登录鉴权获得 session",charIndex:4237},{level:3,title:"发送心跳 Ack",slug:"发送心跳-ack",normalizedTitle:"发送心跳 ack",charIndex:5314},{level:3,title:"恢复登录态 Session",slug:"恢复登录态-session",normalizedTitle:"恢复登录态 session",charIndex:5514},{level:3,title:"事件订阅Intents",slug:"事件订阅intents",normalizedTitle:"事件订阅intents",charIndex:6059},{level:3,title:"分片连接LoadBalance",slug:"分片连接loadbalance",normalizedTitle:"分片连接loadbalance",charIndex:9078}],lastUpdated:"11/20/2024, 3:40:09 AM",lastUpdatedTimestamp:1732074009e3,headersStr:"通用数据结构 Payload OpCode 含义 Webhook方式 签名校验 回调地址及事件监听配置 WebSocket方式 发起连接到 Gateway 登录鉴权获得 Session 发送心跳 Ack 恢复登录态 Session 事件订阅Intents 分片连接LoadBalance",content:'# 事件订阅与通知\n\n说明\n\n当用户在QQ平台内的一些行为操作或某些接口的有异步返回通知确认机制的场景的时候，QQ 会通过"事件"的方式，通知到开发者服务器，开发者可自行根据具体事件通知来进行下一步响应。譬如用户跟机器人发消息，用户添加机器人好友，机器人被拉入群聊等等事件。\n\n\n# 通用数据结构 Payload\n\npayload 指的是在 webhook或websocket 连接上传输的数据，网关的上下行消息采用的都是同一个结构，如下：\n\n{\n  "id":"event_id",\n  "op": 0,\n  "d": {},\n  "s": 42,\n  "t": "GATEWAY_EVENT_NAME"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n字段   描述\nid   事件id\nop   指的是 opcode，参考连接维护\ns    下行消息都会有一个序列号，标识消息的唯一性，客户端需要再发送心跳的时候，携带客户端收到的最新的s\nt    代表事件类型。主要用在op为 0 Dispatch 的时候\nd    代表事件内容，不同事件类型的事件内容格式都不同，请注意识别。主要用在op为 0 Dispatch 的时候\n\n\n# OpCode 含义\n\n所有 opcode 列表如下：\n\nCODE   名称                  接入方式                客户端行为           描述\n0      Dispatch            webhook/websocket   Receive         服务端进行消息推送\n1      Heartbeat           websocket           Send/Receive    客户端或服务端发送心跳\n2      Identify            websocket           Send            客户端发送鉴权\n6      Resume              websocket           Send            客户端恢复连接\n7      Reconnect           websocket           Receive         服务端通知客户端重新连接\n9      Invalid Session     websocket           Receive         当 identify 或 resume 的时候，如果参数有错，服务端会返回该消息\n10     Hello               websocket           Receive         当客户端与网关建立 ws 连接之后，网关下发的第一条消息\n11     Heartbeat ACK       websocket           Receive/Reply   当发送心跳成功之后，就会收到该消息\n12     HTTP Callback ACK   webhook             Reply           仅用于 http 回调模式的回包，代表机器人收到了平台推送的数据\n13     回调地址验证              webhook             Receive         开放平台对机器人服务端进行验证\n\n客户端行为含义如下：\n\nReceive 客户端接收到服务端 push 的消息\n\nSend 客户端发送消息\n\nReply 客户端接收到服务端发送的消息之后的回包（HTTP 回调模式）\n\n\n# Webhook方式\n\nQQ机器人开放平台支持通过使用HTTP接口接收事件。开发者可通过管理端设定回调地址，监听事件等。\n\n目前回调地址允许配置的端口号为： 80、443、8080、8443。\n\n\n# 签名校验\n\n机器人服务端需要对回调请求进行签名验证以保证数据没有被篡改过。 签名算法\n\n\n# 回调地址及事件监听配置\n\n开发者需要提供一个HTTPS回调地址。并选定监听的事件类型。开放平台会将事件通过回调的方式推送给机器人。\n\n配置回调地址后，开放平台会对回调地址进行验证：\n\n * 请求结构(Payload.d)\n\n字段            描述\nplain_token   需要计算签名的字符串\nevent_ts      计算签名使用时间戳\n\n * 返回结果\n\n字段            描述\nplain_token   需要计算签名的字符串\nsignature     签名\n\n计算过程如下(golang)：\n\nfunc handleValidation(rw http.ResponseWriter, r *http.Request, botSecret string) {\n\thttpBody, err := io.ReadAll(r.Body)\n\tif err != nil {\n\t\tlog.Println("read http body err", err)\n\t\treturn\n\t}\n\tpayload := &Payload{}\n\tif err = json.Unmarshal(httpBody, payload); err != nil {\n\t\tlog.Println("parse http payload err", err)\n\t\treturn\n\t}\n\tvalidationPayload := &ValidationRequest{}\n\tif \terr = json.Unmarshal(payload.Data, validationPayload);err != nil {\n\t\tlog.Println("parse http payload failed:", err)\n\t\treturn\n\t}\n\tseed := botSecret\n\tfor len(seed) < ed25519.SeedSize {\n\t\tseed = strings.Repeat(seed, 2)\n\t}\n\tseed = seed[:ed25519.SeedSize]\n\treader := strings.NewReader(seed)\n\t// GenerateKey 方法会返回公钥、私钥，这里只需要私钥进行签名生成不需要返回公钥\n\t_, privateKey, err := ed25519.GenerateKey(reader)\n\tif err != nil {\n\t\tlog.Println("ed25519 generate key failed:", err)\n\t\treturn\n\t}\n\tvar msg bytes.Buffer\n\tmsg.WriteString(validationPayload.EventTs)\n\tmsg.WriteString(validationPayload.PlainToken)\n\tsignature := hex.EncodeToString(ed25519.Sign(privateKey, msg.Bytes()))\n\tif err != nil {\n\t\tlog.Println("generate signature failed:", err)\n\t\treturn\n\t}\n\trspBytes, err := json.Marshal(\n\t\t&ValidationResponse{\n\t\t\tPlainToken: validationPayload.PlainToken,\n\t\t\tSignature:  signature,\n\t\t})\n\tif err != nil {\n\t\tlog.Println("handle validation failed:", err)\n\t\treturn\n\t}\n\trw.Write(rspBytes)\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n\n\n例如机器人账号\n\nappid: 11111111\nsecret: DG5g3B4j9X2KOErG\n\n\n1\n2\n\n\n回调验证请求：\n\nheaders: User-Agent:[QQBot-Callback] X-Bot-Appid:[11111111]\nbody: {"d":{"plain_token":"Arq0D5A61EgUu4OxUvOp","event_ts":"1725442341"},"op":13},\n\n\n1\n2\n\n\n机器人应返回：\n\nbody: {"plain_token": "Arq0D5A61EgUu4OxUvOp","signature": "87befc99c42c651b3aac0278e71ada338433ae26fcb24307bdc5ad38c1adc2d01bcfcadc0842edac85e85205028a1132afe09280305f13aa6909ffc2d652c706"}\n\n\n1\n\n\n\n# WebSocket方式\n\n * websocket 事件推送链路将在24年年底前逐步下线，后续官方不再维护。已接入websocket链路的机器人，请迁移至webhook链路\n\n\n# 发起连接到 Gateway\n\n第一步先调用 获取通用WSS 接入点 | QQ机器人文档 或 获取带分片WSS 接入点 | QQ机器人文档 接口获取网关地址。\n\n会得到一个类似下面这样的地址：\n\nwss://api.sgroup.qq.com/websocket/\n\n\n1\n\n\n然后进行 websocket 长连接建立，一旦连接成功，就会返回 OpCode 10 Hello 消息。这个消息主要的内容是心跳周期，单位毫秒(milliseconds)，如下：\n\n{\n  "op": 10,\n  "d": {\n    "heartbeat_interval": 45000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 登录鉴权获得 Session\n\nwebsocket 长连接建立之后，需要进行登录鉴权，登录鉴权成功后会获得一个 session 会话 id，只有登录成功后，QQ后台才会下发事件通知，\n\n发送一个 OpCode 2 Identify 消息， payload 如下：\n\n{\n  "op": 2,\n  "d": {\n    "token": "token string",\n    "intents": 513,\n    "shard": [0, 4],\n    "properties": {\n      "$os": "linux",\n      "$browser": "my_library",\n      "$device": "my_library"\n    }\n  }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n字段           描述\ntoken        格式为"QQBot {AccessToken}"\nintents      是此次连接所需要接收的事件，具体可参考 Intents [事件订阅intents\\\nshard        考虑到开发者事件接收时可以实现负载均衡，QQ 提供了分片逻辑，事件通知会落在不同的分片上，该参数是个拥有两个元素的数组。\n             例如：[0,4]，代表分为四个片，当前链接是第 0 个片，业务稍后应该继续建立 shard\n             为[1,4],[2,4],[3,4]的链接，才能完整接收事件，更多详细的内容可以参考 Shard [Shard机制\\\nproperties   目前无实际作用，可以按照自己的实际情况填写，也可以留空\n\n鉴权成功之后，QQ 后台会下发一个 Ready Event， payload 如下：\n\n{\n  "op": 0,\n  "s": 1,\n  "t": "READY",\n  "d": {\n    "version": 1,\n    "session_id": "082ee18c-0be3-491b-9d8b-fbd95c51673a",\n    "user": {\n      "id": "6158788878435714165",\n      "username": "群pro测试机器人",\n      "bot": true\n    },\n    "shard": [0, 0]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 发送心跳 Ack\n\n鉴权成功之后，就需要按照周期进行心跳发送。d 为客户端收到的最新的消息的 s，如果是首次连接，d 为传 null， payload 如下：\n\n{\n  "op": 1,\n  "d": 251\n}\n\n\n1\n2\n3\n4\n\n\n心跳发送成功之后会收到 OpCode 11 Heartbeat ACK 消息， payload 如下：\n\n{\n  "op": 11\n}\n\n\n1\n2\n3\n\n\n\n# 恢复登录态 Session\n\n有很多原因可能会导致 websocket 长连接断开，断开之后短时间内重连会补发中间遗漏的事件，以保障业务逻辑的正确性。断开重连 gateway 后不需要发送重新登录 Opcode 2 Identify请求。在连接到 Gateway 之后，需要发送 Opcode 6 Resume消息， payload 如下：\n\n{\n  "op": 6,\n  "d": {\n    "token": "my_token",\n    "session_id": "session_id_i_stored",\n    "seq": 1337\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n其中 seq 指的是在接收事件时候的 s 字段，我们推荐开发者在处理过事件之后记录下 s 这样可以在 resume 的时候传递给 websocket， websocket 会自动补发这个 seq 之后的事件。\n\n恢复成功之后，就开始补发遗漏事件，所有事件补发完成之后，会下发一个 Resumed Event， payload 如下：\n\n{\n  "op": 0,\n  "s": 2002,\n  "t": "RESUMED",\n  "d": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 事件订阅Intents\n\n事件的 intents 是一个标记位，每一位都代表不同的事件，如果需要接收某类事件，就将该位置为 1。\n\n每个 intents 位代表的是一类事件，可以使用使用 websocket 传输的数据中的 t 字段的值来区分。\n\n事件和位移的关系如下：\n\nGUILDS (1 << 0)\n  - GUILD_CREATE           // 当机器人加入新guild时\n  - GUILD_UPDATE           // 当guild资料发生变更时\n  - GUILD_DELETE           // 当机器人退出guild时\n  - CHANNEL_CREATE         // 当channel被创建时\n  - CHANNEL_UPDATE         // 当channel被更新时\n  - CHANNEL_DELETE         // 当channel被删除时\n\nGUILD_MEMBERS (1 << 1)\n  - GUILD_MEMBER_ADD       // 当成员加入时\n  - GUILD_MEMBER_UPDATE    // 当成员资料变更时\n  - GUILD_MEMBER_REMOVE    // 当成员被移除时\n\nGUILD_MESSAGES (1 << 9)    // 消息事件，仅 *私域* 机器人能够设置此 intents。\n  - MESSAGE_CREATE         // 发送消息事件，代表频道内的全部消息，而不只是 at 机器人的消息。内容与 AT_MESSAGE_CREATE 相同\n  - MESSAGE_DELETE         // 删除（撤回）消息事件\n\nGUILD_MESSAGE_REACTIONS (1 << 10)\n  - MESSAGE_REACTION_ADD    // 为消息添加表情表态\n  - MESSAGE_REACTION_REMOVE // 为消息删除表情表态\n\nDIRECT_MESSAGE (1 << 12)\n  - DIRECT_MESSAGE_CREATE   // 当收到用户发给机器人的私信消息时\n  - DIRECT_MESSAGE_DELETE   // 删除（撤回）消息事件\n\n\nGROUP_AND_C2C_EVENT (1 << 25)\n  - C2C_MESSAGE_CREATE      // 用户单聊发消息给机器人时候\n  - FRIEND_ADD              // 用户添加使用机器人\n  - FRIEND_DEL              // 用户删除机器人\n  - C2C_MSG_REJECT          // 用户在机器人资料卡手动关闭"主动消息"推送\n  - C2C_MSG_RECEIVE         // 用户在机器人资料卡手动开启"主动消息"推送开关\n  - GROUP_AT_MESSAGE_CREATE // 用户在群里@机器人时收到的消息\n  - GROUP_ADD_ROBOT         // 机器人被添加到群聊\n  - GROUP_DEL_ROBOT         // 机器人被移出群聊\n  - GROUP_MSG_REJECT        // 群管理员主动在机器人资料页操作关闭通知\n  - GROUP_MSG_RECEIVE       // 群管理员主动在机器人资料页操作开启通知\n\nINTERACTION (1 << 26)\n  - INTERACTION_CREATE     // 互动事件创建时\n\nMESSAGE_AUDIT (1 << 27)\n  - MESSAGE_AUDIT_PASS     // 消息审核通过\n  - MESSAGE_AUDIT_REJECT   // 消息审核不通过\n\nFORUMS_EVENT (1 << 28)  // 论坛事件，仅 *私域* 机器人能够设置此 intents。\n  - FORUM_THREAD_CREATE     // 当用户创建主题时\n  - FORUM_THREAD_UPDATE     // 当用户更新主题时\n  - FORUM_THREAD_DELETE     // 当用户删除主题时\n  - FORUM_POST_CREATE       // 当用户创建帖子时\n  - FORUM_POST_DELETE       // 当用户删除帖子时\n  - FORUM_REPLY_CREATE      // 当用户回复评论时\n  - FORUM_REPLY_DELETE      // 当用户回复评论时\n  - FORUM_PUBLISH_AUDIT_RESULT      // 当用户发表审核通过时\n\nAUDIO_ACTION (1 << 29)\n  - AUDIO_START             // 音频开始播放时\n  - AUDIO_FINISH            // 音频播放结束时\n  - AUDIO_ON_MIC            // 上麦时\n  - AUDIO_OFF_MIC           // 下麦时\n\nPUBLIC_GUILD_MESSAGES (1 << 30) // 消息事件，此为公域的消息事件\n  - AT_MESSAGE_CREATE       // 当收到@机器人的消息时\n  - PUBLIC_MESSAGE_DELETE   // 当频道的消息被删除时\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n\n\n# 举例\n\n如开发者需要接收用户 at 机器人的消息，那么就需要在 intents 中设置接收 PUBLIC_GUILD_MESSAGES。则需要先计算 1 << 30 的值。然后与 0 做位或操作，得到最终需要传递的 intents。\n\n如果涉及到多个事件类型的接收，则需要将多个结果做位或操作，如：0|1<<30|1<<1 代表订阅 PUBLIC_GUILD_MESSAGES 和 GUILD_MEMBERS 这两类事件。\n\n# 权限\n\n事件类型的订阅，是有权限控制的，除了 GUILDS，PUBLIC_GUILD_MESSAGES，GUILD_MEMBERS 事件是基础的事件，默认有权限订阅之外，其他的特殊事件，都需要经过申请才能够使用，如果在鉴权的时候传递了无权限的 intents， websocket 会报错，并直接关闭连接。请开发者注意订阅事件的范围需要控制在自己所需要的范围之内。\n\n如果拥有的某个特殊事件类型的权限被取消，则在当前连接上不会报错，但是将不会收到对应的事件类型，如果重新连接，则报错，所以如果开发者的事件类型权限被取消，请及时调整监听事件代码，避免报错导致的无法连接。\n\n\n# 分片连接LoadBalance\n\n随着bot的增长并被添加到越来越多的频道中，事件越来越多，业务有必要对事件进行水平分割，实现负载均衡。机器人网关实现了一种用户可控制的分片方法，该方法允许跨多个网关连接拆分事件。 分片完全由用户控制，并且不需要在单独的连接之间进行状态共享。\n\n要在连接上启用分片，需要在建立连接的时候指定分片参数，具体参考gateway\n\n# 获得合适的分片数\n\n使用/gateway/bot接口获取网关地址的时候，会同时返回一个建议的 shard数，及最大并发限制。\n\n{\n  "url": "wss://sandbox.api.sgroup.qq.com/websocket",\n  "shards": 1,\n  "session_start_limit": {\n    "total": 1000,\n    "remaining": 1000,\n    "reset_after": 86400000,\n    "max_concurrency": 1\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 分片规则\n\n分片是按照频道id进行哈希的，同一个频道的信息会固定从同一个链接推送。具体哈希计算规则如下：\n\nshard_id = (guild_id >> 22) % num_shards\n\n\n1\n\n\n# 最大连接数\n\n每个机器人创建的连接数不能超过remaining剩余连接数',normalizedContent:'# 事件订阅与通知\n\n说明\n\n当用户在qq平台内的一些行为操作或某些接口的有异步返回通知确认机制的场景的时候，qq 会通过"事件"的方式，通知到开发者服务器，开发者可自行根据具体事件通知来进行下一步响应。譬如用户跟机器人发消息，用户添加机器人好友，机器人被拉入群聊等等事件。\n\n\n# 通用数据结构 payload\n\npayload 指的是在 webhook或websocket 连接上传输的数据，网关的上下行消息采用的都是同一个结构，如下：\n\n{\n  "id":"event_id",\n  "op": 0,\n  "d": {},\n  "s": 42,\n  "t": "gateway_event_name"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n字段   描述\nid   事件id\nop   指的是 opcode，参考连接维护\ns    下行消息都会有一个序列号，标识消息的唯一性，客户端需要再发送心跳的时候，携带客户端收到的最新的s\nt    代表事件类型。主要用在op为 0 dispatch 的时候\nd    代表事件内容，不同事件类型的事件内容格式都不同，请注意识别。主要用在op为 0 dispatch 的时候\n\n\n# opcode 含义\n\n所有 opcode 列表如下：\n\ncode   名称                  接入方式                客户端行为           描述\n0      dispatch            webhook/websocket   receive         服务端进行消息推送\n1      heartbeat           websocket           send/receive    客户端或服务端发送心跳\n2      identify            websocket           send            客户端发送鉴权\n6      resume              websocket           send            客户端恢复连接\n7      reconnect           websocket           receive         服务端通知客户端重新连接\n9      invalid session     websocket           receive         当 identify 或 resume 的时候，如果参数有错，服务端会返回该消息\n10     hello               websocket           receive         当客户端与网关建立 ws 连接之后，网关下发的第一条消息\n11     heartbeat ack       websocket           receive/reply   当发送心跳成功之后，就会收到该消息\n12     http callback ack   webhook             reply           仅用于 http 回调模式的回包，代表机器人收到了平台推送的数据\n13     回调地址验证              webhook             receive         开放平台对机器人服务端进行验证\n\n客户端行为含义如下：\n\nreceive 客户端接收到服务端 push 的消息\n\nsend 客户端发送消息\n\nreply 客户端接收到服务端发送的消息之后的回包（http 回调模式）\n\n\n# webhook方式\n\nqq机器人开放平台支持通过使用http接口接收事件。开发者可通过管理端设定回调地址，监听事件等。\n\n目前回调地址允许配置的端口号为： 80、443、8080、8443。\n\n\n# 签名校验\n\n机器人服务端需要对回调请求进行签名验证以保证数据没有被篡改过。 签名算法\n\n\n# 回调地址及事件监听配置\n\n开发者需要提供一个https回调地址。并选定监听的事件类型。开放平台会将事件通过回调的方式推送给机器人。\n\n配置回调地址后，开放平台会对回调地址进行验证：\n\n * 请求结构(payload.d)\n\n字段            描述\nplain_token   需要计算签名的字符串\nevent_ts      计算签名使用时间戳\n\n * 返回结果\n\n字段            描述\nplain_token   需要计算签名的字符串\nsignature     签名\n\n计算过程如下(golang)：\n\nfunc handlevalidation(rw http.responsewriter, r *http.request, botsecret string) {\n\thttpbody, err := io.readall(r.body)\n\tif err != nil {\n\t\tlog.println("read http body err", err)\n\t\treturn\n\t}\n\tpayload := &payload{}\n\tif err = json.unmarshal(httpbody, payload); err != nil {\n\t\tlog.println("parse http payload err", err)\n\t\treturn\n\t}\n\tvalidationpayload := &validationrequest{}\n\tif \terr = json.unmarshal(payload.data, validationpayload);err != nil {\n\t\tlog.println("parse http payload failed:", err)\n\t\treturn\n\t}\n\tseed := botsecret\n\tfor len(seed) < ed25519.seedsize {\n\t\tseed = strings.repeat(seed, 2)\n\t}\n\tseed = seed[:ed25519.seedsize]\n\treader := strings.newreader(seed)\n\t// generatekey 方法会返回公钥、私钥，这里只需要私钥进行签名生成不需要返回公钥\n\t_, privatekey, err := ed25519.generatekey(reader)\n\tif err != nil {\n\t\tlog.println("ed25519 generate key failed:", err)\n\t\treturn\n\t}\n\tvar msg bytes.buffer\n\tmsg.writestring(validationpayload.eventts)\n\tmsg.writestring(validationpayload.plaintoken)\n\tsignature := hex.encodetostring(ed25519.sign(privatekey, msg.bytes()))\n\tif err != nil {\n\t\tlog.println("generate signature failed:", err)\n\t\treturn\n\t}\n\trspbytes, err := json.marshal(\n\t\t&validationresponse{\n\t\t\tplaintoken: validationpayload.plaintoken,\n\t\t\tsignature:  signature,\n\t\t})\n\tif err != nil {\n\t\tlog.println("handle validation failed:", err)\n\t\treturn\n\t}\n\trw.write(rspbytes)\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n\n\n例如机器人账号\n\nappid: 11111111\nsecret: dg5g3b4j9x2koerg\n\n\n1\n2\n\n\n回调验证请求：\n\nheaders: user-agent:[qqbot-callback] x-bot-appid:[11111111]\nbody: {"d":{"plain_token":"arq0d5a61eguu4oxuvop","event_ts":"1725442341"},"op":13},\n\n\n1\n2\n\n\n机器人应返回：\n\nbody: {"plain_token": "arq0d5a61eguu4oxuvop","signature": "87befc99c42c651b3aac0278e71ada338433ae26fcb24307bdc5ad38c1adc2d01bcfcadc0842edac85e85205028a1132afe09280305f13aa6909ffc2d652c706"}\n\n\n1\n\n\n\n# websocket方式\n\n * websocket 事件推送链路将在24年年底前逐步下线，后续官方不再维护。已接入websocket链路的机器人，请迁移至webhook链路\n\n\n# 发起连接到 gateway\n\n第一步先调用 获取通用wss 接入点 | qq机器人文档 或 获取带分片wss 接入点 | qq机器人文档 接口获取网关地址。\n\n会得到一个类似下面这样的地址：\n\nwss://api.sgroup.qq.com/websocket/\n\n\n1\n\n\n然后进行 websocket 长连接建立，一旦连接成功，就会返回 opcode 10 hello 消息。这个消息主要的内容是心跳周期，单位毫秒(milliseconds)，如下：\n\n{\n  "op": 10,\n  "d": {\n    "heartbeat_interval": 45000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 登录鉴权获得 session\n\nwebsocket 长连接建立之后，需要进行登录鉴权，登录鉴权成功后会获得一个 session 会话 id，只有登录成功后，qq后台才会下发事件通知，\n\n发送一个 opcode 2 identify 消息， payload 如下：\n\n{\n  "op": 2,\n  "d": {\n    "token": "token string",\n    "intents": 513,\n    "shard": [0, 4],\n    "properties": {\n      "$os": "linux",\n      "$browser": "my_library",\n      "$device": "my_library"\n    }\n  }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n字段           描述\ntoken        格式为"qqbot {accesstoken}"\nintents      是此次连接所需要接收的事件，具体可参考 intents [事件订阅intents\\\nshard        考虑到开发者事件接收时可以实现负载均衡，qq 提供了分片逻辑，事件通知会落在不同的分片上，该参数是个拥有两个元素的数组。\n             例如：[0,4]，代表分为四个片，当前链接是第 0 个片，业务稍后应该继续建立 shard\n             为[1,4],[2,4],[3,4]的链接，才能完整接收事件，更多详细的内容可以参考 shard [shard机制\\\nproperties   目前无实际作用，可以按照自己的实际情况填写，也可以留空\n\n鉴权成功之后，qq 后台会下发一个 ready event， payload 如下：\n\n{\n  "op": 0,\n  "s": 1,\n  "t": "ready",\n  "d": {\n    "version": 1,\n    "session_id": "082ee18c-0be3-491b-9d8b-fbd95c51673a",\n    "user": {\n      "id": "6158788878435714165",\n      "username": "群pro测试机器人",\n      "bot": true\n    },\n    "shard": [0, 0]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 发送心跳 ack\n\n鉴权成功之后，就需要按照周期进行心跳发送。d 为客户端收到的最新的消息的 s，如果是首次连接，d 为传 null， payload 如下：\n\n{\n  "op": 1,\n  "d": 251\n}\n\n\n1\n2\n3\n4\n\n\n心跳发送成功之后会收到 opcode 11 heartbeat ack 消息， payload 如下：\n\n{\n  "op": 11\n}\n\n\n1\n2\n3\n\n\n\n# 恢复登录态 session\n\n有很多原因可能会导致 websocket 长连接断开，断开之后短时间内重连会补发中间遗漏的事件，以保障业务逻辑的正确性。断开重连 gateway 后不需要发送重新登录 opcode 2 identify请求。在连接到 gateway 之后，需要发送 opcode 6 resume消息， payload 如下：\n\n{\n  "op": 6,\n  "d": {\n    "token": "my_token",\n    "session_id": "session_id_i_stored",\n    "seq": 1337\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n其中 seq 指的是在接收事件时候的 s 字段，我们推荐开发者在处理过事件之后记录下 s 这样可以在 resume 的时候传递给 websocket， websocket 会自动补发这个 seq 之后的事件。\n\n恢复成功之后，就开始补发遗漏事件，所有事件补发完成之后，会下发一个 resumed event， payload 如下：\n\n{\n  "op": 0,\n  "s": 2002,\n  "t": "resumed",\n  "d": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 事件订阅intents\n\n事件的 intents 是一个标记位，每一位都代表不同的事件，如果需要接收某类事件，就将该位置为 1。\n\n每个 intents 位代表的是一类事件，可以使用使用 websocket 传输的数据中的 t 字段的值来区分。\n\n事件和位移的关系如下：\n\nguilds (1 << 0)\n  - guild_create           // 当机器人加入新guild时\n  - guild_update           // 当guild资料发生变更时\n  - guild_delete           // 当机器人退出guild时\n  - channel_create         // 当channel被创建时\n  - channel_update         // 当channel被更新时\n  - channel_delete         // 当channel被删除时\n\nguild_members (1 << 1)\n  - guild_member_add       // 当成员加入时\n  - guild_member_update    // 当成员资料变更时\n  - guild_member_remove    // 当成员被移除时\n\nguild_messages (1 << 9)    // 消息事件，仅 *私域* 机器人能够设置此 intents。\n  - message_create         // 发送消息事件，代表频道内的全部消息，而不只是 at 机器人的消息。内容与 at_message_create 相同\n  - message_delete         // 删除（撤回）消息事件\n\nguild_message_reactions (1 << 10)\n  - message_reaction_add    // 为消息添加表情表态\n  - message_reaction_remove // 为消息删除表情表态\n\ndirect_message (1 << 12)\n  - direct_message_create   // 当收到用户发给机器人的私信消息时\n  - direct_message_delete   // 删除（撤回）消息事件\n\n\ngroup_and_c2c_event (1 << 25)\n  - c2c_message_create      // 用户单聊发消息给机器人时候\n  - friend_add              // 用户添加使用机器人\n  - friend_del              // 用户删除机器人\n  - c2c_msg_reject          // 用户在机器人资料卡手动关闭"主动消息"推送\n  - c2c_msg_receive         // 用户在机器人资料卡手动开启"主动消息"推送开关\n  - group_at_message_create // 用户在群里@机器人时收到的消息\n  - group_add_robot         // 机器人被添加到群聊\n  - group_del_robot         // 机器人被移出群聊\n  - group_msg_reject        // 群管理员主动在机器人资料页操作关闭通知\n  - group_msg_receive       // 群管理员主动在机器人资料页操作开启通知\n\ninteraction (1 << 26)\n  - interaction_create     // 互动事件创建时\n\nmessage_audit (1 << 27)\n  - message_audit_pass     // 消息审核通过\n  - message_audit_reject   // 消息审核不通过\n\nforums_event (1 << 28)  // 论坛事件，仅 *私域* 机器人能够设置此 intents。\n  - forum_thread_create     // 当用户创建主题时\n  - forum_thread_update     // 当用户更新主题时\n  - forum_thread_delete     // 当用户删除主题时\n  - forum_post_create       // 当用户创建帖子时\n  - forum_post_delete       // 当用户删除帖子时\n  - forum_reply_create      // 当用户回复评论时\n  - forum_reply_delete      // 当用户回复评论时\n  - forum_publish_audit_result      // 当用户发表审核通过时\n\naudio_action (1 << 29)\n  - audio_start             // 音频开始播放时\n  - audio_finish            // 音频播放结束时\n  - audio_on_mic            // 上麦时\n  - audio_off_mic           // 下麦时\n\npublic_guild_messages (1 << 30) // 消息事件，此为公域的消息事件\n  - at_message_create       // 当收到@机器人的消息时\n  - public_message_delete   // 当频道的消息被删除时\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n\n\n# 举例\n\n如开发者需要接收用户 at 机器人的消息，那么就需要在 intents 中设置接收 public_guild_messages。则需要先计算 1 << 30 的值。然后与 0 做位或操作，得到最终需要传递的 intents。\n\n如果涉及到多个事件类型的接收，则需要将多个结果做位或操作，如：0|1<<30|1<<1 代表订阅 public_guild_messages 和 guild_members 这两类事件。\n\n# 权限\n\n事件类型的订阅，是有权限控制的，除了 guilds，public_guild_messages，guild_members 事件是基础的事件，默认有权限订阅之外，其他的特殊事件，都需要经过申请才能够使用，如果在鉴权的时候传递了无权限的 intents， websocket 会报错，并直接关闭连接。请开发者注意订阅事件的范围需要控制在自己所需要的范围之内。\n\n如果拥有的某个特殊事件类型的权限被取消，则在当前连接上不会报错，但是将不会收到对应的事件类型，如果重新连接，则报错，所以如果开发者的事件类型权限被取消，请及时调整监听事件代码，避免报错导致的无法连接。\n\n\n# 分片连接loadbalance\n\n随着bot的增长并被添加到越来越多的频道中，事件越来越多，业务有必要对事件进行水平分割，实现负载均衡。机器人网关实现了一种用户可控制的分片方法，该方法允许跨多个网关连接拆分事件。 分片完全由用户控制，并且不需要在单独的连接之间进行状态共享。\n\n要在连接上启用分片，需要在建立连接的时候指定分片参数，具体参考gateway\n\n# 获得合适的分片数\n\n使用/gateway/bot接口获取网关地址的时候，会同时返回一个建议的 shard数，及最大并发限制。\n\n{\n  "url": "wss://sandbox.api.sgroup.qq.com/websocket",\n  "shards": 1,\n  "session_start_limit": {\n    "total": 1000,\n    "remaining": 1000,\n    "reset_after": 86400000,\n    "max_concurrency": 1\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 分片规则\n\n分片是按照频道id进行哈希的，同一个频道的信息会固定从同一个链接推送。具体哈希计算规则如下：\n\nshard_id = (guild_id >> 22) % num_shards\n\n\n1\n\n\n# 最大连接数\n\n每个机器人创建的连接数不能超过remaining剩余连接数',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"opcode",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/interface-framework/opcode.html",relativePath:"develop/api-v2/dev-prepare/interface-framework/opcode.md",key:"v-720a53ed",path:"/develop/api-v2/dev-prepare/interface-framework/opcode.html",lastUpdated:"9/12/2024, 1:12:52 PM",lastUpdatedTimestamp:1726146772e3,headersStr:null,content:"# opcode\n\n所有opcode列表如下：\n\nCODE   名称                  客户端操作           描述\n0      Dispatch            Receive         服务端进行消息推送\n1      Heartbeat           Send/Receive    客户端或服务端发送心跳\n2      Identify            Send            客户端发送鉴权\n6      Resume              Send            客户端恢复连接\n7      Reconnect           Receive         服务端通知客户端重新连接\n9      Invalid Session     Receive         当identify或resume的时候，如果参数有错，服务端会返回该消息\n10     Hello               Receive         当客户端与网关建立ws连接之后，网关下发的第一条消息\n11     Heartbeat ACK       Receive/Reply   当发送心跳成功之后，就会收到该消息\n12     HTTP Callback ACK   Reply           仅用于 http 回调模式的回包，代表机器人收到了平台推送的数据()\n13     回调地址验证              Receive         开放平台对机器人服务端进行验证\n\n客户端操作含义如下：\n\n * Receive 客户端接收到服务端 push 的消息\n * Send 客户端发送消息\n * Reply 客户端接收到服务端发送的消息之后的回包（HTTP 回调模式）",normalizedContent:"# opcode\n\n所有opcode列表如下：\n\ncode   名称                  客户端操作           描述\n0      dispatch            receive         服务端进行消息推送\n1      heartbeat           send/receive    客户端或服务端发送心跳\n2      identify            send            客户端发送鉴权\n6      resume              send            客户端恢复连接\n7      reconnect           receive         服务端通知客户端重新连接\n9      invalid session     receive         当identify或resume的时候，如果参数有错，服务端会返回该消息\n10     hello               receive         当客户端与网关建立ws连接之后，网关下发的第一条消息\n11     heartbeat ack       receive/reply   当发送心跳成功之后，就会收到该消息\n12     http callback ack   reply           仅用于 http 回调模式的回包，代表机器人收到了平台推送的数据()\n13     回调地址验证              receive         开放平台对机器人服务端进行验证\n\n客户端操作含义如下：\n\n * receive 客户端接收到服务端 push 的消息\n * send 客户端发送消息\n * reply 客户端接收到服务端发送的消息之后的回包（http 回调模式）",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"使用 Websocket 接入",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/interface-framework/reference.html",relativePath:"develop/api-v2/dev-prepare/interface-framework/reference.md",key:"v-25967209",path:"/develop/api-v2/dev-prepare/interface-framework/reference.html",headers:[{level:3,title:"payload",slug:"payload",normalizedTitle:"payload",charIndex:22},{level:3,title:"1.连接到 Gateway",slug:"_1-连接到-gateway",normalizedTitle:"1.连接到 gateway",charIndex:333},{level:3,title:"2.鉴权连接",slug:"_2-鉴权连接",normalizedTitle:"2.鉴权连接",charIndex:615},{level:3,title:"3.发送心跳",slug:"_3-发送心跳",normalizedTitle:"3.发送心跳",charIndex:1508},{level:3,title:"4.恢复连接",slug:"_4-恢复连接",normalizedTitle:"4.恢复连接",charIndex:1680}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"payload 1.连接到 Gateway 2.鉴权连接 3.发送心跳 4.恢复连接",content:'# 使用 Websocket 接入\n\n\n# payload\n\npayload 指的是在 websocket 连接上传输的数据，网关的上下行消息采用的都是同一个结构，如下：\n\n{\n  "op": 0,\n  "d": {},\n  "s": 42,\n  "t": "GATEWAY_EVENT_NAME"\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\nop 指的是 opcode，全部 opcode 列表参考 opcode。\n\ns 下行消息都会有一个序列号，标识消息的唯一性，客户端需要再发送心跳的时候，携带客户端收到的最新的s。\n\nt和d 主要是用在op为 0 Dispatch 的时候，t 代表事件类型，d 代表事件内容，不同事件类型的事件内容格式都不同，请注意识别。\n\n\n# 1.连接到 Gateway\n\n第一步先调用 /gateway 或 /gateway/bot 接口获取网关地址。 会得到一个类似下面这样的地址：\n\nwss://api.sgroup.qq.com/websocket/\n\n\n1\n\n\n然后进行 websocket 连接，一旦连接成功，就会返回 OpCode 10 Hello 消息。这个消息主要的内容是心跳周期，单位毫秒(milliseconds)，如下：\n\n{\n  "op": 10,\n  "d": {\n    "heartbeat_interval": 45000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2.鉴权连接\n\n建立 websocket 连接之后，就需要进行鉴权了，需要发送一个 OpCode 2 Identify 消息，如下：\n\n{\n  "op": 2,\n  "d": {\n    "token": "my_token",\n    "intents": 513,\n    "shard": [0, 4],\n    "properties": {\n      "$os": "linux",\n      "$browser": "my_library",\n      "$device": "my_library"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\ntoken 是创建机器人的时候分配的，格式为Bot {appid}.{app_token}\n\nintents 是此次连接所需要接收的事件，具体可参考 Intents\n\nshard 该参数是用来进行水平分片的。该参数是个拥有两个元素的数组。例如：[0,4]，代表分为四个片，当前链接是第 0 个片，业务稍后应该继续建立 shard 为[1,4],[2,4],[3,4]的链接，才能完整接收事件。更多详细的内容可以参考Shard。\n\nproperties 目前无实际作用，可以按照自己的实际情况填写，也可以留空\n\n鉴权成功之后，后台会下发一个 Ready Event，结构如下：\n\n{\n  "op": 0,\n  "s": 1,\n  "t": "READY",\n  "d": {\n    "version": 1,\n    "session_id": "082ee18c-0be3-491b-9d8b-fbd95c51673a",\n    "user": {\n      "id": "6158788878435714165",\n      "username": "群pro测试机器人",\n      "bot": true\n    },\n    "shard": [0, 0]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 3.发送心跳\n\n鉴权成功之后，就需要按照周期进行心跳发送。d为客户端收到的最新的消息的s，如果是第一次连接，传null。\n\n{\n  "op": 1,\n  "d": 251\n}\n\n\n1\n2\n3\n4\n\n\n心跳发送成功之后会收到 OpCode 11 Heartbeat ACK 消息，如下：\n\n{\n  "op": 11\n}\n\n\n1\n2\n3\n\n\n\n# 4.恢复连接\n\n有很多原因都会导致连接断开，断开之后短时间内重连会补发中间遗漏的事件，以保障业务逻辑的正确性。断开重连不需要发送Identify请求。在连接到 Gateway 之后，需要发送 Opcode 6 Resume消息，结构如下：\n\n{\n  "op": 6,\n  "d": {\n    "token": "my_token",\n    "session_id": "session_id_i_stored",\n    "seq": 1337\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n其中 seq 指的是在接收事件时候的 s 字段，我们推荐开发者在处理过事件之后记录下 s 这样可以在 resume 的时候传递给 websocket，websocket 会自动补发这个 seq 之后的事件。\n\n恢复成功之后，就开始补发遗漏事件，所有事件补发完成之后，会下发一个 Resumed Event，结构如下：\n\n{\n  "op": 0,\n  "s": 2002,\n  "t": "RESUMED",\n  "d": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# 使用 websocket 接入\n\n\n# payload\n\npayload 指的是在 websocket 连接上传输的数据，网关的上下行消息采用的都是同一个结构，如下：\n\n{\n  "op": 0,\n  "d": {},\n  "s": 42,\n  "t": "gateway_event_name"\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\nop 指的是 opcode，全部 opcode 列表参考 opcode。\n\ns 下行消息都会有一个序列号，标识消息的唯一性，客户端需要再发送心跳的时候，携带客户端收到的最新的s。\n\nt和d 主要是用在op为 0 dispatch 的时候，t 代表事件类型，d 代表事件内容，不同事件类型的事件内容格式都不同，请注意识别。\n\n\n# 1.连接到 gateway\n\n第一步先调用 /gateway 或 /gateway/bot 接口获取网关地址。 会得到一个类似下面这样的地址：\n\nwss://api.sgroup.qq.com/websocket/\n\n\n1\n\n\n然后进行 websocket 连接，一旦连接成功，就会返回 opcode 10 hello 消息。这个消息主要的内容是心跳周期，单位毫秒(milliseconds)，如下：\n\n{\n  "op": 10,\n  "d": {\n    "heartbeat_interval": 45000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2.鉴权连接\n\n建立 websocket 连接之后，就需要进行鉴权了，需要发送一个 opcode 2 identify 消息，如下：\n\n{\n  "op": 2,\n  "d": {\n    "token": "my_token",\n    "intents": 513,\n    "shard": [0, 4],\n    "properties": {\n      "$os": "linux",\n      "$browser": "my_library",\n      "$device": "my_library"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\ntoken 是创建机器人的时候分配的，格式为bot {appid}.{app_token}\n\nintents 是此次连接所需要接收的事件，具体可参考 intents\n\nshard 该参数是用来进行水平分片的。该参数是个拥有两个元素的数组。例如：[0,4]，代表分为四个片，当前链接是第 0 个片，业务稍后应该继续建立 shard 为[1,4],[2,4],[3,4]的链接，才能完整接收事件。更多详细的内容可以参考shard。\n\nproperties 目前无实际作用，可以按照自己的实际情况填写，也可以留空\n\n鉴权成功之后，后台会下发一个 ready event，结构如下：\n\n{\n  "op": 0,\n  "s": 1,\n  "t": "ready",\n  "d": {\n    "version": 1,\n    "session_id": "082ee18c-0be3-491b-9d8b-fbd95c51673a",\n    "user": {\n      "id": "6158788878435714165",\n      "username": "群pro测试机器人",\n      "bot": true\n    },\n    "shard": [0, 0]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 3.发送心跳\n\n鉴权成功之后，就需要按照周期进行心跳发送。d为客户端收到的最新的消息的s，如果是第一次连接，传null。\n\n{\n  "op": 1,\n  "d": 251\n}\n\n\n1\n2\n3\n4\n\n\n心跳发送成功之后会收到 opcode 11 heartbeat ack 消息，如下：\n\n{\n  "op": 11\n}\n\n\n1\n2\n3\n\n\n\n# 4.恢复连接\n\n有很多原因都会导致连接断开，断开之后短时间内重连会补发中间遗漏的事件，以保障业务逻辑的正确性。断开重连不需要发送identify请求。在连接到 gateway 之后，需要发送 opcode 6 resume消息，结构如下：\n\n{\n  "op": 6,\n  "d": {\n    "token": "my_token",\n    "session_id": "session_id_i_stored",\n    "seq": 1337\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n其中 seq 指的是在接收事件时候的 s 字段，我们推荐开发者在处理过事件之后记录下 s 这样可以在 resume 的时候传递给 websocket，websocket 会自动补发这个 seq 之后的事件。\n\n恢复成功之后，就开始补发遗漏事件，所有事件补发完成之后，会下发一个 resumed event，结构如下：\n\n{\n  "op": 0,\n  "s": 2002,\n  "t": "resumed",\n  "d": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"唯一身份机制",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/unique-id.html",relativePath:"develop/api-v2/dev-prepare/unique-id.md",key:"v-4c3b09e7",path:"/develop/api-v2/dev-prepare/unique-id.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 唯一身份机制\n\n不同的 bot(AppID) 获取到的用户 openid，群 openid，频道 openid 均不相同，若跨业务有关联用户身份需求，后续提供跨 AppID 绑定后，使用类似 unionid 的机制打通身份。\n\n举例\n\n * 不同 bot 在单聊场景，获取到的用户唯一识别 openid 不一样，称为 user_openid\n * 不同 bot 在群聊场景，获取到的群唯一识别号 openid 不一样，称为 group_openid\n * 相同 bot 在不同的群，获取到同一个用户在群内的唯一识别号 openid 不一样，称为 member_openid",normalizedContent:"# 唯一身份机制\n\n不同的 bot(appid) 获取到的用户 openid，群 openid，频道 openid 均不相同，若跨业务有关联用户身份需求，后续提供跨 appid 绑定后，使用类似 unionid 的机制打通身份。\n\n举例\n\n * 不同 bot 在单聊场景，获取到的用户唯一识别 openid 不一样，称为 user_openid\n * 不同 bot 在群聊场景，获取到的群唯一识别号 openid 不一样，称为 group_openid\n * 相同 bot 在不同的群，获取到同一个用户在群内的唯一识别号 openid 不一样，称为 member_openid",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"业务报错返回的数据信息(Data)",frontmatter:{},regularPath:"/develop/api-v2/gateway/error/data/model.html",relativePath:"develop/api-v2/gateway/error/data/model.md",key:"v-0591060d",path:"/develop/api-v2/gateway/error/data/model.html",headers:[{level:3,title:"Data",slug:"data",normalizedTitle:"data",charIndex:14}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Data",content:"# 业务报错返回的数据信息(Data)\n\n\n# Data\n\n字段名             类型                  描述\nmessage_audit   MessageAudited 对象   消息审核信息，只会填充该对象的 audit_id 字段",normalizedContent:"# 业务报错返回的数据信息(data)\n\n\n# data\n\n字段名             类型                  描述\nmessage_audit   messageaudited 对象   消息审核信息，只会填充该对象的 audit_id 字段",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"websocket 错误",frontmatter:{},regularPath:"/develop/api-v2/gateway/error/error.html",relativePath:"develop/api-v2/gateway/error/error.md",key:"v-266976e9",path:"/develop/api-v2/gateway/error/error.html",headers:[{level:3,title:"code",slug:"code",normalizedTitle:"code",charIndex:19},{level:3,title:"针对 websocket 错误码的简单处理逻辑",slug:"针对-websocket-错误码的简单处理逻辑",normalizedTitle:"针对 websocket 错误码的简单处理逻辑",charIndex:1163}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"code 针对 websocket 错误码的简单处理逻辑",content:"# websocket 错误\n\n\n# code\n\n值           含义                                      是否可以重试 RESUME   是否可以重试 IDENTIFY\n4001        无效的 opcode                              否               否\n4002        无效的 payload                             否               否\n4007        seq 错误                                  否               是\n4006        无效的 session id，无法继续 resume，请 identify   否               是\n4008        发送 payload 过快，请重新连接，并遵守连接后返回的频控信息       是               是\n4009        连接过期，请重连并执行 resume 进行重新连接               是               是\n4010        无效的 shard                               否               否\n4011        连接需要处理的 guild 过多，请进行合理的分片               否               否\n4012        无效的 version                             否               否\n4013        无效的 intent                              否               否\n4014        intent 无权限                              否               否\n4014        intent 无权限                              否               否\n4900~4913   内部错误，请重连                                否               是\n4914        机器人已下架,只允许连接沙箱环境,请断开连接,检验当前连接环境         否               否\n4915        机器人已封禁,不允许连接,请断开连接,申请解封后再连接             否               否\n\n\n# 针对 websocket 错误码的简单处理逻辑\n\n * 4009 可以重新发起 resume\n * 4914，4915 不可以连接，请联系官方解封\n * 其他错误，请重新发起 identify",normalizedContent:"# websocket 错误\n\n\n# code\n\n值           含义                                      是否可以重试 resume   是否可以重试 identify\n4001        无效的 opcode                              否               否\n4002        无效的 payload                             否               否\n4007        seq 错误                                  否               是\n4006        无效的 session id，无法继续 resume，请 identify   否               是\n4008        发送 payload 过快，请重新连接，并遵守连接后返回的频控信息       是               是\n4009        连接过期，请重连并执行 resume 进行重新连接               是               是\n4010        无效的 shard                               否               否\n4011        连接需要处理的 guild 过多，请进行合理的分片               否               否\n4012        无效的 version                             否               否\n4013        无效的 intent                              否               否\n4014        intent 无权限                              否               否\n4014        intent 无权限                              否               否\n4900~4913   内部错误，请重连                                否               是\n4914        机器人已下架,只允许连接沙箱环境,请断开连接,检验当前连接环境         否               否\n4915        机器人已封禁,不允许连接,请断开连接,申请解封后再连接             否               否\n\n\n# 针对 websocket 错误码的简单处理逻辑\n\n * 4009 可以重新发起 resume\n * 4914，4915 不可以连接，请联系官方解封\n * 其他错误，请重新发起 identify",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"安全和授权",frontmatter:{},regularPath:"/develop/api-v2/dev-prepare/interface-framework/sign.html",relativePath:"develop/api-v2/dev-prepare/interface-framework/sign.md",key:"v-d3fd96e6",path:"/develop/api-v2/dev-prepare/interface-framework/sign.html",headers:[{level:2,title:"安全凭证",slug:"安全凭证",normalizedTitle:"安全凭证",charIndex:70},{level:2,title:"验证签名",slug:"验证签名",normalizedTitle:"验证签名",charIndex:108},{level:3,title:"1. 签名验证参数",slug:"_1-签名验证参数",normalizedTitle:"1. 签名验证参数",charIndex:151},{level:3,title:"2. 验证签名过程",slug:"_2-验证签名过程",normalizedTitle:"2. 验证签名过程",charIndex:419}],lastUpdated:"9/12/2024, 1:12:52 PM",lastUpdatedTimestamp:1726146772e3,headersStr:"安全凭证 验证签名 1. 签名验证参数 2. 验证签名过程",content:'# 安全和授权\n\n开发者需要对每一次回调请求，根据回调中的签名等信息验证请求者身份，避免安全隐患。目前签名算法使用Ed25519。\n\n\n# 安全凭证\n\n开发者平台的 Bot Secret 用于加密签名字符串和服务器端验证签名字符串的密钥。用户必须严格保管安全凭证，避免泄露。\n\n\n# 验证签名\n\n\n# 1. 签名验证参数\n\n字段名                     说明                          参考值\nX-Signature-Ed25519     HTTP Header 中透传 Signature   3ecd***（64字节）\nX-Signature-Timestamp   HTTP Header 透传的签名时间戳        1636373772\nHTTP Body               HTTP 请求中 Body 值             {"msg":"hello"}\n\n\n# 2. 验证签名过程\n\n以下代码以Go语言为例,引用 crypto/ed25519 包实现 Ed25519 算法\n\n * 根据开发者平台的 Bot Secret 值进行repeat操作得到签名32字节的 seed ,根据 seed 调用 Ed25519 算法生成32字节公钥\n\n  // 根据botSecret进行repeat操作后得到seed值计算出公钥\n  seed := botSecret\n  for len(seed) < ed25519.SeedSize {\n    seed = strings.Repeat(seed, 2)\n  }\n  rand := strings.NewReader(seed[:ed25519.SeedSize])\n  publicKey, privateKey, err := ed25519.GenerateKey(rand)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nDEMO\n\n【输入】\nsecret: naOC0ocQE3shWLAfffVLB1rhYPG7\nseed: naOC0ocQE3shWLAfffVLB1rhYPG7naOC\n【输出】\npublicKey: [215 195 98 254 120 174 248 31 242 50 135 180 147 98 139 93 176 42 60 79 227 11 33 94 77 25 96 155 93 118 103 58]\nprivateKey: [110 97 79 67 48 111 99 81 69 51 115 104 87 76 65 102 102 102 86 76 66 49 114 104 89 80 71 55 110 97 79 67 215 195 98 254 120 174 248 31 242 50 135 180 147 98 139 93 176 42 60 79 227 11 33 94 77 25 96 155 93 118 103 58]\n\n\n1\n2\n3\n4\n5\n6\n\n * 获取 HTTP Header 中 X-Signature-Ed25519 的值进行 hec (十六进制解码)操作后的得到 Signature 并进行校验\n\n  // 取HTTP header中X-Signature-Ed25519(进行hex解码)并校验 \n  signature := req.Header.Get("X-Signature-Ed25519")\n  if signature == "" {\n    return false\n  }\n  sig, err := hex.DecodeString(signature)\n  if err != nil {\n    return false\n  }\n  if len(sig) != ed25519.SignatureSize || sig[63]&224 != 0 {\n    return false\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 获取 HTTP Header 中 X-Signature-Timestamp 的和 HTTP Body 的值按照 timestamp+body 顺序进行组合成签名体msg\n\n    // 取HTTP header中 X-Signature-Timestamp 并校验\n  timestamp := req.Header.Get("X-Signature-Timestamp")\n  if timestamp == "" {\n    return false\n  }\n  httpBody, err := io.ReadAll(req.Body)\n  if err != nil {\n    return false\n  }\n  // 按照timestamp+Body顺序组成签名体\n  var msg bytes.Buffer\n  msg.WriteString(timestamp)\n  msg.Write(httpBody)\n  if err != nil {\n    return false\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n * 根据公钥、Signature、签名体调用 Ed25519 算法进行验证\n\n  ed25519.Verify(publicKey, msg.Bytes(), sig)\n\n\n1\n\n\nDEMO\n\n【输入】\nsecret: naOC0ocQE3shWLAfffVLB1rhYPG7\nbody: { "op": 0,"d": {}, "t": "GATEWAY_EVENT_NAME"}\ntimestamp: 1725442341\n\n【输出】\nsig: 865ad13a61752ca65e26bde6676459cd36cf1be609375b37bd62af366e1dc25a8dc789ba7f14e017ada3d554c671a911bfdf075ba54835b23391d509579ed002\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',normalizedContent:'# 安全和授权\n\n开发者需要对每一次回调请求，根据回调中的签名等信息验证请求者身份，避免安全隐患。目前签名算法使用ed25519。\n\n\n# 安全凭证\n\n开发者平台的 bot secret 用于加密签名字符串和服务器端验证签名字符串的密钥。用户必须严格保管安全凭证，避免泄露。\n\n\n# 验证签名\n\n\n# 1. 签名验证参数\n\n字段名                     说明                          参考值\nx-signature-ed25519     http header 中透传 signature   3ecd***（64字节）\nx-signature-timestamp   http header 透传的签名时间戳        1636373772\nhttp body               http 请求中 body 值             {"msg":"hello"}\n\n\n# 2. 验证签名过程\n\n以下代码以go语言为例,引用 crypto/ed25519 包实现 ed25519 算法\n\n * 根据开发者平台的 bot secret 值进行repeat操作得到签名32字节的 seed ,根据 seed 调用 ed25519 算法生成32字节公钥\n\n  // 根据botsecret进行repeat操作后得到seed值计算出公钥\n  seed := botsecret\n  for len(seed) < ed25519.seedsize {\n    seed = strings.repeat(seed, 2)\n  }\n  rand := strings.newreader(seed[:ed25519.seedsize])\n  publickey, privatekey, err := ed25519.generatekey(rand)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\ndemo\n\n【输入】\nsecret: naoc0ocqe3shwlafffvlb1rhypg7\nseed: naoc0ocqe3shwlafffvlb1rhypg7naoc\n【输出】\npublickey: [215 195 98 254 120 174 248 31 242 50 135 180 147 98 139 93 176 42 60 79 227 11 33 94 77 25 96 155 93 118 103 58]\nprivatekey: [110 97 79 67 48 111 99 81 69 51 115 104 87 76 65 102 102 102 86 76 66 49 114 104 89 80 71 55 110 97 79 67 215 195 98 254 120 174 248 31 242 50 135 180 147 98 139 93 176 42 60 79 227 11 33 94 77 25 96 155 93 118 103 58]\n\n\n1\n2\n3\n4\n5\n6\n\n * 获取 http header 中 x-signature-ed25519 的值进行 hec (十六进制解码)操作后的得到 signature 并进行校验\n\n  // 取http header中x-signature-ed25519(进行hex解码)并校验 \n  signature := req.header.get("x-signature-ed25519")\n  if signature == "" {\n    return false\n  }\n  sig, err := hex.decodestring(signature)\n  if err != nil {\n    return false\n  }\n  if len(sig) != ed25519.signaturesize || sig[63]&224 != 0 {\n    return false\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 获取 http header 中 x-signature-timestamp 的和 http body 的值按照 timestamp+body 顺序进行组合成签名体msg\n\n    // 取http header中 x-signature-timestamp 并校验\n  timestamp := req.header.get("x-signature-timestamp")\n  if timestamp == "" {\n    return false\n  }\n  httpbody, err := io.readall(req.body)\n  if err != nil {\n    return false\n  }\n  // 按照timestamp+body顺序组成签名体\n  var msg bytes.buffer\n  msg.writestring(timestamp)\n  msg.write(httpbody)\n  if err != nil {\n    return false\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n * 根据公钥、signature、签名体调用 ed25519 算法进行验证\n\n  ed25519.verify(publickey, msg.bytes(), sig)\n\n\n1\n\n\ndemo\n\n【输入】\nsecret: naoc0ocqe3shwlafffvlb1rhypg7\nbody: { "op": 0,"d": {}, "t": "gateway_event_name"}\ntimestamp: 1725442341\n\n【输出】\nsig: 865ad13a61752ca65e26bde6676459cd36cf1be609375b37bd62af366e1dc25a8dc789ba7f14e017ada3d554c671a911bfdf075ba54835b23391d509579ed002\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情对象",frontmatter:{},regularPath:"/develop/api-v2/openapi/emoji/model.html",relativePath:"develop/api-v2/openapi/emoji/model.md",key:"v-1b9126da",path:"/develop/api-v2/openapi/emoji/model.html",headers:[{level:3,title:"Emoji",slug:"emoji",normalizedTitle:"emoji",charIndex:11},{level:3,title:"EmojiType",slug:"emojitype",normalizedTitle:"emojitype",charIndex:121},{level:3,title:"Emoji列表",slug:"emoji列表",normalizedTitle:"emoji列表",charIndex:178}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Emoji EmojiType Emoji列表",content:"# 表情对象\n\n\n# Emoji\n\n字段名    类型       描述\nid     string   表情ID，系统表情使用数字为ID，emoji使用emoji本身为id，参考 Emoji 列表\ntype   uint32   表情类型 EmojiType\n\n\n# EmojiType\n\n值   描述\n1   系统表情\n2   emoji表情\n\n\n# Emoji列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的QQ系统表情类型（EmojiType=1）来处理。\n\n表情类型   表情ID     表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      NO\n1      124      OK\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",normalizedContent:"# 表情对象\n\n\n# emoji\n\n字段名    类型       描述\nid     string   表情id，系统表情使用数字为id，emoji使用emoji本身为id，参考 emoji 列表\ntype   uint32   表情类型 emojitype\n\n\n# emojitype\n\n值   描述\n1   系统表情\n2   emoji表情\n\n\n# emoji列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的qq系统表情类型（emojitype=1）来处理。\n\n表情类型   表情id     表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      no\n1      124      ok\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"openapi 错误",frontmatter:{},regularPath:"/develop/api-v2/openapi/error/error.html",relativePath:"develop/api-v2/openapi/error/error.md",key:"v-cc6f5f5e",path:"/develop/api-v2/openapi/error/error.html",headers:[{level:2,title:"错误码处理",slug:"错误码处理",normalizedTitle:"错误码处理",charIndex:17},{level:3,title:"http 状态码",slug:"http-状态码",normalizedTitle:"http 状态码",charIndex:38},{level:3,title:"code",slug:"code",normalizedTitle:"code",charIndex:72},{level:2,title:"有关 traceID",slug:"有关-traceid",normalizedTitle:"有关 traceid",charIndex:8979}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"错误码处理 http 状态码 code 有关 traceID",content:"# openapi 错误\n\n\n# 错误码处理\n\n错误码分为两部分：\n\n * http 状态码\n * http body 返回的 json 中的 code\n * 其中有一些错误会在 http body 返回的 json 中的 data 中，返回业务具体信息。例如 主动消息审核\n\n如：\n\n\n# http 状态码\n\n值         含义\n200       成功\n204       成功，但是无包体，一般用于删除操作\n201,202   异步操作成功，虽然说成功，但是会返回一个 error body，需要特殊处理\n401       认证失败\n404       未找到 API\n405       http method 不允许\n429       频率限制\n500       处理失败\n504       处理失败\n\n\n# code\n\n值                 含义\n10001             UnknownAccount 账号异常\n10003             UnknownChannel 子频道异常\n10004             UnknownGuild 频道异常\n11281             ErrorCheckAdminFailed 检查是否是管理员失败，系统错误，一般重试一次会好，最多只能重试一次\n11282             ErrorCheckAdminNotPass\n                  检查是否是管理员未通过，该接口需要管理员权限，但是用户在添加机器人的时候并未授予该权限，属于逻辑错误，可以提示用户进行授权\n11251             ErrorWrongAppid 参数中的 appid 错误，开发者填的 token 错误，appid 无法识别\n11252             ErrorCheckAppPrivilegeFailed 检查应用权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11253             ErrorCheckAppPrivilegeNotPass\n                  检查应用权限不通过，该机器人应用未获得调用该接口的权限，需要向平台申请\n11254             ErrorInterfaceForbidden 应用接口被封禁，该机器人虽然获得了该接口权限，但是被封禁了。\n11261             ErrorWrongAppid 参数中缺少 appid，同 11251\n11262             ErrorCheckRobot 当前接口不支持使用机器人 Bot Token 调用\n11263             ErrorCheckGuildAuth 检查频道权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11264             ErrorGuildAuthNotPass\n                  检查小站权限未通过，管理员添加机器人的时候未授予该接口权限，属于逻辑错误，可提示用户进行授权，如果已经给予授权，请检查传递的\n                  guild id 是否正确\n11265             ErrorRobotHasBaned 机器人已经被封禁\n11241             ErrorWrongToken 参数中缺少 token\n11242             ErrorCheckTokenFailed 校验 token 失败，系统错误，一般重试一次会好，最多只能重试一次\n11243             ErrorCheckTokenNotPass 校验 token 未通过，用户填充的 token 错误，需要开发者进行检查\n11273             ErrorCheckUserAuth 检查用户权限失败，当前接口不支持使用 Bearer Token 调用\n11274             ErrorUserAuthNotPass 检查用户权限未通过，用户 OAuth\n                  授权时未给与该接口权限，可提示用户重新进行授权\n11275             ErrorWrongAppid 无 appid ，同 11251\n11301             ErrorGetHTTPHeader HTTP Header 无效\n11302             ErrorGetHeaderUIN HTTP Header 无效\n11303             ErrorGetNick 获取昵称失败\n11304             ErrorGetAvatar 获取头像失败\n11305             ErrorGetGuildID 获取频道 ID 失败\n11306             ErrorGetGuildInfo 获取频道信息失败\n12001             ReplaceIDFailed 替换 id 失败\n12002             RequestInvalid 请求体错误\n12003             ResponseInvalid 回包错误\n20028             ChannelHitWriteRateLimit 子频道消息触发限频\n50006             CannotSendEmptyMessage 消息为空\n50035             InvalidFormBody form-data 内容异常\n50037             带有markdown消息只支持 markdown 或者 keyboard 组合\n50038             非同频道同子频道\n50039             获取消息失败\n50040             消息模版类型错误\n50041             markdown 有空值\n50042             markdown 列表长达最大值\n50043             guild_id 转换失败\n50045             不能回复机器人自己产生的消息\n50046             非 at 机器人消息\n50047             非机器人产生的消息 或者 at 机器人消息\n50048             message id 不能为空\n50049             只能修改含有 keyboard 元素的消息\n50050             修改消息时，keyboard 元素不能为空\n50051             只能修改机器人自己发送的消息\n50053             修改消息错误\n50054             markdown 模版参数错误\n50055             无效的 markdown content\n50056             不允许发送 markdown content\n50057             markdown 参数只支持原生语法或者模版二选一\n301000~301099     子频道权限错误\n301000            参数错误\n301001            查询频道信息错误\n301002            查询子频道权限错误\n301003            修改子频道权限错误\n301004            私密子频道关联的人数到达上限\n301005            调用 Rpc 服务失败\n301006            非群成员没有查询权限\n301007            参数超过数量限制\n302000            参数错误\n302001            查询频道信息错误\n302002            查询日程列表失败\n302003            查询日程失败\n302004            修改日程失败\n302005            删除日程失败\n302006            创建日程失败\n302007            获取创建者信息失败\n302008            子频道 ID 不能为空\n302009            频道系统错误，请联系客服\n302010            暂无修改日程权限\n302011            日程活动已被删除\n302012            每天只能创建 10 个日程，明天再来吧！\n302013            创建日程触发安全打击\n302014            日程持续时间超过 7 天，请重新选择\n302015            开始时间不能早于当前时间\n302016            结束时间不能早于开始时间\n302017            Schedule 对象为空\n302018            参数类型转换失败\n302019            调用下游失败，请联系客服\n302020            日程内容违规、账号违规\n302021            频道内当日新增活动达上限\n302022            不能绑定非当前频道的子频道\n302023            开始时跳转不可绑定日程子频道\n302024            绑定的子频道不存在\n304003            URL_NOT_ALLOWED url 未报备\n304004            ARK_NOT_ALLOWED 没有发 ark 消息权限\n304005            EMBED_LIMIT embed 长度超限\n304006            SERVER_CONFIG 后台配置错误\n304007            GET_GUILD 查询频道异常\n304008            GET_BOT 查询机器人异常\n304009            GET_CHENNAL 查询子频道异常\n304010            CHANGE_IMAGE_URL 图片转存错误\n304011            NO_TEMPLATE 模板不存在\n304012            GET_TEMPLATE 取模板错误\n304014            TEMPLATE_PRIVILEGE 没有模板权限\n304016            SEND_ERROR 发消息错误\n304017            UPLOAD_IMAGE 图片上传错误\n304018            SESSION_NOT_EXIST 机器人没连上 gateway\n304019            AT_EVERYONE_TIMES @全体成员 次数超限\n304020            FILE_SIZE 文件大小超限\n304021            GET_FILE 下载文件错误\n304022            PUSH_TIME 推送消息时间限制\n304023            PUSH_MSG_ASYNC_OK 推送消息异步调用成功, 等待人工审核\n304024            REPLY_MSG_ASYNC_OK 回复消息异步调用成功, 等待人工审核\n304025            BEAT 消息被打击\n304026            MSG_ID 回复的消息 id 错误\n304027            MSG_EXPIRE 回复的消息过期\n304028            MSG_PROTECT 非 At 当前用户的消息不允许回复\n304029            CORPUS_ERROR 调语料服务错误\n304030            CORPUS_NOT_MATCH 语料不匹配\n304031            私信已关闭\n304032            私信不存在\n304033            拉私信错误\n304034            不是私信成员\n304035            推送消息超过子频道数量限制\n304036            没有 markdown 模板的权限\n304037            没有发消息按钮组件的权限\n304038            消息按钮组件不存在\n304039            消息按钮组件解析错误\n304040            消息按钮组件消息内容错误\n304044            取消息设置错误\n304045            子频道主动消息数限频\n304046            不允许在此子频道发主动消息\n304047            主动消息推送超过限制的子频道数\n304048            不允许在此频道发主动消息\n304049            私信主动消息数限频\n304050            私信主动消息总量限频\n304051            消息设置引导请求构造错误\n304052            发消息设置引导超频\n306001            param invalid 撤回消息参数错误\n306002            msgid error 消息 id 错误\n306003            fail to get message 获取消息错误(可重试)\n306004            no permission to delete message 没有撤回此消息的权限\n306005            retract message error 消息撤回失败(可重试)\n306006            fail to get channel 获取子频道失败(可重试)\n501000~501999     公告错误\n501001            参数校验失败\n501002            创建子频道公告失败(可重试)\n501003            删除子频道公告失败(可重试)\n501004            获取频道信息失败(可重试)\n501005            MessageID 错误\n501006            创建频道全局公告失败(可重试)\n501007            删除频道全局公告失败(可重试)\n501008            MessageID 不存在\n501009            MessageID 解析失败\n501010            此条消息非子频道内消息\n501011            创建精华消息失败(可重试)\n501012            删除精华消息失败(可重试)\n501013            精华消息超过最大数量\n501014            安全打击\n501015            此消息不允许设置\n501016            频道公告子频道推荐超过最大数量\n501017            非频道主或管理员\n501018            推荐子频道 ID 无效\n501019            公告类型错误\n501020            创建推荐子频道类型频道公告失败\n502000~502099     禁言相关错误\n502001            频道 id 无效\n502002            频道 id 为空\n502003            用户 id 无效\n502004            用户 id 为空\n502005            timestamp 不合法\n502006            timestamp 无效\n502007            参数转换错误\n502008            rpc 调用失败\n502009            安全打击\n502010            请求头错误\n503001            频道 id 无效\n503002            频道 id 为空\n503003            获取子频道信息失败\n503004            超出发布帖子的频次限制\n503005            帖子标题为空\n503006            帖子内容为空\n503007            帖子ID为空\n503008            获取X-Uin失败\n503009            帖子ID无效或不合法\n503010            通过Uin获取TinyID失败\n503011            帖子ID里面的时间戳无效或不合法\n503012            帖子不存在或已删除\n503013            服务器内部错误\n503014            帖子JSON内容解析失败\n503015            帖子内容转换失败\n503016            链接数量超过限制\n503017            字数超过限制\n503018            图片数量超过限制\n503019            视频数量超过限制\n503020            标题长度超过限制\n504000~504999     消息频率相关错误\n504001            请求参数无效错误\n504002            获取 HTTP 头失败\n504003            获取 BOT UIN 错误\n504004            获取消息频率设置信息错误\n610000-619999     频道权限错误 ~~\n610001            获取频道 ID 失败\n610002            获取 HTTP 头失败\n610003            获取机器人号码失败\n610004            获取机器人角色失败\n610005            获取机器人角色内部错误\n610006            拉取机器人权限列表失败\n610007            机器人不在频道内\n610008            无效参数\n610009            获取 API 接口详情失败\n610010            API 接口已授权\n610011            获取机器人信息失败\n610012            限频失败\n610013            已限频\n610014            api 授权链接发送失败\n620001-629999     表情表态错误\n620001            表情表态无效参数\n620002            已经达到表情反应的类型数量上限\n620003            已经设置过该表情表态\n620004            没有设置过该表情表态\n620005            没有权限设置表情表态\n620006            操作限频\n620007            表情表态操作失败，请重试\n630001-639999     互动回调数据更新\n630001            互动回调数据更新无效参数\n630002            互动回调数据更新获取AppID失败\n630003            互动回调数据AppID不匹配\n630004            互动回调数据更新内部存储错误\n630005            互动回调数据更新内部存储读取错误\n630006            互动回调数据更新读取请求AppID失败\n630007            互动回调数据太大\n1000000~2999999   发消息错误\n1100100           安全打击：消息被限频\n1100101           安全打击：内容涉及敏感，请返回修改\n1100102           安全打击：抱歉，暂未获得新功能体验资格\n1100103           安全打击\n1100104           安全打击：该群已失效或当前群已不存在\n1100300           系统内部错误\n1100301           调用方不是群成员\n1100302           获取指定频道名称失败\n1100303           主页频道非管理员不允许发消息\n1100304           @次数鉴权失败\n1100305           TinyId 转换 Uin 失败\n1100306           非私有频道成员\n1100307           非白名单应用子频道\n1100308           触发频道内限频\n1100499           其他错误\n3000000~3999999   编辑消息错误\n3300006           安全打击\n\n\n# 有关 traceID\n\n在 openapi 的返回 http 头上，有一个 X-Tps-trace-ID 自定义头部，是平台的链路追踪 ID，如果开发者有无法自己定位的问题，需要找平台协助的时候，可以提取这个 ID，提交给平台方。\n\n方便查询相关日志。",normalizedContent:"# openapi 错误\n\n\n# 错误码处理\n\n错误码分为两部分：\n\n * http 状态码\n * http body 返回的 json 中的 code\n * 其中有一些错误会在 http body 返回的 json 中的 data 中，返回业务具体信息。例如 主动消息审核\n\n如：\n\n\n# http 状态码\n\n值         含义\n200       成功\n204       成功，但是无包体，一般用于删除操作\n201,202   异步操作成功，虽然说成功，但是会返回一个 error body，需要特殊处理\n401       认证失败\n404       未找到 api\n405       http method 不允许\n429       频率限制\n500       处理失败\n504       处理失败\n\n\n# code\n\n值                 含义\n10001             unknownaccount 账号异常\n10003             unknownchannel 子频道异常\n10004             unknownguild 频道异常\n11281             errorcheckadminfailed 检查是否是管理员失败，系统错误，一般重试一次会好，最多只能重试一次\n11282             errorcheckadminnotpass\n                  检查是否是管理员未通过，该接口需要管理员权限，但是用户在添加机器人的时候并未授予该权限，属于逻辑错误，可以提示用户进行授权\n11251             errorwrongappid 参数中的 appid 错误，开发者填的 token 错误，appid 无法识别\n11252             errorcheckappprivilegefailed 检查应用权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11253             errorcheckappprivilegenotpass\n                  检查应用权限不通过，该机器人应用未获得调用该接口的权限，需要向平台申请\n11254             errorinterfaceforbidden 应用接口被封禁，该机器人虽然获得了该接口权限，但是被封禁了。\n11261             errorwrongappid 参数中缺少 appid，同 11251\n11262             errorcheckrobot 当前接口不支持使用机器人 bot token 调用\n11263             errorcheckguildauth 检查频道权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11264             errorguildauthnotpass\n                  检查小站权限未通过，管理员添加机器人的时候未授予该接口权限，属于逻辑错误，可提示用户进行授权，如果已经给予授权，请检查传递的\n                  guild id 是否正确\n11265             errorrobothasbaned 机器人已经被封禁\n11241             errorwrongtoken 参数中缺少 token\n11242             errorchecktokenfailed 校验 token 失败，系统错误，一般重试一次会好，最多只能重试一次\n11243             errorchecktokennotpass 校验 token 未通过，用户填充的 token 错误，需要开发者进行检查\n11273             errorcheckuserauth 检查用户权限失败，当前接口不支持使用 bearer token 调用\n11274             erroruserauthnotpass 检查用户权限未通过，用户 oauth\n                  授权时未给与该接口权限，可提示用户重新进行授权\n11275             errorwrongappid 无 appid ，同 11251\n11301             errorgethttpheader http header 无效\n11302             errorgetheaderuin http header 无效\n11303             errorgetnick 获取昵称失败\n11304             errorgetavatar 获取头像失败\n11305             errorgetguildid 获取频道 id 失败\n11306             errorgetguildinfo 获取频道信息失败\n12001             replaceidfailed 替换 id 失败\n12002             requestinvalid 请求体错误\n12003             responseinvalid 回包错误\n20028             channelhitwriteratelimit 子频道消息触发限频\n50006             cannotsendemptymessage 消息为空\n50035             invalidformbody form-data 内容异常\n50037             带有markdown消息只支持 markdown 或者 keyboard 组合\n50038             非同频道同子频道\n50039             获取消息失败\n50040             消息模版类型错误\n50041             markdown 有空值\n50042             markdown 列表长达最大值\n50043             guild_id 转换失败\n50045             不能回复机器人自己产生的消息\n50046             非 at 机器人消息\n50047             非机器人产生的消息 或者 at 机器人消息\n50048             message id 不能为空\n50049             只能修改含有 keyboard 元素的消息\n50050             修改消息时，keyboard 元素不能为空\n50051             只能修改机器人自己发送的消息\n50053             修改消息错误\n50054             markdown 模版参数错误\n50055             无效的 markdown content\n50056             不允许发送 markdown content\n50057             markdown 参数只支持原生语法或者模版二选一\n301000~301099     子频道权限错误\n301000            参数错误\n301001            查询频道信息错误\n301002            查询子频道权限错误\n301003            修改子频道权限错误\n301004            私密子频道关联的人数到达上限\n301005            调用 rpc 服务失败\n301006            非群成员没有查询权限\n301007            参数超过数量限制\n302000            参数错误\n302001            查询频道信息错误\n302002            查询日程列表失败\n302003            查询日程失败\n302004            修改日程失败\n302005            删除日程失败\n302006            创建日程失败\n302007            获取创建者信息失败\n302008            子频道 id 不能为空\n302009            频道系统错误，请联系客服\n302010            暂无修改日程权限\n302011            日程活动已被删除\n302012            每天只能创建 10 个日程，明天再来吧！\n302013            创建日程触发安全打击\n302014            日程持续时间超过 7 天，请重新选择\n302015            开始时间不能早于当前时间\n302016            结束时间不能早于开始时间\n302017            schedule 对象为空\n302018            参数类型转换失败\n302019            调用下游失败，请联系客服\n302020            日程内容违规、账号违规\n302021            频道内当日新增活动达上限\n302022            不能绑定非当前频道的子频道\n302023            开始时跳转不可绑定日程子频道\n302024            绑定的子频道不存在\n304003            url_not_allowed url 未报备\n304004            ark_not_allowed 没有发 ark 消息权限\n304005            embed_limit embed 长度超限\n304006            server_config 后台配置错误\n304007            get_guild 查询频道异常\n304008            get_bot 查询机器人异常\n304009            get_chennal 查询子频道异常\n304010            change_image_url 图片转存错误\n304011            no_template 模板不存在\n304012            get_template 取模板错误\n304014            template_privilege 没有模板权限\n304016            send_error 发消息错误\n304017            upload_image 图片上传错误\n304018            session_not_exist 机器人没连上 gateway\n304019            at_everyone_times @全体成员 次数超限\n304020            file_size 文件大小超限\n304021            get_file 下载文件错误\n304022            push_time 推送消息时间限制\n304023            push_msg_async_ok 推送消息异步调用成功, 等待人工审核\n304024            reply_msg_async_ok 回复消息异步调用成功, 等待人工审核\n304025            beat 消息被打击\n304026            msg_id 回复的消息 id 错误\n304027            msg_expire 回复的消息过期\n304028            msg_protect 非 at 当前用户的消息不允许回复\n304029            corpus_error 调语料服务错误\n304030            corpus_not_match 语料不匹配\n304031            私信已关闭\n304032            私信不存在\n304033            拉私信错误\n304034            不是私信成员\n304035            推送消息超过子频道数量限制\n304036            没有 markdown 模板的权限\n304037            没有发消息按钮组件的权限\n304038            消息按钮组件不存在\n304039            消息按钮组件解析错误\n304040            消息按钮组件消息内容错误\n304044            取消息设置错误\n304045            子频道主动消息数限频\n304046            不允许在此子频道发主动消息\n304047            主动消息推送超过限制的子频道数\n304048            不允许在此频道发主动消息\n304049            私信主动消息数限频\n304050            私信主动消息总量限频\n304051            消息设置引导请求构造错误\n304052            发消息设置引导超频\n306001            param invalid 撤回消息参数错误\n306002            msgid error 消息 id 错误\n306003            fail to get message 获取消息错误(可重试)\n306004            no permission to delete message 没有撤回此消息的权限\n306005            retract message error 消息撤回失败(可重试)\n306006            fail to get channel 获取子频道失败(可重试)\n501000~501999     公告错误\n501001            参数校验失败\n501002            创建子频道公告失败(可重试)\n501003            删除子频道公告失败(可重试)\n501004            获取频道信息失败(可重试)\n501005            messageid 错误\n501006            创建频道全局公告失败(可重试)\n501007            删除频道全局公告失败(可重试)\n501008            messageid 不存在\n501009            messageid 解析失败\n501010            此条消息非子频道内消息\n501011            创建精华消息失败(可重试)\n501012            删除精华消息失败(可重试)\n501013            精华消息超过最大数量\n501014            安全打击\n501015            此消息不允许设置\n501016            频道公告子频道推荐超过最大数量\n501017            非频道主或管理员\n501018            推荐子频道 id 无效\n501019            公告类型错误\n501020            创建推荐子频道类型频道公告失败\n502000~502099     禁言相关错误\n502001            频道 id 无效\n502002            频道 id 为空\n502003            用户 id 无效\n502004            用户 id 为空\n502005            timestamp 不合法\n502006            timestamp 无效\n502007            参数转换错误\n502008            rpc 调用失败\n502009            安全打击\n502010            请求头错误\n503001            频道 id 无效\n503002            频道 id 为空\n503003            获取子频道信息失败\n503004            超出发布帖子的频次限制\n503005            帖子标题为空\n503006            帖子内容为空\n503007            帖子id为空\n503008            获取x-uin失败\n503009            帖子id无效或不合法\n503010            通过uin获取tinyid失败\n503011            帖子id里面的时间戳无效或不合法\n503012            帖子不存在或已删除\n503013            服务器内部错误\n503014            帖子json内容解析失败\n503015            帖子内容转换失败\n503016            链接数量超过限制\n503017            字数超过限制\n503018            图片数量超过限制\n503019            视频数量超过限制\n503020            标题长度超过限制\n504000~504999     消息频率相关错误\n504001            请求参数无效错误\n504002            获取 http 头失败\n504003            获取 bot uin 错误\n504004            获取消息频率设置信息错误\n610000-619999     频道权限错误 ~~\n610001            获取频道 id 失败\n610002            获取 http 头失败\n610003            获取机器人号码失败\n610004            获取机器人角色失败\n610005            获取机器人角色内部错误\n610006            拉取机器人权限列表失败\n610007            机器人不在频道内\n610008            无效参数\n610009            获取 api 接口详情失败\n610010            api 接口已授权\n610011            获取机器人信息失败\n610012            限频失败\n610013            已限频\n610014            api 授权链接发送失败\n620001-629999     表情表态错误\n620001            表情表态无效参数\n620002            已经达到表情反应的类型数量上限\n620003            已经设置过该表情表态\n620004            没有设置过该表情表态\n620005            没有权限设置表情表态\n620006            操作限频\n620007            表情表态操作失败，请重试\n630001-639999     互动回调数据更新\n630001            互动回调数据更新无效参数\n630002            互动回调数据更新获取appid失败\n630003            互动回调数据appid不匹配\n630004            互动回调数据更新内部存储错误\n630005            互动回调数据更新内部存储读取错误\n630006            互动回调数据更新读取请求appid失败\n630007            互动回调数据太大\n1000000~2999999   发消息错误\n1100100           安全打击：消息被限频\n1100101           安全打击：内容涉及敏感，请返回修改\n1100102           安全打击：抱歉，暂未获得新功能体验资格\n1100103           安全打击\n1100104           安全打击：该群已失效或当前群已不存在\n1100300           系统内部错误\n1100301           调用方不是群成员\n1100302           获取指定频道名称失败\n1100303           主页频道非管理员不允许发消息\n1100304           @次数鉴权失败\n1100305           tinyid 转换 uin 失败\n1100306           非私有频道成员\n1100307           非白名单应用子频道\n1100308           触发频道内限频\n1100499           其他错误\n3000000~3999999   编辑消息错误\n3300006           安全打击\n\n\n# 有关 traceid\n\n在 openapi 的返回 http 头上，有一个 x-tps-trace-id 自定义头部，是平台的链路追踪 id，如果开发者有无法自己定位的问题，需要找平台协助的时候，可以提取这个 id，提交给平台方。\n\n方便查询相关日志。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"业务报错返回的数据信息(Data)",frontmatter:{},regularPath:"/develop/api-v2/openapi/error/data/model.html",relativePath:"develop/api-v2/openapi/error/data/model.md",key:"v-3a924e8d",path:"/develop/api-v2/openapi/error/data/model.html",headers:[{level:2,title:"Data",slug:"data",normalizedTitle:"data",charIndex:14}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Data",content:"# 业务报错返回的数据信息(Data)\n\n\n# Data\n\n字段名             类型                  描述\nmessage_audit   MessageAudited 对象   消息审核信息，只会填充该对象的 audit_id 字段",normalizedContent:"# 业务报错返回的数据信息(data)\n\n\n# data\n\n字段名             类型                  描述\nmessage_audit   messageaudited 对象   消息审核信息，只会填充该对象的 audit_id 字段",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道成员",frontmatter:{},regularPath:"/develop/api-v2/openapi/member/delete_member.html",relativePath:"develop/api-v2/openapi/member/delete_member.md",key:"v-f506fd66",path:"/develop/api-v2/openapi/member/delete_member.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:70},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:198},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:238},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:465},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:492},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:508}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 删除频道成员\n\n\n# 接口\n\nDELETE /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除 guild_id 指定的频道下的成员 user_id。\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件。\n * 无法移除身份为管理员的成员\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                       类型     描述\nadd_blacklist             bool   删除成员的同时，将该用户添加到频道黑名单中\ndelete_history_msg_days   int    删除成员的同时，撤回该成员的消息，可以指定撤回消息的时间范围\n\n注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息。\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /guilds/123456/members/112233\n{\n    "add_blacklist": true,\n    "delete_history_msg_days": -1\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 删除频道成员\n\n\n# 接口\n\ndelete /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除 guild_id 指定的频道下的成员 user_id。\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件。\n * 无法移除身份为管理员的成员\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                       类型     描述\nadd_blacklist             bool   删除成员的同时，将该用户添加到频道黑名单中\ndelete_history_msg_days   int    删除成员的同时，撤回该成员的消息，可以指定撤回消息的时间范围\n\n注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息。\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /guilds/123456/members/112233\n{\n    "add_blacklist": true,\n    "delete_history_msg_days": -1\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取成员详情",frontmatter:{},regularPath:"/develop/api-v2/openapi/member/get_member.html",relativePath:"develop/api-v2/openapi/member/get_member.md",key:"v-161381a3",path:"/develop/api-v2/openapi/member/get_member.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:67},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:117},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:157},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:180},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:196}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取成员详情\n\n\n# 接口\n\nGET /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中 user_id 对应成员的详细信息。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回Member 成员对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /guilds/123456/members/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "user": {\n    "id": "2823701233424295228",\n    "username": "xxx",\n    "avatar": "https://qqchannel-profile-1251316161.file.myqcloud.com/xxxxxxx",\n    "bot": false,\n    "union_openid": "",\n    "union_user_account": ""\n  },\n  "nick": "",\n  "roles": [\n    "1"\n  ],\n  "joined_at": "2021-12-05T14:08:29+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',normalizedContent:'# 获取成员详情\n\n\n# 接口\n\nget /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中 user_id 对应成员的详细信息。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回member 成员对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /guilds/123456/members/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "user": {\n    "id": "2823701233424295228",\n    "username": "xxx",\n    "avatar": "https://qqchannel-profile-1251316161.file.myqcloud.com/xxxxxxx",\n    "bot": false,\n    "union_openid": "",\n    "union_user_account": ""\n  },\n  "nick": "",\n  "roles": [\n    "1"\n  ],\n  "joined_at": "2021-12-05t14:08:29+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员列表",frontmatter:{},regularPath:"/develop/api-v2/openapi/member/get_members.html",relativePath:"develop/api-v2/openapi/member/get_members.md",key:"v-59b19f0d",path:"/develop/api-v2/openapi/member/get_members.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:59},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:105},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:145},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:296},{level:3,title:"有关返回结果的说明",slug:"有关返回结果的说明",normalizedTitle:"有关返回结果的说明",charIndex:320},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:481},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:497}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 有关返回结果的说明 错误码 示例",content:'# 获取频道成员列表\n\n\n# 接口\n\nGET /guilds/{guild_id}/members\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中所有成员的详情列表，支持分页。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nafter   string   上一次回包中最后一个member的user id， 如果是第一次请求填 0，默认为 0\nlimit   uint32   分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数\n\n\n# 返回\n\n返回 Member 对象数组。\n\n\n# 有关返回结果的说明\n\n 1. 在每次翻页的过程中，可能会返回上一次请求已经返回过的member信息，需要调用方自己根据user id来进行去重。\n\n 2. 每次返回的member数量与limit不一定完全相等。翻页请使用最后一个member的user id作为下一次请求的after参数，直到回包为空，拉取结束。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求\n\nGET /guilds/123456/members?limit=2\n\n\n1\n\n\n响应数据包\n\n[\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxx",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["1"],\n    "joined_at": "2021-12-09T15:53:41+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  },\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "秦时明月",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["4"],\n    "joined_at": "2021-12-02T15:19:00+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',normalizedContent:'# 获取频道成员列表\n\n\n# 接口\n\nget /guilds/{guild_id}/members\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中所有成员的详情列表，支持分页。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nafter   string   上一次回包中最后一个member的user id， 如果是第一次请求填 0，默认为 0\nlimit   uint32   分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数\n\n\n# 返回\n\n返回 member 对象数组。\n\n\n# 有关返回结果的说明\n\n 1. 在每次翻页的过程中，可能会返回上一次请求已经返回过的member信息，需要调用方自己根据user id来进行去重。\n\n 2. 每次返回的member数量与limit不一定完全相等。翻页请使用最后一个member的user id作为下一次请求的after参数，直到回包为空，拉取结束。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求\n\nget /guilds/123456/members?limit=2\n\n\n1\n\n\n响应数据包\n\n[\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxx",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["1"],\n    "joined_at": "2021-12-09t15:53:41+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  },\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "秦时明月",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["4"],\n    "joined_at": "2021-12-02t15:19:00+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"成员对象(Member)",frontmatter:{},regularPath:"/develop/api-v2/openapi/member/model.html",relativePath:"develop/api-v2/openapi/member/model.md",key:"v-5ec66dad",path:"/develop/api-v2/openapi/member/model.html",headers:[{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:7},{level:3,title:"MemberWithGuildID",slug:"memberwithguildid",normalizedTitle:"memberwithguildid",charIndex:269}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Member MemberWithGuildID",content:"# 成员对象(Member)\n\n\n# Member\n\n字段名         类型                  描述\nuser        User                用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份组ID, 默认值可参考DefaultRoles\njoined_at   ISO8601 timestamp   用户加入频道的时间\n\n\n# MemberWithGuildID\n\n字段名         类型                  描述\nguild_id    string              频道id\nuser        User                用户的频道基础信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份\njoined_at   ISO8601 timestamp   用户加入频道的时间",normalizedContent:"# 成员对象(member)\n\n\n# member\n\n字段名         类型                  描述\nuser        user                用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份组id, 默认值可参考defaultroles\njoined_at   iso8601 timestamp   用户加入频道的时间\n\n\n# memberwithguildid\n\n字段名         类型                  描述\nguild_id    string              频道id\nuser        user                用户的频道基础信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份\njoined_at   iso8601 timestamp   用户加入频道的时间",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情表态对象",frontmatter:{},regularPath:"/develop/api-v2/openapi/reaction/model.html",relativePath:"develop/api-v2/openapi/reaction/model.md",key:"v-a98dede6",path:"/develop/api-v2/openapi/reaction/model.html",headers:[{level:3,title:"MessageReaction",slug:"messagereaction",normalizedTitle:"messagereaction",charIndex:13},{level:3,title:"ReactionTarget",slug:"reactiontarget",normalizedTitle:"reactiontarget",charIndex:182},{level:3,title:"ReactionTargetType",slug:"reactiontargettype",normalizedTitle:"reactiontargettype",charIndex:334}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"MessageReaction ReactionTarget ReactionTargetType",content:"# 表情表态对象\n\n\n# MessageReaction\n\n字段名          类型               描述\nuser_id      string           用户ID\nguild_id     string           频道ID\nchannel_id   string           子频道ID\ntarget       ReactionTarget   表态对象\nemoji        Emoji            表态所用表情\n\n\n# ReactionTarget\n\n字段名    类型                   描述\nid     string               表态对象ID\ntype   ReactionTargetType   表态对象类型，参考 ReactionTargetType\n\n\n# ReactionTargetType\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复",normalizedContent:"# 表情表态对象\n\n\n# messagereaction\n\n字段名          类型               描述\nuser_id      string           用户id\nguild_id     string           频道id\nchannel_id   string           子频道id\ntarget       reactiontarget   表态对象\nemoji        emoji            表态所用表情\n\n\n# reactiontarget\n\n字段名    类型                   描述\nid     string               表态对象id\ntype   reactiontargettype   表态对象类型，参考 reactiontargettype\n\n\n# reactiontargettype\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取用户详情",frontmatter:{},regularPath:"/develop/api-v2/openapi/user/me.html",relativePath:"develop/api-v2/openapi/user/me.md",key:"v-5efc5a9b",path:"/develop/api-v2/openapi/user/me.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:41},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:68},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:108},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:128},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:144}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取用户详情\n\n\n# 接口\n\nGET /users/@me\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）详情。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 User 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "id": "11586990140073229091",\n  "username": "gitsub",\n  "avatar": "https://thirdqq.qlogo.cn/g?b=oidb&k=M5TibpXicS7Jt4z89BZxiamAA&s=100&t=1641802698",\n  "union_openid": "74F138F7F3AF68C4B8E8325013FCA295",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 获取用户详情\n\n\n# 接口\n\nget /users/@me\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）详情。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 user 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "id": "11586990140073229091",\n  "username": "gitsub",\n  "avatar": "https://thirdqq.qlogo.cn/g?b=oidb&k=m5tibpxics7jt4z89bzxiamaa&s=100&t=1641802698",\n  "union_openid": "74f138f7f3af68c4b8e8325013fca295",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取用户频道列表",frontmatter:{},regularPath:"/develop/api-v2/openapi/user/guilds.html",relativePath:"develop/api-v2/openapi/user/guilds.md",key:"v-53b4fcea",path:"/develop/api-v2/openapi/user/guilds.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:50},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:166},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:206},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:437},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:460},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:476}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 获取用户频道列表\n\n\n# 接口\n\nGET /users/@me/guilds\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）所加入的频道列表，支持分页。\n\n当 HTTP Authorization 中填入 Bot Token 是获取机器人的数据，填入 Bearer Token 则获取用户的数据。 票据说明。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述                  要求\nbefore   string   读此 guild id 之前的数据   before 设置时， 先反序，再分页\nafter    string   读此 guild id 之后的数据   after 和 before 同时设置时， after 参数无效\nlimit    int      每次拉取多少条数据           默认 100, 最大 100\n\n\n# 返回\n\n返回 Guild 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n[{\n    "id": "696527283900292399",\n    "name": "鹅们的萌宠啦咔咔啦",\n    "icon": "https://groupprohead-76292.picgzc.qpic.cn/482231626508223/100?t=1626508224633",\n    "owner_id": "4828365788198541698",\n    "owner": false,\n    "joined_at": "2021-12-08T16:12:31+08:00",\n    "member_count": 17,\n    "max_members": 300,\n    "description": "123"\n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 获取用户频道列表\n\n\n# 接口\n\nget /users/@me/guilds\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）所加入的频道列表，支持分页。\n\n当 http authorization 中填入 bot token 是获取机器人的数据，填入 bearer token 则获取用户的数据。 票据说明。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述                  要求\nbefore   string   读此 guild id 之前的数据   before 设置时， 先反序，再分页\nafter    string   读此 guild id 之后的数据   after 和 before 同时设置时， after 参数无效\nlimit    int      每次拉取多少条数据           默认 100, 最大 100\n\n\n# 返回\n\n返回 guild 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n[{\n    "id": "696527283900292399",\n    "name": "鹅们的萌宠啦咔咔啦",\n    "icon": "https://groupprohead-76292.picgzc.qpic.cn/482231626508223/100?t=1626508224633",\n    "owner_id": "4828365788198541698",\n    "owner": false,\n    "joined_at": "2021-12-08t16:12:31+08:00",\n    "member_count": 17,\n    "max_members": 300,\n    "description": "123"\n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"用户对象(User)",frontmatter:{},regularPath:"/develop/api-v2/openapi/user/model.html",relativePath:"develop/api-v2/openapi/user/model.md",key:"v-b6a66a66",path:"/develop/api-v2/openapi/user/model.html",headers:[{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:7},{level:3,title:"提示",slug:"提示",normalizedTitle:"提示",charIndex:418}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"User 提示",content:"# 用户对象(User)\n\n用户对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID\n\n\n# User\n\n字段名                  类型       描述\nid                   string   用户 id\nusername             string   用户名\navatar               string   用户头像地址\nbot                  bool     是否是机器人\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与union_openid关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 提示\n\nunion_openid 与 union_user_account 只有在单独拉取 member 信息的时候才会提供，在其他的事件中所携带的 user 对象，均无这两个字段的内容。",normalizedContent:"# 用户对象(user)\n\n用户对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关。请不要理解为真实的 id\n\n\n# user\n\n字段名                  类型       描述\nid                   string   用户 id\nusername             string   用户名\navatar               string   用户头像地址\nbot                  bool     是否是机器人\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与union_openid关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 提示\n\nunion_openid 与 union_user_account 只有在单独拉取 member 信息的时候才会提供，在其他的事件中所携带的 user 对象，均无这两个字段的内容。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取通用 WSS 接入点",frontmatter:{},regularPath:"/develop/api-v2/openapi/wss/url_get.html",relativePath:"develop/api-v2/openapi/wss/url_get.md",key:"v-0cc041b7",path:"/develop/api-v2/openapi/wss/url_get.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:19},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:45},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:93},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:133},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:165},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:181}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取通用 WSS 接入点\n\n\n# 接口\n\nGET /gateway\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 WSS 接入地址，通过该地址可建立 websocket 长连接。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回一个用于连接 websocket 的地址。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "url": "wss://api.sgroup.qq.com/websocket/"\n}\n\n\n1\n2\n3\n',normalizedContent:'# 获取通用 wss 接入点\n\n\n# 接口\n\nget /gateway\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 wss 接入地址，通过该地址可建立 websocket 长连接。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回一个用于连接 websocket 的地址。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "url": "wss://api.sgroup.qq.com/websocket/"\n}\n\n\n1\n2\n3\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取带分片 WSS 接入点",frontmatter:{},regularPath:"/develop/api-v2/openapi/wss/shard_url_get.html",relativePath:"develop/api-v2/openapi/wss/shard_url_get.md",key:"v-58b25779",path:"/develop/api-v2/openapi/wss/shard_url_get.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:20},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:50},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:136},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:176},{level:3,title:"SessionStartLimit",slug:"sessionstartlimit",normalizedTitle:"sessionstartlimit",charIndex:359},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:620},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:636}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 SessionStartLimit 错误码 示例",content:'# 获取带分片 WSS 接入点\n\n\n# 接口\n\nGET /gateway/bot\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 WSS 接入地址及相关信息，通过该地址可建立 websocket 长连接。相关信息包括：\n\n * 建议的分片数。\n * 目前连接数使用情况。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名                   类型                  描述\nurl                   string              WebSocket 的连接地址\nshards                int                 建议的 shard 数\nsession_start_limit   SessionStartLimit   创建 Session 限制信息\n\n\n# SessionStartLimit\n\n字段名               类型    描述\ntotal             int   每 24 小时可创建 Session 数\nremaining         int   目前还可以创建的 Session 数\nreset_after       int   重置计数的剩余时间(ms)\nmax_concurrency   int   每 5s 可以创建的 Session 数\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n{\n  "wss://api.sgroup.qq.com/websocket/",\n  "shards": 9,\n  "session_start_limit": {\n    "total": 1000,\n    "remaining": 999,\n    "reset_after": 14400000,\n    "max_concurrency": 1\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# 获取带分片 wss 接入点\n\n\n# 接口\n\nget /gateway/bot\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 wss 接入地址及相关信息，通过该地址可建立 websocket 长连接。相关信息包括：\n\n * 建议的分片数。\n * 目前连接数使用情况。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名                   类型                  描述\nurl                   string              websocket 的连接地址\nshards                int                 建议的 shard 数\nsession_start_limit   sessionstartlimit   创建 session 限制信息\n\n\n# sessionstartlimit\n\n字段名               类型    描述\ntotal             int   每 24 小时可创建 session 数\nremaining         int   目前还可以创建的 session 数\nreset_after       int   重置计数的剩余时间(ms)\nmax_concurrency   int   每 5s 可以创建的 session 数\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n{\n  "wss://api.sgroup.qq.com/websocket/",\n  "shards": 9,\n  "session_start_limit": {\n    "total": 1000,\n    "remaining": 999,\n    "reset_after": 14400000,\n    "max_concurrency": 1\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/api_permissions/",relativePath:"develop/api-v2/server-inter/channel/api_permissions/README.md",key:"v-0886d424",path:"/develop/api-v2/server-inter/channel/api_permissions/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/",relativePath:"develop/api-v2/server-inter/channel/README.md",key:"v-234805c4",path:"/develop/api-v2/server-inter/channel/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取机器人在频道可用权限列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/api_permissions/get_guild_api_permission.html",relativePath:"develop/api-v2/server-inter/channel/api_permissions/get_guild_api_permission.md",key:"v-6732c15e",path:"/develop/api-v2/server-inter/channel/api_permissions/get_guild_api_permission.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:21},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:72},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:114},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:154},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:231},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:247}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取机器人在频道可用权限列表\n\n\n# 接口\n\nGET /guilds/{guild_id}/api_permission\n\n\n1\n\n\n\n# 功能描述\n\n用于获取机器人在频道 guild_id 内可以使用的权限列表。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名    类型                   描述\napis   APIPermission 对象数组   机器人可用权限列表\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "GET",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "POST",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# 获取机器人在频道可用权限列表\n\n\n# 接口\n\nget /guilds/{guild_id}/api_permission\n\n\n1\n\n\n\n# 功能描述\n\n用于获取机器人在频道 guild_id 内可以使用的权限列表。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名    类型                   描述\napis   apipermission 对象数组   机器人可用权限列表\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "get",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "post",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"接口权限对象",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/api_permissions/model.html",relativePath:"develop/api-v2/server-inter/channel/api_permissions/model.md",key:"v-452e0b4d",path:"/develop/api-v2/server-inter/channel/api_permissions/model.html",headers:[{level:2,title:"接口权限对象 (APIPermission)",slug:"接口权限对象-apipermission",normalizedTitle:"接口权限对象 (apipermission)",charIndex:13},{level:2,title:"接口权限需求对象（APIPermissionDemand）",slug:"接口权限需求对象-apipermissiondemand",normalizedTitle:"接口权限需求对象（apipermissiondemand）",charIndex:262},{level:2,title:"接口权限需求标识对象（APIPermissionDemandIdentify）",slug:"接口权限需求标识对象-apipermissiondemandidentify",normalizedTitle:"接口权限需求标识对象（apipermissiondemandidentify）",charIndex:651}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口权限对象 (APIPermission) 接口权限需求对象（APIPermissionDemand） 接口权限需求标识对象（APIPermissionDemandIdentify）",content:"# 接口权限对象\n\n\n# 接口权限对象 (APIPermission)\n\n字段名           类型       描述\npath          string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 GET\ndesc          string   API 接口名称，例如 获取频道信\nauth_status   int      授权状态，auth_stats 为 1 时已授权\n\n\n# 接口权限需求对象（APIPermissionDemand）\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 id\nchannel_id     string                        接口权限需求授权链接发送的子频道 id\napi_identify   APIPermissionDemandIdentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（APIPermissionDemandIdentify）\n\n字段名      类型       描述\npath     string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 GET",normalizedContent:"# 接口权限对象\n\n\n# 接口权限对象 (apipermission)\n\n字段名           类型       描述\npath          string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 get\ndesc          string   api 接口名称，例如 获取频道信\nauth_status   int      授权状态，auth_stats 为 1 时已授权\n\n\n# 接口权限需求对象（apipermissiondemand）\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 id\nchannel_id     string                        接口权限需求授权链接发送的子频道 id\napi_identify   apipermissiondemandidentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（apipermissiondemandidentify）\n\n字段名      类型       描述\npath     string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 get",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送机器人在频道接口权限的授权链接",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/api_permissions/post_api_permission_demand.html",relativePath:"develop/api-v2/server-inter/channel/api_permissions/post_api_permission_demand.md",key:"v-356d6496",path:"/develop/api-v2/server-inter/channel/api_permissions/post_api_permission_demand.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:10},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:83},{level:2,title:"示例图",slug:"示例图",normalizedTitle:"示例图",charIndex:166},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:174},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:214},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:472},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:506},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:166}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 示例图 Content-Type 参数 返回 错误码 示例",content:'# 发送机器人在频道接口权限的授权链接\n\n\n# 接口\n\nPOST /guilds/{guild_id}/api_permission/demand\n\n\n1\n\n\n\n# 功能描述\n\n用于创建 API 接口权限授权链接，该链接指向guild_id对应的频道 。\n\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接。\n\n\n# 示例图\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名            类型                               描述\nchannel_id     string                           授权链接发送的子频道 id\napi_identify   APIPermissionDemandIdentify 对象   api 权限需求标识对象\ndesc           string                           机器人申请对应的 API 接口权限后可以使用功能的描述\n\n\n# 返回\n\n返回APIPermissionDemand 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "channel_id": "123456",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "GET"\n  },\n  "desc": "显示频道信息"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "GET"\n  },\n  "title": "王者机器人申请授权频道信息接口权限",\n  "desc": "申请权限后才能正常使用机器人显示频道信息功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# 发送机器人在频道接口权限的授权链接\n\n\n# 接口\n\npost /guilds/{guild_id}/api_permission/demand\n\n\n1\n\n\n\n# 功能描述\n\n用于创建 api 接口权限授权链接，该链接指向guild_id对应的频道 。\n\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接。\n\n\n# 示例图\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名            类型                               描述\nchannel_id     string                           授权链接发送的子频道 id\napi_identify   apipermissiondemandidentify 对象   api 权限需求标识对象\ndesc           string                           机器人申请对应的 api 接口权限后可以使用功能的描述\n\n\n# 返回\n\n返回apipermissiondemand 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "channel_id": "123456",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "get"\n  },\n  "desc": "显示频道信息"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "get"\n  },\n  "title": "王者机器人申请授权频道信息接口权限",\n  "desc": "申请权限后才能正常使用机器人显示频道信息功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/",relativePath:"develop/api-v2/server-inter/channel/content/README.md",key:"v-0352f9f0",path:"/develop/api-v2/server-inter/channel/content/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道公告（2022年3月15日后废弃）",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/announces/delete_channel_announces.html",relativePath:"develop/api-v2/server-inter/channel/content/announces/delete_channel_announces.md",key:"v-223dea19",path:"/develop/api-v2/server-inter/channel/content/announces/delete_channel_announces.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:29},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:95},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:289},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:329},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:356},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:372}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:"# 删除子频道公告（2022年3月15日后废弃）\n\n\n# 接口\n\nDELETE /channels/{channel_id}/announces/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除子频道 channel_id 下指定 message_id 的子频道公告（）。\n\n * 此接口在 APP v8.8.65 后不保证完全兼容并且2022年3月15日后会废弃，如需此功能请使用 删除精华消息\n * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /channels/123456/announces/112233\n\n\n1\n",normalizedContent:"# 删除子频道公告（2022年3月15日后废弃）\n\n\n# 接口\n\ndelete /channels/{channel_id}/announces/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除子频道 channel_id 下指定 message_id 的子频道公告（）。\n\n * 此接口在 app v8.8.65 后不保证完全兼容并且2022年3月15日后会废弃，如需此功能请使用 删除精华消息\n * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /channels/123456/announces/112233\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道公告",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/announces/delete_guild_announces.html",relativePath:"develop/api-v2/server-inter/channel/content/announces/delete_guild_announces.md",key:"v-793415b9",path:"/develop/api-v2/server-inter/channel/content/announces/delete_guild_announces.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:75},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:202},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:242},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:269},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:285}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:"# 删除频道公告\n\n\n# 接口\n\nDELETE /guilds/{guild_id}/announces/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除频道 guild_id 下指定 message_id 的全局公告。\n\n * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /guilds/123456/announces/112233\n\n\n1\n",normalizedContent:"# 删除频道公告\n\n\n# 接口\n\ndelete /guilds/{guild_id}/announces/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除频道 guild_id 下指定 message_id 的全局公告。\n\n * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /guilds/123456/announces/112233\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"公告对象(Announces)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/announces/model.html",relativePath:"develop/api-v2/server-inter/channel/content/announces/model.md",key:"v-41c362ed",path:"/develop/api-v2/server-inter/channel/content/announces/model.html",headers:[{level:2,title:"Announces",slug:"announces",normalizedTitle:"announces",charIndex:7},{level:2,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:317}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Announces RecommendChannel",content:"# 公告对象(Announces)\n\n\n# Announces\n\n字段名                  类型                    描述\nguild_id             string                频道 id\nchannel_id           string                子频道 id\nmessage_id           string                消息 id\nannounces_type       uint32                公告类别 0:成员公告 1:欢迎公告，默认成员公告\nrecommend_channels   RecommendChannel 数组   推荐子频道详情列表\n\n\n# 推荐子频道对象(RecommendChannel)\n\n\n# RecommendChannel\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   推荐语",normalizedContent:"# 公告对象(announces)\n\n\n# announces\n\n字段名                  类型                    描述\nguild_id             string                频道 id\nchannel_id           string                子频道 id\nmessage_id           string                消息 id\nannounces_type       uint32                公告类别 0:成员公告 1:欢迎公告，默认成员公告\nrecommend_channels   recommendchannel 数组   推荐子频道详情列表\n\n\n# 推荐子频道对象(recommendchannel)\n\n\n# recommendchannel\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   推荐语",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道公告（2022年3月15日后废弃）",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/announces/post_channel_announces.html",relativePath:"develop/api-v2/server-inter/channel/content/announces/post_channel_announces.md",key:"v-594deb22",path:"/develop/api-v2/server-inter/channel/content/announces/post_channel_announces.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:29},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:80},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:186},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:226},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:287},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:311},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:327}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 创建子频道公告（2022年3月15日后废弃）\n\n\n# 接口\n\nPOST /channels/{channel_id}/announces\n\n\n1\n\n\n\n# 功能描述\n\n用于将子频道 channel_id 内的某条消息设置为子频道公告。\n\n * 此接口在 APP v8.8.65 后不保证完全兼容并且2022年3月15日后会废弃，如需此功能请使用 添加精华消息\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名          类型       描述\nmessage_id   string   消息 id\n\n\n# 返回\n\n返回Announces 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "message_id": "xxxxxx"\n}\n\n\n1\n2\n3\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_id": "xxxxxx"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建子频道公告（2022年3月15日后废弃）\n\n\n# 接口\n\npost /channels/{channel_id}/announces\n\n\n1\n\n\n\n# 功能描述\n\n用于将子频道 channel_id 内的某条消息设置为子频道公告。\n\n * 此接口在 app v8.8.65 后不保证完全兼容并且2022年3月15日后会废弃，如需此功能请使用 添加精华消息\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名          类型       描述\nmessage_id   string   消息 id\n\n\n# 返回\n\n返回announces 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "message_id": "xxxxxx"\n}\n\n\n1\n2\n3\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_id": "xxxxxx"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"音频控制",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/audio/audio_control.html",relativePath:"develop/api-v2/server-inter/channel/content/audio/audio_control.md",key:"v-3ebc95cd",path:"/develop/api-v2/server-inter/channel/content/audio/audio_control.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:58},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:151},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:191},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:216},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:242},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:258}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 音频控制\n\n\n# 接口\n\nPOST /channels/{channel_id}/audio\n\n\n1\n\n\n\n# 功能描述\n\n用于控制子频道 channel_id 下的音频。\n\n * 音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n参照 AudioControl。\n\n\n# 返回\n\n成功返回空对象。\n\n{}\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "audio_url": "http:/xxxxx.mp3",\n  "text": "xxx",\n  "status": 0\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{}\n\n\n1\n',normalizedContent:'# 音频控制\n\n\n# 接口\n\npost /channels/{channel_id}/audio\n\n\n1\n\n\n\n# 功能描述\n\n用于控制子频道 channel_id 下的音频。\n\n * 音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n参照 audiocontrol。\n\n\n# 返回\n\n成功返回空对象。\n\n{}\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "audio_url": "http:/xxxxx.mp3",\n  "text": "xxx",\n  "status": 0\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{}\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道公告",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/announces/post_guild_announces.html",relativePath:"develop/api-v2/server-inter/channel/content/announces/post_guild_announces.md",key:"v-e3e9b362",path:"/develop/api-v2/server-inter/channel/content/announces/post_guild_announces.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:60},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:420},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:118},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:809},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:833},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:849}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 创建频道公告\n\n\n# 接口\n\nPOST /guilds/{guild_id}/announces\n\n\n1\n\n\n\n# 功能描述\n\n用于创建频道全局公告，公告类型分为 消息类型的频道公告 和 推荐子频道类型的频道公告 。\n\n * 当请求参数 message_id 有值时，优先创建消息类型的频道公告， 消息类型的频道公告只能创建成员公告类型的频道公告。\n * 创建推荐子频道类型的频道全局公告请将 message_id 设置为空，并设置对应的 announces_type 和 recommend_channels 请求参数，会一次全部替换推荐子频道公司。\n * 推荐子频道和消息类型全局公告不能同时存在，会互相顶替设置。\n * 同频道内推荐子频道最多只能创建 3 条。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除推荐子频道类型的频道公告请使用 删除频道公告,并将 message_id 设置为 all。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型                    描述\nmessage_id           string                选填，消息 id，message_id 有值则优选将某条消息设置为成员公告\nchannel_id           string                选填，子频道 id，message_id 有值则为必填。\nannounces_type       uint32                选填，公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommend_channels   RecommendChannel 数组   选填，推荐子频道列表，会一次全部替换推荐子频道列表\n\n\n# 返回\n\n返回Announces 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n创建频道公告请求数据包\n\n{\n  "channel_id": "123456",\n  "message_id": "xxxxxx"\n}\n\n\n1\n2\n3\n4\n\n\n创建频道公告响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "message_id": "xxxxxx",\n  "announces_type": 0,\n  "recommend_channels":[]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n创建推荐子频道类型的频道公告请求数据包\n\n{\n "announces_type": 1,\n "recommend_channels": [{\n  "channel_id": "xxxx",\n  "introduce": "推荐语"\n }, {\n  "channel_id": "xxxx",\n  "introduce": "推荐语"\n }]\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n创建推荐子频道类型的频道公告响应数据包\n\n{\n\t"guild_id": "xxxxxx",\n\t"channel_id": "xxxxx",\n    "message_id": "",\n\t"announces_type": 1,\n\t"recommend_channels": [{\n\t\t"channel_id": "xxxx",\n\t\t"introduce": "推荐语"\n\t}, {\n\t\t"channel_id": "xxxx",\n\t\t"introduce": "推荐语"\n\t}]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'# 创建频道公告\n\n\n# 接口\n\npost /guilds/{guild_id}/announces\n\n\n1\n\n\n\n# 功能描述\n\n用于创建频道全局公告，公告类型分为 消息类型的频道公告 和 推荐子频道类型的频道公告 。\n\n * 当请求参数 message_id 有值时，优先创建消息类型的频道公告， 消息类型的频道公告只能创建成员公告类型的频道公告。\n * 创建推荐子频道类型的频道全局公告请将 message_id 设置为空，并设置对应的 announces_type 和 recommend_channels 请求参数，会一次全部替换推荐子频道公司。\n * 推荐子频道和消息类型全局公告不能同时存在，会互相顶替设置。\n * 同频道内推荐子频道最多只能创建 3 条。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除推荐子频道类型的频道公告请使用 删除频道公告,并将 message_id 设置为 all。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型                    描述\nmessage_id           string                选填，消息 id，message_id 有值则优选将某条消息设置为成员公告\nchannel_id           string                选填，子频道 id，message_id 有值则为必填。\nannounces_type       uint32                选填，公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommend_channels   recommendchannel 数组   选填，推荐子频道列表，会一次全部替换推荐子频道列表\n\n\n# 返回\n\n返回announces 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n创建频道公告请求数据包\n\n{\n  "channel_id": "123456",\n  "message_id": "xxxxxx"\n}\n\n\n1\n2\n3\n4\n\n\n创建频道公告响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "message_id": "xxxxxx",\n  "announces_type": 0,\n  "recommend_channels":[]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n创建推荐子频道类型的频道公告请求数据包\n\n{\n "announces_type": 1,\n "recommend_channels": [{\n  "channel_id": "xxxx",\n  "introduce": "推荐语"\n }, {\n  "channel_id": "xxxx",\n  "introduce": "推荐语"\n }]\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n创建推荐子频道类型的频道公告响应数据包\n\n{\n\t"guild_id": "xxxxxx",\n\t"channel_id": "xxxxx",\n    "message_id": "",\n\t"announces_type": 1,\n\t"recommend_channels": [{\n\t\t"channel_id": "xxxx",\n\t\t"introduce": "推荐语"\n\t}, {\n\t\t"channel_id": "xxxx",\n\t\t"introduce": "推荐语"\n\t}]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"机器人下麦",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/audio/delete_mic.html",relativePath:"develop/api-v2/server-inter/channel/content/audio/delete_mic.md",key:"v-6bba1e7f",path:"/develop/api-v2/server-inter/channel/content/audio/delete_mic.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:12},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:59},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:152},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:192},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:217},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:243},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:259}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:"# 机器人下麦\n\n\n# 接口\n\nDELETE /channels/{channel_id}/mic\n\n\n1\n\n\n\n# 功能描述\n\n机器人在 channel_id 对应的语音子频道下麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\nurl参数：channel_id\n\n\n# 返回\n\n成功返回空对象。\n\n{}\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{}\n\n\n1\n\n\n响应数据包\n\n{}\n\n\n1\n",normalizedContent:"# 机器人下麦\n\n\n# 接口\n\ndelete /channels/{channel_id}/mic\n\n\n1\n\n\n\n# 功能描述\n\n机器人在 channel_id 对应的语音子频道下麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\nurl参数：channel_id\n\n\n# 返回\n\n成功返回空对象。\n\n{}\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{}\n\n\n1\n\n\n响应数据包\n\n{}\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"语音对象",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/audio/model.html",relativePath:"develop/api-v2/server-inter/channel/content/audio/model.md",key:"v-07f32226",path:"/develop/api-v2/server-inter/channel/content/audio/model.html",headers:[{level:2,title:"AudioControl",slug:"audiocontrol",normalizedTitle:"audiocontrol",charIndex:11},{level:2,title:"STATUS",slug:"status",normalizedTitle:"status",charIndex:161},{level:2,title:"AudioAction",slug:"audioaction",normalizedTitle:"audioaction",charIndex:297}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"AudioControl STATUS AudioAction",content:"# 语音对象\n\n\n# AudioControl\n\n字段名         类型       描述\naudio_url   string   音频数据的url status为0时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status为0时传，其他操作不传\nstatus      STATUS   播放状态，参考 STATUS\n\n\n# STATUS\n\n字段名      值   描述\nSTART    0   开始播放操作\nPAUSE    1   暂停播放操作\nRESUME   2   继续播放操作\nSTOP     3   停止播放操作\n\n\n# AudioAction\n\n字段名          类型       描述\nguild_id     string   频道id\nchannel_id   string   子频道id\naudio_url    string   音频数据的url status为0时传\ntext         string   状态文本（比如：简单爱-周杰伦），可选，status为0时传，其他操作不传",normalizedContent:"# 语音对象\n\n\n# audiocontrol\n\n字段名         类型       描述\naudio_url   string   音频数据的url status为0时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status为0时传，其他操作不传\nstatus      status   播放状态，参考 status\n\n\n# status\n\n字段名      值   描述\nstart    0   开始播放操作\npause    1   暂停播放操作\nresume   2   继续播放操作\nstop     3   停止播放操作\n\n\n# audioaction\n\n字段名          类型       描述\nguild_id     string   频道id\nchannel_id   string   子频道id\naudio_url    string   音频数据的url status为0时传\ntext         string   状态文本（比如：简单爱-周杰伦），可选，status为0时传，其他操作不传",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"机器人上麦",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/audio/put_mic.html",relativePath:"develop/api-v2/server-inter/channel/content/audio/put_mic.md",key:"v-da90b626",path:"/develop/api-v2/server-inter/channel/content/audio/put_mic.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:12},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:56},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:149},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:189},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:214},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:240},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:256}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:"# 机器人上麦\n\n\n# 接口\n\nPUT /channels/{channel_id}/mic\n\n\n1\n\n\n\n# 功能描述\n\n机器人在 channel_id 对应的语音子频道上麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\nurl参数：channel_id\n\n\n# 返回\n\n成功返回空对象。\n\n{}\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{}\n\n\n1\n\n\n响应数据包\n\n{}\n\n\n1\n",normalizedContent:"# 机器人上麦\n\n\n# 接口\n\nput /channels/{channel_id}/mic\n\n\n1\n\n\n\n# 功能描述\n\n机器人在 channel_id 对应的语音子频道上麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\nurl参数：channel_id\n\n\n# 返回\n\n成功返回空对象。\n\n{}\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{}\n\n\n1\n\n\n响应数据包\n\n{}\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除帖子",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/forum/delete_thread.html",relativePath:"develop/api-v2/server-inter/channel/content/forum/delete_thread.md",key:"v-fe06bc26",path:"/develop/api-v2/server-inter/channel/content/forum/delete_thread.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:74},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:107},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:147},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:163}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 错误码 返回",content:"# 删除帖子\n\n\n# 接口\n\nDELETE /channels/{channel_id}/threads/{thread_id}\n\n\n1\n\n\n\n# 功能描述\n\n * 该接口用于删除指定子频道下的某个帖子。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 返回\n\nHTTP 状态码 204",normalizedContent:"# 删除帖子\n\n\n# 接口\n\ndelete /channels/{channel_id}/threads/{thread_id}\n\n\n1\n\n\n\n# 功能描述\n\n * 该接口用于删除指定子频道下的某个帖子。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 返回\n\nhttp 状态码 204",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"论坛事件对象(ForumEvent)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/forum/forum.html",relativePath:"develop/api-v2/server-inter/channel/content/forum/forum.md",key:"v-09a6c0cd",path:"/develop/api-v2/server-inter/channel/content/forum/forum.html",headers:[{level:2,title:"FORUMEVENT（intents FORUMEVENT）",slug:"forum-event-intents-forum-event",normalizedTitle:"forumevent（intents forumevent）",charIndex:null},{level:2,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:62},{level:2,title:"主题事件",slug:"主题事件",normalizedTitle:"主题事件",charIndex:101},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:197},{level:2,title:"帖子事件",slug:"帖子事件",normalizedTitle:"帖子事件",charIndex:1139},{level:2,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:197},{level:2,title:"回复事件",slug:"回复事件",normalizedTitle:"回复事件",charIndex:1957},{level:2,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:197},{level:2,title:"帖子审核事件",slug:"帖子审核事件",normalizedTitle:"帖子审核事件",charIndex:2520}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"FORUMEVENT（intents FORUMEVENT） 发送时机 主题事件 示例 帖子事件 示例 回复事件 示例 帖子审核事件",content:'# 论坛事件对象(ForumEvent)\n\n\n# FORUM_EVENT（intents FORUM_EVENT）\n\n\n# 发送时机\n\n * 用户在话题子频道内发帖、评论、回复评论时产生该事件\n\n\n# 主题事件\n\n * FORUM_THREAD_CREATE\n * FORUM_THREAD_UPDATE\n * FORUM_THREAD_DELETE\n\n事件内容为 Thread 对象\n\n\n# 示例\n\n{\n  "guild_id": 47129941624960822,\n  "channel_id": 1661124,\n  "author_id": 144115218182563108,\n  "thread_info": {\n    "thread_id": "B_7c02cb615f8904001441152181825631080X60",\n    "title": [{\n      "type": 1,\n      "text_info": {\n        "text": "Test"\n      }\n    }],\n    "content": [{\n      "type": 1,\n      "text_info": {\n        "text": "tencent "\n      }\n    }, {\n      "type": 5,\n      "channel_info": {\n        "channel_id": 1505272,\n        "channel_name": "#隐私子频道"\n      }\n    }, {\n      "type": 1,\n      "text_info": {\n        "text": " "\n      }\n    }, {\n      "type": 3,\n      "url_info": {\n        "url": "https://apple.com",\n        "display_text": "Apple"\n      }\n    }, {\n      "type": 1,\n      "text_info": {\n        "text": ""\n      }\n    }],\n    "date_time": "2021-12-30T15:17:34+08:00"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 帖子事件\n\n * FORUM_POST_CREATE\n * FORUM_POST_DELETE\n\n事件内容为 Post 对象\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n  "post_info": {\n    "thread_id": "B_6d02bb61e45b0d001441152181867088220X60",\n    "post_id": "c_1500cb611f950a001441152181825631080X60",\n    "content": [{\n      "type": 1,\n      "text_info": {\n        "text": "test"\n      }\n    }, {\n      "type": 4,\n      "emoji_info": {\n        "id": 109,\n        "type": "1"\n      }\n    }, {\n      "type": 1,\n      "text_info": {\n        "text": "111"\n      }\n    }, {\n      "type": 4,\n      "emoji_info": {\n        "id": 13,\n        "type": "1"\n      }\n    }],\n    "date_time": "2021-12-30T15:17:34+08:00"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n\n# 回复事件\n\n * FORUM_REPLY_CREATE\n * FORUM_REPLY_DELETE\n\n事件内容为 Reply 对象\n\n\n# 示例\n\n{\n  "guild_id": 47129941624960822,\n  "channel_id": 1661124,\n  "author_id": 144115218182563108,\n  "reply_info": {\n    "thread_id": "B_8914b26116bb03001441152181867088220X60",\n    "post_id": "c_39bab261d2b907001441152181867088220X60",\n    "reply_id": "r_e701cb6128dc0b001441152181825631080X60",\n    "content": [{\n      "type": 1,\n      "text_info": {\n        "text": "Apple"\n      }\n    }],\n    "date_time": "2021-12-30T15:17:34+08:00"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 帖子审核事件\n\n * FORUM_PUBLISH_AUDIT_RESULT\n\n事件内容为 AuditResult 对象\n\n{\n  "guild_id": 47129941624960822,\n  "channel_id": 1661124,\n  "author_id": 144115218182563108,\n  "type": 1,\n  "result":0,\n  "err_msg": "",\n  "thread_id": "B_8914b26116bb03001441152181867088220X60",\n  "post_id": "c_39bab261d2b907001441152181867088220X60",\n  "reply_id": "r_e701cb6128dc0b001441152181825631080X60"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 论坛事件对象(forumevent)\n\n\n# forum_event（intents forum_event）\n\n\n# 发送时机\n\n * 用户在话题子频道内发帖、评论、回复评论时产生该事件\n\n\n# 主题事件\n\n * forum_thread_create\n * forum_thread_update\n * forum_thread_delete\n\n事件内容为 thread 对象\n\n\n# 示例\n\n{\n  "guild_id": 47129941624960822,\n  "channel_id": 1661124,\n  "author_id": 144115218182563108,\n  "thread_info": {\n    "thread_id": "b_7c02cb615f8904001441152181825631080x60",\n    "title": [{\n      "type": 1,\n      "text_info": {\n        "text": "test"\n      }\n    }],\n    "content": [{\n      "type": 1,\n      "text_info": {\n        "text": "tencent "\n      }\n    }, {\n      "type": 5,\n      "channel_info": {\n        "channel_id": 1505272,\n        "channel_name": "#隐私子频道"\n      }\n    }, {\n      "type": 1,\n      "text_info": {\n        "text": " "\n      }\n    }, {\n      "type": 3,\n      "url_info": {\n        "url": "https://apple.com",\n        "display_text": "apple"\n      }\n    }, {\n      "type": 1,\n      "text_info": {\n        "text": ""\n      }\n    }],\n    "date_time": "2021-12-30t15:17:34+08:00"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 帖子事件\n\n * forum_post_create\n * forum_post_delete\n\n事件内容为 post 对象\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n  "post_info": {\n    "thread_id": "b_6d02bb61e45b0d001441152181867088220x60",\n    "post_id": "c_1500cb611f950a001441152181825631080x60",\n    "content": [{\n      "type": 1,\n      "text_info": {\n        "text": "test"\n      }\n    }, {\n      "type": 4,\n      "emoji_info": {\n        "id": 109,\n        "type": "1"\n      }\n    }, {\n      "type": 1,\n      "text_info": {\n        "text": "111"\n      }\n    }, {\n      "type": 4,\n      "emoji_info": {\n        "id": 13,\n        "type": "1"\n      }\n    }],\n    "date_time": "2021-12-30t15:17:34+08:00"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n\n# 回复事件\n\n * forum_reply_create\n * forum_reply_delete\n\n事件内容为 reply 对象\n\n\n# 示例\n\n{\n  "guild_id": 47129941624960822,\n  "channel_id": 1661124,\n  "author_id": 144115218182563108,\n  "reply_info": {\n    "thread_id": "b_8914b26116bb03001441152181867088220x60",\n    "post_id": "c_39bab261d2b907001441152181867088220x60",\n    "reply_id": "r_e701cb6128dc0b001441152181825631080x60",\n    "content": [{\n      "type": 1,\n      "text_info": {\n        "text": "apple"\n      }\n    }],\n    "date_time": "2021-12-30t15:17:34+08:00"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 帖子审核事件\n\n * forum_publish_audit_result\n\n事件内容为 auditresult 对象\n\n{\n  "guild_id": 47129941624960822,\n  "channel_id": 1661124,\n  "author_id": 144115218182563108,\n  "type": 1,\n  "result":0,\n  "err_msg": "",\n  "thread_id": "b_8914b26116bb03001441152181867088220x60",\n  "post_id": "c_39bab261d2b907001441152181867088220x60",\n  "reply_id": "r_e701cb6128dc0b001441152181825631080x60"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取帖子详情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/forum/get_thread.html",relativePath:"develop/api-v2/server-inter/channel/content/forum/get_thread.md",key:"v-df929b56",path:"/develop/api-v2/server-inter/channel/content/forum/get_thread.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:73},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:104},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:144},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:237},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:253}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取帖子详情\n\n\n# 接口\n\nGET /channels/{channel_id}/threads/{thread_id}\n\n\n1\n\n\n\n# 功能描述\n\n * 该接口用于获取子频道下的帖子详情。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名      类型           描述\nthread   ThreadInfo   帖子详情对象（返回值里面的content字段，可参照RichText结构）\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n{\n  "thread":{\n    "guild_id":"75827011639035987",\n    "channel_id":"2324603",\n    "author_id":"144115218680332809",\n    "thread_info":{\n      "thread_id":"B_79051362477c03001441152186803328090X60-1645413753",\n      "title":"帖子标题",\n      "content":"{\\"paragraphs\\":[{\\"elems\\":[{\\"text\\":{\\"text\\":\\"发送消息 | QQ机器人文档\\"},\\"type\\":1}],\\"props\\":{}},{\\"elems\\":[{\\"text\\":{\\"text\\":\\"• 主动消息：发送消息时，未填充msg_id 字段的消息。\\"},\\"type\\":1}],\\"props\\":{}}]}",\n      "date_time":"2022-02-21T11:22:33+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'# 获取帖子详情\n\n\n# 接口\n\nget /channels/{channel_id}/threads/{thread_id}\n\n\n1\n\n\n\n# 功能描述\n\n * 该接口用于获取子频道下的帖子详情。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名      类型           描述\nthread   threadinfo   帖子详情对象（返回值里面的content字段，可参照richtext结构）\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n{\n  "thread":{\n    "guild_id":"75827011639035987",\n    "channel_id":"2324603",\n    "author_id":"144115218680332809",\n    "thread_info":{\n      "thread_id":"b_79051362477c03001441152186803328090x60-1645413753",\n      "title":"帖子标题",\n      "content":"{\\"paragraphs\\":[{\\"elems\\":[{\\"text\\":{\\"text\\":\\"发送消息 | qq机器人文档\\"},\\"type\\":1}],\\"props\\":{}},{\\"elems\\":[{\\"text\\":{\\"text\\":\\"• 主动消息：发送消息时，未填充msg_id 字段的消息。\\"},\\"type\\":1}],\\"props\\":{}}]}",\n      "date_time":"2022-02-21t11:22:33+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取帖子列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/forum/get_threads_list.html",relativePath:"develop/api-v2/server-inter/channel/content/forum/get_threads_list.md",key:"v-7ad9c581",path:"/develop/api-v2/server-inter/channel/content/forum/get_threads_list.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:61},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:92},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:132},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:260},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:276}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取帖子列表\n\n\n# 接口\n\nGET /channels/{channel_id}/threads\n\n\n1\n\n\n\n# 功能描述\n\n * 该接口用于获取子频道下的帖子列表。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名         类型       描述\nthreads     Thread   帖子列表对象（返回值里面的content字段，可参照RichText结构）\nis_finish   uint32   是否拉取完毕(0:否；1:是)\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n{\n  "threads": [{\n    "guild_id": "75827011639035987",\n    "channel_id": "2324603",\n    "author_id": "144115218680332809",\n    "thread_info": {\n      "thread_id": "B_59101362700301001441152186803328090X60-1645416537",\n      "title": "帖子标题1",\n      "content": "{\\"paragraphs\\":[{\\"elems\\":[{\\"text\\":{\\"text\\":\\"发送消息 | QQ机器人文档\\"},\\"type\\":1}],\\"props\\":{}},{\\"elems\\":[{\\"text\\":{\\"text\\":\\"• 主动消息：发送消息时，未填充msg_id 字段的消息。\\"},\\"type\\":1}],\\"props\\":{}}]}",\n      "date_time": "2022-02-21T12:08:57+08:00"\n    }\n  },\n    {\n      "guild_id": "75827011639035987",\n      "channel_id": "2324603",\n      "author_id": "144115218680332809",\n      "thread_info": {\n        "thread_id": "B_79051362477c03001441152186803328090X60-1645413753",\n        "title": "帖子标题2",\n        "content": "{\\"paragraphs\\":[{\\"elems\\":[{\\"text\\":{\\"text\\":\\"发送消息 | QQ机器人文档\\"},\\"type\\":1}],\\"props\\":{}},{\\"elems\\":[{\\"text\\":{\\"text\\":\\"• 主动消息：发送消息时，未填充msg_id 字段的消息。\\"},\\"type\\":1}],\\"props\\":{}}]}",\n        "date_time": "2022-02-21T11:22:33+08:00"\n      }\n    }\n  ],\n  "is_finish": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n',normalizedContent:'# 获取帖子列表\n\n\n# 接口\n\nget /channels/{channel_id}/threads\n\n\n1\n\n\n\n# 功能描述\n\n * 该接口用于获取子频道下的帖子列表。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名         类型       描述\nthreads     thread   帖子列表对象（返回值里面的content字段，可参照richtext结构）\nis_finish   uint32   是否拉取完毕(0:否；1:是)\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n{\n  "threads": [{\n    "guild_id": "75827011639035987",\n    "channel_id": "2324603",\n    "author_id": "144115218680332809",\n    "thread_info": {\n      "thread_id": "b_59101362700301001441152186803328090x60-1645416537",\n      "title": "帖子标题1",\n      "content": "{\\"paragraphs\\":[{\\"elems\\":[{\\"text\\":{\\"text\\":\\"发送消息 | qq机器人文档\\"},\\"type\\":1}],\\"props\\":{}},{\\"elems\\":[{\\"text\\":{\\"text\\":\\"• 主动消息：发送消息时，未填充msg_id 字段的消息。\\"},\\"type\\":1}],\\"props\\":{}}]}",\n      "date_time": "2022-02-21t12:08:57+08:00"\n    }\n  },\n    {\n      "guild_id": "75827011639035987",\n      "channel_id": "2324603",\n      "author_id": "144115218680332809",\n      "thread_info": {\n        "thread_id": "b_79051362477c03001441152186803328090x60-1645413753",\n        "title": "帖子标题2",\n        "content": "{\\"paragraphs\\":[{\\"elems\\":[{\\"text\\":{\\"text\\":\\"发送消息 | qq机器人文档\\"},\\"type\\":1}],\\"props\\":{}},{\\"elems\\":[{\\"text\\":{\\"text\\":\\"• 主动消息：发送消息时，未填充msg_id 字段的消息。\\"},\\"type\\":1}],\\"props\\":{}}]}",\n        "date_time": "2022-02-21t11:22:33+08:00"\n      }\n    }\n  ],\n  "is_finish": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"论坛对象(forum)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/forum/model.html",relativePath:"develop/api-v2/server-inter/channel/content/forum/model.md",key:"v-5d2e05cd",path:"/develop/api-v2/server-inter/channel/content/forum/model.html",headers:[{level:2,title:"Thread",slug:"thread",normalizedTitle:"thread",charIndex:18},{level:3,title:"ThreadInfo",slug:"threadinfo",normalizedTitle:"threadinfo",charIndex:211},{level:2,title:"Post",slug:"post",normalizedTitle:"post",charIndex:450},{level:3,title:"PostInfo",slug:"postinfo",normalizedTitle:"postinfo",charIndex:635},{level:2,title:"Reply",slug:"reply",normalizedTitle:"reply",charIndex:813},{level:3,title:"ReplyInfo",slug:"replyinfo",normalizedTitle:"replyinfo",charIndex:997},{level:3,title:"AuditResult",slug:"auditresult",normalizedTitle:"auditresult",charIndex:1203},{level:3,title:"AuditType",slug:"audittype",normalizedTitle:"audittype",charIndex:1441},{level:3,title:"RichObject",slug:"richobject",normalizedTitle:"richobject",charIndex:1656},{level:3,title:"RichText",slug:"richtext",normalizedTitle:"richtext",charIndex:3176},{level:3,title:"Paragraph",slug:"paragraph",normalizedTitle:"paragraph",charIndex:3237},{level:3,title:"Elem",slug:"elem",normalizedTitle:"elem",charIndex:3335},{level:3,title:"TextElem",slug:"textelem",normalizedTitle:"textelem",charIndex:3445},{level:3,title:"TextProps",slug:"textprops",normalizedTitle:"textprops",charIndex:3794},{level:3,title:"ImageElem",slug:"imageelem",normalizedTitle:"imageelem",charIndex:3470},{level:3,title:"PlatImage",slug:"platimage",normalizedTitle:"platimage",charIndex:4072},{level:3,title:"VideoElem",slug:"videoelem",normalizedTitle:"videoelem",charIndex:3495},{level:3,title:"PlatVideo",slug:"platvideo",normalizedTitle:"platvideo",charIndex:4314},{level:3,title:"URLElem",slug:"urlelem",normalizedTitle:"urlelem",charIndex:3520},{level:3,title:"ParagraphProps",slug:"paragraphprops",normalizedTitle:"paragraphprops",charIndex:3365}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Thread ThreadInfo Post PostInfo Reply ReplyInfo AuditResult AuditType RichObject RichText Paragraph Elem TextElem TextProps ImageElem PlatImage VideoElem PlatVideo URLElem ParagraphProps",content:"# 论坛对象(forum)\n\n\n# Thread\n\n * 话题频道内发表的主帖称为主题\n * 该事件在话题频道内新发表主题或删除时生产事件中包含该对象\n\n字段名           类型       描述\nguild_id      string   频道ID\nchannel_id    string   子频道ID\nauthor_id     string   作者ID\nthread_info   object   ThreadInfo 主帖内容\n\n\n# ThreadInfo\n\n * 帖子事件包含的主帖内容相关信息\n\n字段名         类型                  描述\nthread_id   string              主帖ID\ntitle       string              帖子标题\ncontent     string              帖子内容\ndate_time   ISO8601 timestamp   发表时间\n\n\n# Post\n\n * 话题频道内对主题的评论称为帖子\n * 话题频道内对帖子主题评论或删除时生产事件中包含该对象\n\n字段名          类型       描述\nguild_id     string   频道ID\nchannel_id   string   子频道ID\nauthor_id    string   作者ID\npost_info    object   PostInfo 帖子内容\n\n\n# PostInfo\n\n * 帖子事件包含的帖子内容信息\n\n字段名         类型       描述\nthread_id   string   主题ID\npost_id     string   帖子ID\ncontent     string   帖子内容\ndate_time   string   评论时间\n\n\n# Reply\n\n * 话题频道对帖子回复或删除时生产该事件中包含该对象\n * 话题频道内对帖子的评论称为回复\n\n字段名          类型       描述\nguild_id     string   频道ID\nchannel_id   string   子频道ID\nauthor_id    string   作者ID\nreply_info   object   ReplyInfo 回复内容\n\n\n# ReplyInfo\n\n * 回复事件包含的回复内容信息\n\n字段名         类型       描述\nthread_id   string   主题ID\npost_id     string   帖子ID\nreply_id    string   回复ID\ncontent     string   回复内容\ndate_time   string   回复时间\n\n\n# AuditResult\n\n * 论坛帖子审核结果事件\n\n字段名          类型       描述\nguild_id     string   频道ID\nchannel_id   string   子频道ID\nauthor_id    string   作者ID\nthread_id    string   主题ID\npost_id      string   帖子ID\nreply_id     string   回复ID\ntype         uint32   AuditType审核的类型\nresult       uint32   审核结果. 0:成功 1:失败\nerr_msg      string   result不为0时错误信息\n\n\n# AuditType\n\n * 审核的类型\n\n字段名              值   描述\nPUBLISH_THREAD   1   帖子\nPUBLISH_POST     2   评论\nPUBLISH_REPLY    3   回复\n\n\n# RichObject\n\n * 富文本内容\n\n字段             类型       描述\ntype           int      RichType 富文本类型\ntext_info      object   TextInfo 文本\nat_info        object   AtInfo @ 内容\nurl_info       object   URLInfo 链接\nemoji_info     object   EmojiInfo 表情\nchannel_info   object   ChannelInfo 提到的子频道\n\n# RichType\n\n * 富文本类型\n\n字段名       值    描述\nTEXT      1    普通文本\nAT        2    at信息\nURL       3    url信息\nEMOJI     4    表情\nCHANNEL   5    #子频道\nVIDEO     10   视频\nIMAGE     11   图片\n\n# TextInfo\n\n * 富文本 - 普通文本\n\n字段     类型       描述\ntext   string   普通文本\n\n# AtInfo\n\n * 富文本 - @内容\n\n字段           类型            描述\ntype         AtType        at类型\nuser_info    AtUserInfo    用户\nrole_info    AtRoleInfo    角色组信息\nguild_info   AtGuildInfo   频道信息\n\n# AtType\n\n * @的类型\n\n字段名                值   描述\nAT_EXPLICIT_USER   1   at特定人\nAT_ROLE_GROUP      2   at角色组所有人\nAT_GUILD           3   at频道所有人\n\n# AtUserInfo\n\n * @用户信息\n\n字段     类型       描述\nid     string   身份组ID\nnick   string   用户昵称\n\n# AtRoleInfo\n\n * @身份组信息\n\n字段        类型       描述\nrole_id   uint64   身份组ID\nname      string   身份组名称\ncolor     uint32   颜色值\n\n# AtGuildInfo\n\n * @频道信息\n\n字段           类型       描述\nguild_id     string   频道ID\nguild_name   string   频道名称\n\n# URLInfo\n\n * 富文本 - 链接信息\n\n字段             类型       描述\nurl            string   链接地址\ndisplay_text   string   链接显示文本\n\n# EmojiInfo\n\n * 富文本 - Emoji信息\n\n字段     类型       描述\nid     string   表情id\ntype   string   表情类型\nname   string   名称\nurl    string   链接\n\n# ChannelInfo\n\n * 富文本 - 子频道信息\n\n字段             类型       描述\nchannel_id     uint64   子频道id\nchannel_name   string   子频道名称\n\n\n# RichText\n\n * 富文本内容\n\n字段           类型          描述\nparagraphs   Paragraph   段落，一段落一行，段落内无元素的为空行\n\n\n# Paragraph\n\n * 富文本 - 段落结构\n\n字段      类型               描述\nelems   Elem             元素列表\nprops   ParagraphProps   段落属性\n\n\n# Elem\n\n * 富文本 - 元素列表结构\n\n字段      类型          描述\ntext    TextElem    文本元素\nimage   ImageElem   图片元素\nvideo   VideoElem   视频元素\nurl     URLElem     URL元素\ntype    ElemType    元素类型\n\n# ElemType\n\n * 元素类型\n\n字段名               值   描述\nELEM_TYPE_TEXT    1   文本\nELEM_TYPE_IMAGE   2   图片\nELEM_TYPE_VIDEO   3   视频\nELEM_TYPE_URL     4   URL\n\n\n# TextElem\n\n * 富文本 - 文本属性\n\n字段      类型          描述\ntext    string      正文\nprops   TextProps   文本属性\n\n\n# TextProps\n\n * 富文本 - 文本段落属性\n\n字段          类型     描述\nfont_bold   bool   加粗\nitalic      bool   斜体\nunderline   bool   下划线\n\n\n# ImageElem\n\n * 富文本 - 图片属性\n\n字段              类型       描述\nthird_url       string   第三方图片链接\nwidth_percent   double   宽度比例（缩放比，在屏幕里显示的比例）\n\n\n# PlatImage\n\n * 富文本 - 平台图片属性\n\n字段         类型       描述\nurl        string   架平图片链接\nwidth      uint32   图片宽度\nheight     uint32   图片高度\nimage_id   string   图片ID\n\n\n# VideoElem\n\n * 富文本 - 视频属性\n\n字段          类型       描述\nthird_url   string   第三方视频文件链接\n\n\n# PlatVideo\n\n * 富文本 - 平台视频属性\n\n字段         类型          描述\nurl        string      架平图片链接\nwidth      uint32      图片宽度\nheight     uint32      图片高度\nvideo_id   string      视频ID\nduration   uint32      视频时长\ncover      PlatImage   视频封面图属性\n\n\n# URLElem\n\n * 富文本 - URL属性\n\n字段     类型       描述\nurl    string   URL链接\ndesc   string   URL描述\n\n\n# ParagraphProps\n\n * 富文本 - 段落属性\n\n字段          类型      描述\nalignment   int32   段落对齐方向属性，数值可以参考Alignment\n\n# Alignment\n\n * 段落对齐方向属性\n\n字段名                值   描述\nALIGNMENT_LEFT     0   左对齐\nALIGNMENT_MIDDLE   1   居中\nALIGNMENT_RIGHT    2   右对齐",normalizedContent:"# 论坛对象(forum)\n\n\n# thread\n\n * 话题频道内发表的主帖称为主题\n * 该事件在话题频道内新发表主题或删除时生产事件中包含该对象\n\n字段名           类型       描述\nguild_id      string   频道id\nchannel_id    string   子频道id\nauthor_id     string   作者id\nthread_info   object   threadinfo 主帖内容\n\n\n# threadinfo\n\n * 帖子事件包含的主帖内容相关信息\n\n字段名         类型                  描述\nthread_id   string              主帖id\ntitle       string              帖子标题\ncontent     string              帖子内容\ndate_time   iso8601 timestamp   发表时间\n\n\n# post\n\n * 话题频道内对主题的评论称为帖子\n * 话题频道内对帖子主题评论或删除时生产事件中包含该对象\n\n字段名          类型       描述\nguild_id     string   频道id\nchannel_id   string   子频道id\nauthor_id    string   作者id\npost_info    object   postinfo 帖子内容\n\n\n# postinfo\n\n * 帖子事件包含的帖子内容信息\n\n字段名         类型       描述\nthread_id   string   主题id\npost_id     string   帖子id\ncontent     string   帖子内容\ndate_time   string   评论时间\n\n\n# reply\n\n * 话题频道对帖子回复或删除时生产该事件中包含该对象\n * 话题频道内对帖子的评论称为回复\n\n字段名          类型       描述\nguild_id     string   频道id\nchannel_id   string   子频道id\nauthor_id    string   作者id\nreply_info   object   replyinfo 回复内容\n\n\n# replyinfo\n\n * 回复事件包含的回复内容信息\n\n字段名         类型       描述\nthread_id   string   主题id\npost_id     string   帖子id\nreply_id    string   回复id\ncontent     string   回复内容\ndate_time   string   回复时间\n\n\n# auditresult\n\n * 论坛帖子审核结果事件\n\n字段名          类型       描述\nguild_id     string   频道id\nchannel_id   string   子频道id\nauthor_id    string   作者id\nthread_id    string   主题id\npost_id      string   帖子id\nreply_id     string   回复id\ntype         uint32   audittype审核的类型\nresult       uint32   审核结果. 0:成功 1:失败\nerr_msg      string   result不为0时错误信息\n\n\n# audittype\n\n * 审核的类型\n\n字段名              值   描述\npublish_thread   1   帖子\npublish_post     2   评论\npublish_reply    3   回复\n\n\n# richobject\n\n * 富文本内容\n\n字段             类型       描述\ntype           int      richtype 富文本类型\ntext_info      object   textinfo 文本\nat_info        object   atinfo @ 内容\nurl_info       object   urlinfo 链接\nemoji_info     object   emojiinfo 表情\nchannel_info   object   channelinfo 提到的子频道\n\n# richtype\n\n * 富文本类型\n\n字段名       值    描述\ntext      1    普通文本\nat        2    at信息\nurl       3    url信息\nemoji     4    表情\nchannel   5    #子频道\nvideo     10   视频\nimage     11   图片\n\n# textinfo\n\n * 富文本 - 普通文本\n\n字段     类型       描述\ntext   string   普通文本\n\n# atinfo\n\n * 富文本 - @内容\n\n字段           类型            描述\ntype         attype        at类型\nuser_info    atuserinfo    用户\nrole_info    atroleinfo    角色组信息\nguild_info   atguildinfo   频道信息\n\n# attype\n\n * @的类型\n\n字段名                值   描述\nat_explicit_user   1   at特定人\nat_role_group      2   at角色组所有人\nat_guild           3   at频道所有人\n\n# atuserinfo\n\n * @用户信息\n\n字段     类型       描述\nid     string   身份组id\nnick   string   用户昵称\n\n# atroleinfo\n\n * @身份组信息\n\n字段        类型       描述\nrole_id   uint64   身份组id\nname      string   身份组名称\ncolor     uint32   颜色值\n\n# atguildinfo\n\n * @频道信息\n\n字段           类型       描述\nguild_id     string   频道id\nguild_name   string   频道名称\n\n# urlinfo\n\n * 富文本 - 链接信息\n\n字段             类型       描述\nurl            string   链接地址\ndisplay_text   string   链接显示文本\n\n# emojiinfo\n\n * 富文本 - emoji信息\n\n字段     类型       描述\nid     string   表情id\ntype   string   表情类型\nname   string   名称\nurl    string   链接\n\n# channelinfo\n\n * 富文本 - 子频道信息\n\n字段             类型       描述\nchannel_id     uint64   子频道id\nchannel_name   string   子频道名称\n\n\n# richtext\n\n * 富文本内容\n\n字段           类型          描述\nparagraphs   paragraph   段落，一段落一行，段落内无元素的为空行\n\n\n# paragraph\n\n * 富文本 - 段落结构\n\n字段      类型               描述\nelems   elem             元素列表\nprops   paragraphprops   段落属性\n\n\n# elem\n\n * 富文本 - 元素列表结构\n\n字段      类型          描述\ntext    textelem    文本元素\nimage   imageelem   图片元素\nvideo   videoelem   视频元素\nurl     urlelem     url元素\ntype    elemtype    元素类型\n\n# elemtype\n\n * 元素类型\n\n字段名               值   描述\nelem_type_text    1   文本\nelem_type_image   2   图片\nelem_type_video   3   视频\nelem_type_url     4   url\n\n\n# textelem\n\n * 富文本 - 文本属性\n\n字段      类型          描述\ntext    string      正文\nprops   textprops   文本属性\n\n\n# textprops\n\n * 富文本 - 文本段落属性\n\n字段          类型     描述\nfont_bold   bool   加粗\nitalic      bool   斜体\nunderline   bool   下划线\n\n\n# imageelem\n\n * 富文本 - 图片属性\n\n字段              类型       描述\nthird_url       string   第三方图片链接\nwidth_percent   double   宽度比例（缩放比，在屏幕里显示的比例）\n\n\n# platimage\n\n * 富文本 - 平台图片属性\n\n字段         类型       描述\nurl        string   架平图片链接\nwidth      uint32   图片宽度\nheight     uint32   图片高度\nimage_id   string   图片id\n\n\n# videoelem\n\n * 富文本 - 视频属性\n\n字段          类型       描述\nthird_url   string   第三方视频文件链接\n\n\n# platvideo\n\n * 富文本 - 平台视频属性\n\n字段         类型          描述\nurl        string      架平图片链接\nwidth      uint32      图片宽度\nheight     uint32      图片高度\nvideo_id   string      视频id\nduration   uint32      视频时长\ncover      platimage   视频封面图属性\n\n\n# urlelem\n\n * 富文本 - url属性\n\n字段     类型       描述\nurl    string   url链接\ndesc   string   url描述\n\n\n# paragraphprops\n\n * 富文本 - 段落属性\n\n字段          类型      描述\nalignment   int32   段落对齐方向属性，数值可以参考alignment\n\n# alignment\n\n * 段落对齐方向属性\n\n字段名                值   描述\nalignment_left     0   左对齐\nalignment_middle   1   居中\nalignment_right    2   右对齐",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"开放论坛事件对象(OpenForumEvent)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/forum/open_forum.html",relativePath:"develop/api-v2/server-inter/channel/content/forum/open_forum.md",key:"v-434a2c3a",path:"/develop/api-v2/server-inter/channel/content/forum/open_forum.html",headers:[{level:2,title:"OEPNFORUMEVENT（intents OPENFORUMEVENT）",slug:"oepn-forum-event-intents-open-forum-event",normalizedTitle:"oepnforumevent（intents openforumevent）",charIndex:null},{level:2,title:"主题事件",slug:"主题事件",normalizedTitle:"主题事件",charIndex:114},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:208},{level:2,title:"帖子事件",slug:"帖子事件",normalizedTitle:"帖子事件",charIndex:332},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:208},{level:2,title:"回复事件",slug:"回复事件",normalizedTitle:"回复事件",charIndex:518},{level:3,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:208}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"OEPNFORUMEVENT（intents OPENFORUMEVENT） 主题事件 示例 帖子事件 示例 回复事件 示例",content:'# 开放论坛事件对象(OpenForumEvent)\n\n\n# OEPN_FORUM_EVENT（intents OPEN_FORUM_EVENT）\n\n发送时机\n\n * 用户在话题子频道内发帖、评论、回复评论时产生该事件\n\n\n# 主题事件\n\n * OPEN_FORUM_THREAD_CREATE\n * OPEN_FORUM_THREAD_UPDATE\n * OPEN_FORUM_THREAD_DELETE\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 帖子事件\n\n * OPEN_FORUM_POST_CREATE\n * OPEN_FORUM_POST_DELETE\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 回复事件\n\n * OPEN_FORUM_REPLY_CREATE\n * OPEN_FORUM_REPLY_DELETE\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 开放论坛事件对象(openforumevent)\n\n\n# oepn_forum_event（intents open_forum_event）\n\n发送时机\n\n * 用户在话题子频道内发帖、评论、回复评论时产生该事件\n\n\n# 主题事件\n\n * open_forum_thread_create\n * open_forum_thread_update\n * open_forum_thread_delete\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 帖子事件\n\n * open_forum_post_create\n * open_forum_post_delete\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 回复事件\n\n * open_forum_reply_create\n * open_forum_reply_delete\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "author_id": "144115218182563108",\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除精华消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/pins/delete_pins_message.html",relativePath:"develop/api-v2/server-inter/channel/content/pins/delete_pins_message.md",key:"v-17187b45",path:"/develop/api-v2/server-inter/channel/content/pins/delete_pins_message.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:74},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:165},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:205},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:232},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:248}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:"# 删除精华消息\n\n\n# 接口\n\nDELETE /channels/{channel_id}/pins/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除子频道 channel_id 下指定 message_id 的精华消息。\n\n * 删除子频道内全部精华消息，请将 message_id 设置为 all。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /channels/123456/pins/112233\n\n\n1\n",normalizedContent:"# 删除精华消息\n\n\n# 接口\n\ndelete /channels/{channel_id}/pins/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除子频道 channel_id 下指定 message_id 的精华消息。\n\n * 删除子频道内全部精华消息，请将 message_id 设置为 all。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /channels/123456/pins/112233\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发表帖子",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/forum/put_thread.html",relativePath:"develop/api-v2/server-inter/channel/content/forum/put_thread.md",key:"v-b161d272",path:"/develop/api-v2/server-inter/channel/content/forum/put_thread.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:59},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:91},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:131},{level:3,title:"Format",slug:"format",normalizedTitle:"format",charIndex:235},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:419},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:74},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:533}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 Format 错误码 返回 示例",content:'# 发表帖子\n\n\n# 接口\n\nPUT /channels/{channel_id}/threads\n\n\n1\n\n\n\n# 功能描述\n\n * 创建成功后，返回创建成功的任务ID。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名       类型       描述\ntitle     string   帖子标题\ncontent   string   帖子内容\nformat    uint32   帖子文本格式\n\n\n# Format\n\n * 帖子文本格式\n\n字段名               值   描述\nFORMAT_TEXT       1   普通文本\nFORMAT_HTML       2   HTML\nFORMAT_MARKDOWN   3   Markdown\nFORMAT_JSON       4   JSON（content参数可参照RichText结构）\n\n\n# 错误码\n\n详见错误码。\n\n\n# 返回\n\n字段名           类型       描述\ntask_id       string   帖子任务ID\ncreate_time   string   发帖时间戳，单位：秒\n\n\n# 示例\n\n请求数据包\n\n{\n    "title": "title",\n    "content": "<html lang=\\"en-US\\"><body><a href=\\"https://bot.q.qq.com/wiki\\" title=\\"QQ机器人文档Title\\">QQ机器人文档</a>\\n<ul><li>主动消息：发送消息时，未填msg_id字段的消息。</li><li>被动消息：发送消息时，填充了msg_id字段的消息。</li></ul></body></html>",\n    "format": 2\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n    "task_id": "1645413752912602306",\n    "create_time": "1645503180"\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'# 发表帖子\n\n\n# 接口\n\nput /channels/{channel_id}/threads\n\n\n1\n\n\n\n# 功能描述\n\n * 创建成功后，返回创建成功的任务id。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名       类型       描述\ntitle     string   帖子标题\ncontent   string   帖子内容\nformat    uint32   帖子文本格式\n\n\n# format\n\n * 帖子文本格式\n\n字段名               值   描述\nformat_text       1   普通文本\nformat_html       2   html\nformat_markdown   3   markdown\nformat_json       4   json（content参数可参照richtext结构）\n\n\n# 错误码\n\n详见错误码。\n\n\n# 返回\n\n字段名           类型       描述\ntask_id       string   帖子任务id\ncreate_time   string   发帖时间戳，单位：秒\n\n\n# 示例\n\n请求数据包\n\n{\n    "title": "title",\n    "content": "<html lang=\\"en-us\\"><body><a href=\\"https://bot.q.qq.com/wiki\\" title=\\"qq机器人文档title\\">qq机器人文档</a>\\n<ul><li>主动消息：发送消息时，未填msg_id字段的消息。</li><li>被动消息：发送消息时，填充了msg_id字段的消息。</li></ul></body></html>",\n    "format": 2\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n    "task_id": "1645413752912602306",\n    "create_time": "1645503180"\n}\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"精华消息对象(PinsMessage)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/pins/model.html",relativePath:"develop/api-v2/server-inter/channel/content/pins/model.md",key:"v-04bf5527",path:"/develop/api-v2/server-inter/channel/content/pins/model.html",headers:[{level:2,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:9}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"PinsMessage",content:"# 精华消息对象(PinsMessage)\n\n\n# PinsMessage\n\n字段名           类型          描述\nguild_id      string      频道 id\nchannel_id    string      子频道 id\nmessage_ids   string 数组   子频道内精华消息 id 数组",normalizedContent:"# 精华消息对象(pinsmessage)\n\n\n# pinsmessage\n\n字段名           类型          描述\nguild_id      string      频道 id\nchannel_id    string      子频道 id\nmessage_ids   string 数组   子频道内精华消息 id 数组",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"添加精华消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/pins/put_pins_message.html",relativePath:"develop/api-v2/server-inter/channel/content/pins/put_pins_message.md",key:"v-71f8884d",path:"/develop/api-v2/server-inter/channel/content/pins/put_pins_message.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:71},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:213},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:159},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:280},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:296}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 添加精华消息\n\n\n# 接口\n\nPUT /channels/{channel_id}/pins/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于添加子频道 channel_id 内的精华消息。\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 PinsMessage 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nPUT /channels/123456/pins/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 添加精华消息\n\n\n# 接口\n\nput /channels/{channel_id}/pins/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于添加子频道 channel_id 内的精华消息。\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 pinsmessage 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nput /channels/123456/pins/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除日程",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/schedule/delete_schedule.html",relativePath:"develop/api-v2/server-inter/channel/content/schedule/delete_schedule.md",key:"v-541917f1",path:"/develop/api-v2/server-inter/channel/content/schedule/delete_schedule.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:78},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:171},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:211},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:238},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:254}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:"# 删除日程\n\n\n# 接口\n\nDELETE /channels/{channel_id}/schedules/{schedule_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除日程子频道 channel_id 下 schedule_id 指定的日程。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /channels/123456/schedules/112233\n\n\n1\n",normalizedContent:"# 删除日程\n\n\n# 接口\n\ndelete /channels/{channel_id}/schedules/{schedule_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除日程子频道 channel_id 下 schedule_id 指定的日程。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /channels/123456/schedules/112233\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取精华消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/pins/get_pins_message.html",relativePath:"develop/api-v2/server-inter/channel/content/pins/get_pins_message.md",key:"v-02f306a6",path:"/develop/api-v2/server-inter/channel/content/pins/get_pins_message.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:58},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:95},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:135},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:162},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:178}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取精华消息\n\n\n# 接口\n\nGET /channels/{channel_id}/pins\n\n\n1\n\n\n\n# 功能描述\n\n用于获取子频道 channel_id 内的精华消息。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 PinsMessage 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取精华消息\n\n\n# 接口\n\nget /channels/{channel_id}/pins\n\n\n1\n\n\n\n# 功能描述\n\n用于获取子频道 channel_id 内的精华消息。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 pinsmessage 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取日程详情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/schedule/get_schedule.html",relativePath:"develop/api-v2/server-inter/channel/content/schedule/get_schedule.md",key:"v-9c4e54a6",path:"/develop/api-v2/server-inter/channel/content/schedule/get_schedule.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:77},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:131},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:171},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:195},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:211}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取日程详情\n\n\n# 接口\n\nGET /channels/{channel_id}/schedules/{schedule_id}\n\n\n1\n\n\n\n# 功能描述\n\n获取日程子频道 channel_id 下 schedule_id 指定的的日程的详情。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 Schedule 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /channels/123455/schedules/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "id": "112233",\n  "name": "上王者",\n  "start_timestamp": "1642076400000",\n  "end_timestamp": "1642083600000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": true\n    },\n    "nick": "",\n    "joined_at": "2022-01-11T10:24:13+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',normalizedContent:'# 获取日程详情\n\n\n# 接口\n\nget /channels/{channel_id}/schedules/{schedule_id}\n\n\n1\n\n\n\n# 功能描述\n\n获取日程子频道 channel_id 下 schedule_id 指定的的日程的详情。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 schedule 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /channels/123455/schedules/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "id": "112233",\n  "name": "上王者",\n  "start_timestamp": "1642076400000",\n  "end_timestamp": "1642083600000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": true\n    },\n    "nick": "",\n    "joined_at": "2022-01-11t10:24:13+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"日程对象(Schedule)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/schedule/model.html",relativePath:"develop/api-v2/server-inter/channel/content/schedule/model.md",key:"v-e6c05416",path:"/develop/api-v2/server-inter/channel/content/schedule/model.html",headers:[{level:2,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:7},{level:2,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:359}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Schedule RemindType",content:"# 日程对象(Schedule)\n\n用于描述一个日程。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",normalizedContent:"# 日程对象(schedule)\n\n用于描述一个日程。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建日程",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/schedule/post_schedule.html",relativePath:"develop/api-v2/server-inter/channel/content/schedule/post_schedule.md",key:"v-20fb459b",path:"/develop/api-v2/server-inter/channel/content/schedule/post_schedule.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:62},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:214},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:254},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:150},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:345},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:361}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 创建日程\n\n\n# 接口\n\nPOST /channels/{channel_id}/schedules\n\n\n1\n\n\n\n# 功能描述\n\n用于在 channel_id 指定的日程子频道下创建一个日程。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的日程对象。\n * 创建操作频次限制\n   * 单个管理员每天限10次。\n   * 单个频道每天100次。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名        类型         描述\nschedule   Schedule   日程对象，不需要带 id\n\n\n# 返回\n\n返回Schedule 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "schedule": {\n    "name": "上王者",\n    "start_timestamp": "1642076453000",\n    "end_timestamp": "1642083653000",\n    "jump_channel_id": "0",\n    "remind_type": "0"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "name": "上王者",\n  "start_timestamp": "1642076400000",\n  "end_timestamp": "1642083600000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": true\n    },\n    "nick": "",\n    "joined_at": "2022-01-11T10:24:13+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',normalizedContent:'# 创建日程\n\n\n# 接口\n\npost /channels/{channel_id}/schedules\n\n\n1\n\n\n\n# 功能描述\n\n用于在 channel_id 指定的日程子频道下创建一个日程。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的日程对象。\n * 创建操作频次限制\n   * 单个管理员每天限10次。\n   * 单个频道每天100次。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名        类型         描述\nschedule   schedule   日程对象，不需要带 id\n\n\n# 返回\n\n返回schedule 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "schedule": {\n    "name": "上王者",\n    "start_timestamp": "1642076453000",\n    "end_timestamp": "1642083653000",\n    "jump_channel_id": "0",\n    "remind_type": "0"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "name": "上王者",\n  "start_timestamp": "1642076400000",\n  "end_timestamp": "1642083600000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": true\n    },\n    "nick": "",\n    "joined_at": "2022-01-11t10:24:13+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道日程列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/schedule/get_schedules.html",relativePath:"develop/api-v2/server-inter/channel/content/schedule/get_schedules.md",key:"v-71ff77be",path:"/develop/api-v2/server-inter/channel/content/schedule/get_schedules.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:65},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:170},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:108},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:118},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:291},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:307}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 获取频道日程列表\n\n\n# 接口\n\nGET /channels/{channel_id}/schedules\n\n\n1\n\n\n\n# 功能描述\n\n用于获取channel_id指定的子频道中当天的日程列表。\n\n * 若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nsince   uint64   起始时间戳(ms)\n\n\n# 返回\n\n返回 Schedule 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "since": 1642076400000\n}\n\n\n1\n2\n3\n\n\n响应数据包\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "上王者",\n    "start_timestamp": "1642076400000",\n    "end_timestamp": "1642083600000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": true\n      },\n      "nick": "",\n      "joined_at": "2022-01-11T10:24:13+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "0"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 获取频道日程列表\n\n\n# 接口\n\nget /channels/{channel_id}/schedules\n\n\n1\n\n\n\n# 功能描述\n\n用于获取channel_id指定的子频道中当天的日程列表。\n\n * 若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nsince   uint64   起始时间戳(ms)\n\n\n# 返回\n\n返回 schedule 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "since": 1642076400000\n}\n\n\n1\n2\n3\n\n\n响应数据包\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "上王者",\n    "start_timestamp": "1642076400000",\n    "end_timestamp": "1642083600000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": true\n      },\n      "nick": "",\n      "joined_at": "2022-01-11t10:24:13+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "0"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/",relativePath:"develop/api-v2/server-inter/channel/manage/README.md",key:"v-3fb1bf3e",path:"/develop/api-v2/server-inter/channel/manage/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/channel/delete_channel.html",relativePath:"develop/api-v2/server-inter/channel/manage/channel/delete_channel.md",key:"v-1cd54bcd",path:"/develop/api-v2/server-inter/channel/manage/channel/delete_channel.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:12},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:55},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:152},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:192},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:219},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:235},{level:2,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:279}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例 注意",content:"# 删除子频道\n\n\n# 接口\n\nDELETE /channels/{channel_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除 channel_id 指定的子频道。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道删除事件。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /channels/123456\n\n\n1\n\n\n\n# 注意\n\n子频道的删除是无法撤回的，一旦删除，将无法恢复。",normalizedContent:"# 删除子频道\n\n\n# 接口\n\ndelete /channels/{channel_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除 channel_id 指定的子频道。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道删除事件。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /channels/123456\n\n\n1\n\n\n\n# 注意\n\n子频道的删除是无法撤回的，一旦删除，将无法恢复。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/channel/get_channels.html",relativePath:"develop/api-v2/server-inter/channel/manage/channel/get_channels.md",key:"v-41cd760d",path:"/develop/api-v2/server-inter/channel/manage/channel/get_channels.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:14},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:59},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:97},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:137},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:162},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:178}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取子频道列表\n\n\n# 接口\n\nGET /guilds/{guild_id}/channels\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道下的子频道列表。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 Channel 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /guilds/123456/channels\n\n\n1\n\n\n响应数据包\n\n[\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "很高兴遇见你",\n    "type": 4,\n    "position": 2,\n    "parent_id": "0",\n    "owner_id": "0",\n    "sub_type": 0\n  },\n\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "🔒管理员议事厅",\n    "type": 0,\n    "position": 1,\n    "parent_id": "xxxxxx",\n    "owner_id": "0",\n    "sub_type": 0,\n    "private_type": 1\n  },\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "🚪小黑屋",\n    "type": 0,\n    "position": 2,\n    "parent_id": "xxxxxx",\n    "owner_id": "0",\n    "sub_type": 0,\n    "private_type": 0\n  },\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "新的子频道",\n    "type": 0,\n    "position": 2,\n    "parent_id": "123456",\n    "owner_id": "0",\n    "sub_type": 0,\n    "private_type": 2\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n',normalizedContent:'# 获取子频道列表\n\n\n# 接口\n\nget /guilds/{guild_id}/channels\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道下的子频道列表。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 channel 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /guilds/123456/channels\n\n\n1\n\n\n响应数据包\n\n[\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "很高兴遇见你",\n    "type": 4,\n    "position": 2,\n    "parent_id": "0",\n    "owner_id": "0",\n    "sub_type": 0\n  },\n\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "🔒管理员议事厅",\n    "type": 0,\n    "position": 1,\n    "parent_id": "xxxxxx",\n    "owner_id": "0",\n    "sub_type": 0,\n    "private_type": 1\n  },\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "🚪小黑屋",\n    "type": 0,\n    "position": 2,\n    "parent_id": "xxxxxx",\n    "owner_id": "0",\n    "sub_type": 0,\n    "private_type": 0\n  },\n  {\n    "id": "xxxxxx",\n    "guild_id": "123456",\n    "name": "新的子频道",\n    "type": 0,\n    "position": 2,\n    "parent_id": "123456",\n    "owner_id": "0",\n    "sub_type": 0,\n    "private_type": 2\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道对象(Channel)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/channel/model.html",relativePath:"develop/api-v2/server-inter/channel/manage/channel/model.md",key:"v-1f13079d",path:"/develop/api-v2/server-inter/channel/manage/channel/model.html",headers:[{level:2,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:8},{level:3,title:"有关 position 的说明",slug:"有关-position-的说明",normalizedTitle:"有关 position 的说明",charIndex:351},{level:2,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:251},{level:2,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:298},{level:2,title:"PrivateType",slug:"privatetype",normalizedTitle:"privatetype",charIndex:508},{level:2,title:"SpeakPermission",slug:"speakpermission",normalizedTitle:"speakpermission",charIndex:556},{level:2,title:"应用子频道的应用类型",slug:"应用子频道的应用类型",normalizedTitle:"应用子频道的应用类型",charIndex:636}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Channel 有关 position 的说明 ChannelType ChannelSubType PrivateType SpeakPermission 应用子频道的应用类型",content:"# 子频道对象(Channel)\n\n子频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID\n\n\n# Channel\n\n字段名                类型       描述\nid                 string   子频道 id\nguild_id           string   频道 id\nname               string   子频道名\ntype               int      子频道类型 ChannelType\nsub_type           int      子频道子类型 ChannelSubType\nposition           int      排序值，具体请参考 有关 position 的说明\nparent_id          string   所属分组 id，仅对子频道有效，对 子频道分组（ChannelType=4） 无效\nowner_id           string   创建人 id\nprivate_type       int      子频道私密类型 PrivateType\nspeak_permission   int      子频道发言权限 SpeakPermission\napplication_id     string   用于标识应用子频道应用类型，仅应用子频道时会使用该字段，具体定义请参考 应用子频道的应用类型\npermissions        string   用户拥有的子频道权限 Permissions\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始\n * 当子频道类型为 子频道分组（ChannelType=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始\n * 如果不传默认追加到分组下最后一个\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于QQ频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n目前只有文字子频道具有 ChannelSubType 二级分类，同时二级分类也可能会不断增加，开发者也需要注意对未知 ID 的处理。\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# PrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# SpeakPermission\n\n值   描述\n0   无效类型\n1   所有人\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   CoDM 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于QQ频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",normalizedContent:"# 子频道对象(channel)\n\n子频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关。请不要理解为真实的 id\n\n\n# channel\n\n字段名                类型       描述\nid                 string   子频道 id\nguild_id           string   频道 id\nname               string   子频道名\ntype               int      子频道类型 channeltype\nsub_type           int      子频道子类型 channelsubtype\nposition           int      排序值，具体请参考 有关 position 的说明\nparent_id          string   所属分组 id，仅对子频道有效，对 子频道分组（channeltype=4） 无效\nowner_id           string   创建人 id\nprivate_type       int      子频道私密类型 privatetype\nspeak_permission   int      子频道发言权限 speakpermission\napplication_id     string   用于标识应用子频道应用类型，仅应用子频道时会使用该字段，具体定义请参考 应用子频道的应用类型\npermissions        string   用户拥有的子频道权限 permissions\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始\n * 当子频道类型为 子频道分组（channeltype=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始\n * 如果不传默认追加到分组下最后一个\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于qq频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n目前只有文字子频道具有 channelsubtype 二级分类，同时二级分类也可能会不断增加，开发者也需要注意对未知 id 的处理。\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# privatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# speakpermission\n\n值   描述\n0   无效类型\n1   所有人\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   codm 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于qq频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道详情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/channel/get_channel.html",relativePath:"develop/api-v2/server-inter/channel/manage/channel/get_channel.md",key:"v-68c9fbbb",path:"/develop/api-v2/server-inter/channel/manage/channel/get_channel.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:14},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:54},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:91},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:131},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:153},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:169}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取子频道详情\n\n\n# 接口\n\nGET /channels/{channel_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 channel_id 指定的子频道的详情。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回Channel 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /channels/123456\n\n\n1\n\n\n响应数据包\n\n{\n  "id": "123456",\n  "guild_id": "xxxxxx",\n  "name": "很高兴遇见你",\n  "type": 4,\n  "position": 2,\n  "owner_id": "0",\n  "sub_type": 0,\n  "private_type": 0,\n  "speak_permission": 0,\n  "application_id": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'# 获取子频道详情\n\n\n# 接口\n\nget /channels/{channel_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 channel_id 指定的子频道的详情。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回channel 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /channels/123456\n\n\n1\n\n\n响应数据包\n\n{\n  "id": "123456",\n  "guild_id": "xxxxxx",\n  "name": "很高兴遇见你",\n  "type": 4,\n  "position": 2,\n  "owner_id": "0",\n  "sub_type": 0,\n  "private_type": 0,\n  "speak_permission": 0,\n  "application_id": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/channel/patch_channel.html",relativePath:"develop/api-v2/server-inter/channel/manage/channel/patch_channel.md",key:"v-28cf9dd2",path:"/develop/api-v2/server-inter/channel/manage/channel/patch_channel.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:12},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:54},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:154},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:194},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:452},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:474},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:490}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 修改子频道\n\n\n# 接口\n\nPATCH /channels/{channel_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于修改 channel_id 指定的子频道的信息。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                类型       描述\nname               string   子频道名\nposition           int      排序\nparent_id          string   分组 id\nprivate_type       int      子频道私密类型 PrivateType\nspeak_permission   int      子频道发言权限 SpeakPermission\n\n需要修改哪个字段，就传递哪个字段即可。\n\n\n# 返回\n\n返回Channel 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "新的私密子频道",\n  "position": 1,\n  "owner_id": "0",\n  "sub_type": 0,\n  "private_type": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "name": "私密子频道a",\n  "type": 10006,\n  "position": 2,\n  "parent_id": "xxxxxx",\n  "owner_id": "xxxxxx",\n  "sub_type": 0,\n  "private_type": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 修改子频道\n\n\n# 接口\n\npatch /channels/{channel_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于修改 channel_id 指定的子频道的信息。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                类型       描述\nname               string   子频道名\nposition           int      排序\nparent_id          string   分组 id\nprivate_type       int      子频道私密类型 privatetype\nspeak_permission   int      子频道发言权限 speakpermission\n\n需要修改哪个字段，就传递哪个字段即可。\n\n\n# 返回\n\n返回channel 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "新的私密子频道",\n  "position": 1,\n  "owner_id": "0",\n  "sub_type": 0,\n  "private_type": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "name": "私密子频道a",\n  "type": 10006,\n  "position": 2,\n  "parent_id": "xxxxxx",\n  "owner_id": "xxxxxx",\n  "sub_type": 0,\n  "private_type": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/channel/post_channels.html",relativePath:"develop/api-v2/server-inter/channel/manage/channel/post_channels.md",key:"v-f814c55e",path:"/develop/api-v2/server-inter/channel/manage/channel/post_channels.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:12},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:58},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:177},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:217},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:142},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:749},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:765}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 创建子频道\n\n\n# 接口\n\nPOST /guilds/{guild_id}/channels\n\n\n1\n\n\n\n# 功能描述\n\n用于在 guild_id 指定的频道下创建一个子频道。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                类型          描述\nname               string      子频道名称\ntype               int         子频道类型 ChannelType\nsub_type           int         子频道子类型 ChannelSubType\nposition           int         子频道排序，必填；当子频道类型为 子频道分组（ChannelType=4）时，必须大于等于 2\nparent_id          string      子频道所属分组ID\nprivate_type       int         子频道私密类型 PrivateType\nprivate_user_ids   string 数组   子频道私密类型成员 ID\nspeak_permission   int         子频道发言权限 SpeakPermission\napplication_id     string      应用类型子频道应用 AppID，仅应用子频道需要该字段\n\n\n# 返回\n\n返回Channel 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "私密子频道",\n  "type": 0,\n  "position": 1,\n  "parent_id": "123456",\n  "owner_id": "0",\n  "sub_type": 0,\n  "private_type": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "name": "私密子频道",\n  "type": 1,\n  "position": 7,\n  "parent_id": "123456",\n  "owner_id": "xxxxxx",\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# 创建子频道\n\n\n# 接口\n\npost /guilds/{guild_id}/channels\n\n\n1\n\n\n\n# 功能描述\n\n用于在 guild_id 指定的频道下创建一个子频道。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                类型          描述\nname               string      子频道名称\ntype               int         子频道类型 channeltype\nsub_type           int         子频道子类型 channelsubtype\nposition           int         子频道排序，必填；当子频道类型为 子频道分组（channeltype=4）时，必须大于等于 2\nparent_id          string      子频道所属分组id\nprivate_type       int         子频道私密类型 privatetype\nprivate_user_ids   string 数组   子频道私密类型成员 id\nspeak_permission   int         子频道发言权限 speakpermission\napplication_id     string      应用类型子频道应用 appid，仅应用子频道需要该字段\n\n\n# 返回\n\n返回channel 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "私密子频道",\n  "type": 0,\n  "position": 1,\n  "parent_id": "123456",\n  "owner_id": "0",\n  "sub_type": 0,\n  "private_type": 1\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "name": "私密子频道",\n  "type": 1,\n  "position": 7,\n  "parent_id": "123456",\n  "owner_id": "xxxxxx",\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/event/guild.html",relativePath:"develop/api-v2/server-inter/channel/manage/event/guild.md",key:"v-5fef905b",path:"/develop/api-v2/server-inter/channel/manage/event/guild.html",headers:[{level:2,title:"事件内容",slug:"事件内容",normalizedTitle:"事件内容",charIndex:11},{level:2,title:"GUILD_CREATE",slug:"guild-create",normalizedTitle:"guild_create",charIndex:133},{level:3,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:150},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:178},{level:2,title:"GUILD_UPDATE",slug:"guild-update",normalizedTitle:"guild_update",charIndex:539},{level:3,title:"发送时机",slug:"发送时机-2",normalizedTitle:"发送时机",charIndex:150},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:178},{level:2,title:"GUILD_DELETE",slug:"guild-delete",normalizedTitle:"guild_delete",charIndex:956},{level:3,title:"发送时机",slug:"发送时机-3",normalizedTitle:"发送时机",charIndex:150},{level:3,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:178}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"事件内容 GUILD_CREATE 发送时机 示例 GUILD_UPDATE 发送时机 示例 GUILD_DELETE 发送时机 示例",content:'# 频道事件\n\n\n# 事件内容\n\n在 Guild 的基础上，增加 op_user_id 字段表示操作人。\n\n注：此事件由于开发较早，尚有一些字段未标准化处理，如 joined_at, icon 请开发者适配的时候注意。晚些时候我们也会将这些字段标准化处理。\n\n\n# GUILD_CREATE\n\n\n# 发送时机\n\n * 机器人被加入到某个频道的时候\n\n\n# 示例\n\n{\n    "description": "频道介绍",\n    "icon": "https://pub.idqqimg.com/pc/misc/files/20211208/311cfc87ce394c62b7c9f0508658cf25.png",\n    "id": "200000000",\n    "joined_at": "2021-10-21T11:20:18+08:00",\n    "max_members": 300,\n    "member_count": 17,\n    "name": "频道名称",\n    "op_user_id": "100000000",\n    "owner_id": "100000000"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# GUILD_UPDATE\n\n\n# 发送时机\n\n * 频道信息变更\n * 事件内容为变更后的数据\n\n\n# 示例\n\n{\n    "description": "修改了的频道介绍",\n    "icon": "https://pub.idqqimg.com/pc/misc/files/20211208/311cfc87ce394c62b7c9f0508658cf25.png",\n    "id": "200000000",\n    "joined_at": "2021-10-21T11:20:18+08:00",\n    "max_members": 300,\n    "member_count": 18,\n    "name": "频道名称",\n    "op_user_id": "100000000",\n    "owner_id": "100000000"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# GUILD_DELETE\n\n\n# 发送时机\n\n * 频道被解散\n * 机器人被移除\n * 事件内容为变更前的数据\n\n\n# 示例\n\n{\n    "description": "频道介绍",\n    "icon": "https://pub.idqqimg.com/pc/misc/files/20211208/311cfc87ce394c62b7c9f0508658cf25.png",\n    "id": "200000000",\n    "joined_at": "2021-10-21T11:20:18+08:00",\n    "max_members": 300,\n    "member_count": 17,\n    "name": "频道名称",\n    "op_user_id": "100000000",\n    "owner_id": "100000000"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 频道事件\n\n\n# 事件内容\n\n在 guild 的基础上，增加 op_user_id 字段表示操作人。\n\n注：此事件由于开发较早，尚有一些字段未标准化处理，如 joined_at, icon 请开发者适配的时候注意。晚些时候我们也会将这些字段标准化处理。\n\n\n# guild_create\n\n\n# 发送时机\n\n * 机器人被加入到某个频道的时候\n\n\n# 示例\n\n{\n    "description": "频道介绍",\n    "icon": "https://pub.idqqimg.com/pc/misc/files/20211208/311cfc87ce394c62b7c9f0508658cf25.png",\n    "id": "200000000",\n    "joined_at": "2021-10-21t11:20:18+08:00",\n    "max_members": 300,\n    "member_count": 17,\n    "name": "频道名称",\n    "op_user_id": "100000000",\n    "owner_id": "100000000"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# guild_update\n\n\n# 发送时机\n\n * 频道信息变更\n * 事件内容为变更后的数据\n\n\n# 示例\n\n{\n    "description": "修改了的频道介绍",\n    "icon": "https://pub.idqqimg.com/pc/misc/files/20211208/311cfc87ce394c62b7c9f0508658cf25.png",\n    "id": "200000000",\n    "joined_at": "2021-10-21t11:20:18+08:00",\n    "max_members": 300,\n    "member_count": 18,\n    "name": "频道名称",\n    "op_user_id": "100000000",\n    "owner_id": "100000000"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# guild_delete\n\n\n# 发送时机\n\n * 频道被解散\n * 机器人被移除\n * 事件内容为变更前的数据\n\n\n# 示例\n\n{\n    "description": "频道介绍",\n    "icon": "https://pub.idqqimg.com/pc/misc/files/20211208/311cfc87ce394c62b7c9f0508658cf25.png",\n    "id": "200000000",\n    "joined_at": "2021-10-21t11:20:18+08:00",\n    "max_members": 300,\n    "member_count": 17,\n    "name": "频道名称",\n    "op_user_id": "100000000",\n    "owner_id": "100000000"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/event/channel.html",relativePath:"develop/api-v2/server-inter/channel/manage/event/channel.md",key:"v-370f150a",path:"/develop/api-v2/server-inter/channel/manage/event/channel.html",headers:[{level:2,title:"内容",slug:"内容",normalizedTitle:"内容",charIndex:12},{level:2,title:"CHANNEL_CREATE",slug:"channel-create",normalizedTitle:"channel_create",charIndex:60},{level:3,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:79},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:99},{level:2,title:"CHANNEL_UPDATE",slug:"channel-update",normalizedTitle:"channel_update",charIndex:293},{level:3,title:"发送时机",slug:"发送时机-2",normalizedTitle:"发送时机",charIndex:79},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:99},{level:2,title:"CHANNEL_DELETE",slug:"channel-delete",normalizedTitle:"channel_delete",charIndex:528},{level:3,title:"发送时机",slug:"发送时机-3",normalizedTitle:"发送时机",charIndex:79},{level:3,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:99}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"内容 CHANNEL_CREATE 发送时机 示例 CHANNEL_UPDATE 发送时机 示例 CHANNEL_DELETE 发送时机 示例",content:'# 子频道事件\n\n\n# 内容\n\n在 Channel 的部分字段基础上，增加 op_user_id 代表操作人。\n\n\n# CHANNEL_CREATE\n\n\n# 发送时机\n\n * 子频道被创建\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "id": "2943679",\n    "name": "测试",\n    "op_user_id": "100000000",\n    "owner_id": "100000000",\n    "sub_type": 0,\n    "type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# CHANNEL_UPDATE\n\n\n# 发送时机\n\n * 子频道信息变更\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "id": "2943679",\n    "name": "测试2",\n    "op_user_id": "100000000",\n    "owner_id": "100000000",\n    "sub_type": 0,\n    "type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# CHANNEL_DELETE\n\n\n# 发送时机\n\n * 子频道被删除\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "id": "2943679",\n    "name": "测试2",\n    "op_user_id": "100000000",\n    "owner_id": "100000000",\n    "sub_type": 0,\n    "type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 子频道事件\n\n\n# 内容\n\n在 channel 的部分字段基础上，增加 op_user_id 代表操作人。\n\n\n# channel_create\n\n\n# 发送时机\n\n * 子频道被创建\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "id": "2943679",\n    "name": "测试",\n    "op_user_id": "100000000",\n    "owner_id": "100000000",\n    "sub_type": 0,\n    "type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# channel_update\n\n\n# 发送时机\n\n * 子频道信息变更\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "id": "2943679",\n    "name": "测试2",\n    "op_user_id": "100000000",\n    "owner_id": "100000000",\n    "sub_type": 0,\n    "type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# channel_delete\n\n\n# 发送时机\n\n * 子频道被删除\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "id": "2943679",\n    "name": "测试2",\n    "op_user_id": "100000000",\n    "owner_id": "100000000",\n    "sub_type": 0,\n    "type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取用户频道列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/guild/guilds.html",relativePath:"develop/api-v2/server-inter/channel/manage/guild/guilds.md",key:"v-4a364e6d",path:"/develop/api-v2/server-inter/channel/manage/guild/guilds.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:50},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:166},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:206},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:437},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:460},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:476}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 获取用户频道列表\n\n\n# 接口\n\nGET /users/@me/guilds\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）所加入的频道列表，支持分页。\n\n当 HTTP Authorization 中填入 Bot Token 是获取机器人的数据，填入 Bearer Token 则获取用户的数据。 票据说明。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述                  要求\nbefore   string   读此 guild id 之前的数据   before 设置时， 先反序，再分页\nafter    string   读此 guild id 之后的数据   after 和 before 同时设置时， after 参数无效\nlimit    int      每次拉取多少条数据           默认 100, 最大 100\n\n\n# 返回\n\n返回 Guild 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n[{\n    "id": "696527283900292399",\n    "name": "鹅们的萌宠啦咔咔啦",\n    "icon": "https://groupprohead-76292.picgzc.qpic.cn/482231626508223/100?t=1626508224633",\n    "owner_id": "4828365788198541698",\n    "owner": false,\n    "joined_at": "2021-12-08T16:12:31+08:00",\n    "member_count": 17,\n    "max_members": 300,\n    "description": "123"\n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 获取用户频道列表\n\n\n# 接口\n\nget /users/@me/guilds\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）所加入的频道列表，支持分页。\n\n当 http authorization 中填入 bot token 是获取机器人的数据，填入 bearer token 则获取用户的数据。 票据说明。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述                  要求\nbefore   string   读此 guild id 之前的数据   before 设置时， 先反序，再分页\nafter    string   读此 guild id 之后的数据   after 和 before 同时设置时， after 参数无效\nlimit    int      每次拉取多少条数据           默认 100, 最大 100\n\n\n# 返回\n\n返回 guild 对象数组。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n[{\n    "id": "696527283900292399",\n    "name": "鹅们的萌宠啦咔咔啦",\n    "icon": "https://groupprohead-76292.picgzc.qpic.cn/482231626508223/100?t=1626508224633",\n    "owner_id": "4828365788198541698",\n    "owner": false,\n    "joined_at": "2021-12-08t16:12:31+08:00",\n    "member_count": 17,\n    "max_members": 300,\n    "description": "123"\n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道详情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/guild/get_guild.html",relativePath:"develop/api-v2/server-inter/channel/manage/guild/get_guild.md",key:"v-0904d6fb",path:"/develop/api-v2/server-inter/channel/manage/guild/get_guild.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:49},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:83},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:123},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:143},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:159}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取频道详情\n\n\n# 接口\n\nGET /guilds/{guild_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道的详情。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回Guild 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /guilds/123456\n\n\n1\n\n\n响应数据包\n\n{\n  "id": "123456",\n  "name": "xxxxxx",\n  "icon": "xxxxxx",\n  "owner_id": "xxxxxx",\n  "owner": false,\n  "joined_at": "2022-01-13T11:02:21+08:00",\n  "member_count": 5,\n  "max_members": 300,\n  "description": "千江有水千江月，万里无云万里天"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 获取频道详情\n\n\n# 接口\n\nget /guilds/{guild_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道的详情。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回guild 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /guilds/123456\n\n\n1\n\n\n响应数据包\n\n{\n  "id": "123456",\n  "name": "xxxxxx",\n  "icon": "xxxxxx",\n  "owner_id": "xxxxxx",\n  "owner": false,\n  "joined_at": "2022-01-13t11:02:21+08:00",\n  "member_count": 5,\n  "max_members": 300,\n  "description": "千江有水千江月，万里无云万里天"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道对象(Guild)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/guild/model.html",relativePath:"develop/api-v2/server-inter/channel/manage/guild/model.md",key:"v-332e983d",path:"/develop/api-v2/server-inter/channel/manage/guild/model.html",headers:[{level:2,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:7}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Guild",content:"# 频道对象(Guild)\n\n频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID\n\n\n# Guild\n\n字段名            类型       描述\nid             string   频道ID\nname           string   频道名称\nicon           string   频道头像地址\nowner_id       string   创建人用户ID\nowner          bool     当前人是否是创建人\nmember_count   int      成员数\nmax_members    int      最大成员数\ndescription    string   描述\njoined_at      string   加入时间",normalizedContent:"# 频道对象(guild)\n\n频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关。请不要理解为真实的 id\n\n\n# guild\n\n字段名            类型       描述\nid             string   频道id\nname           string   频道名称\nicon           string   频道头像地址\nowner_id       string   创建人用户id\nowner          bool     当前人是否是创建人\nmember_count   int      成员数\nmax_members    int      最大成员数\ndescription    string   描述\njoined_at      string   加入时间",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取用户详情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/user/me.html",relativePath:"develop/api-v2/server-inter/channel/manage/user/me.md",key:"v-89b04ec2",path:"/develop/api-v2/server-inter/channel/manage/user/me.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:41},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:68},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:108},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:128},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:144}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取用户详情\n\n\n# 接口\n\nGET /users/@me\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）详情。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 User 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "id": "11586990140073229091",\n  "username": "gitsub",\n  "avatar": "https://thirdqq.qlogo.cn/g?b=oidb&k=M5TibpXicS7Jt4z89BZxiamAA&s=100&t=1641802698",\n  "union_openid": "74F138F7F3AF68C4B8E8325013FCA295",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 获取用户详情\n\n\n# 接口\n\nget /users/@me\n\n\n1\n\n\n\n# 功能描述\n\n用于获取当前用户（机器人）详情。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 user 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "id": "11586990140073229091",\n  "username": "gitsub",\n  "avatar": "https://thirdqq.qlogo.cn/g?b=oidb&k=m5tibpxics7jt4z89bzxiamaa&s=100&t=1641802698",\n  "union_openid": "74f138f7f3af68c4b8e8325013fca295",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/miniapp/",relativePath:"develop/api-v2/server-inter/channel/miniapp/README.md",key:"v-cad47de4",path:"/develop/api-v2/server-inter/channel/miniapp/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"用户对象(User)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/manage/user/model.html",relativePath:"develop/api-v2/server-inter/channel/manage/user/model.md",key:"v-b60326e6",path:"/develop/api-v2/server-inter/channel/manage/user/model.html",headers:[{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:7},{level:2,title:"提示",slug:"提示",normalizedTitle:"提示",charIndex:418}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"User 提示",content:"# 用户对象(User)\n\n用户对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID\n\n\n# User\n\n字段名                  类型       描述\nid                   string   用户 id\nusername             string   用户名\navatar               string   用户头像地址\nbot                  bool     是否是机器人\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与union_openid关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 提示\n\nunion_openid 与 union_user_account 只有在单独拉取 member 信息的时候才会提供，在其他的事件中所携带的 user 对象，均无这两个字段的内容。",normalizedContent:"# 用户对象(user)\n\n用户对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关。请不要理解为真实的 id\n\n\n# user\n\n字段名                  类型       描述\nid                   string   用户 id\nusername             string   用户名\navatar               string   用户头像地址\nbot                  bool     是否是机器人\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与union_openid关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 提示\n\nunion_openid 与 union_user_account 只有在单独拉取 member 信息的时候才会提供，在其他的事件中所携带的 user 对象，均无这两个字段的内容。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道和当前人信息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/miniapp/interface.html",relativePath:"develop/api-v2/server-inter/channel/miniapp/interface.md",key:"v-bcdcc626",path:"/develop/api-v2/server-inter/channel/miniapp/interface.html",headers:[{level:2,title:"从 extendData 中获取频道ID",slug:"从-extenddata-中获取频道id",normalizedTitle:"从 extenddata 中获取频道id",charIndex:103},{level:3,title:"机器人服务打开小程序",slug:"机器人服务打开小程序",normalizedTitle:"机器人服务打开小程序",charIndex:23},{level:3,title:"机器人发出的ark打开小程序",slug:"机器人发出的ark打开小程序",normalizedTitle:"机器人发出的ark打开小程序",charIndex:317},{level:2,title:"获取频道信息与当前人身份",slug:"获取频道信息与当前人身份",normalizedTitle:"获取频道信息与当前人身份",charIndex:431},{level:3,title:"调用参数 Object object",slug:"调用参数-object-object",normalizedTitle:"调用参数 object object",charIndex:480},{level:3,title:"Object.success 回调函数参数 Object res",slug:"object-success-回调函数参数-object-res",normalizedTitle:"object.success 回调函数参数 object res",charIndex:1008},{level:3,title:"encryptedData 解密后的数据",slug:"encrypteddata-解密后的数据",normalizedTitle:"encrypteddata 解密后的数据",charIndex:1242},{level:3,title:"Object channel_info 子频道信息",slug:"object-channel-info-子频道信息",normalizedTitle:"object channel_info 子频道信息",charIndex:1543}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"从 extendData 中获取频道ID 机器人服务打开小程序 机器人发出的ark打开小程序 获取频道信息与当前人身份 调用参数 Object object Object.success 回调函数参数 Object res encryptedData 解密后的数据 Object channel_info 子频道信息",content:"# 获取频道和当前人信息\n\n适用场景：\n\n1.机器人服务打开小程序后（机器人服务需在机器人开发者端-服务配置）\n\n2.机器人发出的ark 打开小程序后（ark模版的跳转link可以带上对应的参数）\n\n\n# 从 extendData 中获取频道ID\n\n\n# 机器人服务打开小程序\n\n开发者在开发者平台配置服务功能的时候，在 extData 支持使用占位符来获取频道ID，子频道ID。\n\n如：guildID=$OPENGUILDID$&channelID=$CHANNELID$\n\n平台会在频道中打开机器人面板的时候，对占位符进行替换。开发者可以在 onLaunch 的时候从 options.extendData 中获取数据。\n\n\n# 机器人发出的ark打开小程序\n\n由于机器人发送消息到频道的时候，是知道 $OPENGUILDID$ 和 $CHANNELID$ 的，所以可以在发送消息的时候将对应参数的值直接带到小程序地址上用于打开的时候调用小程序接口\n\n\n# 获取频道信息与当前人身份\n\nqq.getGuildInfo(Object object)\n\n\n# 调用参数 Object object\n\n属性              类型         默认值   必填   说明                         最低版本\nopen_guild_id   string           是    频道在机器人场景的 Guild id         1.40.0\nchannel_id      string           否    子频道Id                      1.40.0\nsuccess         function         否    接口调用成功的回调函数                1.40.0\nfail            function         否    接口调用失败的回调函数                1.40.0\ncomplete        function         否    接口调用结束的回调函数（调用成功、失败都会执行）   1.40.0\n\nopen_guild_id 从小程序的 extendData 上获取，即开发者在机器人平台配置小程序服务时候提示到的 $OPENGUILDID$\n\n\n# Object.success 回调函数参数 Object res\n\n# 解密前\n\nres 得到的是加密之后的数据，需要开发者解密，解密方案参考: 开放数据校验与解密\n\n属性              类型       说明\nencryptedData   string   加密之后的数据，需要解密\niv              string   对称解密算法初始向量(base64)\nsignature       string   签名(base64)\n\n\n# encryptedData 解密后的数据\n\n属性              类型       说明\nguild_name      string   频道名称\nmember_role     number   当前成员角色 0成员/1管理员/2频道主\nchannel_info    Object   子频道信息，只在请求上有channel_id的时候才会返回\nmember_userid   string   当前用户在机器人场景的 User id\nmember_nick     string   当前用户在频道内的昵称\nopen_guild_id   string   Guild id\n\n\n# Object channel_info 子频道信息\n\n属性              类型       说明\nchannel_name    string   子频道名称\nchannel_type    number   子频道类型\nis_accessible   number   是否可以访问该子频道，0不可访问、1可访问",normalizedContent:"# 获取频道和当前人信息\n\n适用场景：\n\n1.机器人服务打开小程序后（机器人服务需在机器人开发者端-服务配置）\n\n2.机器人发出的ark 打开小程序后（ark模版的跳转link可以带上对应的参数）\n\n\n# 从 extenddata 中获取频道id\n\n\n# 机器人服务打开小程序\n\n开发者在开发者平台配置服务功能的时候，在 extdata 支持使用占位符来获取频道id，子频道id。\n\n如：guildid=$openguildid$&channelid=$channelid$\n\n平台会在频道中打开机器人面板的时候，对占位符进行替换。开发者可以在 onlaunch 的时候从 options.extenddata 中获取数据。\n\n\n# 机器人发出的ark打开小程序\n\n由于机器人发送消息到频道的时候，是知道 $openguildid$ 和 $channelid$ 的，所以可以在发送消息的时候将对应参数的值直接带到小程序地址上用于打开的时候调用小程序接口\n\n\n# 获取频道信息与当前人身份\n\nqq.getguildinfo(object object)\n\n\n# 调用参数 object object\n\n属性              类型         默认值   必填   说明                         最低版本\nopen_guild_id   string           是    频道在机器人场景的 guild id         1.40.0\nchannel_id      string           否    子频道id                      1.40.0\nsuccess         function         否    接口调用成功的回调函数                1.40.0\nfail            function         否    接口调用失败的回调函数                1.40.0\ncomplete        function         否    接口调用结束的回调函数（调用成功、失败都会执行）   1.40.0\n\nopen_guild_id 从小程序的 extenddata 上获取，即开发者在机器人平台配置小程序服务时候提示到的 $openguildid$\n\n\n# object.success 回调函数参数 object res\n\n# 解密前\n\nres 得到的是加密之后的数据，需要开发者解密，解密方案参考: 开放数据校验与解密\n\n属性              类型       说明\nencrypteddata   string   加密之后的数据，需要解密\niv              string   对称解密算法初始向量(base64)\nsignature       string   签名(base64)\n\n\n# encrypteddata 解密后的数据\n\n属性              类型       说明\nguild_name      string   频道名称\nmember_role     number   当前成员角色 0成员/1管理员/2频道主\nchannel_info    object   子频道信息，只在请求上有channel_id的时候才会返回\nmember_userid   string   当前用户在机器人场景的 user id\nmember_nick     string   当前用户在频道内的昵称\nopen_guild_id   string   guild id\n\n\n# object channel_info 子频道信息\n\n属性              类型       说明\nchannel_name    string   子频道名称\nchannel_type    number   子频道类型\nis_accessible   number   是否可以访问该子频道，0不可访问、1可访问",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改日程",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/content/schedule/patch_schedule.html",relativePath:"develop/api-v2/server-inter/channel/content/schedule/patch_schedule.md",key:"v-96e857a6",path:"/develop/api-v2/server-inter/channel/content/schedule/patch_schedule.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:77},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:173},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:213},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:281},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:305},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:321}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 修改日程\n\n\n# 接口\n\nPATCH /channels/{channel_id}/schedules/{schedule_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于修改日程子频道 channel_id 下 schedule_id 指定的日程的详情。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名        类型         描述\nschedule   Schedule   日程对象，不需要带 id\n\n\n# 返回\n\n返回 Schedule 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "schedule": {\n    "name": "今晚八点上王者",\n    "start_timestamp": "1642076453000",\n    "end_timestamp": "1642083653000",\n    "jump_channel_id": "0",\n    "remind_type": "0"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "name": "今晚八点上王者",\n  "start_timestamp": "1642076453000",\n  "end_timestamp": "1642083653000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": true\n    },\n    "nick": "",\n    "joined_at": "2022-01-13T11:02:21+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',normalizedContent:'# 修改日程\n\n\n# 接口\n\npatch /channels/{channel_id}/schedules/{schedule_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于修改日程子频道 channel_id 下 schedule_id 指定的日程的详情。\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名        类型         描述\nschedule   schedule   日程对象，不需要带 id\n\n\n# 返回\n\n返回 schedule 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "schedule": {\n    "name": "今晚八点上王者",\n    "start_timestamp": "1642076453000",\n    "end_timestamp": "1642083653000",\n    "jump_channel_id": "0",\n    "remind_type": "0"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "name": "今晚八点上王者",\n  "start_timestamp": "1642076453000",\n  "end_timestamp": "1642083653000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": true\n    },\n    "nick": "",\n    "joined_at": "2022-01-13t11:02:21+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/",relativePath:"develop/api-v2/server-inter/channel/role-group/README.md",key:"v-05bf3b5e",path:"/develop/api-v2/server-inter/channel/role-group/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道用户权限",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_permissions.html",relativePath:"develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_permissions.md",key:"v-59b26021",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_permissions.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:16},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:86},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:188},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:228},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:262},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:278}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取子频道用户权限\n\n\n# 接口\n\nGET /channels/{channel_id}/members/{user_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 子频道channel_id 下用户 user_id 的权限。\n\n * 获取子频道用户权限。\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 ChannelPermissions 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /channels/123456/members/112233/permissions\n\n\n1\n\n\n响应数据包\n\n{\n  "channel_id": "123456",\n  "user_id": "112233",\n  "permissions": "4"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取子频道用户权限\n\n\n# 接口\n\nget /channels/{channel_id}/members/{user_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 子频道channel_id 下用户 user_id 的权限。\n\n * 获取子频道用户权限。\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 channelpermissions 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /channels/123456/members/112233/permissions\n\n\n1\n\n\n响应数据包\n\n{\n  "channel_id": "123456",\n  "user_id": "112233",\n  "permissions": "4"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"开放数据域加密",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/miniapp/opendata.html",relativePath:"develop/api-v2/server-inter/channel/miniapp/opendata.md",key:"v-02661611",path:"/develop/api-v2/server-inter/channel/miniapp/opendata.html",headers:[{level:2,title:"背景",slug:"背景",normalizedTitle:"背景",charIndex:14},{level:2,title:"开放数据加密-参考文档",slug:"开放数据加密-参考文档",normalizedTitle:"开放数据加密-参考文档",charIndex:147}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"背景 开放数据加密-参考文档",content:"# 开放数据域加密\n\n\n# 背景\n\n由于小程序没有用于跟平台接口进行后台鉴权使用的用户票据。 所以开发者在小程序前端鉴权会后，如果还需要将鉴权结果传递给自己的后台，做后台鉴权，这个时候在后台中需要机遇 session key 针对 rawData 进行签名验证来保证数据没有被篡改过。\n\n\n# 开放数据加密-参考文档\n\nhttps://q.qq.com/wiki/develop/game/frame/open-ability/signature.html",normalizedContent:"# 开放数据域加密\n\n\n# 背景\n\n由于小程序没有用于跟平台接口进行后台鉴权使用的用户票据。 所以开发者在小程序前端鉴权会后，如果还需要将鉴权结果传递给自己的后台，做后台鉴权，这个时候在后台中需要机遇 session key 针对 rawdata 进行签名验证来保证数据没有被篡改过。\n\n\n# 开放数据加密-参考文档\n\nhttps://q.qq.com/wiki/develop/game/frame/open-ability/signature.html",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道权限对象(ChannelPermissions)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/model.html",relativePath:"develop/api-v2/server-inter/channel/role-group/channel_permissions/model.md",key:"v-627fe80d",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/model.html",headers:[{level:2,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:10},{level:2,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:17}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"ChannelPermissions Permissions",content:'# 子频道权限对象(ChannelPermissions)\n\n\n# ChannelPermissions\n\n字段名               类型       描述\nchannel_id        string   子频道 id\nuser_id/role_id   string   用户 id 或 身份组 id，只会返回其中之一\npermissions       string   用户拥有的子频道权限\n\n\n# Permissions\n\n权限是QQ频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004 (1 << 2)   支持指定成员发言类型，支持身份组发言类型',normalizedContent:'# 子频道权限对象(channelpermissions)\n\n\n# channelpermissions\n\n字段名               类型       描述\nchannel_id        string   子频道 id\nuser_id/role_id   string   用户 id 或 身份组 id，只会返回其中之一\npermissions       string   用户拥有的子频道权限\n\n\n# permissions\n\n权限是qq频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6fff，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004 (1 << 2)   支持指定成员发言类型，支持身份组发言类型',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道身份组权限",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_roles_permissions.html",relativePath:"develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_roles_permissions.md",key:"v-98a6b1b6",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/get_channel_roles_permissions.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:17},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:85},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:174},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:214},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:248},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:264}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取子频道身份组权限\n\n\n# 接口\n\nGET /channels/{channel_id}/roles/{role_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于获取子频道 channel_id 下身份组 role_id 的权限。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 ChannelPermissions 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /channels/123456/roles/112233/permissions\n\n\n1\n\n\n响应数据包\n\n{\n  "channel_id": "123456",\n  "role_id": "112233",\n  "permissions": "5"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取子频道身份组权限\n\n\n# 接口\n\nget /channels/{channel_id}/roles/{role_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于获取子频道 channel_id 下身份组 role_id 的权限。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回 channelpermissions 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /channels/123456/roles/112233/permissions\n\n\n1\n\n\n响应数据包\n\n{\n  "channel_id": "123456",\n  "role_id": "112233",\n  "permissions": "5"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道用户权限",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_permissions.html",relativePath:"develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_permissions.md",key:"v-ae4352a2",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_permissions.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:16},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:86},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:296},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:173},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:437},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:464},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:480}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 修改子频道用户权限\n\n\n# 接口\n\nPUT /channels/{channel_id}/members/{user_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于修改子频道 channel_id 下用户 user_id 的权限。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置 1，删除用户权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n * 本接口不支持修改可管理子频道权限。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "add": "1",\n  "remove": "4"\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'# 修改子频道用户权限\n\n\n# 接口\n\nput /channels/{channel_id}/members/{user_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于修改子频道 channel_id 下用户 user_id 的权限。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置 1，删除用户权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n * 本接口不支持修改可管理子频道权限。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "add": "1",\n  "remove": "4"\n}\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组成员",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/delete_guild_member_role.html",relativePath:"develop/api-v2/server-inter/channel/role-group/delete_guild_member_role.md",key:"v-1019bc26",path:"/develop/api-v2/server-inter/channel/role-group/delete_guild_member_role.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:16},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:89},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:251},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:291},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:369},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:396},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:412}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:"# 删除频道身份组成员\n\n\n# 接口\n\nDELETE /guilds/{guild_id}/members/{user_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于将 用户 user_id 从 频道 guild_id 的 role_id 身份组中移除。\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名       类型           描述\nchannel   Channel 对象   接收一个只填充了子频道 id 字段的对象\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /guilds/123456/members/112233/roles/445566\n\n\n1\n",normalizedContent:"# 删除频道身份组成员\n\n\n# 接口\n\ndelete /guilds/{guild_id}/members/{user_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于将 用户 user_id 从 频道 guild_id 的 role_id 身份组中移除。\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 id 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名       类型           描述\nchannel   channel 对象   接收一个只填充了子频道 id 字段的对象\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /guilds/123456/members/112233/roles/445566\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道身份组权限",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_roles_permissions.html",relativePath:"develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_roles_permissions.md",key:"v-32c1f1f3",path:"/develop/api-v2/server-inter/channel/role-group/channel_permissions/put_channel_roles_permissions.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:17},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:85},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:298},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:173},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:439},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:466},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:482}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 修改子频道身份组权限\n\n\n# 接口\n\nPUT /channels/{channel_id}/roles/{role_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于修改子频道 channel_id 下身份组 role_id 的权限。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予身份组权限即把add对应位置 1，删除身份组权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n * 本接口不支持修改可管理子频道权限。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "add": "1",\n  "remove": "4"\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'# 修改子频道身份组权限\n\n\n# 接口\n\nput /channels/{channel_id}/roles/{role_id}/permissions\n\n\n1\n\n\n\n# 功能描述\n\n用于修改子频道 channel_id 下身份组 role_id 的权限。\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予身份组权限即把add对应位置 1，删除身份组权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n * 本接口不支持修改可管理子频道权限。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "add": "1",\n  "remove": "4"\n}\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道身份组列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/get_guild_roles.html",relativePath:"develop/api-v2/server-inter/channel/role-group/get_guild_roles.md",key:"v-a6c0997e",path:"/develop/api-v2/server-inter/channel/role-group/get_guild_roles.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:16},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:58},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:95},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:135},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:285},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:301}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取频道身份组列表\n\n\n# 接口\n\nGET /guilds/{guild_id}/roles\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id指定的频道下的身份组列表。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名              类型          描述\nguild_id         string      频道 ID\nroles            Role 对象数组   一组频道身份组对象\nrole_num_limit   string      默认分组上限\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /guilds/123456/roles\n\n\n1\n\n\n响应数据包\n\n{\n  "guild_id": "123456",\n  "roles": [\n    {\n      "id": "4",\n      "name": "创建者",\n      "color": 4294927682,\n      "hoist": 1,\n      "number": 1,\n      "member_limit": 1\n    },\n    {\n      "id": "2",\n      "name": "管理员",\n      "color": 4280276644,\n      "hoist": 1,\n      "number": 5,\n      "member_limit": 50\n    }\n  ],\n  "role_num_limit": "30"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 获取频道身份组列表\n\n\n# 接口\n\nget /guilds/{guild_id}/roles\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id指定的频道下的身份组列表。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n字段名              类型          描述\nguild_id         string      频道 id\nroles            role 对象数组   一组频道身份组对象\nrole_num_limit   string      默认分组上限\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /guilds/123456/roles\n\n\n1\n\n\n响应数据包\n\n{\n  "guild_id": "123456",\n  "roles": [\n    {\n      "id": "4",\n      "name": "创建者",\n      "color": 4294927682,\n      "hoist": 1,\n      "number": 1,\n      "member_limit": 1\n    },\n    {\n      "id": "2",\n      "name": "管理员",\n      "color": 4280276644,\n      "hoist": 1,\n      "number": 5,\n      "member_limit": 50\n    }\n  ],\n  "role_num_limit": "30"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/delete_guild_role.html",relativePath:"develop/api-v2/server-inter/channel/role-group/delete_guild_role.md",key:"v-0bf5fcb6",path:"/develop/api-v2/server-inter/channel/role-group/delete_guild_role.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:14},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:69},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:160},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:200},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:227},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:243}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:"# 删除频道身份组\n\n\n# 接口\n\nDELETE /guilds/{guild_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除频道guild_id下 role_id 对应的身份组。\n\n * 需要使用的 token 对应的用户具备删除身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /guilds/123456/roles/112233\n\n\n1\n",normalizedContent:"# 删除频道身份组\n\n\n# 接口\n\ndelete /guilds/{guild_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除频道guild_id下 role_id 对应的身份组。\n\n * 需要使用的 token 对应的用户具备删除身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /guilds/123456/roles/112233\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改频道身份组",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/patch_guild_role.html",relativePath:"develop/api-v2/server-inter/channel/role-group/patch_guild_role.md",key:"v-3539c7ad",path:"/develop/api-v2/server-inter/channel/role-group/patch_guild_role.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:14},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:68},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:197},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:189},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:383},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:503},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:519}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 修改频道身份组\n\n\n# 接口\n\nPATCH /guilds/{guild_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于修改频道 guild_id 下 role_id 指定的身份组。\n\n * 需要使用的 token 对应的用户具备修改身份组权限。如果是机器人，要求被添加为管理员。\n * 接口会修改传入的字段，不传入的默认不会修改，至少要传入一个参数。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nname    string   名称(非必填)\ncolor   uint32   ARGB 的 HEX 十六进制颜色值转换后的十进制数值(非必填)\nhoist   int32    在成员列表中单独展示: 0-否, 1-是(非必填)\n\n\n# 返回\n\n字段名        类型        描述\nguild_id   string    频道 ID\nrole_id    string    身份组 ID\nrole       Role 对象   修改后的频道身份组对象\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "test",\n  "color": 99999,\n  "hoist": "1"\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n  "guild_id": "3489223429684602178",\n  "role_id": "10177739",\n  "role": {\n    "id": "10177739",\n    "name": "test",\n    "color": 99999,\n    "hoist": 1,\n    "number": 1,\n    "member_limit": 2000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'# 修改频道身份组\n\n\n# 接口\n\npatch /guilds/{guild_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于修改频道 guild_id 下 role_id 指定的身份组。\n\n * 需要使用的 token 对应的用户具备修改身份组权限。如果是机器人，要求被添加为管理员。\n * 接口会修改传入的字段，不传入的默认不会修改，至少要传入一个参数。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nname    string   名称(非必填)\ncolor   uint32   argb 的 hex 十六进制颜色值转换后的十进制数值(非必填)\nhoist   int32    在成员列表中单独展示: 0-否, 1-是(非必填)\n\n\n# 返回\n\n字段名        类型        描述\nguild_id   string    频道 id\nrole_id    string    身份组 id\nrole       role 对象   修改后的频道身份组对象\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "test",\n  "color": 99999,\n  "hoist": "1"\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n  "guild_id": "3489223429684602178",\n  "role_id": "10177739",\n  "role": {\n    "id": "10177739",\n    "name": "test",\n    "color": 99999,\n    "hoist": 1,\n    "number": 1,\n    "member_limit": 2000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道身份组成员",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/put_guild_member_role.html",relativePath:"develop/api-v2/server-inter/channel/role-group/put_guild_member_role.md",key:"v-18052b93",path:"/develop/api-v2/server-inter/channel/role-group/put_guild_member_role.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:16},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:86},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:244},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:284},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:362},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:389},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:405}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 创建频道身份组成员\n\n\n# 接口\n\nPUT /guilds/{guild_id}/members/{user_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于将频道guild_id下的用户 user_id 添加到身份组 role_id 。\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要增加的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名       类型           描述\nchannel   Channel 对象   接收一个只填充了子频道 id 字段的对象\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n\t"channel": {\n\t\t"id": "1744939"\n\t}\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建频道身份组成员\n\n\n# 接口\n\nput /guilds/{guild_id}/members/{user_id}/roles/{role_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于将频道guild_id下的用户 user_id 添加到身份组 role_id 。\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要增加的身份组 id 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名       类型           描述\nchannel   channel 对象   接收一个只填充了子频道 id 字段的对象\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n\t"channel": {\n\t\t"id": "1744939"\n\t}\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道身份组",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role-group/post_guild_role.html",relativePath:"develop/api-v2/server-inter/channel/role-group/post_guild_role.md",key:"v-b058cf62",path:"/develop/api-v2/server-inter/channel/role-group/post_guild_role.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:14},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:57},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:173},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:142},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:359},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:449},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:465}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 创建频道身份组\n\n\n# 接口\n\nPOST /guilds/{guild_id}/roles\n\n\n1\n\n\n\n# 功能描述\n\n用于在guild_id 指定的频道下创建一个身份组。\n\n * 需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n * 参数为非必填，但至少需要传其中之一，默认为空或 0。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nname    string   名称(非必填)\ncolor   uint32   ARGB 的 HEX 十六进制颜色值转换后的十进制数值(非必填)\nhoist   int32    在成员列表中单独展示: 0-否, 1-是(非必填)\n\n\n# 返回\n\n字段名       类型        描述\nrole_id   string    身份组 ID\nrole      Role 对象   所创建的频道身份组对象\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "test",\n  "color": 99999,\n  "hoist": "1"\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n  "role_id": "10177739",\n  "role": {\n    "id": "10177739",\n    "name": "test",\n    "color": 99999,\n    "hoist": 1,\n    "number": 0,\n    "member_limit": 2000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 创建频道身份组\n\n\n# 接口\n\npost /guilds/{guild_id}/roles\n\n\n1\n\n\n\n# 功能描述\n\n用于在guild_id 指定的频道下创建一个身份组。\n\n * 需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n * 参数为非必填，但至少需要传其中之一，默认为空或 0。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nname    string   名称(非必填)\ncolor   uint32   argb 的 hex 十六进制颜色值转换后的十进制数值(非必填)\nhoist   int32    在成员列表中单独展示: 0-否, 1-是(非必填)\n\n\n# 返回\n\n字段名       类型        描述\nrole_id   string    身份组 id\nrole      role 对象   所创建的频道身份组对象\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "name": "test",\n  "color": 99999,\n  "hoist": "1"\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n  "role_id": "10177739",\n  "role": {\n    "id": "10177739",\n    "name": "test",\n    "color": 99999,\n    "hoist": 1,\n    "number": 0,\n    "member_limit": 2000\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/",relativePath:"develop/api-v2/server-inter/channel/role/README.md",key:"v-06cbb81e",path:"/develop/api-v2/server-inter/channel/role/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"音视频/直播子频道成员进出事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/audio_or_live_channel_member.html",relativePath:"develop/api-v2/server-inter/channel/role/audio_or_live_channel_member.md",key:"v-773986e6",path:"/develop/api-v2/server-inter/channel/role/audio_or_live_channel_member.html",headers:[{level:2,title:"AUDIOORLIVECHANNELMEMBER_ENTER",slug:"audio-or-live-channel-member-enter",normalizedTitle:"audioorlivechannelmember_enter",charIndex:null},{level:3,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:61},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:89},{level:2,title:"AUDIOORLIVECHANNELMEMBER_EXIT",slug:"audio-or-live-channel-member-exit",normalizedTitle:"audioorlivechannelmember_exit",charIndex:null},{level:3,title:"发送时机",slug:"发送时机-2",normalizedTitle:"发送时机",charIndex:61},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:89}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"AUDIOORLIVECHANNELMEMBER_ENTER 发送时机 示例 AUDIOORLIVECHANNELMEMBER_EXIT 发送时机 示例",content:'# 音视频/直播子频道成员进出事件\n\n\n# AUDIO_OR_LIVE_CHANNEL_MEMBER_ENTER\n\n\n# 发送时机\n\n * 用户进入音视频/直播子频道时\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "channel_type": 2, // 2-音视频子频道 5-直播子频道\n  "user_id": "144115218182563108"\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# AUDIO_OR_LIVE_CHANNEL_MEMBER_EXIT\n\n\n# 发送时机\n\n * 用户离开音视频/直播子频道时\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "channel_type": 2, // 2-音视频子频道 5-直播子频道\n  "user_id": "144115218182563108"\n}\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# 音视频/直播子频道成员进出事件\n\n\n# audio_or_live_channel_member_enter\n\n\n# 发送时机\n\n * 用户进入音视频/直播子频道时\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "channel_type": 2, // 2-音视频子频道 5-直播子频道\n  "user_id": "144115218182563108"\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# audio_or_live_channel_member_exit\n\n\n# 发送时机\n\n * 用户离开音视频/直播子频道时\n\n\n# 示例\n\n{\n  "guild_id": "47129941624960822",\n  "channel_id": "1661124",\n  "channel_type": 2, // 2-音视频子频道 5-直播子频道\n  "user_id": "144115218182563108"\n}\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道在线成员数",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/get_online_nums.html",relativePath:"develop/api-v2/server-inter/channel/role/get_online_nums.md",key:"v-5ea07855",path:"/develop/api-v2/server-inter/channel/role/get_online_nums.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:17},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:69},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:112},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:152},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:202},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:218}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取子频道在线成员数\n\n\n# 接口\n\nGET /channels/{channel_id}/online_nums\n\n\n1\n\n\n\n# 功能描述\n\n用于查询音视频/直播子频道 channel_id 的在线成员数。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回空对象。\n\n{\n  "online_nums": 1\n}\n\n\n1\n2\n3\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /channels/123456/online_nums\n\n\n1\n\n\n响应数据包\n\n{\n  "online_nums": 1\n}\n\n\n1\n2\n3\n',normalizedContent:'# 获取子频道在线成员数\n\n\n# 接口\n\nget /channels/{channel_id}/online_nums\n\n\n1\n\n\n\n# 功能描述\n\n用于查询音视频/直播子频道 channel_id 的在线成员数。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回空对象。\n\n{\n  "online_nums": 1\n}\n\n\n1\n2\n3\n\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /channels/123456/online_nums\n\n\n1\n\n\n响应数据包\n\n{\n  "online_nums": 1\n}\n\n\n1\n2\n3\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道成员",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/member/delete_member.html",relativePath:"develop/api-v2/server-inter/channel/role/member/delete_member.md",key:"v-6e78da2d",path:"/develop/api-v2/server-inter/channel/role/member/delete_member.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:70},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:198},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:238},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:465},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:492},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:508}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 删除频道成员\n\n\n# 接口\n\nDELETE /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除 guild_id 指定的频道下的成员 user_id。\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件。\n * 无法移除身份为管理员的成员\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                       类型     描述\nadd_blacklist             bool   删除成员的同时，将该用户添加到频道黑名单中\ndelete_history_msg_days   int    删除成员的同时，撤回该成员的消息，可以指定撤回消息的时间范围\n\n注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息。\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /guilds/123456/members/112233\n{\n    "add_blacklist": true,\n    "delete_history_msg_days": -1\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 删除频道成员\n\n\n# 接口\n\ndelete /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于删除 guild_id 指定的频道下的成员 user_id。\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件。\n * 无法移除身份为管理员的成员\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                       类型     描述\nadd_blacklist             bool   删除成员的同时，将该用户添加到频道黑名单中\ndelete_history_msg_days   int    删除成员的同时，撤回该成员的消息，可以指定撤回消息的时间范围\n\n注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息。\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /guilds/123456/members/112233\n{\n    "add_blacklist": true,\n    "delete_history_msg_days": -1\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道成员事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/guild_member.html",relativePath:"develop/api-v2/server-inter/channel/role/guild_member.md",key:"v-0a712ae6",path:"/develop/api-v2/server-inter/channel/role/guild_member.html",headers:[{level:2,title:"内容",slug:"内容",normalizedTitle:"内容",charIndex:13},{level:2,title:"GUILDMEMBERADD",slug:"guild-member-add",normalizedTitle:"guildmemberadd",charIndex:null},{level:3,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:164},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:185},{level:2,title:"GUILDMEMBERUPDATE",slug:"guild-member-update",normalizedTitle:"guildmemberupdate",charIndex:null},{level:3,title:"发送时机",slug:"发送时机-2",normalizedTitle:"发送时机",charIndex:164},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:185},{level:2,title:"GUILDMEMBERREMOVE",slug:"guild-member-remove",normalizedTitle:"guildmemberremove",charIndex:null},{level:3,title:"发送时机",slug:"发送时机-3",normalizedTitle:"发送时机",charIndex:164},{level:3,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:185}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"内容 GUILDMEMBERADD 发送时机 示例 GUILDMEMBERUPDATE 发送时机 示例 GUILDMEMBERREMOVE 发送时机 示例",content:'# 频道成员事件\n\n\n# 内容\n\n在 MemberWithGuildID 基础上，增加 op_user_id 代表操作人。\n\n注：此事件由于开发较早，尚有一些字段未标准化处理，如 joined_at, roles 请开发者适配的时候注意。晚些时候我们也会将这些字段标准化处理。\n\n\n# GUILD_MEMBER_ADD\n\n\n# 发送时机\n\n * 新用户加入频道\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "joined_at": "2021-10-21T11:20:18+08:00",\n    "nick": "",\n    "op_user_id": "100000000",\n    "roles": [\n      "1"\n    ],\n    "user": {\n      "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=IU4JJatZtNXCVrf44eshNg&s=0&t=1638261405",\n      "bot": true,\n      "id": "8834102668809967837",\n      "username": "b站机器人"\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# GUILD_MEMBER_UPDATE\n\n\n# 发送时机\n\n * 用户的频道属性发生变化，如频道昵称，或者身份组\n\n\n# 示例\n\n{\n  "guild_id": "200000000",\n  "joined_at": "2021-10-21T11:20:18+08:00",\n  "nick": "",\n  "op_user_id": "8834102668809967837",\n  "roles": ["2"],\n  "user": {\n   "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=IU4JJatZtNXCVrf44eshNg&s=0&t=1638261405",\n   "bot": true,\n   "id": "8834102668809967837",\n   "username": "b站机器人"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# GUILD_MEMBER_REMOVE\n\n\n# 发送时机\n\n * 用户离开频道\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "joined_at": "2021-10-21T11:20:18+08:00",\n    "nick": "",\n    "op_user_id": "100000000",\n    "roles": [\n      "1"\n    ],\n    "user": {\n      "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=IU4JJatZtNXCVrf44eshNg&s=0&t=1638261405",\n      "bot": true,\n      "id": "8834102668809967837",\n      "username": "b站机器人"\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',normalizedContent:'# 频道成员事件\n\n\n# 内容\n\n在 memberwithguildid 基础上，增加 op_user_id 代表操作人。\n\n注：此事件由于开发较早，尚有一些字段未标准化处理，如 joined_at, roles 请开发者适配的时候注意。晚些时候我们也会将这些字段标准化处理。\n\n\n# guild_member_add\n\n\n# 发送时机\n\n * 新用户加入频道\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "joined_at": "2021-10-21t11:20:18+08:00",\n    "nick": "",\n    "op_user_id": "100000000",\n    "roles": [\n      "1"\n    ],\n    "user": {\n      "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=iu4jjatztnxcvrf44eshng&s=0&t=1638261405",\n      "bot": true,\n      "id": "8834102668809967837",\n      "username": "b站机器人"\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# guild_member_update\n\n\n# 发送时机\n\n * 用户的频道属性发生变化，如频道昵称，或者身份组\n\n\n# 示例\n\n{\n  "guild_id": "200000000",\n  "joined_at": "2021-10-21t11:20:18+08:00",\n  "nick": "",\n  "op_user_id": "8834102668809967837",\n  "roles": ["2"],\n  "user": {\n   "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=iu4jjatztnxcvrf44eshng&s=0&t=1638261405",\n   "bot": true,\n   "id": "8834102668809967837",\n   "username": "b站机器人"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# guild_member_remove\n\n\n# 发送时机\n\n * 用户离开频道\n\n\n# 示例\n\n{\n    "guild_id": "200000000",\n    "joined_at": "2021-10-21t11:20:18+08:00",\n    "nick": "",\n    "op_user_id": "100000000",\n    "roles": [\n      "1"\n    ],\n    "user": {\n      "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=iu4jjatztnxcvrf44eshng&s=0&t=1638261405",\n      "bot": true,\n      "id": "8834102668809967837",\n      "username": "b站机器人"\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/member/get_members.html",relativePath:"develop/api-v2/server-inter/channel/role/member/get_members.md",key:"v-269b33ad",path:"/develop/api-v2/server-inter/channel/role/member/get_members.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:59},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:105},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:145},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:296},{level:2,title:"有关返回结果的说明",slug:"有关返回结果的说明",normalizedTitle:"有关返回结果的说明",charIndex:320},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:481},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:497}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 有关返回结果的说明 错误码 示例",content:'# 获取频道成员列表\n\n\n# 接口\n\nGET /guilds/{guild_id}/members\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中所有成员的详情列表，支持分页。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nafter   string   上一次回包中最后一个member的user id， 如果是第一次请求填 0，默认为 0\nlimit   uint32   分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数\n\n\n# 返回\n\n返回 Member 对象数组。\n\n\n# 有关返回结果的说明\n\n 1. 在每次翻页的过程中，可能会返回上一次请求已经返回过的member信息，需要调用方自己根据user id来进行去重。\n\n 2. 每次返回的member数量与limit不一定完全相等。翻页请使用最后一个member的user id作为下一次请求的after参数，直到回包为空，拉取结束。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求\n\nGET /guilds/123456/members?limit=2\n\n\n1\n\n\n响应数据包\n\n[\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxx",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["1"],\n    "joined_at": "2021-12-09T15:53:41+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  },\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "秦时明月",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["4"],\n    "joined_at": "2021-12-02T15:19:00+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',normalizedContent:'# 获取频道成员列表\n\n\n# 接口\n\nget /guilds/{guild_id}/members\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中所有成员的详情列表，支持分页。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型       描述\nafter   string   上一次回包中最后一个member的user id， 如果是第一次请求填 0，默认为 0\nlimit   uint32   分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数\n\n\n# 返回\n\n返回 member 对象数组。\n\n\n# 有关返回结果的说明\n\n 1. 在每次翻页的过程中，可能会返回上一次请求已经返回过的member信息，需要调用方自己根据user id来进行去重。\n\n 2. 每次返回的member数量与limit不一定完全相等。翻页请使用最后一个member的user id作为下一次请求的after参数，直到回包为空，拉取结束。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求\n\nget /guilds/123456/members?limit=2\n\n\n1\n\n\n响应数据包\n\n[\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxx",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["1"],\n    "joined_at": "2021-12-09t15:53:41+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  },\n  {\n    "user": {\n      "id": "xxxxxx",\n      "username": "秦时明月",\n      "avatar": "xxxxxx",\n      "bot": false,\n      "public_flags": 0,\n      "system": false,\n      "union_openid": "xxxxxx",\n      "union_user_account": ""\n    },\n    "nick": "",\n    "roles": ["4"],\n    "joined_at": "2021-12-02t15:19:00+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员详情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/member/get_member.html",relativePath:"develop/api-v2/server-inter/channel/role/member/get_member.md",key:"v-45721f76",path:"/develop/api-v2/server-inter/channel/role/member/get_member.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:69},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:119},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:159},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:182},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:198}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取频道成员详情\n\n\n# 接口\n\nGET /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中 user_id 对应成员的详细信息。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回Member 成员对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /guilds/123456/members/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "user": {\n    "id": "2823701233424295228",\n    "username": "xxx",\n    "avatar": "https://qqchannel-profile-1251316161.file.myqcloud.com/xxxxxxx",\n    "bot": false,\n    "union_openid": "",\n    "union_user_account": ""\n  },\n  "nick": "",\n  "roles": [\n    "1"\n  ],\n  "joined_at": "2021-12-05T14:08:29+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',normalizedContent:'# 获取频道成员详情\n\n\n# 接口\n\nget /guilds/{guild_id}/members/{user_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 指定的频道中 user_id 对应成员的详细信息。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回member 成员对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /guilds/123456/members/112233\n\n\n1\n\n\n响应数据包\n\n{\n  "user": {\n    "id": "2823701233424295228",\n    "username": "xxx",\n    "avatar": "https://qqchannel-profile-1251316161.file.myqcloud.com/xxxxxxx",\n    "bot": false,\n    "union_openid": "",\n    "union_user_account": ""\n  },\n  "nick": "",\n  "roles": [\n    "1"\n  ],\n  "joined_at": "2021-12-05t14:08:29+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道身份组成员列表",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/member/get_role_members.html",relativePath:"develop/api-v2/server-inter/channel/role/member/get_role_members.md",key:"v-0a79194e",path:"/develop/api-v2/server-inter/channel/role/member/get_role_members.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:18},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:78},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:134},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:174},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:332},{level:2,title:"有关返回结果的说明",slug:"有关返回结果的说明",normalizedTitle:"有关返回结果的说明",charIndex:426},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:494},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:510}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 有关返回结果的说明 错误码 示例",content:'# 获取频道身份组成员列表\n\n\n# 接口\n\nGET /guilds/{guild_id}/roles/{role_id}/members\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 频道中指定role_id身份组下所有成员的详情列表，支持分页。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名           类型       描述\nstart_index   string   将上一次回包中next填入， 如果是第一次请求填 0，默认为 0\nlimit         uint32   分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数\n\n\n# 返回\n\n字段名    类型            描述\ndata   Member 对象数组   一组用户信息对象\nnext   string        下一次请求的分页标识\n\n\n# 有关返回结果的说明\n\n每次返回的member数量与limit不一定完全相等。特定管理身份组下的成员可能存在一次性返回全部的情况\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求\n\nGET /guilds/123456/roles/4/members?limit=2\n\n\n1\n\n\n响应数据包\n\n{\n  "data": [\n    {\n      "user": {\n        "id": "xxx",\n        "username": "xxx",\n        "avatar": "xxx",\n        "bot": false\n      },\n      "nick": "xxx",\n      "joined_at": "2021-11-03T20:41:36+08:00"\n    }\n  ],\n  "next": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',normalizedContent:'# 获取频道身份组成员列表\n\n\n# 接口\n\nget /guilds/{guild_id}/roles/{role_id}/members\n\n\n1\n\n\n\n# 功能描述\n\n用于获取 guild_id 频道中指定role_id身份组下所有成员的详情列表，支持分页。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名           类型       描述\nstart_index   string   将上一次回包中next填入， 如果是第一次请求填 0，默认为 0\nlimit         uint32   分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数\n\n\n# 返回\n\n字段名    类型            描述\ndata   member 对象数组   一组用户信息对象\nnext   string        下一次请求的分页标识\n\n\n# 有关返回结果的说明\n\n每次返回的member数量与limit不一定完全相等。特定管理身份组下的成员可能存在一次性返回全部的情况\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求\n\nget /guilds/123456/roles/4/members?limit=2\n\n\n1\n\n\n响应数据包\n\n{\n  "data": [\n    {\n      "user": {\n        "id": "xxx",\n        "username": "xxx",\n        "avatar": "xxx",\n        "bot": false\n      },\n      "nick": "xxx",\n      "joined_at": "2021-11-03t20:41:36+08:00"\n    }\n  ],\n  "next": "0"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"成员对象(Member)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/member/model.html",relativePath:"develop/api-v2/server-inter/channel/role/member/model.md",key:"v-e973c266",path:"/develop/api-v2/server-inter/channel/role/member/model.html",headers:[{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:7},{level:2,title:"MemberWithGuildID",slug:"memberwithguildid",normalizedTitle:"memberwithguildid",charIndex:269}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Member MemberWithGuildID",content:"# 成员对象(Member)\n\n\n# Member\n\n字段名         类型                  描述\nuser        User                用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份组ID, 默认值可参考DefaultRoles\njoined_at   ISO8601 timestamp   用户加入频道的时间\n\n\n# MemberWithGuildID\n\n字段名         类型                  描述\nguild_id    string              频道id\nuser        User                用户的频道基础信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份\njoined_at   ISO8601 timestamp   用户加入频道的时间",normalizedContent:"# 成员对象(member)\n\n\n# member\n\n字段名         类型                  描述\nuser        user                用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份组id, 默认值可参考defaultroles\njoined_at   iso8601 timestamp   用户加入频道的时间\n\n\n# memberwithguildid\n\n字段名         类型                  描述\nguild_id    string              频道id\nuser        user                用户的频道基础信息\nnick        string              用户的昵称\nroles       string 数组           用户在频道内的身份\njoined_at   iso8601 timestamp   用户加入频道的时间",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道身份组对象(Role)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/role/member/role_model.html",relativePath:"develop/api-v2/server-inter/channel/role/member/role_model.md",key:"v-0e76ec4b",path:"/develop/api-v2/server-inter/channel/role/member/role_model.html",headers:[{level:2,title:"Role",slug:"role",normalizedTitle:"role",charIndex:10},{level:2,title:"DefaultRoleIDs(系统默认生成下列身份组ID)",slug:"defaultroleids-系统默认生成下列身份组id",normalizedTitle:"defaultroleids(系统默认生成下列身份组id)",charIndex:266}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Role DefaultRoleIDs(系统默认生成下列身份组ID)",content:"# 频道身份组对象(Role)\n\n\n# Role\n\n字段名            类型       描述\nid             string   身份组ID\nname           string   名称\ncolor          uint32   ARGB的HEX十六进制颜色值转换后的十进制数值\nhoist          uint32   是否在成员列表中单独展示: 0-否, 1-是\nnumber         uint32   人数\nmember_limit   uint32   成员上限\n\n\n# DefaultRoleIDs(系统默认生成下列身份组ID)\n\n身份组ID默认值   描述\n1          全体成员\n2          管理员\n4          群主/创建者\n5          子频道管理员",normalizedContent:"# 频道身份组对象(role)\n\n\n# role\n\n字段名            类型       描述\nid             string   身份组id\nname           string   名称\ncolor          uint32   argb的hex十六进制颜色值转换后的十进制数值\nhoist          uint32   是否在成员列表中单独展示: 0-否, 1-是\nnumber         uint32   人数\nmember_limit   uint32   成员上限\n\n\n# defaultroleids(系统默认生成下列身份组id)\n\n身份组id默认值   描述\n1          全体成员\n2          管理员\n4          群主/创建者\n5          子频道管理员",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/speak/",relativePath:"develop/api-v2/server-inter/channel/speak/README.md",key:"v-34cbea84",path:"/develop/api-v2/server-inter/channel/speak/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 频道模块",normalizedContent:"# 频道模块",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道指定成员禁言",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/speak/patch_guild_member_mute.html",relativePath:"develop/api-v2/server-inter/channel/speak/patch_guild_member_mute.md",key:"v-1de8f42d",path:"/develop/api-v2/server-inter/channel/speak/patch_guild_member_mute.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:76},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:192},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:232},{level:3,title:"解除禁言",slug:"解除禁言",normalizedTitle:"解除禁言",charIndex:168},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:496},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:523},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:539}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 解除禁言 返回 错误码 示例",content:'# 频道指定成员禁言\n\n\n# 接口\n\nPATCH /guilds/{guild_id}/members/{user_id}/mute\n\n\n1\n\n\n\n# 功能描述\n\n用于禁言频道 guild_id 下的成员 user_id。\n\n * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n\n该接口同样可用于解除禁言，具体使用见解除指定成员禁言。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型       描述\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\n\n\n# 解除禁言\n\n该接口同样支持解除指定成员禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可。\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "mute_end_timestamp": "1641916800",\n  "mute_seconds": "120"\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'# 频道指定成员禁言\n\n\n# 接口\n\npatch /guilds/{guild_id}/members/{user_id}/mute\n\n\n1\n\n\n\n# 功能描述\n\n用于禁言频道 guild_id 下的成员 user_id。\n\n * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n\n该接口同样可用于解除禁言，具体使用见解除指定成员禁言。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型       描述\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\n\n\n# 解除禁言\n\n该接口同样支持解除指定成员禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可。\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "mute_end_timestamp": "1641916800",\n  "mute_seconds": "120"\n}\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道批量成员禁言",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/speak/patch_guild_mute_multi_member.html",relativePath:"develop/api-v2/server-inter/channel/speak/patch_guild_mute_multi_member.md",key:"v-5fe6706d",path:"/develop/api-v2/server-inter/channel/speak/patch_guild_mute_multi_member.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:15},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:58},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:166},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:206},{level:3,title:"批量解除禁言",slug:"批量解除禁言",normalizedTitle:"批量解除禁言",charIndex:142},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:564},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:610},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:626}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 批量解除禁言 返回 错误码 示例",content:'# 频道批量成员禁言\n\n\n# 接口\n\nPATCH /guilds/{guild_id}/mute\n\n\n1\n\n\n\n# 功能描述\n\n用于将频道的指定批量成员（非管理员）禁言。\n\n * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n\n该接口同样可用于批量解除禁言，具体使用见批量解除禁言。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型         描述\nmute_end_timestamp   string     禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\nmute_seconds         string     禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\nuser_ids             string列表   禁言成员的user_id列表，即User的id\n\n\n# 批量解除禁言\n\n该接口同样支持批量解除禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可，及需要批量解除禁言的成员的user_id 列表user_ids。\n\n\n# 返回\n\n成功返回 HTTP 状态码 200，并返回设置成功的成员user_ids。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "mute_end_timestamp": "1641916800",\n  "mute_seconds": "120",\n  "user_ids": ["1201318637970874066","1201318637970874067"]\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n  "user_ids": ["1201318637970874066"]\n}\n\n\n1\n2\n3\n',normalizedContent:'# 频道批量成员禁言\n\n\n# 接口\n\npatch /guilds/{guild_id}/mute\n\n\n1\n\n\n\n# 功能描述\n\n用于将频道的指定批量成员（非管理员）禁言。\n\n * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n\n该接口同样可用于批量解除禁言，具体使用见批量解除禁言。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型         描述\nmute_end_timestamp   string     禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\nmute_seconds         string     禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\nuser_ids             string列表   禁言成员的user_id列表，即user的id\n\n\n# 批量解除禁言\n\n该接口同样支持批量解除禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可，及需要批量解除禁言的成员的user_id 列表user_ids。\n\n\n# 返回\n\n成功返回 http 状态码 200，并返回设置成功的成员user_ids。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "mute_end_timestamp": "1641916800",\n  "mute_seconds": "120",\n  "user_ids": ["1201318637970874066","1201318637970874067"]\n}\n\n\n1\n2\n3\n4\n5\n\n\n响应数据包\n\n{\n  "user_ids": ["1201318637970874066"]\n}\n\n\n1\n2\n3\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道全员禁言",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/speak/patch_guild_mute.html",relativePath:"develop/api-v2/server-inter/channel/speak/patch_guild_mute.md",key:"v-10ca2451",path:"/develop/api-v2/server-inter/channel/speak/patch_guild_mute.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:56},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:160},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:200},{level:3,title:"解除禁言",slug:"解除禁言",normalizedTitle:"解除禁言",charIndex:138},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:462},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:489},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:505}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 解除禁言 返回 错误码 示例",content:'# 频道全员禁言\n\n\n# 接口\n\nPATCH /guilds/{guild_id}/mute\n\n\n1\n\n\n\n# 功能描述\n\n用于将频道的全体成员（非管理员）禁言。\n\n * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n\n该接口同样可用于解除禁言，具体使用见解除全员禁言。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型       描述\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\n\n\n# 解除禁言\n\n该接口同样支持解除全员禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可。\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "mute_end_timestamp": "1641916800",\n  "mute_seconds": "120"\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'# 频道全员禁言\n\n\n# 接口\n\npatch /guilds/{guild_id}/mute\n\n\n1\n\n\n\n# 功能描述\n\n用于将频道的全体成员（非管理员）禁言。\n\n * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n\n该接口同样可用于解除禁言，具体使用见解除全员禁言。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名                  类型       描述\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\n\n\n# 解除禁言\n\n该接口同样支持解除全员禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可。\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "mute_end_timestamp": "1641916800",\n  "mute_seconds": "120"\n}\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道消息频率的设置详情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/speak/setting/message_setting.html",relativePath:"develop/api-v2/server-inter/channel/speak/setting/message_setting.md",key:"v-0934f526",path:"/develop/api-v2/server-inter/channel/speak/setting/message_setting.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:20},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:72},{level:2,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:112},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:152},{level:2,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:181},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:197}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 返回 错误码 示例",content:'# 获取频道消息频率的设置详情\n\n\n# 接口\n\nGET /guilds/{guild_id}/message/setting\n\n\n1\n\n\n\n# 功能描述\n\n用于获取机器人在频道 guild_id 内的消息频率设置。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回MessageSetting 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "disable_create_dm": true,\n  "disable_push_msg": false,\n  "channel_ids": [\n    "1146313",\n    "2651849",\n    "2651149"\n  ],\n  "channel_push_max_num": 12\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# 获取频道消息频率的设置详情\n\n\n# 接口\n\nget /guilds/{guild_id}/message/setting\n\n\n1\n\n\n\n# 功能描述\n\n用于获取机器人在频道 guild_id 内的消息频率设置。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n返回messagesetting 对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n响应数据包\n\n{\n  "disable_create_dm": true,\n  "disable_push_msg": false,\n  "channel_ids": [\n    "1146313",\n    "2651849",\n    "2651149"\n  ],\n  "channel_push_max_num": 12\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道消息频率设置对象 (MessageSetting)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/channel/speak/setting/model.html",relativePath:"develop/api-v2/server-inter/channel/speak/setting/model.md",key:"v-1b592a66",path:"/develop/api-v2/server-inter/channel/speak/setting/model.html",headers:[{level:2,title:"MessageSetting",slug:"messagesetting",normalizedTitle:"messagesetting",charIndex:14}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"MessageSetting",content:"# 频道消息频率设置对象 (MessageSetting)\n\n\n# MessageSetting\n\n字段名                    类型          描述\ndisable_create_dm      string      是否允许创建私信\ndisable_push_msg       string      是否允许发主动消息\nchannel_ids            string 数组   子频道 id 数组\nchannel_push_max_num   uint32      每个子频道允许主动推送消息最大消息条数",normalizedContent:"# 频道消息频率设置对象 (messagesetting)\n\n\n# messagesetting\n\n字段名                    类型          描述\ndisable_create_dm      string      是否允许创建私信\ndisable_push_msg       string      是否允许发主动消息\nchannel_ids            string 数组   子频道 id 数组\nchannel_push_max_num   uint32      每个子频道允许主动推送消息最大消息条数",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"群管理",frontmatter:{},regularPath:"/develop/api-v2/server-inter/group/manage/",relativePath:"develop/api-v2/server-inter/group/manage/README.md",key:"v-0ad45a04",path:"/develop/api-v2/server-inter/group/manage/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 群管理",normalizedContent:"# 群管理",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"群组模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/group/",relativePath:"develop/api-v2/server-inter/group/README.md",key:"v-3202e1e8",path:"/develop/api-v2/server-inter/group/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 群组模块\n\n说明\n\n开放平台支持的功能设置的配置项：\n\n * 进群破冰消息配置",normalizedContent:"# 群组模块\n\n说明\n\n开放平台支持的功能设置的配置项：\n\n * 进群破冰消息配置",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/group/manage/event.html",relativePath:"develop/api-v2/server-inter/group/manage/event.md",key:"v-030ad4ca",path:"/develop/api-v2/server-inter/group/manage/event.html",headers:[{level:2,title:"机器人加入群聊",slug:"机器人加入群聊",normalizedTitle:"机器人加入群聊",charIndex:9},{level:2,title:"机器人退出群聊",slug:"机器人退出群聊",normalizedTitle:"机器人退出群聊",charIndex:455},{level:2,title:"群聊拒绝机器人主动消息",slug:"群聊拒绝机器人主动消息",normalizedTitle:"群聊拒绝机器人主动消息",charIndex:900},{level:2,title:"群聊接受机器人主动消息",slug:"群聊接受机器人主动消息",normalizedTitle:"群聊接受机器人主动消息",charIndex:1354}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"机器人加入群聊 机器人退出群聊 群聊拒绝机器人主动消息 群聊接受机器人主动消息",content:'# 事件\n\n\n# 机器人加入群聊\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      GROUP_ADD_ROBOT\n触发场景      机器人被添加到群聊\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      加入的时间戳\ngroup_openid       string   加入群的群openid\nop_member_openid   string   操作添加机器人进群的群成员openid\n\n * 事件示例\n\n{\n\t"group_openid": "C9F778FE6ADF9D1D1DBE395BF744A33A",\n\t"op_member_openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240248\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 机器人退出群聊\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      GROUP_DEL_ROBOT\n触发场景      机器人被移出群聊\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      移除的时间戳\ngroup_openid       string   移除群的群openid\nop_member_openid   string   操作移除机器人退群的群成员openid\n\n * 事件示例\n\n{\n\t"group_openid": "C9F778FE6ADF9D1D1DBE395BF744A33A",\n\t"op_member_openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240426\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 群聊拒绝机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      GROUP_MSG_REJECT\n触发场景      群管理员主动在机器人资料页操作关闭通知\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      操作的时间戳\ngroup_openid       string   操作群的群openid\nop_member_openid   string   操作群成员的openid\n\n * 事件示例\n\n{\n\t"group_openid": "C9F778FE6ADF9D1D1DBE395BF744A33A",\n\t"op_member_openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240458\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 群聊接受机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      GROUP_MSG_RECEIVE\n触发场景      群管理员主动在机器人资料页操作开启通知\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      操作的时间戳\ngroup_openid       string   操作群的群openid\nop_member_openid   string   操作群成员的openid\n\n * 事件示例\n\n{\n\n\t"group_openid": "C9F778FE6ADF9D1D1DBE395BF744A33A",\n\t"op_member_openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240477\n}\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# 事件\n\n\n# 机器人加入群聊\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      group_add_robot\n触发场景      机器人被添加到群聊\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      加入的时间戳\ngroup_openid       string   加入群的群openid\nop_member_openid   string   操作添加机器人进群的群成员openid\n\n * 事件示例\n\n{\n\t"group_openid": "c9f778fe6adf9d1d1dbe395bf744a33a",\n\t"op_member_openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240248\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 机器人退出群聊\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      group_del_robot\n触发场景      机器人被移出群聊\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      移除的时间戳\ngroup_openid       string   移除群的群openid\nop_member_openid   string   操作移除机器人退群的群成员openid\n\n * 事件示例\n\n{\n\t"group_openid": "c9f778fe6adf9d1d1dbe395bf744a33a",\n\t"op_member_openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240426\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 群聊拒绝机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      group_msg_reject\n触发场景      群管理员主动在机器人资料页操作关闭通知\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      操作的时间戳\ngroup_openid       string   操作群的群openid\nop_member_openid   string   操作群成员的openid\n\n * 事件示例\n\n{\n\t"group_openid": "c9f778fe6adf9d1d1dbe395bf744a33a",\n\t"op_member_openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240458\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 群聊接受机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      group_msg_receive\n触发场景      群管理员主动在机器人资料页操作开启通知\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性                 类型       说明\ntimestamp          int      操作的时间戳\ngroup_openid       string   操作群的群openid\nop_member_openid   string   操作群成员的openid\n\n * 事件示例\n\n{\n\n\t"group_openid": "c9f778fe6adf9d1d1dbe395bf744a33a",\n\t"op_member_openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240477\n}\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"撤回私信",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/dms/delete_dms.html",relativePath:"develop/api-v2/server-inter/message/dms/delete_dms.md",key:"v-3955f456",path:"/develop/api-v2/server-inter/message/dms/delete_dms.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:83},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:169},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:236},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:276},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:303},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:319}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 参数 功能描述 Content-Type 返回 错误码 示例",content:"# 撤回私信\n\n\n# 接口\n\nDELETE /dms/{guild_id}/messages/{message_id}?hidetip=false\n\n\n1\n\n\n\n# 参数\n\n字段名       类型     描述\nhidetip   bool   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 功能描述\n\n用于撤回私信频道 guild_id 中 message_id 指定的私信消息。只能用于撤回机器人自己发送的私信。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /dms/123456/messages/112233\n\n\n1\n",normalizedContent:"# 撤回私信\n\n\n# 接口\n\ndelete /dms/{guild_id}/messages/{message_id}?hidetip=false\n\n\n1\n\n\n\n# 参数\n\n字段名       类型     描述\nhidetip   bool   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 功能描述\n\n用于撤回私信频道 guild_id 中 message_id 指定的私信消息。只能用于撤回机器人自己发送的私信。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /dms/123456/messages/112233\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息相关",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/",relativePath:"develop/api-v2/server-inter/message/README.md",key:"v-80ccf088",path:"/develop/api-v2/server-inter/message/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 消息相关",normalizedContent:"# 消息相关",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"私信消息事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/dms/direct_message.html",relativePath:"develop/api-v2/server-inter/message/dms/direct_message.md",key:"v-72cba642",path:"/develop/api-v2/server-inter/message/dms/direct_message.html",headers:[{level:2,title:"DIRECTMESSAGECREATE (intents DIRECT_MESSAGE)",slug:"direct-message-create-intents-direct-message",normalizedTitle:"directmessagecreate (intents direct_message)",charIndex:null},{level:3,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:64},{level:2,title:"内容",slug:"内容",normalizedTitle:"内容",charIndex:149},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:172}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"DIRECTMESSAGECREATE (intents DIRECT_MESSAGE) 发送时机 内容 示例",content:'# 私信消息事件\n\n\n# DIRECT_MESSAGE_CREATE (intents DIRECT_MESSAGE)\n\n\n# 发送时机\n\n * 用户通过私信发消息给机器人时\n * 由于私信场景无法设置沙箱频道，目前私信事件不支持沙箱环境，开发者可以通过用户 id 白名单的方式来调试私信\n\n\n# 内容\n\n内容为 Message 对象\n\n\n# 示例\n\n{\n    "author": {\n        "avatar": "http://thirdqq.qlogo.cn/0",\n        "bot": false,\n        "id": "1234",\n        "username": "abc"\n    },\n    "channel_id": "100010",\n    "content": "ndnnd",\n    "guild_id": "18700000000001",\n    "id": "0812345677890abcdef",\n    "member": {\n        "joined_at": "2021-04-12T16:34:42+08:00",\n        "roles": [\n            "1"\n        ]\n    },\n    "timestamp": "2021-05-20T15:14:58+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 私信消息事件\n\n\n# direct_message_create (intents direct_message)\n\n\n# 发送时机\n\n * 用户通过私信发消息给机器人时\n * 由于私信场景无法设置沙箱频道，目前私信事件不支持沙箱环境，开发者可以通过用户 id 白名单的方式来调试私信\n\n\n# 内容\n\n内容为 message 对象\n\n\n# 示例\n\n{\n    "author": {\n        "avatar": "http://thirdqq.qlogo.cn/0",\n        "bot": false,\n        "id": "1234",\n        "username": "abc"\n    },\n    "channel_id": "100010",\n    "content": "ndnnd",\n    "guild_id": "18700000000001",\n    "id": "0812345677890abcdef",\n    "member": {\n        "joined_at": "2021-04-12t16:34:42+08:00",\n        "roles": [\n            "1"\n        ]\n    },\n    "timestamp": "2021-05-20t15:14:58+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"私信会话对象（DMS）",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/dms/model.html",relativePath:"develop/api-v2/server-inter/message/dms/model.md",key:"v-4c27396d",path:"/develop/api-v2/server-inter/message/dms/model.html",headers:[{level:2,title:"DMS",slug:"dms",normalizedTitle:"dms",charIndex:9}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"DMS",content:"# 私信会话对象（DMS）\n\n\n# DMS\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 id\nchannel_id    string   私信会话关联的子频道 id\ncreate_time   string   创建私信会话时间戳",normalizedContent:"# 私信会话对象（dms）\n\n\n# dms\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 id\nchannel_id    string   私信会话关联的子频道 id\ncreate_time   string   创建私信会话时间戳",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建私信会话",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/dms/post_dms.html",relativePath:"develop/api-v2/server-inter/message/dms/post_dms.md",key:"v-5a69cfab",path:"/develop/api-v2/server-inter/message/dms/post_dms.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:13},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:46},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:143},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:183},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:111},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:306},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:322}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:'# 创建私信会话\n\n\n# 接口\n\nPOST /users/@me/dms\n\n\n1\n\n\n\n# 功能描述\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n * 机器人和用户存在共同频道才能创建私信会话。\n * 创建成功后，返回创建成功的频道 id ，子频道 id 和创建时间。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名               类型       描述\nrecipient_id      string   接收者 id\nsource_guild_id   string   源频道 id\n\n\n# 返回\n\n返回DMS对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "recipient_id": "123456",\n  "source_guild_id": "112233"\n}\n\n\n1\n2\n3\n4\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1642545606"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建私信会话\n\n\n# 接口\n\npost /users/@me/dms\n\n\n1\n\n\n\n# 功能描述\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n * 机器人和用户存在共同频道才能创建私信会话。\n * 创建成功后，返回创建成功的频道 id ，子频道 id 和创建时间。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名               类型       描述\nrecipient_id      string   接收者 id\nsource_guild_id   string   源频道 id\n\n\n# 返回\n\n返回dms对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "recipient_id": "123456",\n  "source_guild_id": "112233"\n}\n\n\n1\n2\n3\n4\n\n\n响应数据包\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1642545606"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/message.html",relativePath:"develop/api-v2/server-inter/message/message.md",key:"v-2cbfda8d",path:"/develop/api-v2/server-inter/message/message.html",headers:[{level:2,title:"ATMESSAGECREATE（intents PUBLICGUILDMESSAGES）",slug:"at-message-create-intents-public-guild-messages",normalizedTitle:"atmessagecreate（intents publicguildmessages）",charIndex:null},{level:3,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:64},{level:3,title:"内容",slug:"内容",normalizedTitle:"内容",charIndex:192},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:215},{level:2,title:"MESSAGEAUDITPASS（intents MESSAGE_AUDIT）",slug:"message-audit-pass-intents-message-audit",normalizedTitle:"messageauditpass（intents message_audit）",charIndex:null},{level:3,title:"发送时机",slug:"发送时机-2",normalizedTitle:"发送时机",charIndex:64},{level:3,title:"内容",slug:"内容-2",normalizedTitle:"内容",charIndex:192},{level:2,title:"MESSAGEAUDITREJECT（intents MESSAGE_AUDIT）",slug:"message-audit-reject-intents-message-audit",normalizedTitle:"messageauditreject（intents message_audit）",charIndex:null},{level:3,title:"发送时机",slug:"发送时机-3",normalizedTitle:"发送时机",charIndex:64},{level:3,title:"内容",slug:"内容-3",normalizedTitle:"内容",charIndex:192},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:215}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"ATMESSAGECREATE（intents PUBLICGUILDMESSAGES） 发送时机 内容 示例 MESSAGEAUDITPASS（intents MESSAGE_AUDIT） 发送时机 内容 MESSAGEAUDITREJECT（intents MESSAGE_AUDIT） 发送时机 内容 示例",content:'# 消息事件\n\n\n# AT_MESSAGE_CREATE（intents PUBLIC_GUILD_MESSAGES）\n\n\n# 发送时机\n\n * 用户发送消息，@当前机器人或回复机器人消息时\n * 为保障消息投递的速度，消息顺序我们虽然会尽量有序，但是并不保证是严格有序的，如开发者对消息顺序有严格有序的需求，可以自行缓冲消息事件之后，基于 Message.seq 进行排序\n\n\n# 内容\n\n内容为 Message 对象\n\n\n# 示例\n\n{\n  "author": {\n    "avatar": "http://thirdqq.qlogo.cn/0",\n    "bot": false,\n    "id": "1234",\n    "username": "abc"\n  },\n  "channel_id": "100010",\n  "content": "ndnnd",\n  "guild_id": "18700000000001",\n  "id": "0812345677890abcdef",\n  "member": {\n    "joined_at": "2021-04-12T16:34:42+08:00",\n    "roles": ["1"]\n  },\n  "timestamp": "2021-05-20T15:14:58+08:00",\n  "seq": 101\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 消息审核事件\n\n\n# MESSAGE_AUDIT_PASS（intents MESSAGE_AUDIT）\n\n\n# 发送时机\n\n * 消息审核通过\n\n\n# 内容\n\nMessageAudited\n\n\n# MESSAGE_AUDIT_REJECT（intents MESSAGE_AUDIT）\n\n\n# 发送时机\n\n * 消息审核不通过\n\n\n# 内容\n\nMessageAudited\n\n\n# 示例\n\n{\n  "audit_id": "5f60b782-d134-4628-93b8-9baa4b182f48",\n  "audit_time": "2022-01-04T18:05:42+08:00",\n  "channel_id": "1699792",\n  "create_time": "2022-01-04T18:05:42+08:00",\n  "guild_id": "46646271634786417",\n  "message_id": "10d0df671a1231343431313532313831383136323933383420801e280030a0cbc4013848404148f6b7d08e0650b1acf8fa05"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',normalizedContent:'# 消息事件\n\n\n# at_message_create（intents public_guild_messages）\n\n\n# 发送时机\n\n * 用户发送消息，@当前机器人或回复机器人消息时\n * 为保障消息投递的速度，消息顺序我们虽然会尽量有序，但是并不保证是严格有序的，如开发者对消息顺序有严格有序的需求，可以自行缓冲消息事件之后，基于 message.seq 进行排序\n\n\n# 内容\n\n内容为 message 对象\n\n\n# 示例\n\n{\n  "author": {\n    "avatar": "http://thirdqq.qlogo.cn/0",\n    "bot": false,\n    "id": "1234",\n    "username": "abc"\n  },\n  "channel_id": "100010",\n  "content": "ndnnd",\n  "guild_id": "18700000000001",\n  "id": "0812345677890abcdef",\n  "member": {\n    "joined_at": "2021-04-12t16:34:42+08:00",\n    "roles": ["1"]\n  },\n  "timestamp": "2021-05-20t15:14:58+08:00",\n  "seq": 101\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 消息审核事件\n\n\n# message_audit_pass（intents message_audit）\n\n\n# 发送时机\n\n * 消息审核通过\n\n\n# 内容\n\nmessageaudited\n\n\n# message_audit_reject（intents message_audit）\n\n\n# 发送时机\n\n * 消息审核不通过\n\n\n# 内容\n\nmessageaudited\n\n\n# 示例\n\n{\n  "audit_id": "5f60b782-d134-4628-93b8-9baa4b182f48",\n  "audit_time": "2022-01-04t18:05:42+08:00",\n  "channel_id": "1699792",\n  "create_time": "2022-01-04t18:05:42+08:00",\n  "guild_id": "46646271634786417",\n  "message_id": "10d0df671a1231343431313532313831383136323933383420801e280030a0cbc4013848404148f6b7d08e0650b1acf8fa05"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"内嵌格式",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/message_format.html",relativePath:"develop/api-v2/server-inter/message/message_format.md",key:"v-a7e8d6a6",path:"/develop/api-v2/server-inter/message/message_format.html",headers:[{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:11},{level:3,title:"支持的格式",slug:"支持的格式",normalizedTitle:"支持的格式",charIndex:135},{level:3,title:"转义内容",slug:"转义内容",normalizedTitle:"转义内容",charIndex:126},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:222}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"功能描述 支持的格式 转义内容 示例",content:'# 内嵌格式\n\n\n# 功能描述\n\n利用 content 字段发送内嵌格式的消息。\n\n * 内嵌格式仅在 content 中会生效，在 Ark 和 Embed 中不生效。\n * 为了区分是文本还是内嵌格式，消息抄送和发送会对消息内容进行相关的转义，参考 转义内容\n\n\n# 支持的格式\n\n类型     结构                          描述                                           示例\n@用户    <@user_id> 或者 <@!user_id>   解析为 @用户 标签                                   <@1234000000001>\n@所有人   @everyone                   解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限             @everyone\n#子频道   <#channel_id>               解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道          <#12345>\n表情     <emoji:id>                  解析为系统表情，具体表情id参考 Emoji                       <emoji:4> 解析为得意情\n                                   列表，仅支持type=1的系统表情，type=2的emoji表情直接按字符串填写即可\n\n\n# 转义内容\n\n * 消息抄送会将源字符转为转义后内容然后抄送给机器人\n * 发消息会将转义后字符转为源字符后抄再发\n\n源字符   转义后\n&     &amp;\n<     &lt;\n>     &gt;\n\n\n# 示例\n\n请求数据包\n\n{\n    "content":"<@!1234>hello world"\n}\n\n\n1\n2\n3\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 内嵌格式\n\n\n# 功能描述\n\n利用 content 字段发送内嵌格式的消息。\n\n * 内嵌格式仅在 content 中会生效，在 ark 和 embed 中不生效。\n * 为了区分是文本还是内嵌格式，消息抄送和发送会对消息内容进行相关的转义，参考 转义内容\n\n\n# 支持的格式\n\n类型     结构                          描述                                           示例\n@用户    <@user_id> 或者 <@!user_id>   解析为 @用户 标签                                   <@1234000000001>\n@所有人   @everyone                   解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限             @everyone\n#子频道   <#channel_id>               解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道          <#12345>\n表情     <emoji:id>                  解析为系统表情，具体表情id参考 emoji                       <emoji:4> 解析为得意情\n                                   列表，仅支持type=1的系统表情，type=2的emoji表情直接按字符串填写即可\n\n\n# 转义内容\n\n * 消息抄送会将源字符转为转义后内容然后抄送给机器人\n * 发消息会将转义后字符转为源字符后抄再发\n\n源字符   转义后\n&     &amp;\n<     &lt;\n>     &gt;\n\n\n# 示例\n\n请求数据包\n\n{\n    "content":"<@!1234>hello world"\n}\n\n\n1\n2\n3\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送私信",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/dms/post_dms_messages.html",relativePath:"develop/api-v2/server-inter/message/dms/post_dms_messages.md",key:"v-ea42ece6",path:"/develop/api-v2/server-inter/message/dms/post_dms_messages.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:54},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:213},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:253},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:272},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:291},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:307}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"接口 功能描述 Content-Type 参数 返回 错误码 示例",content:"# 发送私信\n\n\n# 接口\n\nPOST /dms/{guild_id}/messages\n\n\n1\n\n\n\n# 功能描述\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n和发送消息参数一致。\n\n\n# 返回\n\n和发送消息返回一致。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n参见发送消息示例。",normalizedContent:"# 发送私信\n\n\n# 接口\n\npost /dms/{guild_id}/messages\n\n\n1\n\n\n\n# 功能描述\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n和发送消息参数一致。\n\n\n# 返回\n\n和发送消息返回一致。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n参见发送消息示例。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息收发",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/send-receive/",relativePath:"develop/api-v2/server-inter/message/send-receive/README.md",key:"v-eca22ec4",path:"/develop/api-v2/server-inter/message/send-receive/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 消息收发",normalizedContent:"# 消息收发",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"撤回消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/send-receive/reset.html",relativePath:"develop/api-v2/server-inter/message/send-receive/reset.md",key:"v-182f304f",path:"/develop/api-v2/server-inter/message/send-receive/reset.html",headers:[{level:2,title:"单聊",slug:"单聊",normalizedTitle:"单聊",charIndex:11},{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:18},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:79},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:141},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:181},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:208},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:224},{level:2,title:"群聊",slug:"群聊",normalizedTitle:"群聊",charIndex:284},{level:3,title:"接口",slug:"接口-2",normalizedTitle:"接口",charIndex:18},{level:3,title:"功能描述",slug:"功能描述-2",normalizedTitle:"功能描述",charIndex:79},{level:3,title:"Content-Type",slug:"content-type-2",normalizedTitle:"content-type",charIndex:141},{level:3,title:"返回",slug:"返回-2",normalizedTitle:"返回",charIndex:181},{level:3,title:"错误码",slug:"错误码-2",normalizedTitle:"错误码",charIndex:208},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:224},{level:2,title:"文字子频道",slug:"文字子频道",normalizedTitle:"文字子频道",charIndex:570},{level:3,title:"接口",slug:"接口-3",normalizedTitle:"接口",charIndex:18},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:659},{level:3,title:"功能描述",slug:"功能描述-3",normalizedTitle:"功能描述",charIndex:79},{level:3,title:"Content-Type",slug:"content-type-3",normalizedTitle:"content-type",charIndex:141},{level:3,title:"返回",slug:"返回-3",normalizedTitle:"返回",charIndex:181},{level:3,title:"错误码",slug:"错误码-3",normalizedTitle:"错误码",charIndex:208},{level:3,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:224},{level:2,title:"频道私信",slug:"频道私信",normalizedTitle:"频道私信",charIndex:971},{level:3,title:"接口",slug:"接口-4",normalizedTitle:"接口",charIndex:18},{level:3,title:"参数",slug:"参数-2",normalizedTitle:"参数",charIndex:659},{level:3,title:"功能描述",slug:"功能描述-4",normalizedTitle:"功能描述",charIndex:79},{level:3,title:"Content-Type",slug:"content-type-4",normalizedTitle:"content-type",charIndex:141},{level:3,title:"返回",slug:"返回-4",normalizedTitle:"返回",charIndex:181},{level:3,title:"错误码",slug:"错误码-4",normalizedTitle:"错误码",charIndex:208},{level:3,title:"示例",slug:"示例-4",normalizedTitle:"示例",charIndex:224}],lastUpdated:"3/12/2024, 12:37:56 PM",lastUpdatedTimestamp:1710247076e3,headersStr:"单聊 接口 功能描述 Content-Type 返回 错误码 示例 群聊 接口 功能描述 Content-Type 返回 错误码 示例 文字子频道 接口 参数 功能描述 Content-Type 返回 错误码 示例 频道私信 接口 参数 功能描述 Content-Type 返回 错误码 示例",content:"# 撤回消息\n\n\n# 单聊\n\n\n# 接口\n\nDELETE /v2/users/{openid}/messages/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于撤回机器人发送给当前用户 openid 的消息 message_id，发送超出2分钟的消息不可撤回\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /v2/users/123456/messages/112233\n\n\n1\n\n\n\n# 群聊\n\n\n# 接口\n\nDELETE /v2/groups/{group_openid}/messages/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于撤回机器人发送在当前群 group_openid 的消息 message_id，发送超出2分钟的消息不可撤回\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /v2/groups/123456/messages/112233\n\n\n1\n\n\n\n# 文字子频道\n\n\n# 接口\n\nDELETE /channels/{channel_id}/messages/{message_id}?hidetip=false\n\n\n1\n\n\n\n# 参数\n\n字段名       类型     描述\nhidetip   bool   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 功能描述\n\n用于撤回子频道 channel_id 下的消息 message_id\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /channels/123456/messages/112233\n\n\n1\n\n\n\n# 频道私信\n\n\n# 接口\n\nDELETE /dms/{guild_id}/messages/{message_id}?hidetip=false\n\n\n1\n\n\n\n# 参数\n\n字段名       类型     描述\nhidetip   bool   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 功能描述\n\n用于撤回私信频道 guild_id 中 message_id 指定的私信消息。只能用于撤回机器人自己发送的私信。\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 HTTP 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /dms/123456/messages/112233\n\n\n1\n",normalizedContent:"# 撤回消息\n\n\n# 单聊\n\n\n# 接口\n\ndelete /v2/users/{openid}/messages/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于撤回机器人发送给当前用户 openid 的消息 message_id，发送超出2分钟的消息不可撤回\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /v2/users/123456/messages/112233\n\n\n1\n\n\n\n# 群聊\n\n\n# 接口\n\ndelete /v2/groups/{group_openid}/messages/{message_id}\n\n\n1\n\n\n\n# 功能描述\n\n用于撤回机器人发送在当前群 group_openid 的消息 message_id，发送超出2分钟的消息不可撤回\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /v2/groups/123456/messages/112233\n\n\n1\n\n\n\n# 文字子频道\n\n\n# 接口\n\ndelete /channels/{channel_id}/messages/{message_id}?hidetip=false\n\n\n1\n\n\n\n# 参数\n\n字段名       类型     描述\nhidetip   bool   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 功能描述\n\n用于撤回子频道 channel_id 下的消息 message_id\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /channels/123456/messages/112233\n\n\n1\n\n\n\n# 频道私信\n\n\n# 接口\n\ndelete /dms/{guild_id}/messages/{message_id}?hidetip=false\n\n\n1\n\n\n\n# 参数\n\n字段名       类型     描述\nhidetip   bool   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 功能描述\n\n用于撤回私信频道 guild_id 中 message_id 指定的私信消息。只能用于撤回机器人自己发送的私信。\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 返回\n\n成功返回 http 状态码 200。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /dms/123456/messages/112233\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/post_messages.html",relativePath:"develop/api-v2/server-inter/message/post_messages.md",key:"v-448cc4e6",path:"/develop/api-v2/server-inter/message/post_messages.html",headers:[{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:11},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:56},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:431},{level:3,title:"通用参数",slug:"通用参数",normalizedTitle:"通用参数",charIndex:602},{level:3,title:"multipart/form-data 专有参数",slug:"multipart-form-data-专有参数",normalizedTitle:"multipart/form-data 专有参数",charIndex:1275},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:401},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:1932},{level:3,title:"JSON 格式示例",slug:"json-格式示例",normalizedTitle:"json 格式示例",charIndex:2228},{level:3,title:"form-data 格式示例",slug:"form-data-格式示例",normalizedTitle:"form-data 格式示例",charIndex:2737}],lastUpdated:"12/20/2023, 8:46:30 AM",lastUpdatedTimestamp:170306199e4,headersStr:"接口 功能描述 Content-Type 通用参数 multipart/form-data 专有参数 返回 错误码 JSON 格式示例 form-data 格式示例",content:'# 发送消息\n\n\n# 接口\n\nPOST /channels/{channel_id}/messages\n\n\n# 功能描述\n\n用于向 channel_id 指定的子频道发送消息。\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动消息在频道主或管理设置了情况下，按设置的数量进行限频。在未设置的情况遵循如下限制:\n   * 主动推送消息，默认每天往每个子频道可推送的消息数是 20 条，超过会被限制。\n   * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息。超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟。超时会报错。\n * 发送消息接口要求机器人接口需要连接到 websocket 上保持在线状态\n * 有关主动消息审核，可以通过 Intents 中审核事件 MESSAGE_AUDIT 返回 MessageAudited 对象获取结果。\n\n\n# Content-Type\n\n * 请求支持 application/json 和 multipart/form-data 两种。对于类型为 multipart/form-data 的请求，当字段类型为对象或数组时需要将字段序列化为 JSON 字符串后进行调用，可参考下文的示例。\n * 回包统一使用 application/json\n\n\n# 通用参数\n\n字段名                 类型                              描述\ncontent             string                          选填，消息内容，文本内容，支持内嵌格式\nembed               MessageEmbed                    选填，embed 消息，一种特殊的 ark，详情参考Embed消息\nark                 MessageArk ark消息对象              选填，ark 消息\nmessage_reference   MessageReference 引用消息对象         选填，引用消息\nimage               string                          选填，图片url地址，平台会转存该图片，用于下发图片消息\nmsg_id              string                          选填，要回复的消息id(Message.id), 在 AT_CREATE_MESSAGE 事件中获取。\nevent_id            string                          选填，要回复的事件id, 在各事件对象中获取。\nmarkdown            MessageMarkdown markdown 消息对象   选填，markdown 消息\n\n\n# multipart/form-data 专有参数\n\n字段名          类型     描述\nfile_image   file   图片文件。form-data 支持直接通过文件上传的方式发送图片。\n\ncontent, embed, ark, image/file_image, markdown 至少需要有一个字段，否则无法下发消息。\n\n# 主动消息与被动消息\n\n * 主动消息：发送消息时，未填充 msg_id/event_id 字段的消息。\n * 被动消息：发送消息时，填充了 msg_id/event_id 字段的消息。msg_id 和 event_id 两个字段任意填一个即为被动消息。接口使用此 msg_id/event_id 拉取用户的消息或事件，同时判断用户消息或事件的发送时间，如果超过被动消息回复时效，将会不允许发送该消息。\n * 目前支持被动回复的事件类型有: GUILD_MEMBER_ADD GUILD_MEMBER_UPDATE GUILD_MEMBER_REMOVE MESSAGE_REACTION_ADD MESSAGE_REACTION_REMOVE FORUM_THREAD_CREATE FORUM_THREAD_UPDATE FORUM_THREAD_DELETE FORUM_POST_CREATE FORUM_POST_DELETE FORUM_REPLY_CREATE FORUM_REPLY_DELETE\n\n\n# 返回\n\n返回Message 对象。\n\n\n# 错误码\n\n详见错误码。\n\n其中推送、回复消息的 code 错误码 304023、304024 会在 响应数据包 data 中返回 MessageAudit 审核消息的信息，结构如下:\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now",\n  "data": {\n    "message_audit": {\n      "audit_id": "ab9bd72f-19e8-4394-b09e-66caca0d64e4"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# JSON 格式示例\n\n请求数据包\n\n{\n  "content": "<@!1234>hello world",\n  "msg_id": "xxxxxx"\n}\n\n\n1\n2\n3\n4\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# form-data 格式示例\n\n请求数据包\n\n字段名       值\ncontent   <@!1234>hello world\nark       {"ark":{"template_id":1,"kv":[{"key":"#DESC#","value":"机器人订阅消息"}]}}\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 发送消息\n\n\n# 接口\n\npost /channels/{channel_id}/messages\n\n\n# 功能描述\n\n用于向 channel_id 指定的子频道发送消息。\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动消息在频道主或管理设置了情况下，按设置的数量进行限频。在未设置的情况遵循如下限制:\n   * 主动推送消息，默认每天往每个子频道可推送的消息数是 20 条，超过会被限制。\n   * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息。超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟。超时会报错。\n * 发送消息接口要求机器人接口需要连接到 websocket 上保持在线状态\n * 有关主动消息审核，可以通过 intents 中审核事件 message_audit 返回 messageaudited 对象获取结果。\n\n\n# content-type\n\n * 请求支持 application/json 和 multipart/form-data 两种。对于类型为 multipart/form-data 的请求，当字段类型为对象或数组时需要将字段序列化为 json 字符串后进行调用，可参考下文的示例。\n * 回包统一使用 application/json\n\n\n# 通用参数\n\n字段名                 类型                              描述\ncontent             string                          选填，消息内容，文本内容，支持内嵌格式\nembed               messageembed                    选填，embed 消息，一种特殊的 ark，详情参考embed消息\nark                 messageark ark消息对象              选填，ark 消息\nmessage_reference   messagereference 引用消息对象         选填，引用消息\nimage               string                          选填，图片url地址，平台会转存该图片，用于下发图片消息\nmsg_id              string                          选填，要回复的消息id(message.id), 在 at_create_message 事件中获取。\nevent_id            string                          选填，要回复的事件id, 在各事件对象中获取。\nmarkdown            messagemarkdown markdown 消息对象   选填，markdown 消息\n\n\n# multipart/form-data 专有参数\n\n字段名          类型     描述\nfile_image   file   图片文件。form-data 支持直接通过文件上传的方式发送图片。\n\ncontent, embed, ark, image/file_image, markdown 至少需要有一个字段，否则无法下发消息。\n\n# 主动消息与被动消息\n\n * 主动消息：发送消息时，未填充 msg_id/event_id 字段的消息。\n * 被动消息：发送消息时，填充了 msg_id/event_id 字段的消息。msg_id 和 event_id 两个字段任意填一个即为被动消息。接口使用此 msg_id/event_id 拉取用户的消息或事件，同时判断用户消息或事件的发送时间，如果超过被动消息回复时效，将会不允许发送该消息。\n * 目前支持被动回复的事件类型有: guild_member_add guild_member_update guild_member_remove message_reaction_add message_reaction_remove forum_thread_create forum_thread_update forum_thread_delete forum_post_create forum_post_delete forum_reply_create forum_reply_delete\n\n\n# 返回\n\n返回message 对象。\n\n\n# 错误码\n\n详见错误码。\n\n其中推送、回复消息的 code 错误码 304023、304024 会在 响应数据包 data 中返回 messageaudit 审核消息的信息，结构如下:\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now",\n  "data": {\n    "message_audit": {\n      "audit_id": "ab9bd72f-19e8-4394-b09e-66caca0d64e4"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# json 格式示例\n\n请求数据包\n\n{\n  "content": "<@!1234>hello world",\n  "msg_id": "xxxxxx"\n}\n\n\n1\n2\n3\n4\n\n\n响应数据包\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# form-data 格式示例\n\n请求数据包\n\n字段名       值\ncontent   <@!1234>hello world\nark       {"ark":{"template_id":1,"kv":[{"key":"#desc#","value":"机器人订阅消息"}]}}\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/send-receive/event.html",relativePath:"develop/api-v2/server-inter/message/send-receive/event.md",key:"v-4a2c9f39",path:"/develop/api-v2/server-inter/message/send-receive/event.html",headers:[{level:2,title:"单聊消息",slug:"单聊消息",normalizedTitle:"单聊消息",charIndex:9},{level:2,title:"群聊@机器人",slug:"群聊-机器人",normalizedTitle:"群聊@机器人",charIndex:1151},{level:2,title:"频道私信消息",slug:"频道私信消息",normalizedTitle:"频道私信消息",charIndex:2173},{level:3,title:"发送时机",slug:"发送时机",normalizedTitle:"发送时机",charIndex:2298},{level:3,title:"内容",slug:"内容",normalizedTitle:"内容",charIndex:291},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:743},{level:2,title:"文字子频道@机器人",slug:"文字子频道-机器人",normalizedTitle:"文字子频道@机器人",charIndex:2891},{level:3,title:"发送时机",slug:"发送时机-2",normalizedTitle:"发送时机",charIndex:2298},{level:3,title:"内容",slug:"内容-2",normalizedTitle:"内容",charIndex:291},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:743},{level:2,title:"文字子频道全量消息（私域）",slug:"文字子频道全量消息-私域",normalizedTitle:"文字子频道全量消息（私域）",charIndex:3600},{level:3,title:"发送时机",slug:"发送时机-3",normalizedTitle:"发送时机",charIndex:2298},{level:3,title:"内容",slug:"内容-3",normalizedTitle:"内容",charIndex:291},{level:3,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:743}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"单聊消息 群聊@机器人 频道私信消息 发送时机 内容 示例 文字子频道@机器人 发送时机 内容 示例 文字子频道全量消息（私域） 发送时机 内容 示例",content:'# 事件\n\n\n# 单聊消息\n\n说明\n\n用户在单聊发送消息给机器人\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      C2C_MESSAGE_CREATE\n触发场景      用户在单聊发送消息给机器人\n权限要求      无特殊要求\n推送方式      Websocket\n\n * 事件字段\n\n属性            类型         说明\nid            string     平台方消息ID，可以用于被动消息发送\nauthor        object     发送者\ncontent       string     文本消息内容\ntimestamp     string     消息生产时间（RFC3339）\nattachments   object[]   富媒体文件附件，文件类型："图片，语音，视频，文件"\n\nauthor对象\n\n属性            类型       说明\nuser_openid   string   用户 openid\n\nattachment对象\n\n属性             类型       说明\ncontent_type   string   文件类型，"image/jpeg","image/png","image/gif"，"file"，"video/mp4"，"voice"\nfilename       string   文件名称\nheight         int      图片高度\nwidth          int      图片宽度\nsize           int      文件大小\nurl            string   文件链接\n\n * 事件示例\n\n{\n  "author": {\n      "user_openid": "E4F4AEA33253A2797FB897C50B81D7ED"\n  },\n  "content": "123",\n  "id": "ROBOT1.0_.b6nx.CVryAO0nR58RXuU6SC.m92gc19j02qKqdm8ek!",\n  "timestamp": "2023-11-06T13:37:18+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 其他说明\n\n为了确保消息可到达，极端情况下，相同的 msg_id 的消息会有概率重复推送，当开发者在做“被动回复消息”响应业务的时候，如果开发者不对 msg_id 的回复做存储排重后的回复逻辑，很可能会回复了两条相同的消息给用户，这里我们引入了一个 msg_seq 的字段，便于过滤重复消息响应，可参考消息发送接口 msg_seq 的用法。\n\n\n# 群聊@机器人\n\n说明\n\n用户在群内@机器人发动的消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      GROUP_AT_MESSAGE_CREATE\n触发场景      用户在群聊@机器人发送消息\n权限要求      无特殊要求\n推送方式      Websocket\n\n * 事件字段\n\n属性             类型         说明\nid             string     平台方消息 ID，可以用于被动消息发送\nauthor         object     发送者\ncontent        string     消息内容\ntimestamp      string     消息生产时间（RFC3339）\ngroup_openid   string     群聊的 openid\nattachments    object[]   富媒体文件附件，文件类型："图片，语音，视频，文件"\n\nauthor对象\n\n属性              类型       说明\nmember_openid   string   用户在本群的 member_openid\n\n * 事件示例\n\n// Websocket\n{\n  "author": {\n      "member_openid": "E4F4AEA33253A2797FB897C50B81D7ED"\n  },\n  "content": " 123",\n  "group_openid": "C9F778FE6ADF9D1D1DBE395BF744A33A",\n  "id": "ROBOT1.0_eBIyWnxpmSu6uLQ7u7fU0eGloKGYg4eEa737vRyKnMCgyZjKi7JLYkQ9B0VapbiY",\n  "timestamp": "2023-11-06T13:37:18+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n * 其他说明\n\n为了确保消息可到达，极端情况下，相同的 msg_id 的消息会有概率重复推送，当开发者在做“被动回复消息”响应业务的时候，如果开发者不对 msg_id 的回复做存储排重后的回复逻辑，很可能会回复了两条相同的消息给用户，这里我们引入了一个 msg_seq 的字段，便于过滤重复消息响应，可参考消息发送接口 msg_seq 的用法。\n\n\n# 频道私信消息\n\n用户在频道私信给机器人发送的消息\n\n * 基本概况\n\n基本\n事件类型   DIRECT_MESSAGE_CREATE\n触发场景   用户在频道私信内发送消息给机器人\n权限要求   无特殊要求\n推送方式   Websocket\n\n\n# 发送时机\n\n * 用户通过私信发消息给机器人时\n * 由于私信场景无法设置沙箱频道，目前私信事件不支持沙箱环境，开发者可以通过用户 id 白名单的方式来调试私信\n\n\n# 内容\n\n内容为 Message 对象\n\n\n# 示例\n\n{\n    "author": {\n        "avatar": "http://thirdqq.qlogo.cn/0",\n        "bot": false,\n        "id": "1234",\n        "username": "abc"\n    },\n    "channel_id": "100010",\n    "content": "ndnnd",\n    "guild_id": "18700000000001",\n    "id": "0812345677890abcdef",\n    "member": {\n        "joined_at": "2021-04-12T16:34:42+08:00",\n        "roles": [\n            "1"\n        ]\n    },\n    "timestamp": "2021-05-20T15:14:58+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 文字子频道@机器人\n\n用户在文字子频道内@机器人发送的消息\n\n * 基本概况\n\n基本\n事件类型   AT_MESSAGE_CREATE\n触发场景   用户在频道私信内发送消息给机器人\n权限要求   无特殊要求\n推送方式   Websocket\n\n\n# 发送时机\n\n * 用户发送消息，@当前机器人或回复机器人消息时\n * 为保障消息投递的速度，消息顺序我们虽然会尽量有序，但是并不保证是严格有序的，如开发者对消息顺序有严格有序的需求，可以自行缓冲消息事件之后，基于 Message.seq 进行排序\n\n\n# 内容\n\n内容为 Message 对象\n\n\n# 示例\n\n{\n  "author": {\n    "avatar": "http://thirdqq.qlogo.cn/0",\n    "bot": false,\n    "id": "1234",\n    "username": "abc"\n  },\n  "channel_id": "100010",\n  "content": "ndnnd",\n  "guild_id": "18700000000001",\n  "id": "0812345677890abcdef",\n  "member": {\n    "joined_at": "2021-04-12T16:34:42+08:00",\n    "roles": ["1"]\n  },\n  "timestamp": "2021-05-20T15:14:58+08:00",\n  "seq": 101\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 文字子频道全量消息（私域）\n\n用户在文字子频道内发送的所有聊天消息（私域）\n\n * 基本概况\n\n基本\n事件类型   MESSAGE_CREATE\n触发场景   用户在频道私信内发送消息给机器人\n权限要求   无特殊要求\n推送方式   Websocket\n\n\n# 发送时机\n\n * 用户发送消息，@当前机器人或回复机器人消息时\n * 为保障消息投递的速度，消息顺序我们虽然会尽量有序，但是并不保证是严格有序的，如开发者对消息顺序有严格有序的需求，可以自行缓冲消息事件之后，基于 Message.seq 进行排序\n\n\n# 内容\n\n内容为 Message 对象\n\n\n# 示例\n\n{\n  "author": {\n    "avatar": "http://thirdqq.qlogo.cn/0",\n    "bot": false,\n    "id": "1234",\n    "username": "abc"\n  },\n  "channel_id": "100010",\n  "content": "ndnnd",\n  "guild_id": "18700000000001",\n  "id": "0812345677890abcdef",\n  "member": {\n    "joined_at": "2021-04-12T16:34:42+08:00",\n    "roles": ["1"]\n  },\n  "timestamp": "2021-05-20T15:14:58+08:00",\n  "seq": 101\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 事件\n\n\n# 单聊消息\n\n说明\n\n用户在单聊发送消息给机器人\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      c2c_message_create\n触发场景      用户在单聊发送消息给机器人\n权限要求      无特殊要求\n推送方式      websocket\n\n * 事件字段\n\n属性            类型         说明\nid            string     平台方消息id，可以用于被动消息发送\nauthor        object     发送者\ncontent       string     文本消息内容\ntimestamp     string     消息生产时间（rfc3339）\nattachments   object[]   富媒体文件附件，文件类型："图片，语音，视频，文件"\n\nauthor对象\n\n属性            类型       说明\nuser_openid   string   用户 openid\n\nattachment对象\n\n属性             类型       说明\ncontent_type   string   文件类型，"image/jpeg","image/png","image/gif"，"file"，"video/mp4"，"voice"\nfilename       string   文件名称\nheight         int      图片高度\nwidth          int      图片宽度\nsize           int      文件大小\nurl            string   文件链接\n\n * 事件示例\n\n{\n  "author": {\n      "user_openid": "e4f4aea33253a2797fb897c50b81d7ed"\n  },\n  "content": "123",\n  "id": "robot1.0_.b6nx.cvryao0nr58rxuu6sc.m92gc19j02qkqdm8ek!",\n  "timestamp": "2023-11-06t13:37:18+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 其他说明\n\n为了确保消息可到达，极端情况下，相同的 msg_id 的消息会有概率重复推送，当开发者在做“被动回复消息”响应业务的时候，如果开发者不对 msg_id 的回复做存储排重后的回复逻辑，很可能会回复了两条相同的消息给用户，这里我们引入了一个 msg_seq 的字段，便于过滤重复消息响应，可参考消息发送接口 msg_seq 的用法。\n\n\n# 群聊@机器人\n\n说明\n\n用户在群内@机器人发动的消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      group_at_message_create\n触发场景      用户在群聊@机器人发送消息\n权限要求      无特殊要求\n推送方式      websocket\n\n * 事件字段\n\n属性             类型         说明\nid             string     平台方消息 id，可以用于被动消息发送\nauthor         object     发送者\ncontent        string     消息内容\ntimestamp      string     消息生产时间（rfc3339）\ngroup_openid   string     群聊的 openid\nattachments    object[]   富媒体文件附件，文件类型："图片，语音，视频，文件"\n\nauthor对象\n\n属性              类型       说明\nmember_openid   string   用户在本群的 member_openid\n\n * 事件示例\n\n// websocket\n{\n  "author": {\n      "member_openid": "e4f4aea33253a2797fb897c50b81d7ed"\n  },\n  "content": " 123",\n  "group_openid": "c9f778fe6adf9d1d1dbe395bf744a33a",\n  "id": "robot1.0_ebiywnxpmsu6ulq7u7fu0eglokgyg4eea737vryknmcgyzjki7jlykq9b0vapbiy",\n  "timestamp": "2023-11-06t13:37:18+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n * 其他说明\n\n为了确保消息可到达，极端情况下，相同的 msg_id 的消息会有概率重复推送，当开发者在做“被动回复消息”响应业务的时候，如果开发者不对 msg_id 的回复做存储排重后的回复逻辑，很可能会回复了两条相同的消息给用户，这里我们引入了一个 msg_seq 的字段，便于过滤重复消息响应，可参考消息发送接口 msg_seq 的用法。\n\n\n# 频道私信消息\n\n用户在频道私信给机器人发送的消息\n\n * 基本概况\n\n基本\n事件类型   direct_message_create\n触发场景   用户在频道私信内发送消息给机器人\n权限要求   无特殊要求\n推送方式   websocket\n\n\n# 发送时机\n\n * 用户通过私信发消息给机器人时\n * 由于私信场景无法设置沙箱频道，目前私信事件不支持沙箱环境，开发者可以通过用户 id 白名单的方式来调试私信\n\n\n# 内容\n\n内容为 message 对象\n\n\n# 示例\n\n{\n    "author": {\n        "avatar": "http://thirdqq.qlogo.cn/0",\n        "bot": false,\n        "id": "1234",\n        "username": "abc"\n    },\n    "channel_id": "100010",\n    "content": "ndnnd",\n    "guild_id": "18700000000001",\n    "id": "0812345677890abcdef",\n    "member": {\n        "joined_at": "2021-04-12t16:34:42+08:00",\n        "roles": [\n            "1"\n        ]\n    },\n    "timestamp": "2021-05-20t15:14:58+08:00"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 文字子频道@机器人\n\n用户在文字子频道内@机器人发送的消息\n\n * 基本概况\n\n基本\n事件类型   at_message_create\n触发场景   用户在频道私信内发送消息给机器人\n权限要求   无特殊要求\n推送方式   websocket\n\n\n# 发送时机\n\n * 用户发送消息，@当前机器人或回复机器人消息时\n * 为保障消息投递的速度，消息顺序我们虽然会尽量有序，但是并不保证是严格有序的，如开发者对消息顺序有严格有序的需求，可以自行缓冲消息事件之后，基于 message.seq 进行排序\n\n\n# 内容\n\n内容为 message 对象\n\n\n# 示例\n\n{\n  "author": {\n    "avatar": "http://thirdqq.qlogo.cn/0",\n    "bot": false,\n    "id": "1234",\n    "username": "abc"\n  },\n  "channel_id": "100010",\n  "content": "ndnnd",\n  "guild_id": "18700000000001",\n  "id": "0812345677890abcdef",\n  "member": {\n    "joined_at": "2021-04-12t16:34:42+08:00",\n    "roles": ["1"]\n  },\n  "timestamp": "2021-05-20t15:14:58+08:00",\n  "seq": 101\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 文字子频道全量消息（私域）\n\n用户在文字子频道内发送的所有聊天消息（私域）\n\n * 基本概况\n\n基本\n事件类型   message_create\n触发场景   用户在频道私信内发送消息给机器人\n权限要求   无特殊要求\n推送方式   websocket\n\n\n# 发送时机\n\n * 用户发送消息，@当前机器人或回复机器人消息时\n * 为保障消息投递的速度，消息顺序我们虽然会尽量有序，但是并不保证是严格有序的，如开发者对消息顺序有严格有序的需求，可以自行缓冲消息事件之后，基于 message.seq 进行排序\n\n\n# 内容\n\n内容为 message 对象\n\n\n# 示例\n\n{\n  "author": {\n    "avatar": "http://thirdqq.qlogo.cn/0",\n    "bot": false,\n    "id": "1234",\n    "username": "abc"\n  },\n  "channel_id": "100010",\n  "content": "ndnnd",\n  "guild_id": "18700000000001",\n  "id": "0812345677890abcdef",\n  "member": {\n    "joined_at": "2021-04-12t16:34:42+08:00",\n    "roles": ["1"]\n  },\n  "timestamp": "2021-05-20t15:14:58+08:00",\n  "seq": 101\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"富媒体消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/send-receive/rich-media.html",relativePath:"develop/api-v2/server-inter/message/send-receive/rich-media.md",key:"v-7c5f43a6",path:"/develop/api-v2/server-inter/message/send-receive/rich-media.html",headers:[{level:2,title:"用于单聊",slug:"用于单聊",normalizedTitle:"用于单聊",charIndex:426},{level:2,title:"用于群聊",slug:"用于群聊",normalizedTitle:"用于群聊",charIndex:1157}],lastUpdated:"3/12/2024, 12:37:56 PM",lastUpdatedTimestamp:1710247076e3,headersStr:"用于单聊 用于群聊",content:"# 富媒体消息\n\n仅用于在QQ单聊和QQ群聊内，发送图片、视频、语音、文件的相关富媒体资源在消息收发的候使用。 本接口有以下两种使用方式：\n\n 1. 当 srv_send_msg = true 时，消息会直接发送到目标端，占用 主动消息频次，超频会发送失败。\n\n 2. 当 srv_send_msg = false 时，消息不会直接发送到目标端，返回的 file_info 字段数据，可使用在消息发送接口 media 字段中，file_info 有 过期时间 ，开发者需要自行维护有效期，过期需要重新获得新的 file_info，file_info 不受发送的目标端影响，一个 file_info 可复用发送到多个群或多个用户（注意：用 /v2/groups/{group_openid}/files 上传的文件，仅能发到群聊内，用 /v2/users/{openid}/files 上传的文件，也仅能发送到单聊）。\n\n推荐使用第 2 种方式\n\n\n# 用于单聊\n\n * 请求\n\n基本\nHTTP URL      /v2/users/{openid}/files\nHTTP Method   POST\n\n * 路径参数\n\n属性       类型       必填   说明\nopenid   string   是    QQ 用户的 openid，可在各类事件中获得。\n\n * 请求参数\n\n属性             类型       必填   说明\nfile_type      int      是    媒体类型：1 图片，2 视频，3 语音，4 文件（暂不开放）\n                             资源格式要求\n                             图片：png/jpg，视频：mp4，语音：silk\nurl            string   是    需要发送媒体资源的url\nsrv_send_msg   bool     是    设置 true 会直接发送消息到目标端，且会占用主动消息频次\nfile_data               否    【暂未支持】\n\n * 返回参数\n\n属性          类型       说明\nfile_uuid   string   文件 ID\nfile_info   string   文件信息，用于发消息接口的 media 字段使用\nttl         int      有效期，表示剩余多少秒到期，到期后 file_info 失效，当等于 0 时，表示可长期使用\nid          string   发送消息的唯一ID，当srv_send_msg设置为true时返回\n\n * 错误码\n\n\n# 用于群聊\n\n * 请求\n\n基本\nHTTP URL      /v2/groups/{group_openid}/files\nHTTP Method   POST\n\n * 路径参数\n\n属性             类型       必填   说明\ngroup_openid   string   是    群聊的 openid\n\n * 请求参数\n\n属性             类型       必填   说明\nfile_type      int      是    媒体类型：1 图片，2 视频，3 语音，4 文件（暂不开放）\n                             资源格式要求\n                             图片：png/jpg，视频：mp4，语音：silk\nurl            string   是    需要发送媒体资源的url\nsrv_send_msg   bool     是    设置 true 会直接发送消息到目标端，且会占用主动消息频次\nfile_data               否    【暂未支持】\n\n * 返回参数\n\n属性          类型       说明\nfile_uuid   string   文件 ID\nfile_info   string   文件信息，用于发消息接口的 media 字段使用\nttl         int      有效期，表示剩余多少秒到期，到期后 file_info 失效，当等于 0 时，表示可长期使用\nid          string   发送消息的唯一ID，当srv_send_msg设置为true时返回",normalizedContent:"# 富媒体消息\n\n仅用于在qq单聊和qq群聊内，发送图片、视频、语音、文件的相关富媒体资源在消息收发的候使用。 本接口有以下两种使用方式：\n\n 1. 当 srv_send_msg = true 时，消息会直接发送到目标端，占用 主动消息频次，超频会发送失败。\n\n 2. 当 srv_send_msg = false 时，消息不会直接发送到目标端，返回的 file_info 字段数据，可使用在消息发送接口 media 字段中，file_info 有 过期时间 ，开发者需要自行维护有效期，过期需要重新获得新的 file_info，file_info 不受发送的目标端影响，一个 file_info 可复用发送到多个群或多个用户（注意：用 /v2/groups/{group_openid}/files 上传的文件，仅能发到群聊内，用 /v2/users/{openid}/files 上传的文件，也仅能发送到单聊）。\n\n推荐使用第 2 种方式\n\n\n# 用于单聊\n\n * 请求\n\n基本\nhttp url      /v2/users/{openid}/files\nhttp method   post\n\n * 路径参数\n\n属性       类型       必填   说明\nopenid   string   是    qq 用户的 openid，可在各类事件中获得。\n\n * 请求参数\n\n属性             类型       必填   说明\nfile_type      int      是    媒体类型：1 图片，2 视频，3 语音，4 文件（暂不开放）\n                             资源格式要求\n                             图片：png/jpg，视频：mp4，语音：silk\nurl            string   是    需要发送媒体资源的url\nsrv_send_msg   bool     是    设置 true 会直接发送消息到目标端，且会占用主动消息频次\nfile_data               否    【暂未支持】\n\n * 返回参数\n\n属性          类型       说明\nfile_uuid   string   文件 id\nfile_info   string   文件信息，用于发消息接口的 media 字段使用\nttl         int      有效期，表示剩余多少秒到期，到期后 file_info 失效，当等于 0 时，表示可长期使用\nid          string   发送消息的唯一id，当srv_send_msg设置为true时返回\n\n * 错误码\n\n\n# 用于群聊\n\n * 请求\n\n基本\nhttp url      /v2/groups/{group_openid}/files\nhttp method   post\n\n * 路径参数\n\n属性             类型       必填   说明\ngroup_openid   string   是    群聊的 openid\n\n * 请求参数\n\n属性             类型       必填   说明\nfile_type      int      是    媒体类型：1 图片，2 视频，3 语音，4 文件（暂不开放）\n                             资源格式要求\n                             图片：png/jpg，视频：mp4，语音：silk\nurl            string   是    需要发送媒体资源的url\nsrv_send_msg   bool     是    设置 true 会直接发送消息到目标端，且会占用主动消息频次\nfile_data               否    【暂未支持】\n\n * 返回参数\n\n属性          类型       说明\nfile_uuid   string   文件 id\nfile_info   string   文件信息，用于发消息接口的 media 字段使用\nttl         int      有效期，表示剩余多少秒到期，到期后 file_info 失效，当等于 0 时，表示可长期使用\nid          string   发送消息的唯一id，当srv_send_msg设置为true时返回",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/send-receive/send.html",relativePath:"develop/api-v2/server-inter/message/send-receive/send.md",key:"v-4c1170cd",path:"/develop/api-v2/server-inter/message/send-receive/send.html",headers:[{level:2,title:"单聊",slug:"单聊",normalizedTitle:"单聊",charIndex:74},{level:2,title:"群聊",slug:"群聊",normalizedTitle:"群聊",charIndex:79},{level:2,title:"文字子频道",slug:"文字子频道",normalizedTitle:"文字子频道",charIndex:82},{level:2,title:"频道私信",slug:"频道私信",normalizedTitle:"频道私信",charIndex:88}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"单聊 群聊 文字子频道 频道私信",content:'# 发送消息\n\n说明\n\n发送消息分为，主动推送与被动回复，主动消息和被动消息在不同的场景下，发送的频次有不同的规则。 发送消息的接口有4个场景：QQ单聊、QQ群聊、文字子频道、频道私信\n\n主动消息与被动消息说明： QQ 用户可以在 QQ 客户端主动设置是否接收机器人发送的主动消息，如果设置了关闭，主动消息一律发送失败。\n\n * 单聊\n   * 主动消息每月 4 条，超额会发送失败。（例如：给相同用户每月最多发 4 条）\n   * 被动消息（回复类）有效时间为 60 分钟，每个消息最多回复 5 次，超时或超频会发送（回复）失败；\n * 群聊\n   * 主动消息每月 4 条，超额会发送失败。（例如：给相同群每月最多发 4 条）\n   * 被动消息（回复类）有效时间为 5 分钟，每个消息最多回复 5 次，超时或超频会发送（回复）失败；\n * 文字子频道\n   * 主动消息在频道主或管理设置了情况下，按设置的数量进行限频。在未设置的情况遵循如下限制:\n     * 主动推送消息，默认每天往每个子频道可推送的消息数是 20 条，超过会被限制。\n     * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息。超过后会被限制。\n   * 不论主动消息还是被动消息，在一个子频道中，每秒 最多可发送 5 条 消息。\n   * 被动回复消息有效期为 5 分钟，超时会发送失败。\n   * 发送消息接口要求机器人接口需要连接到 WebSocket 上保持在线状态\n   * 有关主动消息审核，可以通过 事件订阅 Intents 中审核事件 MESSAGE_AUDIT 返回 MessageAudited 对象获取结果。\n * 频道私信\n   * 私信场景下，每个机器人每天可以对一个用户发 2 条 主动消息。\n   * 私信场景下，每个机器人每天累计可以发 200 条 主动消息。\n   * 被动回复消息有效期为 5 分钟，超时会发送失败。\n\n发动的消息内容包含 URL 的说明：\n\n如开发者需要在消息内容发送含有 url 信息的消息，请现在 q.qq.com 后台-开发设置-消息URL配置 预先配置，否则会发送失败。 调用发消息 http 接口的 timeout 建议设置最低为 5 秒，避免出现实际消息已发送成功，但没接收到同步的结果返回。\n\n\n# 单聊\n\n说明\n\n单独发动消息给用户。\n\n * 请求\n   \n   基本\n   HTTP URL      /v2/users/{openid}/messages\n   HTTP Method   POST\n\n * 路径参数\n\n属性       类型       必填   说明\nopenid   string   是    QQ 用户的 openid，可在各类事件中获得。\n\n * 请求参数\n\n属性                  类型       必填   说明\ncontent             string   否    文本内容\nmsg_type            int      是    消息类型：0 是文本，2 是 markdown， 3 ark，4 embed，7 media 富媒体\nmarkdown            object   否    Markdown对象\nkeyboard            object   否    Keyboard对象\nark                 object   否    Ark对象\nmedia               object   否    富媒体单聊的file_info\nmessage_reference   object   否    【暂未支持】消息引用\nevent_id            string   否    前置收到的事件\n                                  ID，用于发送被动消息，支持事件："INTERACTION_CREATE"、"C2C_MSG_RECEIVE"、"FRIEND_ADD"\nmsg_id              string   否    前置收到的用户发送过来的消息 ID，用于发送被动（回复）消息\nmsg_seq             int      否    回复消息的序号，与 msg_id 联合使用，避免相同消息id回复重复发送，不填默认是1。相同的 msg_id +\n                                  msg_seq 重复发送会失败。\n\n * 返回参数\n\n属性          类型       说明\nid          string   消息唯一ID\ntimestamp   int      发送时间\n\n * 常见错误码\n * 当 msg_type = 7 时，content 字段需要填入一个值，譬如一个空格 “ ”，后续版本会修复该问题。、\n\nCODE     MESSAGE                   说明\n22009    msg limit exceed          消息发送超频\n304082   upload media info fail    富媒体资源拉取失败，请重试\n304083   convert media info fail   富媒体资源拉取失败，请重试\n\n\n# 群聊\n\n说明\n\n发动消息到群。\n\n * 请求\n   \n   基本\n   HTTP URL      /v2/groups/{group_openid}/messages\n   HTTP Method   POST\n\n * 路径参数\n\n属性             类型       必填   说明\ngroup_openid   string   是    群聊的 openid\n\n * 请求参数\n\n属性                  类型       必填   说明\ncontent             string   是    文本内容\nmsg_type            int      是    消息类型： 0 文本，2 是 markdown，3 ark 消息，4 embed，7 media 富媒体\nmarkdown            object   否    Markdown对象\nkeyboard            object   否    Keyboard对象\nmedia               object   否    富媒体群聊的file_info\nark                 object   否    Ark对象\nmessage_reference   object   否    【暂未支持】消息引用\nevent_id            string   否    前置收到的事件\n                                  ID，用于发送被动消息，支持事件："INTERACTION_CREATE"、"GROUP_ADD_ROBOT"、"GROUP_MSG_RECEIVE"\nmsg_id              string   否    前置收到的用户发送过来的消息 ID，用于发送被动消息（回复）\nmsg_seq             int      否    回复消息的序号，与 msg_id 联合使用，避免相同消息id回复重复发送，不填默认是 1。相同的 msg_id +\n                                  msg_seq 重复发送会失败。\n\n * 返回参数\n\n属性          类型       说明\nid          string   消息唯一 ID\ntimestamp   int      发送时间\n\n * 常见错误码\n * 当 msg_type = 7 时，content 字段需要填入一个值，譬如一个空格 “ ”，后续版本会修复该问题。\n\nCODE     MESSAGE                   说明\n22009    msg limit exceed          消息发送超频\n304082   upload media info fail    富媒体资源拉取失败，请重试\n304083   convert media info fail   富媒体资源拉取失败，请重试\n\n\n# 文字子频道\n\n说明\n\n发动消息到文字子频道。\n\n * 请求\n   \n   基本\n   HTTP URL      /channels/{channel_id}/messages\n   HTTP Method   POST\n\n * 详细文档 发送消息|QQ机器人文档\n\n\n# 频道私信\n\n发动消息到频道私信，请求参数与文字子频道发送消息参数一致\n\n * 请求\n   \n   基本\n   HTTP URL      /dms/{guild_id}/messages\n   HTTP Method   POST\n\n * 详细文档 发送私信|QQ机器人文档',normalizedContent:'# 发送消息\n\n说明\n\n发送消息分为，主动推送与被动回复，主动消息和被动消息在不同的场景下，发送的频次有不同的规则。 发送消息的接口有4个场景：qq单聊、qq群聊、文字子频道、频道私信\n\n主动消息与被动消息说明： qq 用户可以在 qq 客户端主动设置是否接收机器人发送的主动消息，如果设置了关闭，主动消息一律发送失败。\n\n * 单聊\n   * 主动消息每月 4 条，超额会发送失败。（例如：给相同用户每月最多发 4 条）\n   * 被动消息（回复类）有效时间为 60 分钟，每个消息最多回复 5 次，超时或超频会发送（回复）失败；\n * 群聊\n   * 主动消息每月 4 条，超额会发送失败。（例如：给相同群每月最多发 4 条）\n   * 被动消息（回复类）有效时间为 5 分钟，每个消息最多回复 5 次，超时或超频会发送（回复）失败；\n * 文字子频道\n   * 主动消息在频道主或管理设置了情况下，按设置的数量进行限频。在未设置的情况遵循如下限制:\n     * 主动推送消息，默认每天往每个子频道可推送的消息数是 20 条，超过会被限制。\n     * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息。超过后会被限制。\n   * 不论主动消息还是被动消息，在一个子频道中，每秒 最多可发送 5 条 消息。\n   * 被动回复消息有效期为 5 分钟，超时会发送失败。\n   * 发送消息接口要求机器人接口需要连接到 websocket 上保持在线状态\n   * 有关主动消息审核，可以通过 事件订阅 intents 中审核事件 message_audit 返回 messageaudited 对象获取结果。\n * 频道私信\n   * 私信场景下，每个机器人每天可以对一个用户发 2 条 主动消息。\n   * 私信场景下，每个机器人每天累计可以发 200 条 主动消息。\n   * 被动回复消息有效期为 5 分钟，超时会发送失败。\n\n发动的消息内容包含 url 的说明：\n\n如开发者需要在消息内容发送含有 url 信息的消息，请现在 q.qq.com 后台-开发设置-消息url配置 预先配置，否则会发送失败。 调用发消息 http 接口的 timeout 建议设置最低为 5 秒，避免出现实际消息已发送成功，但没接收到同步的结果返回。\n\n\n# 单聊\n\n说明\n\n单独发动消息给用户。\n\n * 请求\n   \n   基本\n   http url      /v2/users/{openid}/messages\n   http method   post\n\n * 路径参数\n\n属性       类型       必填   说明\nopenid   string   是    qq 用户的 openid，可在各类事件中获得。\n\n * 请求参数\n\n属性                  类型       必填   说明\ncontent             string   否    文本内容\nmsg_type            int      是    消息类型：0 是文本，2 是 markdown， 3 ark，4 embed，7 media 富媒体\nmarkdown            object   否    markdown对象\nkeyboard            object   否    keyboard对象\nark                 object   否    ark对象\nmedia               object   否    富媒体单聊的file_info\nmessage_reference   object   否    【暂未支持】消息引用\nevent_id            string   否    前置收到的事件\n                                  id，用于发送被动消息，支持事件："interaction_create"、"c2c_msg_receive"、"friend_add"\nmsg_id              string   否    前置收到的用户发送过来的消息 id，用于发送被动（回复）消息\nmsg_seq             int      否    回复消息的序号，与 msg_id 联合使用，避免相同消息id回复重复发送，不填默认是1。相同的 msg_id +\n                                  msg_seq 重复发送会失败。\n\n * 返回参数\n\n属性          类型       说明\nid          string   消息唯一id\ntimestamp   int      发送时间\n\n * 常见错误码\n * 当 msg_type = 7 时，content 字段需要填入一个值，譬如一个空格 “ ”，后续版本会修复该问题。、\n\ncode     message                   说明\n22009    msg limit exceed          消息发送超频\n304082   upload media info fail    富媒体资源拉取失败，请重试\n304083   convert media info fail   富媒体资源拉取失败，请重试\n\n\n# 群聊\n\n说明\n\n发动消息到群。\n\n * 请求\n   \n   基本\n   http url      /v2/groups/{group_openid}/messages\n   http method   post\n\n * 路径参数\n\n属性             类型       必填   说明\ngroup_openid   string   是    群聊的 openid\n\n * 请求参数\n\n属性                  类型       必填   说明\ncontent             string   是    文本内容\nmsg_type            int      是    消息类型： 0 文本，2 是 markdown，3 ark 消息，4 embed，7 media 富媒体\nmarkdown            object   否    markdown对象\nkeyboard            object   否    keyboard对象\nmedia               object   否    富媒体群聊的file_info\nark                 object   否    ark对象\nmessage_reference   object   否    【暂未支持】消息引用\nevent_id            string   否    前置收到的事件\n                                  id，用于发送被动消息，支持事件："interaction_create"、"group_add_robot"、"group_msg_receive"\nmsg_id              string   否    前置收到的用户发送过来的消息 id，用于发送被动消息（回复）\nmsg_seq             int      否    回复消息的序号，与 msg_id 联合使用，避免相同消息id回复重复发送，不填默认是 1。相同的 msg_id +\n                                  msg_seq 重复发送会失败。\n\n * 返回参数\n\n属性          类型       说明\nid          string   消息唯一 id\ntimestamp   int      发送时间\n\n * 常见错误码\n * 当 msg_type = 7 时，content 字段需要填入一个值，譬如一个空格 “ ”，后续版本会修复该问题。\n\ncode     message                   说明\n22009    msg limit exceed          消息发送超频\n304082   upload media info fail    富媒体资源拉取失败，请重试\n304083   convert media info fail   富媒体资源拉取失败，请重试\n\n\n# 文字子频道\n\n说明\n\n发动消息到文字子频道。\n\n * 请求\n   \n   基本\n   http url      /channels/{channel_id}/messages\n   http method   post\n\n * 详细文档 发送消息|qq机器人文档\n\n\n# 频道私信\n\n发动消息到频道私信，请求参数与文字子频道发送消息参数一致\n\n * 请求\n   \n   基本\n   http url      /dms/{guild_id}/messages\n   http method   post\n\n * 详细文档 发送私信|qq机器人文档',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息对象(Message)",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/template/model.html",relativePath:"develop/api-v2/server-inter/message/template/model.md",key:"v-759a1463",path:"/develop/api-v2/server-inter/message/template/model.html",headers:[{level:2,title:"Message",slug:"message",normalizedTitle:"message",charIndex:7},{level:2,title:"MessageEmbed",slug:"messageembed",normalizedTitle:"messageembed",charIndex:558},{level:2,title:"MessageEmbedThumbnail",slug:"messageembedthumbnail",normalizedTitle:"messageembedthumbnail",charIndex:1275},{level:2,title:"MessageEmbedField",slug:"messageembedfield",normalizedTitle:"messageembedfield",charIndex:1318},{level:2,title:"MessageAttachment",slug:"messageattachment",normalizedTitle:"messageattachment",charIndex:510},{level:2,title:"MessageArk",slug:"messageark",normalizedTitle:"messageark",charIndex:721},{level:2,title:"MessageArkKv",slug:"messagearkkv",normalizedTitle:"messagearkkv",charIndex:1699},{level:2,title:"MessageArkObj",slug:"messagearkobj",normalizedTitle:"messagearkobj",charIndex:1842},{level:2,title:"MessageArkObjKv",slug:"messagearkobjkv",normalizedTitle:"messagearkobjkv",charIndex:1952},{level:2,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:1083},{level:2,title:"MessageMarkdown",slug:"messagemarkdown",normalizedTitle:"messagemarkdown",charIndex:2247},{level:2,title:"MessageMarkdownParams",slug:"messagemarkdownparams",normalizedTitle:"messagemarkdownparams",charIndex:2372},{level:2,title:"MessageDelete",slug:"messagedelete",normalizedTitle:"messagedelete",charIndex:2724},{level:2,title:"MessageAudited",slug:"messageaudited",normalizedTitle:"messageaudited",charIndex:2841}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"Message MessageEmbed MessageEmbedThumbnail MessageEmbedField MessageAttachment MessageArk MessageArkKv MessageArkObj MessageArkObjKv MessageReference MessageMarkdown MessageMarkdownParams MessageDelete MessageAudited",content:"# 消息对象(Message)\n\n\n# Message\n\n字段名                 类型                       描述\nid                  string                   消息 id\nchannel_id          string                   子频道 id\nguild_id            string                   频道 id\ncontent             string                   消息内容\ntimestamp           ISO8601 timestamp        消息创建时间\nedited_timestamp    ISO8601 timestamp        消息编辑时间\nmention_everyone    bool                     是否是@全员消息\nauthor              User 对象                  消息创建者\nattachments         MessageAttachment 对象数组   附件\nembeds              MessageEmbed 对象数组        embed\nmentions            User 对象数组                消息中@的人\nmember              Member 对象                消息创建者的member信息\nark                 MessageArk ark消息对象       ark消息\nseq                 int                      用于消息间的排序，seq\n                                             在同一子频道中按从先到后的顺序递增，不同的子频道之间消息无法排序。(目前只在消息事件中有值，2022年8月1日\n                                             后续废弃)\nseq_in_channel      string                   子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之间消息无法排序\nmessage_reference   MessageReference 对象      引用消息对象\n\n\n# MessageEmbed\n\n字段名         类型                         描述\ntitle       string                     标题\nprompt      string                     消息弹窗内容\nthumbnail   MessageEmbedThumbnail 对象   缩略图\nfields      MessageEmbedField 对象数组     embed 字段数据\n\n\n# MessageEmbedThumbnail\n\n字段名   类型       描述\nurl   string   图片地址\n\n\n# MessageEmbedField\n\n字段名    类型       描述\nname   string   字段名\n\n\n# MessageAttachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# MessageArk\n\n字段名           类型                     描述\ntemplate_id   int                    ark模板id（需要先申请）\nkv            MessageAkrKv arkkv数组   kv值列表\n\n\n# MessageArkKv\n\n字段名     类型                          描述\nkey     string                      key\nvalue   string                      value\nobj     MessageArkObj arkobj类型的数组   ark obj类型的列表\n\n\n# MessageArkObj\n\n字段名      类型                           描述\nobj_kv   MessageArkObjKv objkv类型的数组   ark objkv列表\n\n\n# MessageArkObjKv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# MessageReference\n\n字段名                        类型       描述\nmessage_id                 string   需要引用回复的消息 id\nignore_get_message_error   bool     是否忽略获取引用消息详情错误，默认否\n\n\n# MessageMarkdown\n\n字段名           类型                      描述\ntemplate_id   int                     markdown 模板 id\nparams        MessageMarkdownParams   markdown 模板模板参数\ncontent       string                  原生 markdown 内容,与 template_id 和 params参数互斥,参数都传值将报错。\n\n\n# MessageMarkdownParams\n\n字段名      类型             描述\nkey      string         markdown 模版 key\nvalues   string 类型的数组   markdown 模版 key 对应的 values ，列表长度大小为 1 代表单 value\n                        值，长度大于1则为列表类型的参数 values 传参数\n\n\n# MessageDelete\n\n字段名       类型           描述\nmessage   Message 对象   被删除的消息内容\nop_user   User 对象      执行删除操作的用户\n\n\n# 消息审核对象(MessageAudited)\n\n\n# MessageAudited\n\n字段名              类型                  描述\naudit_id         string              消息审核 id\nmessage_id       string              消息 id，只有审核通过事件才会有值\nguild_id         string              频道 id\nchannel_id       string              子频道 id\naudit_time       ISO8601 timestamp   消息审核时间\ncreate_time      ISO8601 timestamp   消息创建时间\nseq_in_channel   string              子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之间消息无法排序",normalizedContent:"# 消息对象(message)\n\n\n# message\n\n字段名                 类型                       描述\nid                  string                   消息 id\nchannel_id          string                   子频道 id\nguild_id            string                   频道 id\ncontent             string                   消息内容\ntimestamp           iso8601 timestamp        消息创建时间\nedited_timestamp    iso8601 timestamp        消息编辑时间\nmention_everyone    bool                     是否是@全员消息\nauthor              user 对象                  消息创建者\nattachments         messageattachment 对象数组   附件\nembeds              messageembed 对象数组        embed\nmentions            user 对象数组                消息中@的人\nmember              member 对象                消息创建者的member信息\nark                 messageark ark消息对象       ark消息\nseq                 int                      用于消息间的排序，seq\n                                             在同一子频道中按从先到后的顺序递增，不同的子频道之间消息无法排序。(目前只在消息事件中有值，2022年8月1日\n                                             后续废弃)\nseq_in_channel      string                   子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之间消息无法排序\nmessage_reference   messagereference 对象      引用消息对象\n\n\n# messageembed\n\n字段名         类型                         描述\ntitle       string                     标题\nprompt      string                     消息弹窗内容\nthumbnail   messageembedthumbnail 对象   缩略图\nfields      messageembedfield 对象数组     embed 字段数据\n\n\n# messageembedthumbnail\n\n字段名   类型       描述\nurl   string   图片地址\n\n\n# messageembedfield\n\n字段名    类型       描述\nname   string   字段名\n\n\n# messageattachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# messageark\n\n字段名           类型                     描述\ntemplate_id   int                    ark模板id（需要先申请）\nkv            messageakrkv arkkv数组   kv值列表\n\n\n# messagearkkv\n\n字段名     类型                          描述\nkey     string                      key\nvalue   string                      value\nobj     messagearkobj arkobj类型的数组   ark obj类型的列表\n\n\n# messagearkobj\n\n字段名      类型                           描述\nobj_kv   messagearkobjkv objkv类型的数组   ark objkv列表\n\n\n# messagearkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# messagereference\n\n字段名                        类型       描述\nmessage_id                 string   需要引用回复的消息 id\nignore_get_message_error   bool     是否忽略获取引用消息详情错误，默认否\n\n\n# messagemarkdown\n\n字段名           类型                      描述\ntemplate_id   int                     markdown 模板 id\nparams        messagemarkdownparams   markdown 模板模板参数\ncontent       string                  原生 markdown 内容,与 template_id 和 params参数互斥,参数都传值将报错。\n\n\n# messagemarkdownparams\n\n字段名      类型             描述\nkey      string         markdown 模版 key\nvalues   string 类型的数组   markdown 模版 key 对应的 values ，列表长度大小为 1 代表单 value\n                        值，长度大于1则为列表类型的参数 values 传参数\n\n\n# messagedelete\n\n字段名       类型           描述\nmessage   message 对象   被删除的消息内容\nop_user   user 对象      执行删除操作的用户\n\n\n# 消息审核对象(messageaudited)\n\n\n# messageaudited\n\n字段名              类型                  描述\naudit_id         string              消息审核 id\nmessage_id       string              消息 id，只有审核通过事件才会有值\nguild_id         string              频道 id\nchannel_id       string              子频道 id\naudit_time       iso8601 timestamp   消息审核时间\ncreate_time      iso8601 timestamp   消息创建时间\nseq_in_channel   string              子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之间消息无法排序",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息交互",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/trans/",relativePath:"develop/api-v2/server-inter/message/trans/README.md",key:"v-a53196ec",path:"/develop/api-v2/server-inter/message/trans/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 消息交互",normalizedContent:"# 消息交互",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情表态",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/trans/emoji.html",relativePath:"develop/api-v2/server-inter/message/trans/emoji.md",key:"v-d7256ae6",path:"/develop/api-v2/server-inter/message/trans/emoji.html",headers:[{level:2,title:"机器人发表表情表态",slug:"机器人发表表情表态",normalizedTitle:"机器人发表表情表态",charIndex:32},{level:3,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:46},{level:3,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:130},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:162},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:329},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:356},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:372},{level:2,title:"删除机器人发表的表情表态",slug:"删除机器人发表的表情表态",normalizedTitle:"删除机器人发表的表情表态",charIndex:486},{level:3,title:"接口",slug:"接口-2",normalizedTitle:"接口",charIndex:46},{level:3,title:"功能描述",slug:"功能描述-2",normalizedTitle:"功能描述",charIndex:130},{level:3,title:"参数",slug:"参数-2",normalizedTitle:"参数",charIndex:162},{level:3,title:"返回",slug:"返回-2",normalizedTitle:"返回",charIndex:329},{level:3,title:"错误码",slug:"错误码-2",normalizedTitle:"错误码",charIndex:356},{level:3,title:"示例",slug:"示例-2",normalizedTitle:"示例",charIndex:372},{level:2,title:"获取消息表情表态的用户列表",slug:"获取消息表情表态的用户列表",normalizedTitle:"获取消息表情表态的用户列表",charIndex:952},{level:3,title:"接口",slug:"接口-3",normalizedTitle:"接口",charIndex:46},{level:3,title:"功能描述",slug:"功能描述-3",normalizedTitle:"功能描述",charIndex:130},{level:3,title:"Path 参数",slug:"path-参数",normalizedTitle:"path 参数",charIndex:1123},{level:3,title:"Query 参数",slug:"query-参数",normalizedTitle:"query 参数",charIndex:1295},{level:3,title:"返回",slug:"返回-3",normalizedTitle:"返回",charIndex:329},{level:3,title:"错误码",slug:"错误码-3",normalizedTitle:"错误码",charIndex:356},{level:3,title:"示例",slug:"示例-3",normalizedTitle:"示例",charIndex:372},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:2016},{level:3,title:"用户发表",slug:"用户发表",normalizedTitle:"用户发表",charIndex:2023}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"机器人发表表情表态 接口 功能描述 参数 返回 错误码 示例 删除机器人发表的表情表态 接口 功能描述 参数 返回 错误码 示例 获取消息表情表态的用户列表 接口 功能描述 Path 参数 Query 参数 返回 错误码 示例 事件 用户发表",content:'# 表情表态\n\n说明\n\n目前表情表态仅支持在频道内使用\n\n\n# 机器人发表表情表态\n\n\n# 接口\n\nPUT /channels/{channel_id}/messages/{message_id}/reactions/{type}/{id}\n\n\n1\n\n\n\n# 功能描述\n\n对消息 message_id 进行表情表态\n\n\n# 参数\n\n字段名          类型       描述\nchannel_id   string   子频道ID\nmessage_id   string   消息ID\ntype         int      表情类型，参考 EmojiType\nid           string   表情ID，参考 Emoji 列表\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nPUT /channels/1013531/messages/08c095b7ba8ed4abd7e00110cbd83f3841489aa2bd9006/reactions/1/203\n\n\n1\n\n\n\n# 删除机器人发表的表情表态\n\n\n# 接口\n\nDELETE /channels/{channel_id}/messages/{message_id}/reactions/{type}/{id}\n\n\n1\n\n\n\n# 功能描述\n\n删除自己对消息 message_id 的表情表态\n\n\n# 参数\n\n字段名          类型       描述\nchannel_id   string   子频道ID\nmessage_id   string   消息ID\ntype         int      表情类型，参考 EmojiType\nid           string   表情ID，参考 Emoji 列表\n\n\n# 返回\n\n成功返回 HTTP 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nDELETE /channels/1013531/messages/08c095b7ba8ed4abd7e00110cbd83f3841489aa2bd9006/reactions/1/203\n\n\n1\n\n\n\n# 获取消息表情表态的用户列表\n\n\n# 接口\n\nGET /channels/{channel_id}/messages/{message_id}/reactions/{type}/{id}?cookie={cookie}&limit={limit}\n\n\n1\n\n\n\n# 功能描述\n\n拉取对消息 message_id 指定表情表态的用户列表\n\n\n# Path 参数\n\n字段名          类型       描述\nchannel_id   string   子频道ID\nmessage_id   string   消息ID\ntype         int      表情类型，参考 EmojiType\nid           string   表情ID，参考 Emoji 列表\n\n\n# Query 参数\n\n字段名      类型       描述\ncookie   string   上次请求返回的cookie，第一次请求无需填写\nlimit    int      每次拉取数量，默认20，最多50，只在第一次请求时设置\n\n\n# 返回\n\n字段名      类型       描述\nusers    array    用户对象，参考 User，会返回 id, username, avatar\ncookie   string   分页参数，用于拉取下一页\nis_end   bool     是否已拉取完成到最后一页，true代表完成\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nGET /channels/1013531/messages/08c095b7ba8ed4abd7e00110cbd83f3841489aa2bd9006/reactions/1/203?cookie=&limit=20\n\n\n1\n\n\n返回数据包\n\n{\n    "users": [\n        {\n            "id": "1158788878435714165",\n            "username": "频道机器人",\n            "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=T2qBkyqicopYXA5mn0lBkqA&s=0&t=1635736336"\n        }\n    ],\n    "cookie":"1_2",\n    "is_end": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 事件\n\n\n# 用户发表\n\n * 基本概况\n\n用户对消息进行表情表态时，触发事件通知。\n\n# MESSAGE_REACTION_ADD (intents GUILD_MESSAGE_REACTIONS)\n\n# 发送时机\n\n * 用户对消息进行表情表态时\n\n# MESSAGE_REACTION_REMOVE (intents GUILD_MESSAGE_REACTIONS)\n\n# 发送时机\n\n * 用户对消息进行取消表情表态时\n\n# 内容\n\n内容为 MessageReaction 对象\n\n# 示例\n\n{\n  "user_id": "1111222233333",\n  "emoji": {\n    "id": "277",\n    "type": 1\n  },\n  "channel_id": "12345",\n  "guild_id": "11110011112222",\n  "target": {\n    "id": "2",\n    "type": 0\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'# 表情表态\n\n说明\n\n目前表情表态仅支持在频道内使用\n\n\n# 机器人发表表情表态\n\n\n# 接口\n\nput /channels/{channel_id}/messages/{message_id}/reactions/{type}/{id}\n\n\n1\n\n\n\n# 功能描述\n\n对消息 message_id 进行表情表态\n\n\n# 参数\n\n字段名          类型       描述\nchannel_id   string   子频道id\nmessage_id   string   消息id\ntype         int      表情类型，参考 emojitype\nid           string   表情id，参考 emoji 列表\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nput /channels/1013531/messages/08c095b7ba8ed4abd7e00110cbd83f3841489aa2bd9006/reactions/1/203\n\n\n1\n\n\n\n# 删除机器人发表的表情表态\n\n\n# 接口\n\ndelete /channels/{channel_id}/messages/{message_id}/reactions/{type}/{id}\n\n\n1\n\n\n\n# 功能描述\n\n删除自己对消息 message_id 的表情表态\n\n\n# 参数\n\n字段名          类型       描述\nchannel_id   string   子频道id\nmessage_id   string   消息id\ntype         int      表情类型，参考 emojitype\nid           string   表情id，参考 emoji 列表\n\n\n# 返回\n\n成功返回 http 状态码 204。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\ndelete /channels/1013531/messages/08c095b7ba8ed4abd7e00110cbd83f3841489aa2bd9006/reactions/1/203\n\n\n1\n\n\n\n# 获取消息表情表态的用户列表\n\n\n# 接口\n\nget /channels/{channel_id}/messages/{message_id}/reactions/{type}/{id}?cookie={cookie}&limit={limit}\n\n\n1\n\n\n\n# 功能描述\n\n拉取对消息 message_id 指定表情表态的用户列表\n\n\n# path 参数\n\n字段名          类型       描述\nchannel_id   string   子频道id\nmessage_id   string   消息id\ntype         int      表情类型，参考 emojitype\nid           string   表情id，参考 emoji 列表\n\n\n# query 参数\n\n字段名      类型       描述\ncookie   string   上次请求返回的cookie，第一次请求无需填写\nlimit    int      每次拉取数量，默认20，最多50，只在第一次请求时设置\n\n\n# 返回\n\n字段名      类型       描述\nusers    array    用户对象，参考 user，会返回 id, username, avatar\ncookie   string   分页参数，用于拉取下一页\nis_end   bool     是否已拉取完成到最后一页，true代表完成\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\nget /channels/1013531/messages/08c095b7ba8ed4abd7e00110cbd83f3841489aa2bd9006/reactions/1/203?cookie=&limit=20\n\n\n1\n\n\n返回数据包\n\n{\n    "users": [\n        {\n            "id": "1158788878435714165",\n            "username": "频道机器人",\n            "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=t2qbkyqicopyxa5mn0lbkqa&s=0&t=1635736336"\n        }\n    ],\n    "cookie":"1_2",\n    "is_end": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 事件\n\n\n# 用户发表\n\n * 基本概况\n\n用户对消息进行表情表态时，触发事件通知。\n\n# message_reaction_add (intents guild_message_reactions)\n\n# 发送时机\n\n * 用户对消息进行表情表态时\n\n# message_reaction_remove (intents guild_message_reactions)\n\n# 发送时机\n\n * 用户对消息进行取消表情表态时\n\n# 内容\n\n内容为 messagereaction 对象\n\n# 示例\n\n{\n  "user_id": "1111222233333",\n  "emoji": {\n    "id": "277",\n    "type": 1\n  },\n  "channel_id": "12345",\n  "guild_id": "11110011112222",\n  "target": {\n    "id": "2",\n    "type": 0\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息按钮",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/trans/msg-btn.html",relativePath:"develop/api-v2/server-inter/message/trans/msg-btn.md",key:"v-58fa6266",path:"/develop/api-v2/server-inter/message/trans/msg-btn.html",headers:[{level:2,title:"发送方式",slug:"发送方式",normalizedTitle:"发送方式",charIndex:47},{level:2,title:"数据结构与协议",slug:"数据结构与协议",normalizedTitle:"数据结构与协议",charIndex:738},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:4245},{level:3,title:"点击回调按钮",slug:"点击回调按钮",normalizedTitle:"点击回调按钮",charIndex:4252}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"发送方式 数据结构与协议 事件 点击回调按钮",content:'# 消息按钮\n\n说明\n\n在 markdown 消息的基础上，支持消息最底部挂载按钮。\n\n\n# 发送方式\n\n【申请使用】按钮模版，按钮模版暂时不支持使用变量填充。\n\n{\n    "keyboard": {\n        "id": "123" // 申请模版后获得\n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n【内邀开通】自定义按钮\n\n{\n    "keyboard": {\n        "content": {\n            "rows": [\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n            ] // 自定义按钮内容，最多可以发送5行按钮，每一行最多5个按钮。\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 数据结构与协议\n\n消息发送接口 keyboard 字段值是一个 Json Object {}，rows 数组的每个元素表示每一行按钮\n\n每个 button 是一个 Json Object，具体字段如下：\n\n属性                                   类型       必填   说明\nid                                   string   否    按钮ID：在一个keyboard消息内设置唯一\nrender_data.label                    string   是    按钮上的文字\nrender_data.visited_label            string   是    点击后按钮的上文字\nrender_data.style                    int      是    按钮样式：0 灰色线框，1 蓝色线框\naction.type                          int      是    设置 0 跳转按钮：http 或 小程序 客户端识别 scheme，设置 1 回调按钮：回调后台接口, data\n                                                   传给后台，设置 2 指令按钮：自动在输入框插入 @bot data\naction.permission.type               int      是    0 指定用户可操作，1 仅管理者可操作，2 所有人可操作，3 指定身份组可操作（仅频道可用）\naction.permission.specify_user_ids   array    否    有权限的用户 id 的列表\naction.permission.specify_role_ids   array    否    有权限的身份组 id 的列表（仅频道可用）\naction.data                          string   是    操作相关的数据\naction.reply                         bool     否    指令按钮可用，指令是否带引用回复本消息，默认 false。支持版本 8983\naction.enter                         bool     否    指令按钮可用，点击按钮后直接自动发送 data，默认 false。支持版本 8983\naction.anchor                        int      否    本字段仅在指令按钮下有效，设置后后会忽略 action.enter 配置。\n                                                   设置为 1 时 ，点击按钮自动唤起启手Q选图器，其他值暂无效果。\n                                                   （仅支持手机端版本 8983+ 的单聊场景，桌面端不支持）\naction.click_limit                   int      否    【已弃用】可操作点击的次数，默认不限\naction.at_bot_show_channel_list      bool     否    【已弃用】指令按钮可用，弹出子频道选择器，默认 false\naction.unsupport_tips                string   是    客户端不支持本action的时候，弹出的toast文案\n\n示例\n\n{\n  "rows": [\n    {\n      "buttons": [\n        {\n          "id": "1",\n          "render_data": {\n            "label": "⬅️上一页",\n            "visited_label": "⬅️上一页"\n          },\n          "action": {\n            "type": 1,\n            "permission": {\n              "type": 1,\n              "specify_role_ids": [\n                "1",\n                "2",\n                "3"\n              ]\n            },\n            "click_limit": 10,\n            "unsupport_tips": "兼容文本",\n            "data": "data",\n            "at_bot_show_channel_list": true\n          }\n        },\n        {\n          "id": "2",\n          "render_data": {\n            "label": "➡️下一页",\n            "visited_label": "➡️下一页"\n          },\n          "action": {\n            "type": 1,\n            "permission": {\n              "type": 1,\n              "specify_role_ids": [\n                "1",\n                "2",\n                "3"\n              ]\n            },\n            "click_limit": 10,\n            "unsupport_tips": "兼容文本",\n            "data": "data",\n            "at_bot_show_channel_list": true\n          }\n        }\n      ]\n    },\n    {\n      "buttons": [\n        {\n          "id": "3",\n          "render_data": {\n            "label": "📅 打卡（5）",\n            "visited_label": "📅 打卡（5）"\n          },\n          "action": {\n            "type": 1,\n            "permission": {\n              "type": 1,\n              "specify_role_ids": [\n                "1",\n                "2",\n                "3"\n              ]\n            },\n            "click_limit": 10,\n            "unsupport_tips": "兼容文本",\n            "data": "data",\n            "at_bot_show_channel_list": true\n          }\n        }\n      ]\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n\n\n# 事件\n\n\n# 点击回调按钮\n\n * 基本概况\n\n基本\nintents   1<<26\n事件类型      INTERACTION_CREATE\n触发场景      用户点击了消息体的回调按钮\n推送方式      Websocket\n\n * 事件字段\n\n属性                           类型       说明\nid                           string   平台方事件 ID，可以用于被动消息发送\ntype                         int      消息按钮： 11，单聊快捷菜单：12\nscene                        string   事件发生的场景：c2c、group、guild\nchat_type                    int      0 频道场景，1 群聊场景，2 单聊场景\ntimestamp                    string   触发时间 RFC 3339 格式\nguild_id                     string   频道的 openid ，仅在频道场景提供该字段\nchannel_id                   string   文字子频道的 openid，仅在频道场景提供该字段\nuser_openid                  string   单聊单聊按钮触发x，的用户 openid，仅在单聊场景提供该字段\ngroup_openid                 string   群的 openid，仅在群聊场景提供该字段\ngroup_member_openid          string   按钮触发用户，群聊的群成员 openid，仅在群聊场景提供该字段\ndata.resoloved.button_data   string   操作按钮的 data 字段值（在发送消息按钮时设置）\ndata.resoloved.button_id     string   操作按钮的 id 字段值（在发送消息按钮时设置）\ndata.resoloved.user_id       string   操作的用户 userid，仅频道场景提供该字段\ndata.resoloved.feature_id    string   操作按钮的 id 字段值，仅自定义菜单提供该字段（在管理端设置）\ndata.resoloved.message_id    string   操作的消息id，目前仅频道场景提供该字段\nversion                      int      默认 1\n\n * 事件示例\n\n// Websocket\n{\n    "chat_type": 2,\n    "data": {\n        "resolved": {\n            "button_data": "回调按钮",\n            "button_id": "21",\n            "user_id": "E4F4AEA33253A2797FB897C50B81D7ED"\n        },\n        "type": 11\n    },\n    "id": "30540ff7-9d8f-4737-83f1-e116ce6afa8b",\n    "type": 11,\n    "version": 1\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n * 其他说明\n\n由于 websocket 推送事件是单向的，开发者收到事件之后，需要进行一次"回应"，告知QQ后台，事件已经收到，否则客户端会一直处于loading状态，直到超时。\n\n回应的 openapi 接口如下：\n\n * 请求\n\n基本\nHTTP URL      /interactions/{interaction_id}\nHTTP Method   PUT\n\n * 路径参数\n\n属性               类型       必填   说明\ninteraction_id   string   是    上述事件中获得。\n\n * 请求参数\n\n属性     类型    必填   说明\ncode   int   是    0 成功\n                  1 操作失败\n                  2 操作频繁\n                  3 重复操作\n                  4 没有权限\n                  5 仅管理员操作\n\n * 返回参数\n\n成功返回空\n\n * 错误码',normalizedContent:'# 消息按钮\n\n说明\n\n在 markdown 消息的基础上，支持消息最底部挂载按钮。\n\n\n# 发送方式\n\n【申请使用】按钮模版，按钮模版暂时不支持使用变量填充。\n\n{\n    "keyboard": {\n        "id": "123" // 申请模版后获得\n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n【内邀开通】自定义按钮\n\n{\n    "keyboard": {\n        "content": {\n            "rows": [\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n                {"buttons": [{button}, {button}, {button}, {button}, {button}]},\n            ] // 自定义按钮内容，最多可以发送5行按钮，每一行最多5个按钮。\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 数据结构与协议\n\n消息发送接口 keyboard 字段值是一个 json object {}，rows 数组的每个元素表示每一行按钮\n\n每个 button 是一个 json object，具体字段如下：\n\n属性                                   类型       必填   说明\nid                                   string   否    按钮id：在一个keyboard消息内设置唯一\nrender_data.label                    string   是    按钮上的文字\nrender_data.visited_label            string   是    点击后按钮的上文字\nrender_data.style                    int      是    按钮样式：0 灰色线框，1 蓝色线框\naction.type                          int      是    设置 0 跳转按钮：http 或 小程序 客户端识别 scheme，设置 1 回调按钮：回调后台接口, data\n                                                   传给后台，设置 2 指令按钮：自动在输入框插入 @bot data\naction.permission.type               int      是    0 指定用户可操作，1 仅管理者可操作，2 所有人可操作，3 指定身份组可操作（仅频道可用）\naction.permission.specify_user_ids   array    否    有权限的用户 id 的列表\naction.permission.specify_role_ids   array    否    有权限的身份组 id 的列表（仅频道可用）\naction.data                          string   是    操作相关的数据\naction.reply                         bool     否    指令按钮可用，指令是否带引用回复本消息，默认 false。支持版本 8983\naction.enter                         bool     否    指令按钮可用，点击按钮后直接自动发送 data，默认 false。支持版本 8983\naction.anchor                        int      否    本字段仅在指令按钮下有效，设置后后会忽略 action.enter 配置。\n                                                   设置为 1 时 ，点击按钮自动唤起启手q选图器，其他值暂无效果。\n                                                   （仅支持手机端版本 8983+ 的单聊场景，桌面端不支持）\naction.click_limit                   int      否    【已弃用】可操作点击的次数，默认不限\naction.at_bot_show_channel_list      bool     否    【已弃用】指令按钮可用，弹出子频道选择器，默认 false\naction.unsupport_tips                string   是    客户端不支持本action的时候，弹出的toast文案\n\n示例\n\n{\n  "rows": [\n    {\n      "buttons": [\n        {\n          "id": "1",\n          "render_data": {\n            "label": "⬅️上一页",\n            "visited_label": "⬅️上一页"\n          },\n          "action": {\n            "type": 1,\n            "permission": {\n              "type": 1,\n              "specify_role_ids": [\n                "1",\n                "2",\n                "3"\n              ]\n            },\n            "click_limit": 10,\n            "unsupport_tips": "兼容文本",\n            "data": "data",\n            "at_bot_show_channel_list": true\n          }\n        },\n        {\n          "id": "2",\n          "render_data": {\n            "label": "➡️下一页",\n            "visited_label": "➡️下一页"\n          },\n          "action": {\n            "type": 1,\n            "permission": {\n              "type": 1,\n              "specify_role_ids": [\n                "1",\n                "2",\n                "3"\n              ]\n            },\n            "click_limit": 10,\n            "unsupport_tips": "兼容文本",\n            "data": "data",\n            "at_bot_show_channel_list": true\n          }\n        }\n      ]\n    },\n    {\n      "buttons": [\n        {\n          "id": "3",\n          "render_data": {\n            "label": "📅 打卡（5）",\n            "visited_label": "📅 打卡（5）"\n          },\n          "action": {\n            "type": 1,\n            "permission": {\n              "type": 1,\n              "specify_role_ids": [\n                "1",\n                "2",\n                "3"\n              ]\n            },\n            "click_limit": 10,\n            "unsupport_tips": "兼容文本",\n            "data": "data",\n            "at_bot_show_channel_list": true\n          }\n        }\n      ]\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n\n\n# 事件\n\n\n# 点击回调按钮\n\n * 基本概况\n\n基本\nintents   1<<26\n事件类型      interaction_create\n触发场景      用户点击了消息体的回调按钮\n推送方式      websocket\n\n * 事件字段\n\n属性                           类型       说明\nid                           string   平台方事件 id，可以用于被动消息发送\ntype                         int      消息按钮： 11，单聊快捷菜单：12\nscene                        string   事件发生的场景：c2c、group、guild\nchat_type                    int      0 频道场景，1 群聊场景，2 单聊场景\ntimestamp                    string   触发时间 rfc 3339 格式\nguild_id                     string   频道的 openid ，仅在频道场景提供该字段\nchannel_id                   string   文字子频道的 openid，仅在频道场景提供该字段\nuser_openid                  string   单聊单聊按钮触发x，的用户 openid，仅在单聊场景提供该字段\ngroup_openid                 string   群的 openid，仅在群聊场景提供该字段\ngroup_member_openid          string   按钮触发用户，群聊的群成员 openid，仅在群聊场景提供该字段\ndata.resoloved.button_data   string   操作按钮的 data 字段值（在发送消息按钮时设置）\ndata.resoloved.button_id     string   操作按钮的 id 字段值（在发送消息按钮时设置）\ndata.resoloved.user_id       string   操作的用户 userid，仅频道场景提供该字段\ndata.resoloved.feature_id    string   操作按钮的 id 字段值，仅自定义菜单提供该字段（在管理端设置）\ndata.resoloved.message_id    string   操作的消息id，目前仅频道场景提供该字段\nversion                      int      默认 1\n\n * 事件示例\n\n// websocket\n{\n    "chat_type": 2,\n    "data": {\n        "resolved": {\n            "button_data": "回调按钮",\n            "button_id": "21",\n            "user_id": "e4f4aea33253a2797fb897c50b81d7ed"\n        },\n        "type": 11\n    },\n    "id": "30540ff7-9d8f-4737-83f1-e116ce6afa8b",\n    "type": 11,\n    "version": 1\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n * 其他说明\n\n由于 websocket 推送事件是单向的，开发者收到事件之后，需要进行一次"回应"，告知qq后台，事件已经收到，否则客户端会一直处于loading状态，直到超时。\n\n回应的 openapi 接口如下：\n\n * 请求\n\n基本\nhttp url      /interactions/{interaction_id}\nhttp method   put\n\n * 路径参数\n\n属性               类型       必填   说明\ninteraction_id   string   是    上述事件中获得。\n\n * 请求参数\n\n属性     类型    必填   说明\ncode   int   是    0 成功\n                  1 操作失败\n                  2 操作频繁\n                  3 重复操作\n                  4 没有权限\n                  5 仅管理员操作\n\n * 返回参数\n\n成功返回空\n\n * 错误码',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息类型",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/",relativePath:"develop/api-v2/server-inter/message/type/README.md",key:"v-7b26e01e",path:"/develop/api-v2/server-inter/message/type/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 消息类型",normalizedContent:"# 消息类型",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"文本交互",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/trans/text-chain.html",relativePath:"develop/api-v2/server-inter/message/trans/text-chain.md",key:"v-6debebfb",path:"/develop/api-v2/server-inter/message/trans/text-chain.html",headers:[{level:2,title:"使用 @ 能力",slug:"使用-能力",normalizedTitle:"使用 @ 能力",charIndex:81},{level:2,title:"指令操作",slug:"指令操作",normalizedTitle:"指令操作",charIndex:366},{level:2,title:"跳转子频道",slug:"跳转子频道",normalizedTitle:"跳转子频道",charIndex:875},{level:2,title:"表情",slug:"表情",normalizedTitle:"表情",charIndex:964}],lastUpdated:"6/7/2024, 7:21:22 AM",lastUpdatedTimestamp:1717744882e3,headersStr:"使用 @ 能力 指令操作 跳转子频道 表情",content:'# 文本交互\n\n说明\n\nQQBot 提供文本消息的交互能力，当开发者使用指定的格式发送消息，用户即可在消息体上进行点击交互操作，例如@某人，跳转链接等。\n\n\n# 使用 @ 能力\n\n说明\n\n群聊&文字子频道，支持含有文本文字的消息类型，如：文本消息、图文消息、markdown 消息。\n\n 1. @某人｜群聊、文字子频道可用\n\n嵌入文本使用格式：<qqbot-at-user id="" /> 协议：<@userid>即将弃用，请使用上述最新格式。\n\n客户端展示为： @用户 标签\n\n 2. @全部成员｜仅在文字子频道可用\n\n嵌入文本使用格式：<qqbot-at-everyone /> 协议：@everyone即将弃用，请使用上述最新格式。\n\n客户端展示为： @全部成员 标签，需要机器人拥有发送 @全部成员 消息的权限，\n\n\n# 指令操作\n\n目前仅在 markdown 支持。\n\n1. 回车指令格式（点击后，文本直接发送）\n\n嵌入文本使用格式：\n\n<qqbot-cmd-enter text="xxx" />\n\n客户端展示为： /回车指令 用户可点击的标签，群聊和文字子频道不支持该能力。\n\n * text 用户点击后直接发送的文本，参数必填，最大限制 100 字符，传值时需要 urlencode。\n\n2. 参数指令格式（点击后，文本插入输入框，用户自行编辑发送）\n\n嵌入文本使用格式：\n\n<qqbot-cmd-input text="xxx" show="xxx" reference="false" />\n\n客户端展示为： /参数指令 用户可点击的标签\n\n * text 用户点击后插入输入框的文本，参数必填，最大限制 100 字符，传值时需要 urlencode。\n * show 用户在消息内看到的文本，参数选填，默认取 text 值，最大限制 100 字符，传值时需要 urlencode。\n * reference 插入输入框时是否带消息原文回复引用，参数选填，默认为 false，填入 true 时则带引用回复到输入框中。\n\n\n# 跳转子频道\n\n仅频道可用。\n\n嵌入文本使用格式：<#channel_id>\n\n客户端展示为： #XXX文字子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道。\n\n\n# 表情\n\n仅频道可用，解析为系统表情。 具体表情id参考 Emoji 列表。\n\n嵌入文本使用格式：<emoji:id>\n\n * 仅支持 type = 1 的系统表情。\n * type = 2 的 emoji 表情直接按字符串填写即可。',normalizedContent:'# 文本交互\n\n说明\n\nqqbot 提供文本消息的交互能力，当开发者使用指定的格式发送消息，用户即可在消息体上进行点击交互操作，例如@某人，跳转链接等。\n\n\n# 使用 @ 能力\n\n说明\n\n群聊&文字子频道，支持含有文本文字的消息类型，如：文本消息、图文消息、markdown 消息。\n\n 1. @某人｜群聊、文字子频道可用\n\n嵌入文本使用格式：<qqbot-at-user id="" /> 协议：<@userid>即将弃用，请使用上述最新格式。\n\n客户端展示为： @用户 标签\n\n 2. @全部成员｜仅在文字子频道可用\n\n嵌入文本使用格式：<qqbot-at-everyone /> 协议：@everyone即将弃用，请使用上述最新格式。\n\n客户端展示为： @全部成员 标签，需要机器人拥有发送 @全部成员 消息的权限，\n\n\n# 指令操作\n\n目前仅在 markdown 支持。\n\n1. 回车指令格式（点击后，文本直接发送）\n\n嵌入文本使用格式：\n\n<qqbot-cmd-enter text="xxx" />\n\n客户端展示为： /回车指令 用户可点击的标签，群聊和文字子频道不支持该能力。\n\n * text 用户点击后直接发送的文本，参数必填，最大限制 100 字符，传值时需要 urlencode。\n\n2. 参数指令格式（点击后，文本插入输入框，用户自行编辑发送）\n\n嵌入文本使用格式：\n\n<qqbot-cmd-input text="xxx" show="xxx" reference="false" />\n\n客户端展示为： /参数指令 用户可点击的标签\n\n * text 用户点击后插入输入框的文本，参数必填，最大限制 100 字符，传值时需要 urlencode。\n * show 用户在消息内看到的文本，参数选填，默认取 text 值，最大限制 100 字符，传值时需要 urlencode。\n * reference 插入输入框时是否带消息原文回复引用，参数选填，默认为 false，填入 true 时则带引用回复到输入框中。\n\n\n# 跳转子频道\n\n仅频道可用。\n\n嵌入文本使用格式：<#channel_id>\n\n客户端展示为： #xxx文字子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道。\n\n\n# 表情\n\n仅频道可用，解析为系统表情。 具体表情id参考 emoji 列表。\n\n嵌入文本使用格式：<emoji:id>\n\n * 仅支持 type = 1 的系统表情。\n * type = 2 的 emoji 表情直接按字符串填写即可。',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"ARK 消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/ark.html",relativePath:"develop/api-v2/server-inter/message/type/ark.md",key:"v-b025b1fe",path:"/develop/api-v2/server-inter/message/type/ark.html",headers:[{level:2,title:"发送方式",slug:"发送方式",normalizedTitle:"发送方式",charIndex:158},{level:2,title:"数据结构与协议",slug:"数据结构与协议",normalizedTitle:"数据结构与协议",charIndex:1678}],lastUpdated:"12/20/2023, 8:46:30 AM",lastUpdatedTimestamp:170306199e4,headersStr:"发送方式 数据结构与协议",content:'# ARK 消息\n\n说明\n\n主动消息 ARK：默认开放可用。 被动消息 ARK：达到准入条件的开发者，向平台运营申请后获得权限。\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   -    -    -       -\n机器人发送   支持   支持   支持      支持\n\n\n# 发送方式\n\n选择合适的 ARK 模版发送，模版的有预设变量，变量类型可以是 字符串、数组、URL等。\n\n// 模版CASE，其中#META_LIST#类型为数组、#META_URL#类型为 URL 其他为文本\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#META_DESC#",\n      "url": "#META_URL#",\n      "list": "#META_LIST#"\n    }\n  }\n}\n\n// 发送CASE\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "XX机器人"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "XX机器人消息"\n      },\n      {\n        "key": "#META_URL#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#META_LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n\n\n\n# 数据结构与协议\n\n消息发送接口 ark 字段值是一个 json object，具体字段如下：\n\n属性            类型      必填   说明\ntemplate_id   int     是    模版 id，管理端可获得或内邀申请获得\n                           以下默认可使用：\n                           23 链接+文本列表模板|QQ机器人文档\n                           24 文本+缩略图模板|QQ机器人文档\n                           37 大图模板|QQ机器人文档\nkv            array   是    {key: xxx, value: xxx}，模版内变量与填充值的kv映射\n\n特别：当预设变量是数组时，kv数组元素的结构调整为：\n\n// 举个例子\n{\n    "key: xxx", \n    "obj": [\n        {"obj_kv":[{"key": "xxx", "value": "xxx"}, {"key": "xxx", "value": "xxx"}]}, //一个 obj_kv 可以多个数组元素\n        {"obj_kv":[{"key": "xxx", "value": "xxx"}, {"key": "xxx", "value": "xxx"}]}\n        // 可以多个 obj_kv\n    ]\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# ark 消息\n\n说明\n\n主动消息 ark：默认开放可用。 被动消息 ark：达到准入条件的开发者，向平台运营申请后获得权限。\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   -    -    -       -\n机器人发送   支持   支持   支持      支持\n\n\n# 发送方式\n\n选择合适的 ark 模版发送，模版的有预设变量，变量类型可以是 字符串、数组、url等。\n\n// 模版case，其中#meta_list#类型为数组、#meta_url#类型为 url 其他为文本\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#meta_desc#",\n      "url": "#meta_url#",\n      "list": "#meta_list#"\n    }\n  }\n}\n\n// 发送case\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#prompt#",\n        "value": "xx机器人"\n      },\n      {\n        "key": "#title#",\n        "value": "xx机器人消息"\n      },\n      {\n        "key": "#meta_url#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#meta_list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n\n\n\n# 数据结构与协议\n\n消息发送接口 ark 字段值是一个 json object，具体字段如下：\n\n属性            类型      必填   说明\ntemplate_id   int     是    模版 id，管理端可获得或内邀申请获得\n                           以下默认可使用：\n                           23 链接+文本列表模板|qq机器人文档\n                           24 文本+缩略图模板|qq机器人文档\n                           37 大图模板|qq机器人文档\nkv            array   是    {key: xxx, value: xxx}，模版内变量与填充值的kv映射\n\n特别：当预设变量是数组时，kv数组元素的结构调整为：\n\n// 举个例子\n{\n    "key: xxx", \n    "obj": [\n        {"obj_kv":[{"key": "xxx", "value": "xxx"}, {"key": "xxx", "value": "xxx"}]}, //一个 obj_kv 可以多个数组元素\n        {"obj_kv":[{"key": "xxx", "value": "xxx"}, {"key": "xxx", "value": "xxx"}]}\n        // 可以多个 obj_kv\n    ]\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"语音",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/audio.html",relativePath:"develop/api-v2/server-inter/message/type/audio.md",key:"v-4ca878ee",path:"/develop/api-v2/server-inter/message/type/audio.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 语音\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   -    -       -\n机器人发送   支持   支持   -       -",normalizedContent:"# 语音\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   -    -       -\n机器人发送   支持   支持   -       -",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"Embed 消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/embed.html",relativePath:"develop/api-v2/server-inter/message/type/embed.md",key:"v-276e6003",path:"/develop/api-v2/server-inter/message/type/embed.html",headers:[{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:110},{level:2,title:"数据结构与协议",slug:"数据结构与协议",normalizedTitle:"数据结构与协议",charIndex:117},{level:3,title:"Content-Type",slug:"content-type",normalizedTitle:"content-type",charIndex:129},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:169},{level:3,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:302},{level:3,title:"错误码",slug:"错误码",normalizedTitle:"错误码",charIndex:323},{level:3,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:339}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"样式 数据结构与协议 Content-Type 参数 返回 错误码 示例",content:'# Embed 消息\n\n        单聊    群聊    文字子频道   频道私信\n机器人接收   -     -     -       -\n机器人发送   未开放   未开放   支持      支持\n\n\n# 样式\n\n\n# 数据结构与协议\n\n\n# Content-Type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型             描述\nembed   MessageEmbed   embed 消息详情\n\n * 其中 embed.thumbnail 为选填，没有缩略图的可以不填。\n * embed.fields.name 为文本。\n\n\n# 返回\n\n返回Message对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "embed": {\n    "title": "标题",\n    "prompt": "消息通知",\n    "thumbnail": {\n      "url": "xxxxxx"\n    },\n    "fields": [\n      {\n        "name": "当前等级：黄金"\n      },\n      {\n        "name": "之前等级：白银"\n      },\n      {\n        "name": "😁继续努力"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n返回包\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "timestamp": "2021-12-07T15:24:54+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {\n      "title": "标题",\n      "prompt": "xxxx",\n      "description": "",\n      "thumbnail": {\n        "url": "xxxxxx"\n      },\n      "fields": [\n        {\n          "name": "当前等级：黄金"\n        },\n        {\n          "name": "之前等级：白银"\n        },\n        {\n          "name": "😁继续努力"\n        }\n      ]\n    }\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',normalizedContent:'# embed 消息\n\n        单聊    群聊    文字子频道   频道私信\n机器人接收   -     -     -       -\n机器人发送   未开放   未开放   支持      支持\n\n\n# 样式\n\n\n# 数据结构与协议\n\n\n# content-type\n\napplication/json\n\n\n1\n\n\n\n# 参数\n\n字段名     类型             描述\nembed   messageembed   embed 消息详情\n\n * 其中 embed.thumbnail 为选填，没有缩略图的可以不填。\n * embed.fields.name 为文本。\n\n\n# 返回\n\n返回message对象。\n\n\n# 错误码\n\n详见错误码。\n\n\n# 示例\n\n请求数据包\n\n{\n  "embed": {\n    "title": "标题",\n    "prompt": "消息通知",\n    "thumbnail": {\n      "url": "xxxxxx"\n    },\n    "fields": [\n      {\n        "name": "当前等级：黄金"\n      },\n      {\n        "name": "之前等级：白银"\n      },\n      {\n        "name": "😁继续努力"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n返回包\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "timestamp": "2021-12-07t15:24:54+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {\n      "title": "标题",\n      "prompt": "xxxx",\n      "description": "",\n      "thumbnail": {\n        "url": "xxxxxx"\n      },\n      "fields": [\n        {\n          "name": "当前等级：黄金"\n        },\n        {\n          "name": "之前等级：白银"\n        },\n        {\n          "name": "😁继续努力"\n        }\n      ]\n    }\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"图片",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/image.html",relativePath:"develop/api-v2/server-inter/message/type/image.md",key:"v-58967c02",path:"/develop/api-v2/server-inter/message/type/image.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 图片\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   -    -       支持\n机器人发送   支持   支持   支持      支持",normalizedContent:"# 图片\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   -    -       支持\n机器人发送   支持   支持   支持      支持",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"文件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/file.html",relativePath:"develop/api-v2/server-inter/message/type/file.md",key:"v-4a353466",path:"/develop/api-v2/server-inter/message/type/file.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 文件\n\n目前接收文件仅支持，pdf、doc、txt 格式\n\n        单聊    群聊    文字子频道   频道私信\n机器人接收   支持    -     -       -\n机器人发送   未开放   未开放   -       -",normalizedContent:"# 文件\n\n目前接收文件仅支持，pdf、doc、txt 格式\n\n        单聊    群聊    文字子频道   频道私信\n机器人接收   支持    -     -       -\n机器人发送   未开放   未开放   -       -",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"图文消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/rich-text.html",relativePath:"develop/api-v2/server-inter/message/type/rich-text.md",key:"v-6656b58e",path:"/develop/api-v2/server-inter/message/type/rich-text.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 图文消息\n\n        单聊     群聊     文字子频道   频道私信\n机器人接收   支持     支持     支持      支持\n机器人发送   近期支持   近期支持   支持      支持",normalizedContent:"# 图文消息\n\n        单聊     群聊     文字子频道   频道私信\n机器人接收   支持     支持     支持      支持\n机器人发送   近期支持   近期支持   支持      支持",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"Markdown 消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/markdown.html",relativePath:"develop/api-v2/server-inter/message/type/markdown.md",key:"v-140e83ed",path:"/develop/api-v2/server-inter/message/type/markdown.html",headers:[{level:2,title:"支持格式",slug:"支持格式",normalizedTitle:"支持格式",charIndex:162},{level:3,title:"标题",slug:"标题",normalizedTitle:"标题",charIndex:171},{level:3,title:"文字样式",slug:"文字样式",normalizedTitle:"文字样式",charIndex:206},{level:3,title:"链接",slug:"链接",normalizedTitle:"链接",charIndex:282},{level:3,title:"图片",slug:"图片",normalizedTitle:"图片",charIndex:359},{level:3,title:"有序列表",slug:"有序列表",normalizedTitle:"有序列表",charIndex:631},{level:3,title:"无序列表",slug:"无序列表",normalizedTitle:"无序列表",charIndex:705},{level:3,title:"列表嵌套",slug:"列表嵌套",normalizedTitle:"列表嵌套",charIndex:776},{level:3,title:"块引用",slug:"块引用",normalizedTitle:"块引用",charIndex:953},{level:3,title:"水平分割线",slug:"水平分割线",normalizedTitle:"水平分割线",charIndex:1047},{level:3,title:"换多行",slug:"换多行",normalizedTitle:"换多行",charIndex:1083},{level:2,title:"发送方式",slug:"发送方式",normalizedTitle:"发送方式",charIndex:1137},{level:2,title:"数据结构与协议",slug:"数据结构与协议",normalizedTitle:"数据结构与协议",charIndex:2260}],lastUpdated:"12/20/2023, 8:46:30 AM",lastUpdatedTimestamp:170306199e4,headersStr:"支持格式 标题 文字样式 链接 图片 有序列表 无序列表 列表嵌套 块引用 水平分割线 换多行 发送方式 数据结构与协议",content:'# Markdown 消息\n\n目前需要内邀开通 当开通模版 MD 或原生 MD 后，主动 MD 默认生效，被动 MD 仍需单独申请开通。\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   -    -    -       -\n机器人发送   支持   支持   支持      支持\n\n\n# 支持格式\n\n\n# 标题\n\n# 一号标题\n## 二号标题\n正文\n\n\n1\n2\n3\n\n\n\n# 文字样式\n\n**加粗**\n__下划线加粗__\n_斜体_\n*星号斜体*\n***加粗斜体***\n~~删除线~~\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 链接\n\n欢迎来到：[🔗腾讯网](https://www.qq.com)  \n文档可以访问<https://doc.qq.com>\n\n\n1\n2\n\n\n\n# 图片\n\n对于 markdown 消息内的图片资源，QQ 后台为了保护用户 IP 隐私的原因，会通过域名代理和内容缓存机制解析到 QQ 客户端，但不会持久化存储，请开发者自身维护图片 url 的可用性，当 url 不可用时，markdown 消息内的图片可能不能正常渲染展示。\n\n![text #208px #320px](https://resource5-1255303497.cos.ap-guangzhou.myqcloud.com/abcmouse_word_watch/markdown/building.png)\n\n\n1\n\n\n\n# 有序列表\n\n# 有序列表\n1. 新人降落桃源岛的欢迎仪式\n2. 阳光准则助力建设有温度的频道\n3. 岛民分享吹水纳凉\n\n\n1\n2\n3\n4\n\n\n\n# 无序列表\n\n# 无序列表\n- 新人降落桃源岛的欢迎仪式\n- 阳光准则助力建设有温度的频道\n- 岛民分享吹水纳凉\n\n\n1\n2\n3\n4\n\n\n\n# 列表嵌套\n\n# 有序列表标题\n1. 嵌套一层\n    - 列表前是普通文本，则需要在列表前用空行隔开，否则无法识别\n    - 如果是段落标签比如标题，则无需用空行隔开\n2. 嵌套二层\n    1. 我是有序列表，二级列表前面需要空4个空格\n    2. 无序列表和有序列表可以相互嵌套，但是不建议无限制嵌套。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 块引用\n\n> 青青子衿，悠悠我心，但为君故，沉吟至今\n> 四月维夏，六月徂暑。先祖匪人，胡宁忍予\n> 秋日凄凄，百卉具腓。乱离瘼矣，爰其适归？\n诗经《小雅》\n\n\n1\n2\n3\n4\n\n\n\n# 水平分割线\n\n这是段落1\n***\n这是段落2\n\n\n1\n2\n3\n\n\n\n# 换多行\n\n第一行\n\n第二行\n\n\\u200B\n\\u200B\n第三行\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 发送方式\n\n自定义 markdown 消息： 【内邀使用】\n\n{\n  "markdown": {\n    "content": "# 标题 \\n## 简介很开心 \\n内容[🔗腾讯](https://www.qq.com)"\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n消息模版：QQ Bot 提供 markdown 消息模版能力。\n\n// 模版例子\n\n#{{.title}}\n\n![img#618px #249px]({{.image}})\n\n*{{.para1}}\n*{{.para2}}\n\n## {{.desc}}\n\n{{.content}}[{{.link_introduction}}]({{.link}})\n\n// 发送case\n{\n\t"markdown": {\n\t\t"custom_template_id": "101993071_1658748972",\n\t\t"params": [{\n\t\t\t\t"key": "title",\n\t\t\t\t"values": ["标题"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "image",\n\t\t\t\t"values": [\n\t\t\t\t\t"https://resource5-1255303497.cos.ap-guangzhou.myqcloud.com/abcmouse_word_watch/other/mkd_img.png"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "para1",\n\t\t\t\t"values": ["段落1"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "para2",\n\t\t\t\t"values": ["段落2"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "desc",\n\t\t\t\t"values": ["简介"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "content",\n\t\t\t\t"values": ["在这个子频道非常开心"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "link_introduction",\n\t\t\t\t"values": ["链接介绍"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "link",\n\t\t\t\t"values": ["https://www.qq.com"]\n\t\t\t}\n\t\t]\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n\n\n\n# 数据结构与协议\n\n消息发送 markdown 字段值是一个 json object，具体字段如下：\n\n属性                   类型       必填   说明\ncontent              string   否    原生 markdown 文本内容\ncustom_template_id   string   否    markdown 模版id，申请模版后获得\nparams               Array    否    {key: xxx, values: xxx}，模版内变量与填充值的kv映射',normalizedContent:'# markdown 消息\n\n目前需要内邀开通 当开通模版 md 或原生 md 后，主动 md 默认生效，被动 md 仍需单独申请开通。\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   -    -    -       -\n机器人发送   支持   支持   支持      支持\n\n\n# 支持格式\n\n\n# 标题\n\n# 一号标题\n## 二号标题\n正文\n\n\n1\n2\n3\n\n\n\n# 文字样式\n\n**加粗**\n__下划线加粗__\n_斜体_\n*星号斜体*\n***加粗斜体***\n~~删除线~~\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 链接\n\n欢迎来到：[🔗腾讯网](https://www.qq.com)  \n文档可以访问<https://doc.qq.com>\n\n\n1\n2\n\n\n\n# 图片\n\n对于 markdown 消息内的图片资源，qq 后台为了保护用户 ip 隐私的原因，会通过域名代理和内容缓存机制解析到 qq 客户端，但不会持久化存储，请开发者自身维护图片 url 的可用性，当 url 不可用时，markdown 消息内的图片可能不能正常渲染展示。\n\n![text #208px #320px](https://resource5-1255303497.cos.ap-guangzhou.myqcloud.com/abcmouse_word_watch/markdown/building.png)\n\n\n1\n\n\n\n# 有序列表\n\n# 有序列表\n1. 新人降落桃源岛的欢迎仪式\n2. 阳光准则助力建设有温度的频道\n3. 岛民分享吹水纳凉\n\n\n1\n2\n3\n4\n\n\n\n# 无序列表\n\n# 无序列表\n- 新人降落桃源岛的欢迎仪式\n- 阳光准则助力建设有温度的频道\n- 岛民分享吹水纳凉\n\n\n1\n2\n3\n4\n\n\n\n# 列表嵌套\n\n# 有序列表标题\n1. 嵌套一层\n    - 列表前是普通文本，则需要在列表前用空行隔开，否则无法识别\n    - 如果是段落标签比如标题，则无需用空行隔开\n2. 嵌套二层\n    1. 我是有序列表，二级列表前面需要空4个空格\n    2. 无序列表和有序列表可以相互嵌套，但是不建议无限制嵌套。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 块引用\n\n> 青青子衿，悠悠我心，但为君故，沉吟至今\n> 四月维夏，六月徂暑。先祖匪人，胡宁忍予\n> 秋日凄凄，百卉具腓。乱离瘼矣，爰其适归？\n诗经《小雅》\n\n\n1\n2\n3\n4\n\n\n\n# 水平分割线\n\n这是段落1\n***\n这是段落2\n\n\n1\n2\n3\n\n\n\n# 换多行\n\n第一行\n\n第二行\n\n\\u200b\n\\u200b\n第三行\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 发送方式\n\n自定义 markdown 消息： 【内邀使用】\n\n{\n  "markdown": {\n    "content": "# 标题 \\n## 简介很开心 \\n内容[🔗腾讯](https://www.qq.com)"\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n消息模版：qq bot 提供 markdown 消息模版能力。\n\n// 模版例子\n\n#{{.title}}\n\n![img#618px #249px]({{.image}})\n\n*{{.para1}}\n*{{.para2}}\n\n## {{.desc}}\n\n{{.content}}[{{.link_introduction}}]({{.link}})\n\n// 发送case\n{\n\t"markdown": {\n\t\t"custom_template_id": "101993071_1658748972",\n\t\t"params": [{\n\t\t\t\t"key": "title",\n\t\t\t\t"values": ["标题"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "image",\n\t\t\t\t"values": [\n\t\t\t\t\t"https://resource5-1255303497.cos.ap-guangzhou.myqcloud.com/abcmouse_word_watch/other/mkd_img.png"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "para1",\n\t\t\t\t"values": ["段落1"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "para2",\n\t\t\t\t"values": ["段落2"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "desc",\n\t\t\t\t"values": ["简介"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "content",\n\t\t\t\t"values": ["在这个子频道非常开心"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "link_introduction",\n\t\t\t\t"values": ["链接介绍"]\n\t\t\t},\n\t\t\t{\n\t\t\t\t"key": "link",\n\t\t\t\t"values": ["https://www.qq.com"]\n\t\t\t}\n\t\t]\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n\n\n\n# 数据结构与协议\n\n消息发送 markdown 字段值是一个 json object，具体字段如下：\n\n属性                   类型       必填   说明\ncontent              string   否    原生 markdown 文本内容\ncustom_template_id   string   否    markdown 模版id，申请模版后获得\nparams               array    否    {key: xxx, values: xxx}，模版内变量与填充值的kv映射',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/sticker.html",relativePath:"develop/api-v2/server-inter/message/type/sticker.md",key:"v-7a73490a",path:"/develop/api-v2/server-inter/message/type/sticker.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 表情\n\n内测中，近期支持",normalizedContent:"# 表情\n\n内测中，近期支持",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"23 链接+文本列表模板",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/template/template_23.html",relativePath:"develop/api-v2/server-inter/message/type/template/template_23.md",key:"v-0ee39f2d",path:"/develop/api-v2/server-inter/message/type/template/template_23.html",headers:[{level:3,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:19},{level:3,title:"模板格式",slug:"模板格式",normalizedTitle:"模板格式",charIndex:37},{level:3,title:"字段描述",slug:"字段描述",normalizedTitle:"字段描述",charIndex:276},{level:3,title:"#LIST# 结构",slug:"list-结构",normalizedTitle:"#list# 结构",charIndex:386}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"样式 模板格式 字段描述 #LIST# 结构",content:'# 23 链接+文本列表模板\n\n\n# 样式\n\n模板 id=23。\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "list": "#LIST#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#DESC#     string   描述\n#PROMPT#   string   提示消息\n#LIST#     array    #LIST#数组\n\n\n# #LIST# 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：UI问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n',normalizedContent:'# 23 链接+文本列表模板\n\n\n# 样式\n\n模板 id=23。\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "list": "#list#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#desc#     string   描述\n#prompt#   string   提示消息\n#list#     array    #list#数组\n\n\n# #list# 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#prompt#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：ui问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"24 文本+缩略图模板",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/template/template_24.html",relativePath:"develop/api-v2/server-inter/message/type/template/template_24.md",key:"v-1877a9e6",path:"/develop/api-v2/server-inter/message/type/template/template_24.html",headers:[{level:3,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:18},{level:3,title:"模板格式",slug:"模板格式",normalizedTitle:"模板格式",charIndex:36},{level:3,title:"字段描述",slug:"字段描述",normalizedTitle:"字段描述",charIndex:403}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"样式 模板格式 字段描述",content:'# 24 文本+缩略图模板\n\n\n# 样式\n\n模板 id=24。\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#METADESC#",\n      "img": "#IMG#",\n      "link": "#LINK#",\n      "subTitle": "#SUBTITLE#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#DESC#       string   描述\n#PROMPT#     string   提示文本\n#TITLE#      string   标题\n#METADESC#   string   详情描述\n#IMG#        string   图片链接\n#LINK#       string   跳转链接\n#SUBTITLE#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#METADESC#",\n        "value": "Meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#IMG#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#LINK#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#SUBTITLE#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n',normalizedContent:'# 24 文本+缩略图模板\n\n\n# 样式\n\n模板 id=24。\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#metadesc#",\n      "img": "#img#",\n      "link": "#link#",\n      "subtitle": "#subtitle#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#desc#       string   描述\n#prompt#     string   提示文本\n#title#      string   标题\n#metadesc#   string   详情描述\n#img#        string   图片链接\n#link#       string   跳转链接\n#subtitle#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#prompt#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#title#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#metadesc#",\n        "value": "meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#img#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#link#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#subtitle#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"文本消息",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/text.html",relativePath:"develop/api-v2/server-inter/message/type/text.md",key:"v-f6b384a6",path:"/develop/api-v2/server-inter/message/type/text.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 文本消息\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   支持   支持      支持\n机器人发送   支持   支持   支持      支持",normalizedContent:"# 文本消息\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   支持   支持      支持\n机器人发送   支持   支持   支持      支持",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"37 大图模板",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/template/template_37.html",relativePath:"develop/api-v2/server-inter/message/type/template/template_37.md",key:"v-5996becd",path:"/develop/api-v2/server-inter/message/type/template/template_37.html",headers:[{level:3,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:14},{level:3,title:"模板格式",slug:"模板格式",normalizedTitle:"模板格式",charIndex:32},{level:3,title:"字段描述",slug:"字段描述",normalizedTitle:"字段描述",charIndex:346}],lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:"样式 模板格式 字段描述",content:'# 37 大图模板\n\n\n# 样式\n\n模板 id=37。\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#PROMPT#",\n  "meta": {\n    "robot": {\n      "title": "#METATITLE#",\n      "subtitle": "#METASUBTITLE#",\n      "cover": "#METACOVER#",\n      "jump_url": "#METAURL#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#PROMPT#         string   提示消息\n#METATITLE#      string   标题\n#METASUBTITLE#   string   子标题\n#METACOVER#      string   大图，尺寸为 975*540\n#METAURL#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#PROMPT#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#METATITLE#",\n        "value": "标题"\n      },\n      {\n        "key": "#METASUBTITLE#",\n        "value": "子标题"\n      },\n      {\n        "key": "#METACOVER#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#METAURL#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',normalizedContent:'# 37 大图模板\n\n\n# 样式\n\n模板 id=37。\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#prompt#",\n  "meta": {\n    "robot": {\n      "title": "#metatitle#",\n      "subtitle": "#metasubtitle#",\n      "cover": "#metacover#",\n      "jump_url": "#metaurl#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#prompt#         string   提示消息\n#metatitle#      string   标题\n#metasubtitle#   string   子标题\n#metacover#      string   大图，尺寸为 975*540\n#metaurl#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#prompt#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#metatitle#",\n        "value": "标题"\n      },\n      {\n        "key": "#metasubtitle#",\n        "value": "子标题"\n      },\n      {\n        "key": "#metacover#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#metaurl#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"视频",frontmatter:{},regularPath:"/develop/api-v2/server-inter/message/type/video.html",relativePath:"develop/api-v2/server-inter/message/type/video.md",key:"v-3c5ddbbf",path:"/develop/api-v2/server-inter/message/type/video.html",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 视频\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   -    -       支持\n机器人发送   支持   支持   支持      支持",normalizedContent:"# 视频\n\n        单聊   群聊   文字子频道   频道私信\n机器人接收   支持   -    -       支持\n机器人发送   支持   支持   支持      支持",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"用户模块",frontmatter:{},regularPath:"/develop/api-v2/server-inter/user/",relativePath:"develop/api-v2/server-inter/user/README.md",key:"v-24ceddbe",path:"/develop/api-v2/server-inter/user/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 用户模块\n\n说明\n\n开放平台支持的功能设置的配置项：\n\n * 添加好友后的破冰消息文案；\n * 主动消息变更后自动推送给用户的消息文案；",normalizedContent:"# 用户模块\n\n说明\n\n开放平台支持的功能设置的配置项：\n\n * 添加好友后的破冰消息文案；\n * 主动消息变更后自动推送给用户的消息文案；",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"用户管理",frontmatter:{},regularPath:"/develop/api-v2/server-inter/user/manage/",relativePath:"develop/api-v2/server-inter/user/manage/README.md",key:"v-6bc707f8",path:"/develop/api-v2/server-inter/user/manage/",lastUpdated:"11/22/2023, 8:19:57 AM",lastUpdatedTimestamp:1700641197e3,headersStr:null,content:"# 用户管理",normalizedContent:"# 用户管理",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"事件",frontmatter:{},regularPath:"/develop/api-v2/server-inter/user/manage/event.html",relativePath:"develop/api-v2/server-inter/user/manage/event.md",key:"v-07811e6d",path:"/develop/api-v2/server-inter/user/manage/event.html",headers:[{level:2,title:"用户添加机器人",slug:"用户添加机器人",normalizedTitle:"用户添加机器人",charIndex:9},{level:2,title:"用户删除机器人",slug:"用户删除机器人",normalizedTitle:"用户删除机器人",charIndex:319},{level:2,title:"拒绝机器人主动消息",slug:"拒绝机器人主动消息",normalizedTitle:"拒绝机器人主动消息",charIndex:624},{level:2,title:"允许机器人主动消息",slug:"允许机器人主动消息",normalizedTitle:"允许机器人主动消息",charIndex:946}],lastUpdated:"7/22/2024, 2:40:23 AM",lastUpdatedTimestamp:1721616023e3,headersStr:"用户添加机器人 用户删除机器人 拒绝机器人主动消息 允许机器人主动消息",content:'# 事件\n\n\n# 用户添加机器人\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      FRIEND_ADD\n触发场景      用户添加机器人\'好友\'到消息列表\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      添加时间戳\nopenid      string   用户openid\n\n * 事件示例\n\n{\n\t"openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240365\n}\n\n\n1\n2\n3\n4\n\n\n\n# 用户删除机器人\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      FRIEND_DEL\n触发场景      用户删除机器人\'好友\'\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      删除时间戳\nopenid      string   用户openid\n\n * 事件示例\n\n{\n\t"openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240328\n}\n\n\n1\n2\n3\n4\n\n\n\n# 拒绝机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      C2C_MSG_REJECT\n触发场景      用户在机器人资料卡手动关闭"主动消息"推送\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      操作时间戳\nopenid      string   用户 openid\n\n * 事件示例\n\n{\n\t"openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240599\n}\n\n\n1\n2\n3\n4\n\n\n\n# 允许机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      C2C_MSG_RECEIVE\n触发场景      用户在机器人资料卡手动开启"主动消息"推送开关\n权限要求      暂无\n推送方式      Websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      操作时间戳\nopenid      string   用户 openid\n\n * 事件示例\n\n{\n\t"openid": "E4F4AEA33253A2797FB897C50B81D7ED",\n\t"timestamp": 1699240617\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'# 事件\n\n\n# 用户添加机器人\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      friend_add\n触发场景      用户添加机器人\'好友\'到消息列表\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      添加时间戳\nopenid      string   用户openid\n\n * 事件示例\n\n{\n\t"openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240365\n}\n\n\n1\n2\n3\n4\n\n\n\n# 用户删除机器人\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      friend_del\n触发场景      用户删除机器人\'好友\'\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      删除时间戳\nopenid      string   用户openid\n\n * 事件示例\n\n{\n\t"openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240328\n}\n\n\n1\n2\n3\n4\n\n\n\n# 拒绝机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      c2c_msg_reject\n触发场景      用户在机器人资料卡手动关闭"主动消息"推送\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      操作时间戳\nopenid      string   用户 openid\n\n * 事件示例\n\n{\n\t"openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240599\n}\n\n\n1\n2\n3\n4\n\n\n\n# 允许机器人主动消息\n\n * 基本概况\n\n基本\nintents   1<<25\n事件类型      c2c_msg_receive\n触发场景      用户在机器人资料卡手动开启"主动消息"推送开关\n权限要求      暂无\n推送方式      websocket\n\n * 事件字段\n\n属性          类型       说明\ntimestamp   int      操作时间戳\nopenid      string   用户 openid\n\n * 事件示例\n\n{\n\t"openid": "e4f4aea33253a2797fb897c50b81d7ed",\n\t"timestamp": 1699240617\n}\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"Go SDK 接入指南",frontmatter:{},regularPath:"/develop/gosdk/",relativePath:"develop/gosdk/README.md",key:"v-444ef428",path:"/develop/gosdk/",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:18},{level:2,title:"安装Go",slug:"安装go",normalizedTitle:"安装go",charIndex:63},{level:2,title:"安装GO SDK",slug:"安装go-sdk",normalizedTitle:"安装go sdk",charIndex:433},{level:2,title:"示例机器人",slug:"示例机器人",normalizedTitle:"示例机器人",charIndex:514},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:552},{level:2,title:"什么是 SessionManager",slug:"什么是-sessionmanager",normalizedTitle:"什么是 sessionmanager",charIndex:1702},{level:2,title:"生产环境中的一些建议",slug:"生产环境中的一些建议",normalizedTitle:"生产环境中的一些建议",charIndex:2015}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"介绍 安装Go 安装GO SDK 示例机器人 使用示例 什么是 SessionManager 生产环境中的一些建议",content:'# Go SDK 接入指南\n\n\n# 介绍\n\nGoSDK主要基于基础 API封装，提供给用户一种简单、高效的使用方式。\n\n\n# 安装Go\n\n在命令行输入如下命令来下载 Go 语言压缩包\n\nwget https://dl.google.com/go/go1.17.7.linux-amd64.tar.gz\n\n\n1\n\n\n解压缩到指定目录，这样 Go 语言就安装好了\n\nsudo tar -xzf go1.17.7.linux-amd64.tar.gz -C /usr/local\n\n\n1\n\n\n打开/etc/profile文件，在最后面加入Go的路径:\n\nexport GOROOT=/usr/local/go\nexport PATH=$PATH:$GOROOT/bin\n\n\n1\n2\n\n\n使profile文件生效\n\nsource /etc/profile\n\n\n1\n\n\n在命令行输入 go version 指令检验是否安装完成，如果安装成功，会打印出 Go 的版本号\n\n\n# 安装GO SDK\n\n在命令行输入如下命令来安装 Go SDK\n\ngo get github.com/tencent-connect/botgo\n\n\n1\n\n\n\n# 示例机器人\n\nexamples目录下存放示例机器人，可供实现参考。\n\n\n# 使用示例\n\n请求 openapi 接口，操作资源\n\nfunc main() {\n    token := token.BotToken(conf.AppID, conf.Token)\n    api := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\n    ctx := context.Background()\n\n    ws, err := api.WS(ctx, nil, "")\n    log.Printf("%+v, err:%v", ws, err)\n    \n    me, err := api.Me(ctx, nil, "")\n    log.Printf("%+v, err:%v", me, err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n使用默认 SessionManager 启动 websocket 连接，接收事件\n\nfunc main() {\n    token := token.BotToken(conf.AppID, conf.Token)\n    api := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\n    ctx := context.Background()\n    ws, err := api.WS(ctx, nil, "")\n    if err != nil {\n        log.Printf("%+v, err:%v", ws, err)\n    }\n\n    // 监听哪类事件就需要实现哪类的 handler，定义：websocket/event_handler.go\n    var atMessage websocket.ATMessageEventHandler = func(event *dto.WSPayload, data *dto.WSATMessageData) error {\n        fmt.Println(event, data)\n        return nil\n    }\n    intent := websocket.RegisterHandlers(atMessage)\n    // 启动 session manager 进行 ws 连接的管理，如果接口返回需要启动多个 shard 的连接，这里也会自动启动多个\n    botgo.NewSessionManager().Start(ws, token, &intent)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 什么是 SessionManager\n\nSessionManager，用于管理 websocket 连接的启动，重连等。接口定义在：session_manager.go。开发者也可以自己实现自己的 SessionManager。\n\nsdk 中实现了两个 SessionManager\n\nlocal 用于在单机上启动多个 shard 的连接。下文用 local 代表 remote 基于 redis 的 list 数据结构，实现分布式的 shard 管理，可以在多个节点上启动多个服务进程。下文用 remote 代表 另外，也有其他同事基于 etcd 实现了 shard 集群的管理，在 botgo-plugns 中。\n\n\n# 生产环境中的一些建议\n\n得益于 websocket 的机制，我们可以在本地就启动一个机器人，实现相关逻辑，但是在生产环境中需要考虑扩容，容灾等情况，所以建 议从以下几方面考虑生产环境的部署：\n\n 1. 公域机器人，优先使用分布式 shard 管理\n\n使用上面提到的分布式的 session manager 或者自己实现一个分布式的 session manager\n\n 2. 提前规划好分片\n\n分布式 SessionManager 需要解决的最大的问题，就是如何解决 shard 随时增加的问题，类似 kafka 的 rebalance 问题一样， 由于 shard 是基于频道 id 来进行 hash 的，所以在扩容的时候所有的数据都会被重新 hash。\n\n提前规划好较多的分片，如 20 个分片，有助于在未来机器人接入的频道过多的时候，能够更加平滑的进行实例的扩容。比如如果使用的 是 remote，初始化时候分 20 个分片，但是只启动 2 个进程，那么这2个进程将争抢 20 个分片的消费权，进行消费，当启动更多 的实例之后，伴随着 websocket 要求一定时间进行一次重连，启动的新实例将会平滑的分担分片的数据处理。\n\n 3. 接入和逻辑分离\n\n接入是指从机器人平台收到事件的服务。逻辑是指处理相关事件的服务。\n\n接入与逻辑分离，有助于提升机器人的事件处理效率和可靠性。一般实现方式类似于以下方案：\n\n接入层：负责维护与平台的 websocket 连接，并接收相关事件，生产到 kafka 等消息中间件中。 如果使用 local 那么可能还涉及到分布式锁的问题。可以使用sdk 中的 sessions/remote/lock 快速基于 redis 实现分布式锁。\n\n逻辑层：从 kafka 消费到事件，并进行对应的处理，或者调用机器人的 openapi 进行相关数据的操作。\n\n提前规划好 kafka 的分片，然后从容的针对逻辑层做水平扩容。或者使用 pulsar（腾讯云上叫 tdmq） 来替代 kafka 避免 rebalance 问题。',normalizedContent:'# go sdk 接入指南\n\n\n# 介绍\n\ngosdk主要基于基础 api封装，提供给用户一种简单、高效的使用方式。\n\n\n# 安装go\n\n在命令行输入如下命令来下载 go 语言压缩包\n\nwget https://dl.google.com/go/go1.17.7.linux-amd64.tar.gz\n\n\n1\n\n\n解压缩到指定目录，这样 go 语言就安装好了\n\nsudo tar -xzf go1.17.7.linux-amd64.tar.gz -c /usr/local\n\n\n1\n\n\n打开/etc/profile文件，在最后面加入go的路径:\n\nexport goroot=/usr/local/go\nexport path=$path:$goroot/bin\n\n\n1\n2\n\n\n使profile文件生效\n\nsource /etc/profile\n\n\n1\n\n\n在命令行输入 go version 指令检验是否安装完成，如果安装成功，会打印出 go 的版本号\n\n\n# 安装go sdk\n\n在命令行输入如下命令来安装 go sdk\n\ngo get github.com/tencent-connect/botgo\n\n\n1\n\n\n\n# 示例机器人\n\nexamples目录下存放示例机器人，可供实现参考。\n\n\n# 使用示例\n\n请求 openapi 接口，操作资源\n\nfunc main() {\n    token := token.bottoken(conf.appid, conf.token)\n    api := botgo.newopenapi(token).withtimeout(3 * time.second)\n    ctx := context.background()\n\n    ws, err := api.ws(ctx, nil, "")\n    log.printf("%+v, err:%v", ws, err)\n    \n    me, err := api.me(ctx, nil, "")\n    log.printf("%+v, err:%v", me, err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n使用默认 sessionmanager 启动 websocket 连接，接收事件\n\nfunc main() {\n    token := token.bottoken(conf.appid, conf.token)\n    api := botgo.newopenapi(token).withtimeout(3 * time.second)\n    ctx := context.background()\n    ws, err := api.ws(ctx, nil, "")\n    if err != nil {\n        log.printf("%+v, err:%v", ws, err)\n    }\n\n    // 监听哪类事件就需要实现哪类的 handler，定义：websocket/event_handler.go\n    var atmessage websocket.atmessageeventhandler = func(event *dto.wspayload, data *dto.wsatmessagedata) error {\n        fmt.println(event, data)\n        return nil\n    }\n    intent := websocket.registerhandlers(atmessage)\n    // 启动 session manager 进行 ws 连接的管理，如果接口返回需要启动多个 shard 的连接，这里也会自动启动多个\n    botgo.newsessionmanager().start(ws, token, &intent)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 什么是 sessionmanager\n\nsessionmanager，用于管理 websocket 连接的启动，重连等。接口定义在：session_manager.go。开发者也可以自己实现自己的 sessionmanager。\n\nsdk 中实现了两个 sessionmanager\n\nlocal 用于在单机上启动多个 shard 的连接。下文用 local 代表 remote 基于 redis 的 list 数据结构，实现分布式的 shard 管理，可以在多个节点上启动多个服务进程。下文用 remote 代表 另外，也有其他同事基于 etcd 实现了 shard 集群的管理，在 botgo-plugns 中。\n\n\n# 生产环境中的一些建议\n\n得益于 websocket 的机制，我们可以在本地就启动一个机器人，实现相关逻辑，但是在生产环境中需要考虑扩容，容灾等情况，所以建 议从以下几方面考虑生产环境的部署：\n\n 1. 公域机器人，优先使用分布式 shard 管理\n\n使用上面提到的分布式的 session manager 或者自己实现一个分布式的 session manager\n\n 2. 提前规划好分片\n\n分布式 sessionmanager 需要解决的最大的问题，就是如何解决 shard 随时增加的问题，类似 kafka 的 rebalance 问题一样， 由于 shard 是基于频道 id 来进行 hash 的，所以在扩容的时候所有的数据都会被重新 hash。\n\n提前规划好较多的分片，如 20 个分片，有助于在未来机器人接入的频道过多的时候，能够更加平滑的进行实例的扩容。比如如果使用的 是 remote，初始化时候分 20 个分片，但是只启动 2 个进程，那么这2个进程将争抢 20 个分片的消费权，进行消费，当启动更多 的实例之后，伴随着 websocket 要求一定时间进行一次重连，启动的新实例将会平滑的分担分片的数据处理。\n\n 3. 接入和逻辑分离\n\n接入是指从机器人平台收到事件的服务。逻辑是指处理相关事件的服务。\n\n接入与逻辑分离，有助于提升机器人的事件处理效率和可靠性。一般实现方式类似于以下方案：\n\n接入层：负责维护与平台的 websocket 连接，并接收相关事件，生产到 kafka 等消息中间件中。 如果使用 local 那么可能还涉及到分布式锁的问题。可以使用sdk 中的 sessions/remote/lock 快速基于 redis 实现分布式锁。\n\n逻辑层：从 kafka 消费到事件，并进行对应的处理，或者调用机器人的 openapi 进行相关数据的操作。\n\n提前规划好 kafka 的分片，然后从容的针对逻辑层做水平扩容。或者使用 pulsar（腾讯云上叫 tdmq） 来替代 kafka 避免 rebalance 问题。',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道全局公告",frontmatter:{},regularPath:"/develop/gosdk/api/announce/create_guild_announce.html",relativePath:"develop/gosdk/api/announce/create_guild_announce.md",key:"v-0bff128d",path:"/develop/gosdk/api/announce/create_guild_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:38},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:422},{level:3,title:"GuildAnnouncesToCreate",slug:"guildannouncestocreate",normalizedTitle:"guildannouncestocreate",charIndex:237},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:723},{level:3,title:"Announces",slug:"announces",normalizedTitle:"announces",charIndex:208},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:871}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 GuildAnnouncesToCreate 返回说明 Announces 返回示例",content:'# 创建频道全局公告\n\n将某个子频道的某条消息创建为频道全局公告。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nannounces, err := api.CreateGuildAnnounces(ctx, guildId, &dto.GuildAnnouncesToCreate{\n    MessageID: msgId,\n    ChannelID: channelId,\n})\nif err != nil {\n    log.Fatalln("调用 CreateGuildAnnounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                      必填   类型                       描述\nguildId                  是    string                   频道 ID\nGuildAnnouncesToCreate   是    GuildAnnouncesToCreate   创建频道公告请求参数\n\n\n# GuildAnnouncesToCreate\n\n字段名         类型       描述\nChannelID   string   子频道ID\nMessageID   string   消息 ID\n\n\n# 返回说明\n\n返回 Announces 对象。\n\n\n# Announces\n\n字段名         类型       描述\nGuildID     string   频道 ID\nChannelID   string   子频道 ID\nMessageID   string   消息 ID\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建频道全局公告\n\n将某个子频道的某条消息创建为频道全局公告。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nannounces, err := api.createguildannounces(ctx, guildid, &dto.guildannouncestocreate{\n    messageid: msgid,\n    channelid: channelid,\n})\nif err != nil {\n    log.fatalln("调用 createguildannounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                      必填   类型                       描述\nguildid                  是    string                   频道 id\nguildannouncestocreate   是    guildannouncestocreate   创建频道公告请求参数\n\n\n# guildannouncestocreate\n\n字段名         类型       描述\nchannelid   string   子频道id\nmessageid   string   消息 id\n\n\n# 返回说明\n\n返回 announces 对象。\n\n\n# announces\n\n字段名         类型       描述\nguildid     string   频道 id\nchannelid   string   子频道 id\nmessageid   string   消息 id\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道公告",frontmatter:{},regularPath:"/develop/gosdk/api/announce/delete_channel_announce.html",relativePath:"develop/gosdk/api/announce/delete_channel_announce.md",key:"v-9b0d7c6a",path:"/develop/gosdk/api/announce/delete_channel_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:322}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明",content:'# 删除子频道公告\n\n删除子频道公告。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeleteChannelAnnounces(ctx, channelId, msgId)\nif err != nil {\n    log.Fatalln("调用 DeleteChannelAnnounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmsgId       是    string   消息 ID',normalizedContent:'# 删除子频道公告\n\n删除子频道公告。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deletechannelannounces(ctx, channelid, msgid)\nif err != nil {\n    log.fatalln("调用 deletechannelannounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmsgid       是    string   消息 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道公告推荐子频道",frontmatter:{},regularPath:"/develop/gosdk/api/announce/post_recommended_channels.html",relativePath:"develop/gosdk/api/announce/post_recommended_channels.md",key:"v-03005017",path:"/develop/gosdk/api/announce/post_recommended_channels.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:187},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:647},{level:3,title:"GuildAnnouncesToCreate",slug:"guildannouncestocreate",normalizedTitle:"guildannouncestocreate",charIndex:386},{level:3,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:412},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1071},{level:3,title:"Announces",slug:"announces",normalizedTitle:"announces",charIndex:357},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1422}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 GuildAnnouncesToCreate RecommendChannel 返回说明 Announces 返回示例",content:'# 创建频道公告推荐子频道\n\n用于将指定子频道设置为当前频道的推荐子频道，并以全局公告形式展示。\n\n注意\n\n * 同频道内推荐子频道最多只能创建 3 条。\n * 推荐子频道和全局公告不能同时存在，会互相顶替设置。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 messageId 设置为 all。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nannounces, err := api.CreateGuildAnnounces(ctx, guildId, &dto.GuildAnnouncesToCreate{\n  RecommendChannels: []dto.RecommendChannel{\n    {\n      ChannelID: channelId,\n      Introduce: "推荐",\n    },\n  },\n})\nif err != nil {\n  log.Fatalln("调用 CreateGuildAnnounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名                      必填   类型                       描述\nguildId                  是    string                   频道 ID\nGuildAnnouncesToCreate   是    GuildAnnouncesToCreate   推荐子频道列表\n\n\n# GuildAnnouncesToCreate\n\n字段名                 必填   类型                    描述\nRecommendChannels   是    [] RecommendChannel   推荐子频道列表\n\n\n# RecommendChannel\n\n字段名         类型       描述\nChannelID   string   子频道 ID\nIntroduce   string   推荐语\n\n\n# 返回说明\n\n返回 Announces 对象。\n\n\n# Announces\n\n字段名                 类型                    描述\nGuildID             string                频道 ID\nChannelID           string                子频道 ID\nMessageID           string                消息 ID\nAnnouncesType       uint32                公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nRecommendChannels   [] RecommendChannel   推荐子频道列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxx",\n  "message_id": "",\n  "announces_type": 0,\n  "recommend_channels": [\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    },\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# 创建频道公告推荐子频道\n\n用于将指定子频道设置为当前频道的推荐子频道，并以全局公告形式展示。\n\n注意\n\n * 同频道内推荐子频道最多只能创建 3 条。\n * 推荐子频道和全局公告不能同时存在，会互相顶替设置。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 messageid 设置为 all。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nannounces, err := api.createguildannounces(ctx, guildid, &dto.guildannouncestocreate{\n  recommendchannels: []dto.recommendchannel{\n    {\n      channelid: channelid,\n      introduce: "推荐",\n    },\n  },\n})\nif err != nil {\n  log.fatalln("调用 createguildannounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名                      必填   类型                       描述\nguildid                  是    string                   频道 id\nguildannouncestocreate   是    guildannouncestocreate   推荐子频道列表\n\n\n# guildannouncestocreate\n\n字段名                 必填   类型                    描述\nrecommendchannels   是    [] recommendchannel   推荐子频道列表\n\n\n# recommendchannel\n\n字段名         类型       描述\nchannelid   string   子频道 id\nintroduce   string   推荐语\n\n\n# 返回说明\n\n返回 announces 对象。\n\n\n# announces\n\n字段名                 类型                    描述\nguildid             string                频道 id\nchannelid           string                子频道 id\nmessageid           string                消息 id\nannouncestype       uint32                公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommendchannels   [] recommendchannel   推荐子频道列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxx",\n  "message_id": "",\n  "announces_type": 0,\n  "recommend_channels": [\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    },\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道全局公告",frontmatter:{},regularPath:"/develop/gosdk/api/announce/delete_guild_announce.html",relativePath:"develop/gosdk/api/announce/delete_guild_announce.md",key:"v-1015976b",path:"/develop/gosdk/api/announce/delete_guild_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:318}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明",content:'# 删除频道全局公告\n\n删除频道全局公告。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeleteGuildAnnounces(ctx, guildId, msgId)\nif err != nil {\n    log.Fatalln("调用 DeleteGuildAnnounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\nmsgId     是    string   消息 ID',normalizedContent:'# 删除频道全局公告\n\n删除频道全局公告。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deleteguildannounces(ctx, guildid, msgid)\nif err != nil {\n    log.fatalln("调用 deleteguildannounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\nmsgid     是    string   消息 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道公告",frontmatter:{},regularPath:"/develop/gosdk/api/announce/create_channel_announce.html",relativePath:"develop/gosdk/api/announce/create_channel_announce.md",key:"v-d37f87a6",path:"/develop/gosdk/api/announce/create_channel_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:31},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:394},{level:3,title:"CreateChannelAnnounces",slug:"createchannelannounces",normalizedTitle:"createchannelannounces",charIndex:190},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:662},{level:3,title:"Announces",slug:"announces",normalizedTitle:"announces",charIndex:203},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:810}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 CreateChannelAnnounces 返回说明 Announces 返回示例",content:'# 创建子频道公告\n\n将某条消息创建为子频道的公告。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nannounces, err := api.CreateChannelAnnounces(ctx, channelId, &dto.ChannelAnnouncesToCreate{\n    MessageID: msgId,\n})\nif err != nil {\n    log.Fatalln("调用 CreateChannelAnnounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名                      必填   类型                       描述\nchannelId                是    string                   子频道 ID\nCreateChannelAnnounces   是    CreateChannelAnnounces   创建子频道公告请求参数\n\n\n# CreateChannelAnnounces\n\n字段名     类型       描述\nmsgId   string   消息 ID\n\n\n# 返回说明\n\n返回 Announces 对象。\n\n\n# Announces\n\n字段名         类型       描述\nGuildID     string   频道 ID\nChannelID   string   子频道 ID\nMessageID   string   消息 ID\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建子频道公告\n\n将某条消息创建为子频道的公告。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nannounces, err := api.createchannelannounces(ctx, channelid, &dto.channelannouncestocreate{\n    messageid: msgid,\n})\nif err != nil {\n    log.fatalln("调用 createchannelannounces 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名                      必填   类型                       描述\nchannelid                是    string                   子频道 id\ncreatechannelannounces   是    createchannelannounces   创建子频道公告请求参数\n\n\n# createchannelannounces\n\n字段名     类型       描述\nmsgid   string   消息 id\n\n\n# 返回说明\n\n返回 announces 对象。\n\n\n# announces\n\n字段名         类型       描述\nguildid     string   频道 id\nchannelid   string   子频道 id\nmessageid   string   消息 id\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道 API 权限授权链接",frontmatter:{},regularPath:"/develop/gosdk/api/api_permissions/post_permission.html",relativePath:"develop/gosdk/api/api_permissions/post_permission.md",key:"v-2232b1cd",path:"/develop/gosdk/api/api_permissions/post_permission.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:187},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:717},{level:3,title:"APIPermissionDemandToCreate",slug:"apipermissiondemandtocreate",normalizedTitle:"apipermissiondemandtocreate",charIndex:394},{level:3,title:"APIPermissionDemandIdentify",slug:"apipermissiondemandidentify",normalizedTitle:"apipermissiondemandidentify",charIndex:467},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1315},{level:3,title:"APIPermissionDemand",slug:"apipermissiondemand",normalizedTitle:"apipermissiondemand",charIndex:394},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1724}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 APIPermissionDemandToCreate APIPermissionDemandIdentify 返回说明 APIPermissionDemand 返回示例",content:'# 创建频道 API 权限授权链接\n\n用于创建 API 接口权限授权链接，该链接指向 guildID 对应的频道 。调用成功后，参数指定的子频道会受到一条”申请授权【xxx】权限“消息，管理员点击可进行机器人 API 权限授予。\n\n注意\n\n * 需要建立 ws 连接。\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接，如需调整，请联系平台申请权限。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\npermissionDemand, err := api.RequireAPIPermissions(ctx, guildId, &dto.APIPermissionDemandToCreate{\n  ChannelID: channelId,\n  APIIdentify: &dto.APIPermissionDemandIdentify{\n    Path:   "/guilds/{guild_id}",\n    Method: "GET",\n  },\n  Desc: "机器人申请对应的 API 接口权限后可以使用功能的描述",\n})\nif err != nil {\n  log.Fatalln("调用 RequireAPIPermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名       必填   类型                            描述\nguildId   是    string                        频道 ID\ndemand    是    APIPermissionDemandToCreate   授权链接对象\n\n\n# APIPermissionDemandToCreate\n\n字段名           必填   类型                            描述\nChannelID     是    string                        授权链接发送的子频道 ID\nAPIIdentify   是    APIPermissionDemandIdentify   API 权限需求标识对象\nDesc          否    string                        机器人申请对应的 API 接口权限后可以使用功能的描述\n\n\n# APIPermissionDemandIdentify\n\n字段名      类型       描述\nPath     string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nMethod   string   请求方法，例如 GET\n\n\n# 返回说明\n\n返回 APIPermissionDemand对象。\n\n\n# APIPermissionDemand\n\n字段名           类型                            描述\nGuildID       string                        申请接口权限的频道 ID\nChannelID     string                        接口权限需求授权链接发送的子频道 ID\nAPIIdentify   APIPermissionDemandIdentify   权限接口唯一标识\nTitle         string                        接口权限链接中的接口权限描述信息\nDesc          string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "123456",\n  "channel_id": "112233",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "GET"\n  },\n  "title": "申请授权【获取频道】权限",\n  "desc": "允许授权后才能正常使用机器人「频道权限」功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时打开”ChannelID“对应的频道，可看到一条机器人发出的 API 授权申请消息。',normalizedContent:'# 创建频道 api 权限授权链接\n\n用于创建 api 接口权限授权链接，该链接指向 guildid 对应的频道 。调用成功后，参数指定的子频道会受到一条”申请授权【xxx】权限“消息，管理员点击可进行机器人 api 权限授予。\n\n注意\n\n * 需要建立 ws 连接。\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接，如需调整，请联系平台申请权限。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\npermissiondemand, err := api.requireapipermissions(ctx, guildid, &dto.apipermissiondemandtocreate{\n  channelid: channelid,\n  apiidentify: &dto.apipermissiondemandidentify{\n    path:   "/guilds/{guild_id}",\n    method: "get",\n  },\n  desc: "机器人申请对应的 api 接口权限后可以使用功能的描述",\n})\nif err != nil {\n  log.fatalln("调用 requireapipermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名       必填   类型                            描述\nguildid   是    string                        频道 id\ndemand    是    apipermissiondemandtocreate   授权链接对象\n\n\n# apipermissiondemandtocreate\n\n字段名           必填   类型                            描述\nchannelid     是    string                        授权链接发送的子频道 id\napiidentify   是    apipermissiondemandidentify   api 权限需求标识对象\ndesc          否    string                        机器人申请对应的 api 接口权限后可以使用功能的描述\n\n\n# apipermissiondemandidentify\n\n字段名      类型       描述\npath     string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 get\n\n\n# 返回说明\n\n返回 apipermissiondemand对象。\n\n\n# apipermissiondemand\n\n字段名           类型                            描述\nguildid       string                        申请接口权限的频道 id\nchannelid     string                        接口权限需求授权链接发送的子频道 id\napiidentify   apipermissiondemandidentify   权限接口唯一标识\ntitle         string                        接口权限链接中的接口权限描述信息\ndesc          string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "123456",\n  "channel_id": "112233",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "get"\n  },\n  "title": "申请授权【获取频道】权限",\n  "desc": "允许授权后才能正常使用机器人「频道权限」功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时打开”channelid“对应的频道，可看到一条机器人发出的 api 授权申请消息。',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道",frontmatter:{},regularPath:"/develop/gosdk/api/channel/create_channel.html",relativePath:"develop/gosdk/api/channel/create_channel.md",key:"v-4d1916d9",path:"/develop/gosdk/api/channel/create_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:572},{level:3,title:"ChannelValueObject",slug:"channelvalueobject",normalizedTitle:"channelvalueobject",charIndex:219},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:273},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:305},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1233},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:192},{level:3,title:"SpeakPermissionType",slug:"speakpermissiontype",normalizedTitle:"speakpermissiontype",charIndex:1694},{level:3,title:"ChannelPrivateType",slug:"channelprivatetype",normalizedTitle:"channelprivatetype",charIndex:1640},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1927}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 ChannelValueObject ChannelType ChannelSubType 返回说明 Channel SpeakPermissionType ChannelPrivateType 返回示例",content:'# 创建子频道\n\n创建一个子频道。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nchannel, channelError := api.PostChannel(ctx, guildId, &dto.ChannelValueObject{\n  Name:    "子频道名",\n  Type:    dto.ChannelTypeText,\n  SubType: dto.ChannelSubTypeChat,\n})\nif channelError != nil {\n  log.Fatalln("调用 PostChannel 接口失败, err = ", channelError)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 目前不支持创建的子频道类型\n   * 子频道分组\n   * 私密子频道\n\n\n# 参数说明\n\n字段名       必填   类型                   描述\nguildId   是    string               频道 ID\nchannel   是    ChannelValueObject   子频道对象\n\n\n# ChannelValueObject\n\n字段名        类型       必填   描述\nName       string   是    子频道名\nType       int      是    子频道类型 ChannelType\nSubType    int      是    子频道子类型 ChannelSubType\nPosition   int64    否    排序，必填，而且不能够和其他子频道的值重复\nParentID   string   否    分组 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回说明\n\n返回 Channel 对象。\n\n\n# Channel\n\n字段名               类型       描述\nID                string   子频道id\nGuildID           string   频道id\nName              string   子频道名\nType              int      子频道类型 ChannelType\nSubType           int      子频道子类型 ChannelSubType\nPosition          int64    排序，必填，而且不能够和其他子频道的值重复\nParentID          string   分组 id\nOwnerID           string   创建人 id\nPrivateType       int      子频道的可见类型 ChannelPrivateType\nSpeakPermission   int      子频道发言权限 SpeakPermissionType\nApplicationID     string   应用子频道的应用ID，仅应用子频道有效\nPermissions       string   用户拥有的子频道权限\n\n\n# SpeakPermissionType\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# ChannelPrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "channel_id",\n  "guild_id": "guild_id",\n  "name": "channel_test",\n  "type": 1,\n  "position": 1640240055,\n  "owner_id": "2854198244",\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 创建子频道\n\n创建一个子频道。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nchannel, channelerror := api.postchannel(ctx, guildid, &dto.channelvalueobject{\n  name:    "子频道名",\n  type:    dto.channeltypetext,\n  subtype: dto.channelsubtypechat,\n})\nif channelerror != nil {\n  log.fatalln("调用 postchannel 接口失败, err = ", channelerror)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 目前不支持创建的子频道类型\n   * 子频道分组\n   * 私密子频道\n\n\n# 参数说明\n\n字段名       必填   类型                   描述\nguildid   是    string               频道 id\nchannel   是    channelvalueobject   子频道对象\n\n\n# channelvalueobject\n\n字段名        类型       必填   描述\nname       string   是    子频道名\ntype       int      是    子频道类型 channeltype\nsubtype    int      是    子频道子类型 channelsubtype\nposition   int64    否    排序，必填，而且不能够和其他子频道的值重复\nparentid   string   否    分组 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回说明\n\n返回 channel 对象。\n\n\n# channel\n\n字段名               类型       描述\nid                string   子频道id\nguildid           string   频道id\nname              string   子频道名\ntype              int      子频道类型 channeltype\nsubtype           int      子频道子类型 channelsubtype\nposition          int64    排序，必填，而且不能够和其他子频道的值重复\nparentid          string   分组 id\nownerid           string   创建人 id\nprivatetype       int      子频道的可见类型 channelprivatetype\nspeakpermission   int      子频道发言权限 speakpermissiontype\napplicationid     string   应用子频道的应用id，仅应用子频道有效\npermissions       string   用户拥有的子频道权限\n\n\n# speakpermissiontype\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# channelprivatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "channel_id",\n  "guild_id": "guild_id",\n  "name": "channel_test",\n  "type": 1,\n  "position": 1640240055,\n  "owner_id": "2854198244",\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道可用权限列表",frontmatter:{},regularPath:"/develop/gosdk/api/api_permissions/get_permissions.html",relativePath:"develop/gosdk/api/api_permissions/get_permissions.md",key:"v-54832fad",path:"/develop/gosdk/api/api_permissions/get_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:42},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:359},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:426},{level:3,title:"APIPermissions",slug:"apipermissions",normalizedTitle:"apipermissions",charIndex:206},{level:3,title:"APIPermission",slug:"apipermission",normalizedTitle:"apipermission",charIndex:206},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:782}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 APIPermissions APIPermission 返回示例",content:'# 获取频道可用权限列表\n\n用于获取机器人在指定频道内可以使用的权限列表。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\npermissions, err := api.GetAPIPermissions(ctx, guildId)\nif err != nil {\n  log.Fatalln("调用 GetAPIPermissions 接口失败, err = ", err)\n}\nfmt.Println(permissions)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\n\n\n# 返回说明\n\n返回见APIPermissions\n\n\n# APIPermissions\n\n字段名       类型                  描述\nAPIList   []* APIPermission   机器人可用权限列表\n\n\n# APIPermission\n\n字段名          类型       描述\nPath         string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nMethod       string   请求方法，例如 GET\nDesc         string   API 接口名称，例如 获取频道信\nAuthStatus   int      授权状态，AuthStatus 为 1 时已授权\n\n\n# 返回示例\n\ndata：\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "GET",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "POST",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# 获取频道可用权限列表\n\n用于获取机器人在指定频道内可以使用的权限列表。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\npermissions, err := api.getapipermissions(ctx, guildid)\nif err != nil {\n  log.fatalln("调用 getapipermissions 接口失败, err = ", err)\n}\nfmt.println(permissions)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n返回见apipermissions\n\n\n# apipermissions\n\n字段名       类型                  描述\napilist   []* apipermission   机器人可用权限列表\n\n\n# apipermission\n\n字段名          类型       描述\npath         string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod       string   请求方法，例如 get\ndesc         string   api 接口名称，例如 获取频道信\nauthstatus   int      授权状态，authstatus 为 1 时已授权\n\n\n# 返回示例\n\ndata：\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "get",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "post",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道",frontmatter:{},regularPath:"/develop/gosdk/api/channel/delete_channel.html",relativePath:"develop/gosdk/api/channel/delete_channel.md",key:"v-77f1f0bb",path:"/develop/gosdk/api/channel/delete_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:408}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明",content:'# 删除子频道\n\n移除一个子频道。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeleteChannel(ctx, channelId)\nif err != nil {\n    log.Fatalln("调用 DeleteChannel 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 子频道的删除是无法撤回的，一旦删除，将无法恢复。\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID',normalizedContent:'# 删除子频道\n\n移除一个子频道。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deletechannel(ctx, channelid)\nif err != nil {\n    log.fatalln("调用 deletechannel 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 子频道的删除是无法撤回的，一旦删除，将无法恢复。\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道信息",frontmatter:{},regularPath:"/develop/gosdk/api/channel/get_channel.html",relativePath:"develop/gosdk/api/channel/get_channel.md",key:"v-d0f51066",path:"/develop/gosdk/api/channel/get_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:32},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:329},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:391},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:198},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:656},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:702},{level:3,title:"SpeakPermissionType",slug:"speakpermissiontype",normalizedTitle:"speakpermissiontype",charIndex:923},{level:3,title:"ChannelPrivateType",slug:"channelprivatetype",normalizedTitle:"channelprivatetype",charIndex:869},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1432}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Channel ChannelType ChannelSubType SpeakPermissionType ChannelPrivateType 返回示例",content:'# 获取子频道信息\n\n获取子频道 channel 详情\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nchannel, channelError := api.Channel(ctx, channelID)\nif channelError != nil {\n    log.Fatalln("调用 Channel 接口失败, err = ", channelError)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         类型       描述\nchannelID   string   子频道 ID\n\n\n# 返回说明\n\n字段参见 Channel\n\n\n# 子频道对象(Channel)\n\n子频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID\n\n\n# Channel\n\n字段名               类型       描述\nID                string   子频道id\nGuildID           string   频道id\nName              string   子频道名\nType              int      子频道类型 ChannelType\nSubType           int      子频道子类型 ChannelSubType\nPosition          int64    排序，必填，而且不能够和其他子频道的值重复\nParentID          string   分组 id\nOwnerID           string   创建人 id\nPrivateType       int      子频道的可见类型 ChannelPrivateType\nSpeakPermission   int      子频道发言权限 SpeakPermissionType\nApplicationID     string   应用子频道的应用ID，仅应用子频道有效\nPermissions       string   用户拥有的子频道权限\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知类型的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# SpeakPermissionType\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# ChannelPrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"channel_id",\n    "guild_id":"guild_id",\n    "name":"子频道名",\n    "type":0,\n    "last_message_id":"21",\n    "nsfw":false,\n    "position":2,\n    "parent_id":"分组 id  ",\n    "rate_limit_per_user":0,\n    "owner_id":"0",\n    "sub_type":0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'# 获取子频道信息\n\n获取子频道 channel 详情\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nchannel, channelerror := api.channel(ctx, channelid)\nif channelerror != nil {\n    log.fatalln("调用 channel 接口失败, err = ", channelerror)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         类型       描述\nchannelid   string   子频道 id\n\n\n# 返回说明\n\n字段参见 channel\n\n\n# 子频道对象(channel)\n\n子频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关。请不要理解为真实的 id\n\n\n# channel\n\n字段名               类型       描述\nid                string   子频道id\nguildid           string   频道id\nname              string   子频道名\ntype              int      子频道类型 channeltype\nsubtype           int      子频道子类型 channelsubtype\nposition          int64    排序，必填，而且不能够和其他子频道的值重复\nparentid          string   分组 id\nownerid           string   创建人 id\nprivatetype       int      子频道的可见类型 channelprivatetype\nspeakpermission   int      子频道发言权限 speakpermissiontype\napplicationid     string   应用子频道的应用id，仅应用子频道有效\npermissions       string   用户拥有的子频道权限\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知类型的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# speakpermissiontype\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# channelprivatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"channel_id",\n    "guild_id":"guild_id",\n    "name":"子频道名",\n    "type":0,\n    "last_message_id":"21",\n    "nsfw":false,\n    "position":2,\n    "parent_id":"分组 id  ",\n    "rate_limit_per_user":0,\n    "owner_id":"0",\n    "sub_type":0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"音频控制",frontmatter:{},regularPath:"/develop/gosdk/api/audio/post_audio.html",relativePath:"develop/gosdk/api/audio/post_audio.md",key:"v-5b201c51",path:"/develop/gosdk/api/audio/post_audio.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:11},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:309},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:430},{level:2,title:"AudioControl",slug:"audiocontrol",normalizedTitle:"audiocontrol",charIndex:204},{level:3,title:"AudioStatus",slug:"audiostatus",normalizedTitle:"audiostatus",charIndex:629}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 AudioControl AudioStatus",content:'# 音频控制\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\naudioControl, err := api.PostAudio(ctx, channelId, &dto.AudioControl{})\nif err != nil {\n  log.Fatalln("调用 PostAudio 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名            类型             描述\nchannelId      string         子频道 id\nAudioControl   AudioControl   audio 控制参数\n\n\n# 返回说明\n\n字段参见 AudioControl\n\n\n# 语音对象\n\n\n# AudioControl\n\n字段名      类型       描述\nURL      string   音频数据的 url status 为 0 时传\nText     string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nStatus   STATUS   播放状态，参考 AudioStatus\n\n\n# AudioStatus\n\n字段名      值   描述\nSTART    0   开始播放操作\nPAUSE    1   暂停播放操作\nRESUME   2   继续播放操作\nSTOP     3   停止播放操作',normalizedContent:'# 音频控制\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\naudiocontrol, err := api.postaudio(ctx, channelid, &dto.audiocontrol{})\nif err != nil {\n  log.fatalln("调用 postaudio 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名            类型             描述\nchannelid      string         子频道 id\naudiocontrol   audiocontrol   audio 控制参数\n\n\n# 返回说明\n\n字段参见 audiocontrol\n\n\n# 语音对象\n\n\n# audiocontrol\n\n字段名      类型       描述\nurl      string   音频数据的 url status 为 0 时传\ntext     string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus   status   播放状态，参考 audiostatus\n\n\n# audiostatus\n\n字段名      值   描述\nstart    0   开始播放操作\npause    1   暂停播放操作\nresume   2   继续播放操作\nstop     3   停止播放操作',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道列表",frontmatter:{},regularPath:"/develop/gosdk/api/channel/get_channels.html",relativePath:"develop/gosdk/api/channel/get_channels.md",key:"v-34b08827",path:"/develop/gosdk/api/channel/get_channels.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:36},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:332},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:399},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:204},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:593},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:639},{level:3,title:"SpeakPermissionType",slug:"speakpermissiontype",normalizedTitle:"speakpermissiontype",charIndex:860},{level:3,title:"ChannelPrivateType",slug:"channelprivatetype",normalizedTitle:"channelprivatetype",charIndex:806},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1371}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Channel ChannelType ChannelSubType SpeakPermissionType ChannelPrivateType 返回示例",content:'# 获取子频道列表\n\nget_channels 获取子频道列表\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nchannels, channelsError := api.Channels(ctx, guildId)\nif channelsError != nil {\n    log.Fatalln("调用 Channels, err = ", channelsError)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\n\n\n# 返回说明\n\n返回 Channel 数组。\n\n\n# Channel\n\n字段名               类型       描述\nID                string   子频道id\nGuildID           string   频道id\nName              string   子频道名\nType              int      子频道类型 ChannelType\nSubType           int      子频道子类型 ChannelSubType\nPosition          int64    排序，必填，而且不能够和其他子频道的值重复\nParentID          string   分组 id\nOwnerID           string   创建人 id\nPrivateType       int      子频道的可见类型 ChannelPrivateType\nSpeakPermission   int      子频道发言权限 SpeakPermissionType\nApplicationID     string   应用子频道的应用ID，仅应用子频道有效\nPermissions       string   用户拥有的子频道权限\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# SpeakPermissionType\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# ChannelPrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n[\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":2,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    },\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":3,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 获取子频道列表\n\nget_channels 获取子频道列表\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nchannels, channelserror := api.channels(ctx, guildid)\nif channelserror != nil {\n    log.fatalln("调用 channels, err = ", channelserror)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n返回 channel 数组。\n\n\n# channel\n\n字段名               类型       描述\nid                string   子频道id\nguildid           string   频道id\nname              string   子频道名\ntype              int      子频道类型 channeltype\nsubtype           int      子频道子类型 channelsubtype\nposition          int64    排序，必填，而且不能够和其他子频道的值重复\nparentid          string   分组 id\nownerid           string   创建人 id\nprivatetype       int      子频道的可见类型 channelprivatetype\nspeakpermission   int      子频道发言权限 speakpermissiontype\napplicationid     string   应用子频道的应用id，仅应用子频道有效\npermissions       string   用户拥有的子频道权限\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# speakpermissiontype\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# channelprivatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n[\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":2,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    },\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":3,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道",frontmatter:{},regularPath:"/develop/gosdk/api/channel/update_channel.html",relativePath:"develop/gosdk/api/channel/update_channel.md",key:"v-266b20ff",path:"/develop/gosdk/api/channel/update_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:495},{level:3,title:"ChannelValueObject",slug:"channelvalueobject",normalizedTitle:"channelvalueobject",charIndex:216},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:271},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1135},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:187},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:303},{level:3,title:"SpeakPermissionType",slug:"speakpermissiontype",normalizedTitle:"speakpermissiontype",charIndex:1595},{level:3,title:"ChannelPrivateType",slug:"channelprivatetype",normalizedTitle:"channelprivatetype",charIndex:1541},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1883}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 ChannelValueObject ChannelType 返回说明 Channel ChannelSubType SpeakPermissionType ChannelPrivateType 返回示例",content:'# 修改子频道\n\n修改某个子频道的信息。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nchannel, err := api.PatchChannel(ctx, channelId, &dto.ChannelValueObject{\n  Name:    "新子频道名",\n  Type:    dto.ChannelTypeText,\n  SubType: dto.ChannelSubTypeChat,\n})\nif err != nil {\n  log.Fatalln("调用 PatchChannel 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件\n\n\n# 参数说明\n\n字段名                  必填   类型                   描述\nchannelId            是    string               子频道 ID\nChannelValueObject   是    ChannelValueObject   子频道对象\n\n\n# ChannelValueObject\n\n字段名        类型       必填   描述\nName       string   是    子频道名\nType       int      是    子频道类型 ChannelType\nSubType    int      是    子频道子类型 ChannelSubType\nPosition   int64    否    排序，必填，而且不能够和其他子频道的值重复\nParentID   string   否    分组 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# 返回说明\n\n字段参见 Channel。\n\n\n# Channel\n\n字段名               类型       描述\nID                string   子频道id\nGuildID           string   频道id\nName              string   子频道名\nType              int      子频道类型 ChannelType\nSubType           int      子频道子类型 ChannelSubType\nPosition          int64    排序，必填，而且不能够和其他子频道的值重复\nParentID          string   分组 id\nOwnerID           string   创建人 id\nPrivateType       int      子频道的可见类型 ChannelPrivateType\nSpeakPermission   int      子频道发言权限 SpeakPermissionType\nApplicationID     string   应用子频道的应用ID，仅应用子频道有效\nPermissions       string   用户拥有的子频道权限\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# SpeakPermissionType\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# ChannelPrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "2186875",\n  "guild_id": "2020131797974366736",\n  "name": "update_channel",\n  "type": 0,\n  "position": 22,\n  "parent_id": "1128421",\n  "owner_id": null,\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# 修改子频道\n\n修改某个子频道的信息。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nchannel, err := api.patchchannel(ctx, channelid, &dto.channelvalueobject{\n  name:    "新子频道名",\n  type:    dto.channeltypetext,\n  subtype: dto.channelsubtypechat,\n})\nif err != nil {\n  log.fatalln("调用 patchchannel 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件\n\n\n# 参数说明\n\n字段名                  必填   类型                   描述\nchannelid            是    string               子频道 id\nchannelvalueobject   是    channelvalueobject   子频道对象\n\n\n# channelvalueobject\n\n字段名        类型       必填   描述\nname       string   是    子频道名\ntype       int      是    子频道类型 channeltype\nsubtype    int      是    子频道子类型 channelsubtype\nposition   int64    否    排序，必填，而且不能够和其他子频道的值重复\nparentid   string   否    分组 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# 返回说明\n\n字段参见 channel。\n\n\n# channel\n\n字段名               类型       描述\nid                string   子频道id\nguildid           string   频道id\nname              string   子频道名\ntype              int      子频道类型 channeltype\nsubtype           int      子频道子类型 channelsubtype\nposition          int64    排序，必填，而且不能够和其他子频道的值重复\nparentid          string   分组 id\nownerid           string   创建人 id\nprivatetype       int      子频道的可见类型 channelprivatetype\nspeakpermission   int      子频道发言权限 speakpermissiontype\napplicationid     string   应用子频道的应用id，仅应用子频道有效\npermissions       string   用户拥有的子频道权限\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# speakpermissiontype\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# channelprivatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "2186875",\n  "guild_id": "2020131797974366736",\n  "name": "update_channel",\n  "type": 0,\n  "position": 22,\n  "parent_id": "1128421",\n  "owner_id": null,\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道权限",frontmatter:{},regularPath:"/develop/gosdk/api/channel_permissions/get_channel_permissions.html",relativePath:"develop/gosdk/api/channel_permissions/get_channel_permissions.md",key:"v-6133b68d",path:"/develop/gosdk/api/channel_permissions/get_channel_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:27},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:338},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:442},{level:3,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:195},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:171},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1009}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 ChannelPermissions Permissions 返回示例",content:'# 获取子频道权限\n\n获取指定子频道的权限。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nchannelPermissions, err := api.ChannelPermissions(ctx, channelId, userId)\nif err != nil {\n    log.Fatalln("调用 ChannelPermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nChannelID   是    string   子频道 ID\nUserID      是    string   用户 ID\n\n\n# 返回说明\n\n返回 ChannelPermissions 对象。\n\n\n# ChannelPermissions\n\n字段名           类型            描述\nChannelID     string        子频道 ID\nUserID        string        用户 ID\nPermissions   permissions   用户拥有的子频道权限，是个 string\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n\n\n# 返回示例\n\ndata：\n\n{\n    "channel_id": "1128412",\n    "user_id": "9962144428931019739",\n    "permissions": "6"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取子频道权限\n\n获取指定子频道的权限。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nchannelpermissions, err := api.channelpermissions(ctx, channelid, userid)\nif err != nil {\n    log.fatalln("调用 channelpermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nuserid      是    string   用户 id\n\n\n# 返回说明\n\n返回 channelpermissions 对象。\n\n\n# channelpermissions\n\n字段名           类型            描述\nchannelid     string        子频道 id\nuserid        string        用户 id\npermissions   permissions   用户拥有的子频道权限，是个 string\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6fff，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n\n\n# 返回示例\n\ndata：\n\n{\n    "channel_id": "1128412",\n    "user_id": "9962144428931019739",\n    "permissions": "6"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道身份组权限",frontmatter:{},regularPath:"/develop/gosdk/api/channel_permissions/get_channel_roles_permissions.html",relativePath:"develop/gosdk/api/channel_permissions/get_channel_roles_permissions.md",key:"v-03bffa66",path:"/develop/gosdk/api/channel_permissions/get_channel_roles_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:33},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:359},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:464},{level:3,title:"ChannelRolesPermissions",slug:"channelrolespermissions",normalizedTitle:"channelrolespermissions",charIndex:206},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:182},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1042}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 ChannelRolesPermissions Permissions 返回示例",content:'# 获取子频道身份组权限\n\n获取指定子频道身份组的权限。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nchannelRolesPermissions, err := api.ChannelRolesPermissions(ctx, channelId, roleId)\nif err != nil {\n    log.Fatalln("调用 ChannelRolesPermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nroleId      是    string   身份组 ID\n\n\n# 返回说明\n\n返回 ChannelRolesPermissions 对象。\n\n\n# ChannelRolesPermissions\n\n字段名           类型            描述\nChannelID     string        子频道 ID\nRoleID        string        身份组 ID\nPermissions   permissions   用户拥有的子频道权限，是个 string\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n\n\n# 返回示例\n\ndata：\n\n{\n  "channel_id": "CHANNEL_ID",\n  "role_id": "ROLE_ID",\n  "permissions": "1"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取子频道身份组权限\n\n获取指定子频道身份组的权限。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nchannelrolespermissions, err := api.channelrolespermissions(ctx, channelid, roleid)\nif err != nil {\n    log.fatalln("调用 channelrolespermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nroleid      是    string   身份组 id\n\n\n# 返回说明\n\n返回 channelrolespermissions 对象。\n\n\n# channelrolespermissions\n\n字段名           类型            描述\nchannelid     string        子频道 id\nroleid        string        身份组 id\npermissions   permissions   用户拥有的子频道权限，是个 string\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6fff，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n\n\n# 返回示例\n\ndata：\n\n{\n  "channel_id": "channel_id",\n  "role_id": "role_id",\n  "permissions": "1"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道权限",frontmatter:{},regularPath:"/develop/gosdk/api/channel_permissions/update_channel_permissions.html",relativePath:"develop/gosdk/api/channel_permissions/update_channel_permissions.md",key:"v-9c279b82",path:"/develop/gosdk/api/channel_permissions/update_channel_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:546},{level:3,title:"UpdateChannelPermissions",slug:"updatechannelpermissions",normalizedTitle:"updatechannelpermissions",charIndex:223},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:182}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 UpdateChannelPermissions Permissions",content:'# 修改子频道权限\n\n修改子频道权限。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.PutChannelPermissions(ctx, channelId, userId, &dto.UpdateChannelPermissions{\n  Add: "4",\n})\nif err != nil {\n  log.Fatalln("调用 PutChannelPermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 参数包括 add 和 remove 两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把 add 对应位置 1，删除用户权限即把 remove 对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                        必填   类型                         描述\nchannelId                  是    string                     子频道 ID\nuserId                     是    string                     用户 ID\nUpdateChannelPermissions   是    UpdateChannelPermissions   权限参数\n\n\n# UpdateChannelPermissions\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考Permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型',normalizedContent:'# 修改子频道权限\n\n修改子频道权限。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.putchannelpermissions(ctx, channelid, userid, &dto.updatechannelpermissions{\n  add: "4",\n})\nif err != nil {\n  log.fatalln("调用 putchannelpermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 参数包括 add 和 remove 两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把 add 对应位置 1，删除用户权限即把 remove 对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                        必填   类型                         描述\nchannelid                  是    string                     子频道 id\nuserid                     是    string                     用户 id\nupdatechannelpermissions   是    updatechannelpermissions   权限参数\n\n\n# updatechannelpermissions\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6fff，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道详情",frontmatter:{},regularPath:"/develop/gosdk/api/guild/get_guild.html",relativePath:"develop/gosdk/api/guild/get_guild.md",key:"v-218357cd",path:"/develop/gosdk/api/guild/get_guild.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:307},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:374},{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:186},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:750}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Guild 返回示例",content:'# 获取频道详情\n\n获取频道详情信息。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nguild, guildError := api.Guild(ctx, guildId)\nif guildError != nil {\n    log.Fatalln("调用 Guild 接口失败, err = ", guildError)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\n\n\n# 返回说明\n\n返回 Guild 对象。\n\n\n# Guild\n\n字段名           类型          描述\nID            string      频道 ID\nName          string      频道名称\nIcon          string      频道头像\nOwnerID       string      拥有者ID\nIsOwner       bool        当前人是否是创建人\nMemberCount   int         成员数\nMaxMembers    int64       最大成员数\nDesc          string      描述\nJoinedAt      Timestamp   当前用户加入群的时间，此字段只在GUILD_CREATE事件中使用\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"guildId",\n    "name":"频道名称",\n    "owner_id":"owner_id",\n    "owner":false,\n    "member_count":8,\n    "max_members":300,\n    "description":""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 获取频道详情\n\n获取频道详情信息。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nguild, guilderror := api.guild(ctx, guildid)\nif guilderror != nil {\n    log.fatalln("调用 guild 接口失败, err = ", guilderror)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n返回 guild 对象。\n\n\n# guild\n\n字段名           类型          描述\nid            string      频道 id\nname          string      频道名称\nicon          string      频道头像\nownerid       string      拥有者id\nisowner       bool        当前人是否是创建人\nmembercount   int         成员数\nmaxmembers    int64       最大成员数\ndesc          string      描述\njoinedat      timestamp   当前用户加入群的时间，此字段只在guild_create事件中使用\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"guildid",\n    "name":"频道名称",\n    "owner_id":"owner_id",\n    "owner":false,\n    "member_count":8,\n    "max_members":300,\n    "description":""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道身份组权限",frontmatter:{},regularPath:"/develop/gosdk/api/channel_permissions/update_channel_roles_permissions.html",relativePath:"develop/gosdk/api/channel_permissions/update_channel_roles_permissions.md",key:"v-250f0203",path:"/develop/gosdk/api/channel_permissions/update_channel_roles_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:30},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:453},{level:3,title:"UpdateChannelPermissions",slug:"updatechannelpermissions",normalizedTitle:"updatechannelpermissions",charIndex:234},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:193}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 UpdateChannelPermissions Permissions",content:'# 修改子频道身份组权限\n\n修改子频道身份组权限。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.PutChannelRolesPermissions(ctx, channelId, roleId, &dto.UpdateChannelPermissions{\n  Add: "4",\n})\nif err != nil {\n  log.Fatalln("调用 PutChannelRolesPermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                        必填   类型                         描述\nchannelId                  是    string                     子频道 ID\nroleId                     是    string                     身份组 ID\nUpdateChannelPermissions   是    UpdateChannelPermissions   权限参数\n\n\n# UpdateChannelPermissions\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考Permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型',normalizedContent:'# 修改子频道身份组权限\n\n修改子频道身份组权限。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.putchannelrolespermissions(ctx, channelid, roleid, &dto.updatechannelpermissions{\n  add: "4",\n})\nif err != nil {\n  log.fatalln("调用 putchannelrolespermissions 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                        必填   类型                         描述\nchannelid                  是    string                     子频道 id\nroleid                     是    string                     身份组 id\nupdatechannelpermissions   是    updatechannelpermissions   权限参数\n\n\n# updatechannelpermissions\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6fff，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送私信消息",frontmatter:{},regularPath:"/develop/gosdk/api/direct_msg/post_direct_message.html",relativePath:"develop/gosdk/api/direct_msg/post_direct_message.md",key:"v-1f0f00d9",path:"/develop/gosdk/api/direct_msg/post_direct_message.html",headers:[{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:37},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:171},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:627},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:770},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:793}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"功能描述 使用示例 参数说明 返回说明 返回示例",content:'# 发送私信消息\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n\n# 功能描述\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nif err != nil {\n    log.Fatalln("调用 CreateDirectMessage 接口失败, err = ", err)\n}\nmessage, err1 := api.PostDirectMessage(ctx, directMsg, &dto.MessageToCreate{\n    Content: "私信消息",\n    MsgID:   data.ID,\n})\nif err1 != nil {\n    log.Fatalln("调用 PostDirectMessage 接口失败, err = ", err1)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 参数说明\n\n字段名               类型                描述\ndirectMsg         DirectMessage     创建的私信会话频道guild_id\nMessageToCreate   MessageToCreate   消息体\n\n\n# 返回说明\n\n返回Message 对象\n\n\n# 返回示例\n\n同发送消息返回示例',normalizedContent:'# 发送私信消息\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n\n# 功能描述\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nif err != nil {\n    log.fatalln("调用 createdirectmessage 接口失败, err = ", err)\n}\nmessage, err1 := api.postdirectmessage(ctx, directmsg, &dto.messagetocreate{\n    content: "私信消息",\n    msgid:   data.id,\n})\nif err1 != nil {\n    log.fatalln("调用 postdirectmessage 接口失败, err = ", err1)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 参数说明\n\n字段名               类型                描述\ndirectmsg         directmessage     创建的私信会话频道guild_id\nmessagetocreate   messagetocreate   消息体\n\n\n# 返回说明\n\n返回message 对象\n\n\n# 返回示例\n\n同发送消息返回示例',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建私信会话",frontmatter:{},regularPath:"/develop/gosdk/api/direct_msg/create_direct_message.html",relativePath:"develop/gosdk/api/direct_msg/create_direct_message.md",key:"v-5b570bde",path:"/develop/gosdk/api/direct_msg/create_direct_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:64},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:437},{level:2,title:"CreateDirectMessage",slug:"createdirectmessage",normalizedTitle:"createdirectmessage",charIndex:223},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:640},{level:2,title:"DirectMessage",slug:"directmessage",normalizedTitle:"directmessage",charIndex:229},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:828}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 CreateDirectMessage 返回说明 DirectMessage 返回示例",content:'# 创建私信会话\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n注意\n\n机器人和用户存在共同频道才能创建私信会话\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\ndirectMsg, err := api.CreateDirectMessage(ctx, &dto.DirectMessageToCreate{\n  SourceGuildID: guildId,\n  RecipientID:   userId,\n})\nif err != nil {\n  log.Fatalln("调用 CreateDirectMessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名       类型                    描述\nrequest   CreateDirectMessage   私信频道创建请求\n\n\n# CreateDirectMessage\n\n字段名             类型       描述\nSourceGuildID   string   源频道 ID\nRecipientID     string   接收者 ID\n\n\n# 返回说明\n\n成功创建后，返回DirectMessage对象返回创建成功的频道 ID，子频道 ID 和创建时间。\n\n\n# DirectMessage\n\n字段名          类型       描述\nGuildID      string   频道 ID\nChannelID    string   子频道 ID\nCreateTime   string   创建时间\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1638323931"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建私信会话\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n注意\n\n机器人和用户存在共同频道才能创建私信会话\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\ndirectmsg, err := api.createdirectmessage(ctx, &dto.directmessagetocreate{\n  sourceguildid: guildid,\n  recipientid:   userid,\n})\nif err != nil {\n  log.fatalln("调用 createdirectmessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名       类型                    描述\nrequest   createdirectmessage   私信频道创建请求\n\n\n# createdirectmessage\n\n字段名             类型       描述\nsourceguildid   string   源频道 id\nrecipientid     string   接收者 id\n\n\n# 返回说明\n\n成功创建后，返回directmessage对象返回创建成功的频道 id，子频道 id 和创建时间。\n\n\n# directmessage\n\n字段名          类型       描述\nguildid      string   频道 id\nchannelid    string   子频道 id\ncreatetime   string   创建时间\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1638323931"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"添加频道身份组成员",frontmatter:{},regularPath:"/develop/gosdk/api/guild/guild_role/create_guild_role_member.html",relativePath:"develop/gosdk/api/guild/guild_role/create_guild_role_member.md",key:"v-0049f0ad",path:"/develop/gosdk/api/guild/guild_role/create_guild_role_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:529},{level:3,title:"MemberAddRoleBody",slug:"memberaddrolebody",normalizedTitle:"memberaddrolebody",charIndex:237},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:260}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 MemberAddRoleBody Channel",content:'# 添加频道身份组成员\n\n添加频道身份组成员。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.MemberAddRole(ctx, guildId, dto.RoleID(roleId), userId, &dto.MemberAddRoleBody{\n    Channel: &dto.Channel{\n        ID: channelId,\n    },\n})\nif err != nil {\n    log.Fatalln("调用 MemberAddRole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限，如果是机器人，要求被添加为管理员。\n * 如果要增加的身份组 ID 是子频道管理员，需要增加 Channel 对象来指定具体是哪个子频道。\n\n\n# 参数说明\n\n字段名                 必填   类型                  描述\nguildId             是    string              频道 ID\nroleId              是    string              身份组 ID\nuserId              是    string              用户 ID\nMemberAddRoleBody   是    MemberAddRoleBody   请求体参数，目前只需要填入一个子频道 ID\n\n\n# MemberAddRoleBody\n\n字段名       类型        描述\nChannel   Channel   子频道对象\n\n\n# Channel\n\n字段名   类型       描述\nid    string   子频道 ID',normalizedContent:'# 添加频道身份组成员\n\n添加频道身份组成员。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.memberaddrole(ctx, guildid, dto.roleid(roleid), userid, &dto.memberaddrolebody{\n    channel: &dto.channel{\n        id: channelid,\n    },\n})\nif err != nil {\n    log.fatalln("调用 memberaddrole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限，如果是机器人，要求被添加为管理员。\n * 如果要增加的身份组 id 是子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n\n\n# 参数说明\n\n字段名                 必填   类型                  描述\nguildid             是    string              频道 id\nroleid              是    string              身份组 id\nuserid              是    string              用户 id\nmemberaddrolebody   是    memberaddrolebody   请求体参数，目前只需要填入一个子频道 id\n\n\n# memberaddrolebody\n\n字段名       类型        描述\nchannel   channel   子频道对象\n\n\n# channel\n\n字段名   类型       描述\nid    string   子频道 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组",frontmatter:{},regularPath:"/develop/gosdk/api/guild/guild_role/delete_guild_role.html",relativePath:"develop/gosdk/api/guild/guild_role/delete_guild_role.md",key:"v-9fa51432",path:"/develop/gosdk/api/guild/guild_role/delete_guild_role.html",headers:[{level:3,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:300}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"参数说明",content:'# 删除频道身份组\n\n删除频道身份组。\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeleteRole(ctx, guildId, dto.RoleID(roleId))\nif err != nil {\n    log.Fatalln("调用 DeleteRole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数        必填   类型       说明\nguildId   是    string   频道 ID\nroleId    是    string   身份组 ID',normalizedContent:'# 删除频道身份组\n\n删除频道身份组。\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deleterole(ctx, guildid, dto.roleid(roleid))\nif err != nil {\n    log.fatalln("调用 deleterole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数        必填   类型       说明\nguildid   是    string   频道 id\nroleid    是    string   身份组 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组成员",frontmatter:{},regularPath:"/develop/gosdk/api/guild/guild_role/delete_guild_role_member.html",relativePath:"develop/gosdk/api/guild/guild_role/delete_guild_role_member.md",key:"v-bb6832e6",path:"/develop/gosdk/api/guild/guild_role/delete_guild_role_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:526},{level:3,title:"MemberAddRoleBody",slug:"memberaddrolebody",normalizedTitle:"memberaddrolebody",charIndex:240},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:261}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 MemberAddRoleBody Channel",content:'# 删除频道身份组成员\n\n删除频道身份组成员。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.MemberDeleteRole(ctx, guildId, dto.RoleID(roleId), userId, &dto.MemberAddRoleBody{\n  Channel: &dto.Channel{\n    ID: channelId,\n  },\n})\nif err != nil {\n  log.Fatalln("调用 MemberDeleteRole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道\n\n\n# 参数说明\n\n字段名                 必填   类型                  描述\nguildId             是    string              频道 ID\nroleId              是    string              身份组 ID\nuserId              是    string              用户 ID\nMemberAddRoleBody   是    MemberAddRoleBody   请求体参数，目前只需要填入一个子频道 ID\n\n\n# MemberAddRoleBody\n\n字段名       类型        描述\nChannel   Channel   子频道对象\n\n\n# Channel\n\n字段名   类型       描述\nid    string   子频道 ID',normalizedContent:'# 删除频道身份组成员\n\n删除频道身份组成员。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.memberdeleterole(ctx, guildid, dto.roleid(roleid), userid, &dto.memberaddrolebody{\n  channel: &dto.channel{\n    id: channelid,\n  },\n})\nif err != nil {\n  log.fatalln("调用 memberdeleterole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 id 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道\n\n\n# 参数说明\n\n字段名                 必填   类型                  描述\nguildid             是    string              频道 id\nroleid              是    string              身份组 id\nuserid              是    string              用户 id\nmemberaddrolebody   是    memberaddrolebody   请求体参数，目前只需要填入一个子频道 id\n\n\n# memberaddrolebody\n\n字段名       类型        描述\nchannel   channel   子频道对象\n\n\n# channel\n\n字段名   类型       描述\nid    string   子频道 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道身份组列表",frontmatter:{},regularPath:"/develop/gosdk/api/guild/guild_role/get_guild_roles.html",relativePath:"develop/gosdk/api/guild/guild_role/get_guild_roles.md",key:"v-56428d7a",path:"/develop/gosdk/api/guild/guild_role/get_guild_roles.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:290},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:357},{level:3,title:"Role",slug:"role",normalizedTitle:"role",charIndex:183},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:730}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Role 返回示例",content:'# 获取频道身份组列表\n\n获取频道身份组列表。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nroles, err := api.Roles(ctx, guildId)\nif err != nil {\n    log.Fatalln("调用 Roles 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\n\n\n# 返回说明\n\n字段名        类型       描述\nGuildID    string   频道 ID\nRoles      Role[]   频道身份组对象数组\nNumLimit   string   默认分组上限\n\n\n# Role\n\n字段名           类型       描述\nID            string   身份组 ID\nName          string   名称\nColor         uint32   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nHoist         uint32   是否在成员列表中单独展示: 0-否, 1-是\nMemberCount   uint32   人数\nMemberLimit   uint32   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "roles":[\n        {\n            "id":"4",\n            "name":"名称",\n            "color":4294927682,\n            "hoist":1,\n            "number":1,\n            "member_limit":1\n        },\n        {\n            "id":"2",\n            "name":"名称",\n            "color":4280276644,\n            "hoist":1,\n            "number":4,\n            "member_limit":50\n        }\n    ],\n    "role_num_limit":"30"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 获取频道身份组列表\n\n获取频道身份组列表。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nroles, err := api.roles(ctx, guildid)\nif err != nil {\n    log.fatalln("调用 roles 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n字段名        类型       描述\nguildid    string   频道 id\nroles      role[]   频道身份组对象数组\nnumlimit   string   默认分组上限\n\n\n# role\n\n字段名           类型       描述\nid            string   身份组 id\nname          string   名称\ncolor         uint32   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist         uint32   是否在成员列表中单独展示: 0-否, 1-是\nmembercount   uint32   人数\nmemberlimit   uint32   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "roles":[\n        {\n            "id":"4",\n            "name":"名称",\n            "color":4294927682,\n            "hoist":1,\n            "number":1,\n            "member_limit":1\n        },\n        {\n            "id":"2",\n            "name":"名称",\n            "color":4280276644,\n            "hoist":1,\n            "number":4,\n            "member_limit":50\n        }\n    ],\n    "role_num_limit":"30"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改频道身份组",frontmatter:{},regularPath:"/develop/gosdk/api/guild/guild_role/update_guild_role.html",relativePath:"develop/gosdk/api/guild/guild_role/update_guild_role.md",key:"v-ef261bba",path:"/develop/gosdk/api/guild/guild_role/update_guild_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:402},{level:3,title:"Role",slug:"role",normalizedTitle:"role",charIndex:186},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:824},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:934}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 Role 返回说明 返回示例",content:'# 修改频道身份组\n\n修改频道身份组信息。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nroles, err := api.PatchRole(ctx, guildId, dto.RoleID(roleId), &dto.Role{\n    Name: "新身份组",\n})\nif err != nil {\n    log.Fatalln("调用 PatchRole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\nroleId    是    string   身份组 ID\nRole      是    Role     频道身份组参数\n\n\n# Role\n\n字段名           必填   类型       描述\nID            否    string   身份组 ID\nName          是    string   名称\nColor         否    uint32   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nHoist         否    uint32   是否在成员列表中单独展示: 0-否, 1-是\nMemberCount   否    uint32   人数\nMemberLimit   否    uint32   成员上限\n\n\n# 返回说明\n\n字段名       类型       描述\nGuildID   string   频道 ID\nRoleID    string   身份组 ID\nRole      Role     频道身份组对象\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id": "guild_id",\n    "role_id": "role_id",\n    "role": {\n        "id": "role_id",\n        "name": "Test Update Role",\n        "color": 4278245297,\n        "hoist": 0,\n        "number": 0,\n        "member_limit": 2000}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 修改频道身份组\n\n修改频道身份组信息。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nroles, err := api.patchrole(ctx, guildid, dto.roleid(roleid), &dto.role{\n    name: "新身份组",\n})\nif err != nil {\n    log.fatalln("调用 patchrole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\nroleid    是    string   身份组 id\nrole      是    role     频道身份组参数\n\n\n# role\n\n字段名           必填   类型       描述\nid            否    string   身份组 id\nname          是    string   名称\ncolor         否    uint32   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist         否    uint32   是否在成员列表中单独展示: 0-否, 1-是\nmembercount   否    uint32   人数\nmemberlimit   否    uint32   成员上限\n\n\n# 返回说明\n\n字段名       类型       描述\nguildid   string   频道 id\nroleid    string   身份组 id\nrole      role     频道身份组对象\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id": "guild_id",\n    "role_id": "role_id",\n    "role": {\n        "id": "role_id",\n        "name": "test update role",\n        "color": 4278245297,\n        "hoist": 0,\n        "number": 0,\n        "member_limit": 2000}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道身份组",frontmatter:{},regularPath:"/develop/gosdk/api/guild/guild_role/create_guild_role.html",relativePath:"develop/gosdk/api/guild/guild_role/create_guild_role.md",key:"v-d513fcee",path:"/develop/gosdk/api/guild/guild_role/create_guild_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:380},{level:3,title:"Role",slug:"role",normalizedTitle:"role",charIndex:185},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:771}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 Role 返回说明",content:'# 创建频道身份组\n\n创建一个频道身份组。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nroles, err := api.PostRole(ctx, guildId, &dto.Role{\n    Name: "身份组",\n})\nif err != nil {\n    log.Fatalln("调用 PostRole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\nRole      是    Role     频道身份组参数\n\n\n# Role\n\n字段名           必填   类型       描述\nID            否    string   身份组 ID\nName          是    string   名称\nColor         否    uint32   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nHoist         否    uint32   是否在成员列表中单独展示: 0-否, 1-是\nMemberCount   否    uint32   人数\nMemberLimit   否    uint32   成员上限\n\n\n# 返回说明\n\n字段名       类型       描述\nRoleID    string   频道身份组 ID\nGuildID   string   频道ID\nRole      Role     频道身份组对象',normalizedContent:'# 创建频道身份组\n\n创建一个频道身份组。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nroles, err := api.postrole(ctx, guildid, &dto.role{\n    name: "身份组",\n})\nif err != nil {\n    log.fatalln("调用 postrole 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\nrole      是    role     频道身份组参数\n\n\n# role\n\n字段名           必填   类型       描述\nid            否    string   身份组 id\nname          是    string   名称\ncolor         否    uint32   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist         否    uint32   是否在成员列表中单独展示: 0-否, 1-是\nmembercount   否    uint32   人数\nmemberlimit   否    uint32   成员上限\n\n\n# 返回说明\n\n字段名       类型       描述\nroleid    string   频道身份组 id\nguildid   string   频道id\nrole      role     频道身份组对象',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道成员",frontmatter:{},regularPath:"/develop/gosdk/api/member/delete_guild_member.html",relativePath:"develop/gosdk/api/member/delete_guild_member.md",key:"v-7f65bab2",path:"/develop/gosdk/api/member/delete_guild_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:381},{level:2,title:"MemberDeleteOption",slug:"memberdeleteoption",normalizedTitle:"memberdeleteoption",charIndex:543}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 MemberDeleteOption",content:'# 删除频道成员\n\n移除频道的某个成员。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeleteGuildMember(ctx, guildId, userId)\nif err != nil {\n  log.Fatalln("调用 DeleteGuildMember 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n注意\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件\n\n\n# 参数说明\n\n字段名                  必填   类型                   描述\nguildId              是    string               频道 ID\nuserId               是    string               用户 ID\nMemberDeleteOption   否    MemberDeleteOption   删除用户的选项\n\n\n# MemberDeleteOption\n\n字段名                    必填   类型     描述\nAddBlackList           否    bool   删除成员的同时，将该用户添加到频道黑名单中\nDeleteHistoryMsgDays   否    int    删除成员的同时，撤回该成员的消息，可以指定撤回消息的时间范围\n\n> 注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息',normalizedContent:'# 删除频道成员\n\n移除频道的某个成员。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deleteguildmember(ctx, guildid, userid)\nif err != nil {\n  log.fatalln("调用 deleteguildmember 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n注意\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件\n\n\n# 参数说明\n\n字段名                  必填   类型                   描述\nguildid              是    string               频道 id\nuserid               是    string               用户 id\nmemberdeleteoption   否    memberdeleteoption   删除用户的选项\n\n\n# memberdeleteoption\n\n字段名                    必填   类型     描述\naddblacklist           否    bool   删除成员的同时，将该用户添加到频道黑名单中\ndeletehistorymsgdays   否    int    删除成员的同时，撤回该成员的消息，可以指定撤回消息的时间范围\n\n> 注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员详情",frontmatter:{},regularPath:"/develop/gosdk/api/member/get_guild_member.html",relativePath:"develop/gosdk/api/member/get_guild_member.md",key:"v-71bd640d",path:"/develop/gosdk/api/member/get_guild_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:30},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:313},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:410},{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:191},{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:496},{level:2,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:653},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1156}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Member User Timestamp 返回示例",content:'# 获取频道成员详情\n\n获取频道下某个成员的信息。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmember, err := api.GuildMember(ctx, guildId, userId)\nif err != nil {\n    log.Fatalln("调用 GuildMember 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\nuserId    是    string   用户 ID\n\n\n# 返回说明\n\n返回 Member 对象。\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间\n\n\n# 返回示例\n\ndata：\n\n{\n    "user": {\n        "id": "用户 ID",\n        "username": "用户名",\n        "avatar": "用户头像地址",\n        "bot": false,\n        "public_flags": 0,\n        "system": false\n    },\n    "nick": "",\n    "roles": [\n        "4"\n    ],\n    "joined_at": "2021-09-27T17:19:51+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取频道成员详情\n\n获取频道下某个成员的信息。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmember, err := api.guildmember(ctx, guildid, userid)\nif err != nil {\n    log.fatalln("调用 guildmember 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\nuserid    是    string   用户 id\n\n\n# 返回说明\n\n返回 member 对象。\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间\n\n\n# 返回示例\n\ndata：\n\n{\n    "user": {\n        "id": "用户 id",\n        "username": "用户名",\n        "avatar": "用户头像地址",\n        "bot": false,\n        "public_flags": 0,\n        "system": false\n    },\n    "nick": "",\n    "roles": [\n        "4"\n    ],\n    "joined_at": "2021-09-27t17:19:51+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取指定消息",frontmatter:{},regularPath:"/develop/gosdk/api/message/get_message.html",relativePath:"develop/gosdk/api/message/get_message.md",key:"v-42ed2266",path:"/develop/gosdk/api/message/get_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:297},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:401},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:179},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:747},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:765},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:1339},{level:3,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:624},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1660}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Message User Member DefaultRoleIDs Timestamp 返回示例",content:'# 获取指定消息\n\n获取指定消息。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmessage, err := api.Message(ctx, channelId, msgId)\nif err != nil {\n  log.Fatalln("调用 Message 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数          必填   类型       说明\nchannelId   是    string   子频道 ID\nmsgId       是    string   消息 ID\n\n\n# 返回说明\n\n参数        类型        说明\nmessage   Message   返回 message 对象\n\n\n# Message\n\n字段名         类型          描述\nID          string      消息 ID\nChannelID   string      子频道 ID\nGuildID     string      频道 ID\nContent     string      消息内容\nTimestamp   Timestamp   消息创建时间，是个 iISO8601 timestamp\n                        字符串，例："2021-11-23T15:16:48+08:00"\nAuthor      User        消息创建者\nMember      Member      消息创建者的 member 信息\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间\n\n\n# 返回示例\n\ndata:\n\n{\n  "message": {\n    "id": "abcdef01",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25T15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": ["1"],\n      "joined_at": "2021-04-12T16:34:42+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取指定消息\n\n获取指定消息。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmessage, err := api.message(ctx, channelid, msgid)\nif err != nil {\n  log.fatalln("调用 message 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数          必填   类型       说明\nchannelid   是    string   子频道 id\nmsgid       是    string   消息 id\n\n\n# 返回说明\n\n参数        类型        说明\nmessage   message   返回 message 对象\n\n\n# message\n\n字段名         类型          描述\nid          string      消息 id\nchannelid   string      子频道 id\nguildid     string      频道 id\ncontent     string      消息内容\ntimestamp   timestamp   消息创建时间，是个 iiso8601 timestamp\n                        字符串，例："2021-11-23t15:16:48+08:00"\nauthor      user        消息创建者\nmember      member      消息创建者的 member 信息\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间\n\n\n# 返回示例\n\ndata:\n\n{\n  "message": {\n    "id": "abcdef01",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25t15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": ["1"],\n      "joined_at": "2021-04-12t16:34:42+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员列表",frontmatter:{},regularPath:"/develop/gosdk/api/member/get_guild_members.html",relativePath:"develop/gosdk/api/member/get_guild_members.md",key:"v-590f1313",path:"/develop/gosdk/api/member/get_guild_members.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:369},{level:3,title:"GuildMembersPager",slug:"guildmemberspager",normalizedTitle:"guildmemberspager",charIndex:217},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:672},{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:190},{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:760},{level:2,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:917},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1420}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 GuildMembersPager 返回说明 Member User Timestamp 返回示例",content:'# 获取频道成员列表\n\n获取频道下的成员列表。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmembers, err := api.GuildMembers(ctx, guildId, &dto.GuildMembersPager{\n  After: "0",\n  Limit: "100",\n})\nif err != nil {\n  log.Fatalln("调用 GuildMembers 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                 必填   类型                  描述\nguildId             是    string              频道 ID\nGuildMembersPager   否    GuildMembersPager   查询参数\n\n\n# GuildMembersPager\n\n字段名     必填   类型       描述\nAfter   否    string   上一次回包中最大的用户 ID， 如果是第一次请求填 0，默认为 0\nLimit   否    number   分页大小，1-1000，默认是 1\n\n\n# 返回说明\n\n返回 Member 对象数组。\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "user": {\n      "id": "USERID",\n      "username": "机器人管家-ostwindli",\n      "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=oPicoPIg01ujpSr8oosudkQ&s=0&t=1637218059",\n      "bot": false,\n      "public_flags": 0,\n      "system": false\n    },\n    "nick": "阿青",\n    "roles": [\n      "4"\n    ],\n    "joined_at": "2021-11-23T15:16:48+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 获取频道成员列表\n\n获取频道下的成员列表。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmembers, err := api.guildmembers(ctx, guildid, &dto.guildmemberspager{\n  after: "0",\n  limit: "100",\n})\nif err != nil {\n  log.fatalln("调用 guildmembers 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                 必填   类型                  描述\nguildid             是    string              频道 id\nguildmemberspager   否    guildmemberspager   查询参数\n\n\n# guildmemberspager\n\n字段名     必填   类型       描述\nafter   否    string   上一次回包中最大的用户 id， 如果是第一次请求填 0，默认为 0\nlimit   否    number   分页大小，1-1000，默认是 1\n\n\n# 返回说明\n\n返回 member 对象数组。\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "user": {\n      "id": "userid",\n      "username": "机器人管家-ostwindli",\n      "avatar": "http://thirdqq.qlogo.cn/g?b=oidb&k=opicopig01ujpsr8oosudkq&s=0&t=1637218059",\n      "bot": false,\n      "public_flags": 0,\n      "system": false\n    },\n    "nick": "阿青",\n    "roles": [\n      "4"\n    ],\n    "joined_at": "2021-11-23t15:16:48+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"拉取消息列表",frontmatter:{},regularPath:"/develop/gosdk/api/message/get_messages.html",relativePath:"develop/gosdk/api/message/get_messages.md",key:"v-a3971b92",path:"/develop/gosdk/api/message/get_messages.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:382},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:180},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:797},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:815},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:1389},{level:3,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:674},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1710}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 Message User Member DefaultRoleIDs Timestamp 返回示例",content:'# 拉取消息列表\n\n获取消息列表。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmessages, err := api.Messages(ctx, channelId, &dto.MessagesPager{\n  ID:    msgId,\n  Limit: "10",\n  Type:  dto.MPTBefore,\n})\nif err != nil {\n  log.Fatalln("调用 Messages 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n参数              必填   类型              说明\nchannelId       是    string          子频道 ID\nMessagesPager   否    MessagesPager   分页信息\n\n\n# Message\n\n字段名         类型          描述\nID          string      消息 ID\nChannelID   string      子频道 ID\nGuildID     string      频道 ID\nContent     string      消息内容\nTimestamp   Timestamp   消息创建时间，是个 iISO8601 timestamp\n                        字符串，例："2021-11-23T15:16:48+08:00"\nAuthor      User        消息创建者\nMember      Member      消息创建者的 member 信息\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxx",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25T15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": [\n        "1"\n      ],\n      "joined_at": "2021-04-12T16:34:42+08:00"\n    }\n  },\n  {\n    "id": "yyy",\n    "channel_id": "100001",\n    "guild_id": "1000000000001",\n    "content": "world",\n    "timestamp": "2021-05-25T15:20:32+08:00",\n    "author": {\n      "id": "10000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": [\n        "1"\n      ],\n      "joined_at": "2021-04-12T16:34:42+08:00"\n    }\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',normalizedContent:'# 拉取消息列表\n\n获取消息列表。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmessages, err := api.messages(ctx, channelid, &dto.messagespager{\n  id:    msgid,\n  limit: "10",\n  type:  dto.mptbefore,\n})\nif err != nil {\n  log.fatalln("调用 messages 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n参数              必填   类型              说明\nchannelid       是    string          子频道 id\nmessagespager   否    messagespager   分页信息\n\n\n# message\n\n字段名         类型          描述\nid          string      消息 id\nchannelid   string      子频道 id\nguildid     string      频道 id\ncontent     string      消息内容\ntimestamp   timestamp   消息创建时间，是个 iiso8601 timestamp\n                        字符串，例："2021-11-23t15:16:48+08:00"\nauthor      user        消息创建者\nmember      member      消息创建者的 member 信息\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxx",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25t15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": [\n        "1"\n      ],\n      "joined_at": "2021-04-12t16:34:42+08:00"\n    }\n  },\n  {\n    "id": "yyy",\n    "channel_id": "100001",\n    "guild_id": "1000000000001",\n    "content": "world",\n    "timestamp": "2021-05-25t15:20:32+08:00",\n    "author": {\n      "id": "10000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": [\n        "1"\n      ],\n      "joined_at": "2021-04-12t16:34:42+08:00"\n    }\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息内嵌格式",frontmatter:{},regularPath:"/develop/gosdk/api/message/message_format.html",relativePath:"develop/gosdk/api/message/message_format.md",key:"v-be25097a",path:"/develop/gosdk/api/message/message_format.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:99},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:474},{level:2,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:289},{level:2,title:"Embed",slug:"embed",normalizedTitle:"embed",charIndex:84},{level:2,title:"EmbedField",slug:"embedfield",normalizedTitle:"embedfield",charIndex:1248},{level:2,title:"MessageEmbedThumbnail",slug:"messageembedthumbnail",normalizedTitle:"messageembedthumbnail",charIndex:1202},{level:3,title:"支持的格式",slug:"支持的格式",normalizedTitle:"支持的格式",charIndex:1431},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1958},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:260},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:2261},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:2279},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:2853},{level:3,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:2138},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:3174}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 MessageToCreate Embed EmbedField MessageEmbedThumbnail 支持的格式 返回说明 Message User Member DefaultRoleIDs Timestamp 返回示例",content:'# 消息内嵌格式\n\n注意\n\n * 消息不支持 markdown 格式，会自动移除 markdown 格式\n * 内嵌格式仅在 content 中会生效，在 Ark 和 Embed 中不生效\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmessage, err := api.PostMessage(ctx, channelId, &dto.MessageToCreate{\n  MsgID:   msgId, //如果未空则表示主动消息\n  Content: "<@!1234>hello world",\n})\nif err != nil {\n  log.Fatalln("调用 PostMessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n参数                必填   类型                说明\nchannelID         是    string            子频道 ID\nMessageToCreate   是    MessageToCreate   消息体结构\n\n\n# MessageToCreate\n\n字段名                类型                 描述\nContent            string             消息内容，文本内容，支持内嵌格式\nEmbed              Embed              embed 消息，一种特殊的 ark\nArk                Ark                ark 消息\nImage              string             图片 url 地址\nMsgID              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nMessageReference   MessageReference   引用消息对象\n\n\n# Embed\n\n字段名           类型                      描述\nTitle         string                  标题\nDescription   string                  描述\nPrompt        string                  消息弹窗内容\nThumbnail     MessageEmbedThumbnail   消息的缩略图象\nFields        EmbedField[]            Embed字段描述\n\n\n# EmbedField\n\n字段名     类型       描述\nName    string   字段名\nValue   string   字段值\n\n\n# MessageEmbedThumbnail\n\n字段名   类型       描述\nURL   string   缩略图url\n\n\n# 支持的格式\n\n类型     结构              描述                                                            示例\n@用户    <@user_id>      解析为 @用户 标签                                                    <@1234000000001>\n@所有人   @everyone       解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限                              @everyone\n#子频道   <#channel_id>   解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道                           <#12345>\n表情     emoji:id        解析为系统表情，具体表情 id 参考 Emoji 列表，仅支持 type=1 的系统表情，type=2 的 emoji   emoji:4 解析为得意表情\n                       表情直接按字符串填写即可\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名         类型          描述\nID          string      消息 ID\nChannelID   string      子频道 ID\nGuildID     string      频道 ID\nContent     string      消息内容\nTimestamp   Timestamp   消息创建时间，是个 iISO8601 timestamp\n                        字符串，例："2021-11-23T15:16:48+08:00"\nAuthor      User        消息创建者\nMember      Member      消息创建者的 member 信息\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间\n\n\n# 返回示例\n\n以发送文本内容<@!1234>hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {}\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',normalizedContent:'# 消息内嵌格式\n\n注意\n\n * 消息不支持 markdown 格式，会自动移除 markdown 格式\n * 内嵌格式仅在 content 中会生效，在 ark 和 embed 中不生效\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmessage, err := api.postmessage(ctx, channelid, &dto.messagetocreate{\n  msgid:   msgid, //如果未空则表示主动消息\n  content: "<@!1234>hello world",\n})\nif err != nil {\n  log.fatalln("调用 postmessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n参数                必填   类型                说明\nchannelid         是    string            子频道 id\nmessagetocreate   是    messagetocreate   消息体结构\n\n\n# messagetocreate\n\n字段名                类型                 描述\ncontent            string             消息内容，文本内容，支持内嵌格式\nembed              embed              embed 消息，一种特殊的 ark\nark                ark                ark 消息\nimage              string             图片 url 地址\nmsgid              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessagereference   messagereference   引用消息对象\n\n\n# embed\n\n字段名           类型                      描述\ntitle         string                  标题\ndescription   string                  描述\nprompt        string                  消息弹窗内容\nthumbnail     messageembedthumbnail   消息的缩略图象\nfields        embedfield[]            embed字段描述\n\n\n# embedfield\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# messageembedthumbnail\n\n字段名   类型       描述\nurl   string   缩略图url\n\n\n# 支持的格式\n\n类型     结构              描述                                                            示例\n@用户    <@user_id>      解析为 @用户 标签                                                    <@1234000000001>\n@所有人   @everyone       解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限                              @everyone\n#子频道   <#channel_id>   解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道                           <#12345>\n表情     emoji:id        解析为系统表情，具体表情 id 参考 emoji 列表，仅支持 type=1 的系统表情，type=2 的 emoji   emoji:4 解析为得意表情\n                       表情直接按字符串填写即可\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名         类型          描述\nid          string      消息 id\nchannelid   string      子频道 id\nguildid     string      频道 id\ncontent     string      消息内容\ntimestamp   timestamp   消息创建时间，是个 iiso8601 timestamp\n                        字符串，例："2021-11-23t15:16:48+08:00"\nauthor      user        消息创建者\nmember      member      消息创建者的 member 信息\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间\n\n\n# 返回示例\n\n以发送文本内容<@!1234>hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {}\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息模板",frontmatter:{},regularPath:"/develop/gosdk/api/message/message_template.html",relativePath:"develop/gosdk/api/message/message_template.md",key:"v-4c55b506",path:"/develop/gosdk/api/message/message_template.html",headers:[{level:2,title:"可用模板",slug:"可用模板",normalizedTitle:"可用模板",charIndex:140},{level:2,title:"链接、文本列表模板",slug:"链接、文本列表模板",normalizedTitle:"链接、文本列表模板",charIndex:183},{level:3,title:"样式(id=23)",slug:"样式-id-23",normalizedTitle:"样式(id=23)",charIndex:197},{level:3,title:"模板格式",slug:"模板格式",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述",normalizedTitle:"字段描述",charIndex:450},{level:3,title:"LIST 结构",slug:"list-结构",normalizedTitle:"list 结构",charIndex:560},{level:2,title:"文本、缩略图模板",slug:"文本、缩略图模板",normalizedTitle:"文本、缩略图模板",charIndex:2784},{level:3,title:"样式(id=24)",slug:"样式-id-24",normalizedTitle:"样式(id=24)",charIndex:2797},{level:3,title:"模板格式",slug:"模板格式-2",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述-2",normalizedTitle:"字段描述",charIndex:450},{level:2,title:"大图模板 34",slug:"大图模板-34",normalizedTitle:"大图模板 34",charIndex:4301},{level:3,title:"样式(id=34)",slug:"样式-id-34",normalizedTitle:"样式(id=34)",charIndex:4313},{level:3,title:"模板格式",slug:"模板格式-3",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述-3",normalizedTitle:"字段描述",charIndex:450},{level:2,title:"大图模板 37",slug:"大图模板-37",normalizedTitle:"大图模板 37",charIndex:5827},{level:3,title:"样式(id=37)",slug:"样式-id-37",normalizedTitle:"样式(id=37)",charIndex:5839},{level:3,title:"模板格式",slug:"模板格式-4",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述-4",normalizedTitle:"字段描述",charIndex:450}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"可用模板 链接、文本列表模板 样式(id=23) 模板格式 字段描述 LIST 结构 文本、缩略图模板 样式(id=24) 模板格式 字段描述 大图模板 34 样式(id=34) 模板格式 字段描述 大图模板 37 样式(id=37) 模板格式 字段描述",content:'# 消息模板\n\n为了丰富消息内容，SDK 提供了几种消息模板。\n\n注意\n\n * 发送消息时所有字段均使用字符串类型。\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：”开发设置“ -> ”消息 URL 配置“。\n\n\n# 可用模板\n\n * 链接+文本列表模板\n * 文本+缩略图模板\n * 大图模板\n\n\n# 链接、文本列表模板\n\n\n# 样式(id=23)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "list": "#LIST#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#DESC#     string   描述\n#PROMPT#   string   提示消息\n#LIST#     array    #LIST#数组\n\n\n# LIST 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：UI问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 文本、缩略图模板\n\n\n# 样式(id=24)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#METADESC#",\n      "img": "#IMG#",\n      "link": "#LINK#",\n      "subTitle": "#SUBTITLE#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#DESC#       string   描述\n#PROMPT#     string   提示文本\n#TITLE#      string   标题\n#METADESC#   string   详情描述\n#IMG#        string   图片链接\n#LINK#       string   跳转链接\n#SUBTITLE#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#METADESC#",\n        "value": "Meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#IMG#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#LINK#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#SUBTITLE#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 34\n\n\n# 样式(id=34)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.miniapp_01",\n  "view": "view_8C8E89B49BE609866298ADDFF2DBABA4",\n  "ver": "1.0.1.12",\n  "desc": "#DESC#",\n  "prompt": "#PROMPT#",\n  "meta": {\n    "detail_1": {\n      "title": "#METATITLE#",\n      "desc": "#METADESC#",\n      "icon": "#METAICON#",\n      "preview": "#METAPREVIEW#",\n      "url": "#METAURL#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名             类型       描述\n#DESC#          string   描述\n#PROMPT#        string   提示消息\n#METATITLE#     string   标题\n#METADESC#      string   描述\n#METAICON#      string   小图标\n#METAPREVIEW#   string   大图\n#METAURL#       string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 34,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#METATITLE#",\n        "value": "metatitle"\n      },\n      {\n        "key": "#METADESC#",\n        "value": "metadesc"\n      },\n      {\n        "key": "#METAICON#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#METAPREVIEW#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#METAURL#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 37\n\n\n# 样式(id=37)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#PROMPT#",\n  "meta": {\n    "robot": {\n      "title": "#METATITLE#",\n      "subtitle": "#METASUBTITLE#",\n      "cover": "#METACOVER#",\n      "jump_url": "#METAURL#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#PROMPT#         string   提示消息\n#METATITLE#      string   标题\n#METASUBTITLE#   string   子标题\n#METACOVER#      string   大图，尺寸为 975*540\n#METAURL#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#PROMPT#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#METATITLE#",\n        "value": "标题"\n      },\n      {\n        "key": "#METASUBTITLE#",\n        "value": "子标题"\n      },\n      {\n        "key": "#METACOVER#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#METAURL#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',normalizedContent:'# 消息模板\n\n为了丰富消息内容，sdk 提供了几种消息模板。\n\n注意\n\n * 发送消息时所有字段均使用字符串类型。\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：”开发设置“ -> ”消息 url 配置“。\n\n\n# 可用模板\n\n * 链接+文本列表模板\n * 文本+缩略图模板\n * 大图模板\n\n\n# 链接、文本列表模板\n\n\n# 样式(id=23)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "list": "#list#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#desc#     string   描述\n#prompt#   string   提示消息\n#list#     array    #list#数组\n\n\n# list 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#prompt#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：ui问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 文本、缩略图模板\n\n\n# 样式(id=24)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#metadesc#",\n      "img": "#img#",\n      "link": "#link#",\n      "subtitle": "#subtitle#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#desc#       string   描述\n#prompt#     string   提示文本\n#title#      string   标题\n#metadesc#   string   详情描述\n#img#        string   图片链接\n#link#       string   跳转链接\n#subtitle#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#prompt#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#title#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#metadesc#",\n        "value": "meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#img#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#link#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#subtitle#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 34\n\n\n# 样式(id=34)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.miniapp_01",\n  "view": "view_8c8e89b49be609866298addff2dbaba4",\n  "ver": "1.0.1.12",\n  "desc": "#desc#",\n  "prompt": "#prompt#",\n  "meta": {\n    "detail_1": {\n      "title": "#metatitle#",\n      "desc": "#metadesc#",\n      "icon": "#metaicon#",\n      "preview": "#metapreview#",\n      "url": "#metaurl#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名             类型       描述\n#desc#          string   描述\n#prompt#        string   提示消息\n#metatitle#     string   标题\n#metadesc#      string   描述\n#metaicon#      string   小图标\n#metapreview#   string   大图\n#metaurl#       string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 34,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#prompt#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#metatitle#",\n        "value": "metatitle"\n      },\n      {\n        "key": "#metadesc#",\n        "value": "metadesc"\n      },\n      {\n        "key": "#metaicon#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#metapreview#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#metaurl#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 37\n\n\n# 样式(id=37)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#prompt#",\n  "meta": {\n    "robot": {\n      "title": "#metatitle#",\n      "subtitle": "#metasubtitle#",\n      "cover": "#metacover#",\n      "jump_url": "#metaurl#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#prompt#         string   提示消息\n#metatitle#      string   标题\n#metasubtitle#   string   子标题\n#metacover#      string   大图，尺寸为 975*540\n#metaurl#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#prompt#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#metatitle#",\n        "value": "标题"\n      },\n      {\n        "key": "#metasubtitle#",\n        "value": "子标题"\n      },\n      {\n        "key": "#metacover#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#metaurl#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送引用消息",frontmatter:{},regularPath:"/develop/gosdk/api/message/message_reference.html",relativePath:"develop/gosdk/api/message/message_reference.md",key:"v-6ee39926",path:"/develop/gosdk/api/message/message_reference.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:76},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:635}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 返回示例",content:'# 发送引用消息\n\n注意\n\n * 只支持引用机器人自己发送到的消息以及用户@机器人产生的消息。\n * 发送成功之后，会触发一个创建消息的事件。\n\n\n# 使用示例\n\n使用方式同发送消息，在PostMessage中设置 MessageReference 即可发送引用消息。\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmessage, err := api.PostMessage(ctx, channelId, &dto.MessageToCreate{\n    MsgID:   msgId,\n    Content: "<emoji:4>这是一条引用消息",\n    MessageReference: &dto.MessageReference{\n        MessageID:             msgId,\n        IgnoreGetMessageError: false,\n    },\n})\nif err != nil {\n    log.Fatalln("调用 PostMessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 返回示例\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "xxxxxx",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 发送引用消息\n\n注意\n\n * 只支持引用机器人自己发送到的消息以及用户@机器人产生的消息。\n * 发送成功之后，会触发一个创建消息的事件。\n\n\n# 使用示例\n\n使用方式同发送消息，在postmessage中设置 messagereference 即可发送引用消息。\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmessage, err := api.postmessage(ctx, channelid, &dto.messagetocreate{\n    msgid:   msgid,\n    content: "<emoji:4>这是一条引用消息",\n    messagereference: &dto.messagereference{\n        messageid:             msgid,\n        ignoregetmessageerror: false,\n    },\n})\nif err != nil {\n    log.fatalln("调用 postmessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 返回示例\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "xxxxxx",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送模板消息",frontmatter:{},regularPath:"/develop/gosdk/api/message/post_ark_message.html",relativePath:"develop/gosdk/api/message/post_ark_message.md",key:"v-8e2f504a",path:"/develop/gosdk/api/message/post_ark_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:218},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:533},{level:2,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:423},{level:2,title:"Embed",slug:"embed",normalizedTitle:"embed",charIndex:795},{level:2,title:"EmbedField",slug:"embedfield",normalizedTitle:"embedfield",charIndex:1307},{level:2,title:"MessageEmbedThumbnail",slug:"messageembedthumbnail",normalizedTitle:"messageembedthumbnail",charIndex:1261},{level:2,title:"Ark",slug:"ark",normalizedTitle:"ark",charIndex:852},{level:2,title:"ArkKV",slug:"arkkv",normalizedTitle:"arkkv",charIndex:1572},{level:2,title:"ArkObj",slug:"arkobj",normalizedTitle:"arkobj",charIndex:1688},{level:2,title:"ArkObjKV",slug:"arkobjkv",normalizedTitle:"arkobjkv",charIndex:1761},{level:3,title:"参数示例",slug:"参数示例",normalizedTitle:"参数示例",charIndex:1869},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:3718},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:394},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:4021},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:4039},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:4613},{level:3,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:3898},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:4934}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 MessageToCreate Embed EmbedField MessageEmbedThumbnail Ark ArkKV ArkObj ArkObjKV 参数示例 返回说明 Message User Member DefaultRoleIDs Timestamp 返回示例",content:'# 发送模板消息\n\n注意\n\n * 要求操作人在该子频道具有发送消息和 模板消息 的权限。\n * 调用前需要先申请消息模板，这一步会得到一个模板 id，在请求时填在 ark.template_id 上\n * 发送成功之后，会触发一个创建消息的事件。\n * 可用模板参考可用模板\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：”开发设置“ -> ”消息 URL 配置“\n\n\n# 使用示例\n\n需要关注ark字段的使用。\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmessage, err := api.PostMessage(ctx, channelId, &dto.MessageToCreate{})\nif err != nil {\n  log.Fatalln("调用 PostMessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数                必填   类型                说明\nchannelID         是    string            子频道 ID\nMessageToCreate   是    MessageToCreate   消息体结构\n\n\n# MessageToCreate\n\n字段名                类型                 描述\nContent            string             消息内容，文本内容，支持内嵌格式\nEmbed              Embed              embed 消息，一种特殊的 ark\nArk                Ark                ark 消息\nImage              string             图片 url 地址\nMsgID              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nMessageReference   MessageReference   引用消息对象\n\n\n# Embed\n\n字段名           类型                      描述\nTitle         string                  标题\nDescription   string                  描述\nPrompt        string                  消息弹窗内容\nThumbnail     MessageEmbedThumbnail   消息的缩略图象\nFields        EmbedField[]            Embed字段描述\n\n\n# EmbedField\n\n字段名     类型       描述\nName    string   字段名\nValue   string   字段值\n\n\n# MessageEmbedThumbnail\n\n字段名   类型       描述\nURL   string   缩略图url\n\n\n# Ark\n\n字段名          类型         描述\nTemplateID   string     ark 模版 ID\nKV           []*ArkKV   ArkKV 数组\n\n\n# ArkKV\n\n字段名     类型           描述\nKey     string       key\nValue   string       value\nObj     []* ArkObj   ark obj 类型的列表\n\n\n# ArkObj\n\n字段名     类型             描述\nObjKV   []* ArkObjKV   ArkObjKV 类型的列表\n\n\n# ArkObjKV\n\n字段名     类型       描述\nKey     string   key\nValue   string   value\n\n\n# 参数示例\n\n假设模板如下，其中#META_LIST#类型为数组、#META_URL#类型为 URL、其他为文本。\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#META_DESC#",\n      "url": "#META_URL#",\n      "list": "#META_LIST#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n请求体中的 ark 内容为\n\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "XX机器人"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "XX机器人消息"\n      },\n      {\n        "key": "#META_URL#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#META_LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n则实际下发的 json 为\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "机器人订阅消息",\n  "prompt": "[QQ小程序]XX机器人",\n  "meta": {\n    "detail": {\n      "title": "XX机器人消息",\n      "url": "http://domain.com/",\n      "list": [\n        { "name": "aaa", "age": "3" },\n        { "name": "bbb", "age": "4" }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名         类型          描述\nID          string      消息 ID\nChannelID   string      子频道 ID\nGuildID     string      频道 ID\nContent     string      消息内容\nTimestamp   Timestamp   消息创建时间，是个 iISO8601 timestamp\n                        字符串，例："2021-11-23T15:16:48+08:00"\nAuthor      User        消息创建者\nMember      Member      消息创建者的 member 信息\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间\n\n\n# 返回示例\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 发送模板消息\n\n注意\n\n * 要求操作人在该子频道具有发送消息和 模板消息 的权限。\n * 调用前需要先申请消息模板，这一步会得到一个模板 id，在请求时填在 ark.template_id 上\n * 发送成功之后，会触发一个创建消息的事件。\n * 可用模板参考可用模板\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：”开发设置“ -> ”消息 url 配置“\n\n\n# 使用示例\n\n需要关注ark字段的使用。\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmessage, err := api.postmessage(ctx, channelid, &dto.messagetocreate{})\nif err != nil {\n  log.fatalln("调用 postmessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数                必填   类型                说明\nchannelid         是    string            子频道 id\nmessagetocreate   是    messagetocreate   消息体结构\n\n\n# messagetocreate\n\n字段名                类型                 描述\ncontent            string             消息内容，文本内容，支持内嵌格式\nembed              embed              embed 消息，一种特殊的 ark\nark                ark                ark 消息\nimage              string             图片 url 地址\nmsgid              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessagereference   messagereference   引用消息对象\n\n\n# embed\n\n字段名           类型                      描述\ntitle         string                  标题\ndescription   string                  描述\nprompt        string                  消息弹窗内容\nthumbnail     messageembedthumbnail   消息的缩略图象\nfields        embedfield[]            embed字段描述\n\n\n# embedfield\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# messageembedthumbnail\n\n字段名   类型       描述\nurl   string   缩略图url\n\n\n# ark\n\n字段名          类型         描述\ntemplateid   string     ark 模版 id\nkv           []*arkkv   arkkv 数组\n\n\n# arkkv\n\n字段名     类型           描述\nkey     string       key\nvalue   string       value\nobj     []* arkobj   ark obj 类型的列表\n\n\n# arkobj\n\n字段名     类型             描述\nobjkv   []* arkobjkv   arkobjkv 类型的列表\n\n\n# arkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# 参数示例\n\n假设模板如下，其中#meta_list#类型为数组、#meta_url#类型为 url、其他为文本。\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#meta_desc#",\n      "url": "#meta_url#",\n      "list": "#meta_list#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n请求体中的 ark 内容为\n\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#prompt#",\n        "value": "xx机器人"\n      },\n      {\n        "key": "#title#",\n        "value": "xx机器人消息"\n      },\n      {\n        "key": "#meta_url#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#meta_list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n则实际下发的 json 为\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "机器人订阅消息",\n  "prompt": "[qq小程序]xx机器人",\n  "meta": {\n    "detail": {\n      "title": "xx机器人消息",\n      "url": "http://domain.com/",\n      "list": [\n        { "name": "aaa", "age": "3" },\n        { "name": "bbb", "age": "4" }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名         类型          描述\nid          string      消息 id\nchannelid   string      子频道 id\nguildid     string      频道 id\ncontent     string      消息内容\ntimestamp   timestamp   消息创建时间，是个 iiso8601 timestamp\n                        字符串，例："2021-11-23t15:16:48+08:00"\nauthor      user        消息创建者\nmember      member      消息创建者的 member 信息\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间\n\n\n# 返回示例\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送消息",frontmatter:{},regularPath:"/develop/gosdk/api/message/post_message.html",relativePath:"develop/gosdk/api/message/post_message.md",key:"v-aa3319de",path:"/develop/gosdk/api/message/post_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:322},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:689},{level:2,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:512},{level:3,title:"被动回复消息",slug:"被动回复消息",normalizedTitle:"被动回复消息",charIndex:176},{level:2,title:"Embed",slug:"embed",normalizedTitle:"embed",charIndex:951},{level:2,title:"Ark",slug:"ark",normalizedTitle:"ark",charIndex:1008},{level:2,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:1179},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1384},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:295},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1803},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:1821},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:2395},{level:3,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:1680},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:2716}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 MessageToCreate 被动回复消息 Embed Ark MessageReference 返回说明 Message User Member DefaultRoleIDs Timestamp 返回示例",content:'# 发送消息\n\n向指定子频道推送消息。\n\n注意\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动推送消息，默认每天往每个频道可推送的消息数是 20 条，超过会被限制。\n * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息，超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟，超时会报错。\n * 发送消息接口要求机器人接口需要链接到 websocket gateway上保持在线状态。\n * 有关主动消息审核，可以通过 Intents 中审核事件 MESSAGE_AUDIT 返回 MessageAudited 对象获取结果。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nmessage, err := api.PostMessage(ctx, channelId, &dto.MessageToCreate{\n  MsgID:   msgId, //如果未空则表示主动消息\n  Content: "hello world",\n})\nif err != nil {\n  log.Fatalln("调用 PostMessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n参数                必填   类型                说明\nchannelId         是    string            子频道 ID\nMessageToCreate   是    MessageToCreate   消息体结构\n\n\n# MessageToCreate\n\n字段名                类型                 描述\nContent            string             消息内容，文本内容，支持内嵌格式\nEmbed              Embed              embed 消息，一种特殊的 ark\nArk                Ark                ark 消息\nImage              string             图片 url 地址\nMsgID              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nMessageReference   MessageReference   引用消息对象\n\ncontent、embed、ark、image至少需要有一个字段，否则无法下发消息。\n\n\n# 被动回复消息\n\n注意\n\n被动消息需是用户@机器人的消息，否则将会报错。\n\n\n# Embed\n\n详见消息内嵌格式。\n\n\n# Ark\n\n详见发送模板消息。\n\n\n# MessageReference\n\n详情见发送引用消息\n\n\n# 返回说明\n\n主动消息都需要审核，返回结果如下：\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now"\n}\n\n\n1\n2\n3\n4\n\n\n若为私域机器人可正常返回Message 对象。\n\n\n# Message\n\n字段名         类型          描述\nID          string      消息 ID\nChannelID   string      子频道 ID\nGuildID     string      频道 ID\nContent     string      消息内容\nTimestamp   Timestamp   消息创建时间，是个 iISO8601 timestamp\n                        字符串，例："2021-11-23T15:16:48+08:00"\nAuthor      User        消息创建者\nMember      Member      消息创建者的 member 信息\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间\n\n\n# 返回示例\n\n以发送文本内容hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 发送消息\n\n向指定子频道推送消息。\n\n注意\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动推送消息，默认每天往每个频道可推送的消息数是 20 条，超过会被限制。\n * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息，超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟，超时会报错。\n * 发送消息接口要求机器人接口需要链接到 websocket gateway上保持在线状态。\n * 有关主动消息审核，可以通过 intents 中审核事件 message_audit 返回 messageaudited 对象获取结果。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nmessage, err := api.postmessage(ctx, channelid, &dto.messagetocreate{\n  msgid:   msgid, //如果未空则表示主动消息\n  content: "hello world",\n})\nif err != nil {\n  log.fatalln("调用 postmessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n参数                必填   类型                说明\nchannelid         是    string            子频道 id\nmessagetocreate   是    messagetocreate   消息体结构\n\n\n# messagetocreate\n\n字段名                类型                 描述\ncontent            string             消息内容，文本内容，支持内嵌格式\nembed              embed              embed 消息，一种特殊的 ark\nark                ark                ark 消息\nimage              string             图片 url 地址\nmsgid              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessagereference   messagereference   引用消息对象\n\ncontent、embed、ark、image至少需要有一个字段，否则无法下发消息。\n\n\n# 被动回复消息\n\n注意\n\n被动消息需是用户@机器人的消息，否则将会报错。\n\n\n# embed\n\n详见消息内嵌格式。\n\n\n# ark\n\n详见发送模板消息。\n\n\n# messagereference\n\n详情见发送引用消息\n\n\n# 返回说明\n\n主动消息都需要审核，返回结果如下：\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now"\n}\n\n\n1\n2\n3\n4\n\n\n若为私域机器人可正常返回message 对象。\n\n\n# message\n\n字段名         类型          描述\nid          string      消息 id\nchannelid   string      子频道 id\nguildid     string      频道 id\ncontent     string      消息内容\ntimestamp   timestamp   消息创建时间，是个 iiso8601 timestamp\n                        字符串，例："2021-11-23t15:16:48+08:00"\nauthor      user        消息创建者\nmember      member      消息创建者的 member 信息\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间\n\n\n# 返回示例\n\n以发送文本内容hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"禁言全员",frontmatter:{},regularPath:"/develop/gosdk/api/mute/mute_all.html",relativePath:"develop/gosdk/api/mute/mute_all.md",key:"v-73a726a6",path:"/develop/gosdk/api/mute/mute_all.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:30},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:346},{level:3,title:"UpdateGuildMute",slug:"updateguildmute",normalizedTitle:"updateguildmute",charIndex:207}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 UpdateGuildMute",content:'# 禁言全员\n\n将频道内全部成员（非管理员）禁言。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.GuildMute(ctx, guildId, &dto.UpdateGuildMute{\n    MuteSeconds: "60",\n})\nif err != nil {\n    log.Fatalln("调用 GuildMute 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名               必填   类型                描述\nguildId           是    string            频道 ID\nUpdateGuildMute   是    UpdateGuildMute   禁言时长控制参数\n\n\n# UpdateGuildMute\n\n字段名                类型       描述\nMuteEndTimestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nMuteSeconds        string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）',normalizedContent:'# 禁言全员\n\n将频道内全部成员（非管理员）禁言。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.guildmute(ctx, guildid, &dto.updateguildmute{\n    muteseconds: "60",\n})\nif err != nil {\n    log.fatalln("调用 guildmute 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名               必填   类型                描述\nguildid           是    string            频道 id\nupdateguildmute   是    updateguildmute   禁言时长控制参数\n\n\n# updateguildmute\n\n字段名                类型       描述\nmuteendtimestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nmuteseconds        string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"撤回消息",frontmatter:{},regularPath:"/develop/gosdk/api/message/recall_message.html",relativePath:"develop/gosdk/api/message/recall_message.md",key:"v-572d4b6f",path:"/develop/gosdk/api/message/recall_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:64},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:346},{level:3,title:"RetractMessageOption",slug:"retractmessageoption",normalizedTitle:"retractmessageoption",charIndex:521}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 RetractMessageOption",content:'# 撤回消息\n\n撤回子频道内的消息\n\n注意\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.RetractMessage(ctx, channelId, msgId)\nif err != nil {\n    log.Fatalln("调用 RetractMessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数                     必填   类型                     说明\nchannelId              是    string                 子频道 ID\nmsgId                  是    string                 消息 ID\nRetractMessageOption   否    RetractMessageOption   是否隐藏提示小灰条\n\n\n# RetractMessageOption\n\n选项                            含义\nRetractMessageOptionHidetip   撤回消息隐藏小灰条可选参数',normalizedContent:'# 撤回消息\n\n撤回子频道内的消息\n\n注意\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.retractmessage(ctx, channelid, msgid)\nif err != nil {\n    log.fatalln("调用 retractmessage 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n参数                     必填   类型                     说明\nchannelid              是    string                 子频道 id\nmsgid                  是    string                 消息 id\nretractmessageoption   否    retractmessageoption   是否隐藏提示小灰条\n\n\n# retractmessageoption\n\n选项                            含义\nretractmessageoptionhidetip   撤回消息隐藏小灰条可选参数',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除精华消息",frontmatter:{},regularPath:"/develop/gosdk/api/pins_message/delete_pins_message.html",relativePath:"develop/gosdk/api/pins_message/delete_pins_message.md",key:"v-6b2cc4cf",path:"/develop/gosdk/api/pins_message/delete_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:51},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:325}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明",content:'# 删除精华消息\n\n用于移除子频道 channelId 下的精华消息 messageId 。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeletePins(ctx, channelId, msgId)\nif err != nil {\n    log.Fatalln("调用 DeletePins 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmsgId       是    string   消息 ID',normalizedContent:'# 删除精华消息\n\n用于移除子频道 channelid 下的精华消息 messageid 。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deletepins(ctx, channelid, msgid)\nif err != nil {\n    log.fatalln("调用 deletepins 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmsgid       是    string   消息 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建精华消息",frontmatter:{},regularPath:"/develop/gosdk/api/pins_message/put_pins_message.html",relativePath:"develop/gosdk/api/pins_message/put_pins_message.md",key:"v-38f3ad26",path:"/develop/gosdk/api/pins_message/put_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:160},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:439},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:543},{level:3,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:552},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:707}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 PinsMessage 返回示例",content:'# 创建精华消息\n\n用于将messageId添加为子频道 channelId 内的精华消息。\n\n注意\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\npinsMessage, err := api.AddPins(ctx, channelId, msgId)\nif err != nil {\n  log.Fatalln("调用 AddPins 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmsgId       是    string   消息 ID\n\n\n# 返回说明\n\n返回 PinsMessage 对象。\n\n\n# PinsMessage\n\n字段名          类型         描述\nGuildID      string     频道 ID\nChannelID    string     子频道 ID\nMessageIDs   string[]   消息 ID\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建精华消息\n\n用于将messageid添加为子频道 channelid 内的精华消息。\n\n注意\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\npinsmessage, err := api.addpins(ctx, channelid, msgid)\nif err != nil {\n  log.fatalln("调用 addpins 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmsgid       是    string   消息 id\n\n\n# 返回说明\n\n返回 pinsmessage 对象。\n\n\n# pinsmessage\n\n字段名          类型         描述\nguildid      string     频道 id\nchannelid    string     子频道 id\nmessageids   string[]   消息 id\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取精华消息",frontmatter:{},regularPath:"/develop/gosdk/api/pins_message/get_pins_message.html",relativePath:"develop/gosdk/api/pins_message/get_pins_message.md",key:"v-30ac920d",path:"/develop/gosdk/api/pins_message/get_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:40},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:312},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:384},{level:3,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:393},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:548}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 PinsMessage 返回示例",content:'# 获取精华消息\n\n用于获取子频道 channelId 内的精华消息。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\npinsMessage, err := api.GetPins(ctx, channelId)\nif err != nil {\n  log.Fatalln("调用 GetPins 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\n\n\n# 返回说明\n\n返回 PinsMessage 对象。\n\n\n# PinsMessage\n\n字段名          类型         描述\nGuildID      string     频道 ID\nChannelID    string     子频道 ID\nMessageIDs   string[]   消息 ID\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取精华消息\n\n用于获取子频道 channelid 内的精华消息。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\npinsmessage, err := api.getpins(ctx, channelid)\nif err != nil {\n  log.fatalln("调用 getpins 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\n\n\n# 返回说明\n\n返回 pinsmessage 对象。\n\n\n# pinsmessage\n\n字段名          类型         描述\nguildid      string     频道 id\nchannelid    string     子频道 id\nmessageids   string[]   消息 id\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"禁言指定成员",frontmatter:{},regularPath:"/develop/gosdk/api/mute/mute_member.html",relativePath:"develop/gosdk/api/mute/mute_member.md",key:"v-423c25dd",path:"/develop/gosdk/api/mute/mute_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:31},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:357},{level:3,title:"UpdateGuildMute",slug:"updateguildmute",normalizedTitle:"updateguildmute",charIndex:217}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 UpdateGuildMute",content:'# 禁言指定成员\n\n将频道指定成员（非管理员）禁言。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.MemberMute(ctx, guildId, userId, &dto.UpdateGuildMute{\n    MuteSeconds: "60",\n})\nif err != nil {\n    log.Fatalln("调用 MemberMute 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名               必填   类型                描述\nguildId           是    string            频道 ID\nuserId            是    string            用户ID\nUpdateGuildMute   是    UpdateGuildMute   禁言时长控制参数\n\n\n# UpdateGuildMute\n\n字段名                类型       描述\nMuteEndTimestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nMuteSeconds        string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）',normalizedContent:'# 禁言指定成员\n\n将频道指定成员（非管理员）禁言。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.membermute(ctx, guildid, userid, &dto.updateguildmute{\n    muteseconds: "60",\n})\nif err != nil {\n    log.fatalln("调用 membermute 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名               必填   类型                描述\nguildid           是    string            频道 id\nuserid            是    string            用户id\nupdateguildmute   是    updateguildmute   禁言时长控制参数\n\n\n# updateguildmute\n\n字段名                类型       描述\nmuteendtimestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nmuteseconds        string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除表情表态",frontmatter:{},regularPath:"/develop/gosdk/api/reaction/delete_reaction.html",relativePath:"develop/gosdk/api/reaction/delete_reaction.md",key:"v-2f6e0543",path:"/develop/gosdk/api/reaction/delete_reaction.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:35},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:387},{level:2,title:"Emoji",slug:"emoji",normalizedTitle:"emoji",charIndex:235}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 Emoji",content:'# 删除表情表态\n\n删除自己对消息 msgId 的表情表态。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeleteOwnMessageReaction(ctx, channelId, msgId, dto.Emoji{\n    ID:   "4",\n    Type: 1,\n})\nif err != nil {\n    log.Fatalln("调用 DeleteOwnMessageReaction 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmsgId       是    string   消息 ID\nEmoji       是    Emoji    emoji表情\n\n\n# Emoji\n\n字段名        必填   类型       描述\ntype       是    int      表情类型，参考EmojiType\nemoji_id   是    string   表情 ID，参考 Emoji 列表',normalizedContent:'# 删除表情表态\n\n删除自己对消息 msgid 的表情表态。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deleteownmessagereaction(ctx, channelid, msgid, dto.emoji{\n    id:   "4",\n    type: 1,\n})\nif err != nil {\n    log.fatalln("调用 deleteownmessagereaction 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmsgid       是    string   消息 id\nemoji       是    emoji    emoji表情\n\n\n# emoji\n\n字段名        必填   类型       描述\ntype       是    int      表情类型，参考emojitype\nemoji_id   是    string   表情 id，参考 emoji 列表',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发表表情表态",frontmatter:{},regularPath:"/develop/gosdk/api/reaction/post_reaction.html",relativePath:"develop/gosdk/api/reaction/post_reaction.md",key:"v-acd36226",path:"/develop/gosdk/api/reaction/post_reaction.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:35},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:381},{level:2,title:"Emoji",slug:"emoji",normalizedTitle:"emoji",charIndex:232}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 Emoji",content:'# 发表表情表态\n\n用于在指定子频道向某条消息发表表情表态。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.CreateMessageReaction(ctx, channelId, msgId, dto.Emoji{\n    ID:   "4",\n    Type: 1,\n})\nif err != nil {\n    log.Fatalln("调用 CreateMessageReaction 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmsgId       是    string   消息 ID\nEmoji       是    Emoji    emoji表情\n\n\n# Emoji\n\n字段名    必填   类型       描述\nType   是    int      表情类型，参考EmojiType\nID     是    string   表情 ID，参考 Emoji 列表',normalizedContent:'# 发表表情表态\n\n用于在指定子频道向某条消息发表表情表态。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.createmessagereaction(ctx, channelid, msgid, dto.emoji{\n    id:   "4",\n    type: 1,\n})\nif err != nil {\n    log.fatalln("调用 createmessagereaction 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmsgid       是    string   消息 id\nemoji       是    emoji    emoji表情\n\n\n# emoji\n\n字段名    必填   类型       描述\ntype   是    int      表情类型，参考emojitype\nid     是    string   表情 id，参考 emoji 列表',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除日程",frontmatter:{},regularPath:"/develop/gosdk/api/schedule/delete_schedule.html",relativePath:"develop/gosdk/api/schedule/delete_schedule.md",key:"v-82a1a0ea",path:"/develop/gosdk/api/schedule/delete_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:69},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:356}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明",content:'# 删除日程\n\n删除日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nerr := api.DeleteSchedule(ctx, channelId, scheduleId)\nif err != nil {\n    log.Fatalln("调用 DeleteSchedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelId    是    string   子频道 ID\nscheduleId   是    string   日程 ID',normalizedContent:'# 删除日程\n\n删除日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nerr := api.deleteschedule(ctx, channelid, scheduleid)\nif err != nil {\n    log.fatalln("调用 deleteschedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelid    是    string   子频道 id\nscheduleid   是    string   日程 id',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取日程详情",frontmatter:{},regularPath:"/develop/gosdk/api/schedule/get_schedule.html",relativePath:"develop/gosdk/api/schedule/get_schedule.md",key:"v-587befe6",path:"/develop/gosdk/api/schedule/get_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:314},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:421},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:186},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:673},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:814},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:728},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1271}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 获取日程详情\n\n获取某个日程的详情。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nschedule, err := api.GetSchedule(ctx, channelId, scheduleId)\nif err != nil {\n  log.Fatalln("调用 GetSchedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelId    是    string   子频道 ID\nscheduleId   是    string   日程 ID\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Schedule\n\n字段名              类型       描述\nID               string   日程 ID\nName             string   日程名称\nDescription      string   日程描述\nStartTimestamp   string   日程开始时间戳(ms)\nEndTimestamp     string   日程结束时间戳(ms)\nCreator          Member   创建者\nJumpChannelID    string   日程开始时跳转到的子频道 ID\nRemindType       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名        类型          描述\nUser       User        用户的频道基础信息，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nID         string    用户 ID\nUsername   string    用户名\nBot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取日程详情\n\n获取某个日程的详情。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nschedule, err := api.getschedule(ctx, channelid, scheduleid)\nif err != nil {\n  log.fatalln("调用 getschedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelid    是    string   子频道 id\nscheduleid   是    string   日程 id\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# schedule\n\n字段名              类型       描述\nid               string   日程 id\nname             string   日程名称\ndescription      string   日程描述\nstarttimestamp   string   日程开始时间戳(ms)\nendtimestamp     string   日程结束时间戳(ms)\ncreator          member   创建者\njumpchannelid    string   日程开始时跳转到的子频道 id\nremindtype       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名        类型          描述\nuser       user        用户的频道基础信息，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取日程列表",frontmatter:{},regularPath:"/develop/gosdk/api/schedule/get_schedules.html",relativePath:"develop/gosdk/api/schedule/get_schedules.md",key:"v-22ed0f7b",path:"/develop/gosdk/api/schedule/get_schedules.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:33},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:318},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:516},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:196},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:768},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:909},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:823},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1366}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 获取日程列表\n\n获取某个日程子频道中当天的日程列表。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nschedules, err := api.ListSchedules(ctx, channelId, 0)\nif err != nil {\n  log.Fatalln("调用 ListSchedules 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nsince       否    uint64   起始时间戳(ms)\n\n注意\n\nsince 需是毫秒级别的时间戳（13位）。\n\n若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# 返回说明\n\n返回 Schedule 数组。\n\n\n# Schedule\n\n字段名              类型       描述\nID               string   日程 ID\nName             string   日程名称\nDescription      string   日程描述\nStartTimestamp   string   日程开始时间戳(ms)\nEndTimestamp     string   日程结束时间戳(ms)\nCreator          Member   创建者\nJumpChannelID    string   日程开始时跳转到的子频道 ID\nRemindType       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名        类型          描述\nUser       User        用户的频道基础信息，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nID         string    用户 ID\nUsername   string    用户名\nBot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "xxxxxx",\n    "description": "xxxxxx",\n    "start_timestamp": "1641913200000",\n    "end_timestamp": "1641916800000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": false\n      },\n      "nick": "",\n      "joined_at": "2021-11-24T16:51:35+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "2"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 获取日程列表\n\n获取某个日程子频道中当天的日程列表。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nschedules, err := api.listschedules(ctx, channelid, 0)\nif err != nil {\n  log.fatalln("调用 listschedules 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nsince       否    uint64   起始时间戳(ms)\n\n注意\n\nsince 需是毫秒级别的时间戳（13位）。\n\n若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# 返回说明\n\n返回 schedule 数组。\n\n\n# schedule\n\n字段名              类型       描述\nid               string   日程 id\nname             string   日程名称\ndescription      string   日程描述\nstarttimestamp   string   日程开始时间戳(ms)\nendtimestamp     string   日程结束时间戳(ms)\ncreator          member   创建者\njumpchannelid    string   日程开始时跳转到的子频道 id\nremindtype       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名        类型          描述\nuser       user        用户的频道基础信息，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "xxxxxx",\n    "description": "xxxxxx",\n    "start_timestamp": "1641913200000",\n    "end_timestamp": "1641916800000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": false\n      },\n      "nick": "",\n      "joined_at": "2021-11-24t16:51:35+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "2"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改日程",frontmatter:{},regularPath:"/develop/gosdk/api/schedule/update_schedule.html",relativePath:"develop/gosdk/api/schedule/update_schedule.md",key:"v-32a61847",path:"/develop/gosdk/api/schedule/update_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:69},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:470},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:233},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1030},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:913},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1090},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:341},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1547}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 Schedule 返回说明 Member User RemindType 返回示例",content:'# 修改日程\n\n修改日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nschedule, err := api.ModifySchedule(ctx, channelId, scheduleId, &dto.Schedule{\n  StartTimestamp: "开始时间戳",\n  EndTimestamp:   "结束时间戳",\n  RemindType:     "1",\n})\nif err != nil {\n  log.Fatalln("调用 ModifySchedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名          必填   类型         描述\nchannelId    是    string     子频道 ID\nscheduleId   是    string     日程 ID\nSchedule     是    Schedule   日程对象\n\n\n# Schedule\n\n字段名              必填   类型       描述\nID               不填   string   日程 ID\nName             否    string   日程名称\nDescription      否    string   日程描述\nStartTimestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nEndTimestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\nCreator          否    Member   创建者\nJumpChannelID    否    string   日程开始时跳转到的子频道 ID\nRemindType       是    string   日程提醒类型，取值参考RemindType\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Member\n\n字段名        类型          描述\nUser       User        用户的频道基础信息，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nID         string    用户 ID\nUsername   string    用户名\nBot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 修改日程\n\n修改日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nschedule, err := api.modifyschedule(ctx, channelid, scheduleid, &dto.schedule{\n  starttimestamp: "开始时间戳",\n  endtimestamp:   "结束时间戳",\n  remindtype:     "1",\n})\nif err != nil {\n  log.fatalln("调用 modifyschedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名          必填   类型         描述\nchannelid    是    string     子频道 id\nscheduleid   是    string     日程 id\nschedule     是    schedule   日程对象\n\n\n# schedule\n\n字段名              必填   类型       描述\nid               不填   string   日程 id\nname             否    string   日程名称\ndescription      否    string   日程描述\nstarttimestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nendtimestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\ncreator          否    member   创建者\njumpchannelid    否    string   日程开始时跳转到的子频道 id\nremindtype       是    string   日程提醒类型，取值参考remindtype\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# member\n\n字段名        类型          描述\nuser       user        用户的频道基础信息，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建日程",frontmatter:{},regularPath:"/develop/gosdk/api/schedule/post_schedule.html",relativePath:"develop/gosdk/api/schedule/post_schedule.md",key:"v-43f3ab35",path:"/develop/gosdk/api/schedule/post_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:68},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:469},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:232},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:991},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:874},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1051},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:341},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1508}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 Schedule 返回说明 Member User RemindType 返回示例",content:'# 创建日程\n\n在日程子频道创建一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nschedule, err := api.CreateSchedule(ctx, channelId, &dto.Schedule{\n  Name: "日程表",\n  StartTimestamp: "开始时间戳",\n  EndTimestamp: "结束时间戳",\n  RemindType: "1",\n})\nif err != nil {\n  log.Fatalln("调用 CreateSchedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 参数说明\n\n字段名         必填   类型         描述\nchannelId   是    string     子频道 ID\nSchedule    是    Schedule   日程对象\n\n\n# Schedule\n\n字段名              必填   类型       描述\nID               否    string   日程 ID\nName             是    string   日程名称\nDescription      否    string   日程描述\nStartTimestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nEndTimestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\nCreator          否    Member   创建者\nJumpChannelID    否    string   日程开始时跳转到的子频道 ID\nRemindType       是    string   日程提醒类型，取值参考RemindType\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Member\n\n字段名        类型          描述\nUser       User        用户的频道基础信息，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nID         string    用户 ID\nUsername   string    用户名\nBot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 创建日程\n\n在日程子频道创建一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nschedule, err := api.createschedule(ctx, channelid, &dto.schedule{\n  name: "日程表",\n  starttimestamp: "开始时间戳",\n  endtimestamp: "结束时间戳",\n  remindtype: "1",\n})\nif err != nil {\n  log.fatalln("调用 createschedule 接口失败, err = ", err)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 参数说明\n\n字段名         必填   类型         描述\nchannelid   是    string     子频道 id\nschedule    是    schedule   日程对象\n\n\n# schedule\n\n字段名              必填   类型       描述\nid               否    string   日程 id\nname             是    string   日程名称\ndescription      否    string   日程描述\nstarttimestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nendtimestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\ncreator          否    member   创建者\njumpchannelid    否    string   日程开始时跳转到的子频道 id\nremindtype       是    string   日程提醒类型，取值参考remindtype\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# member\n\n字段名        类型          描述\nuser       user        用户的频道基础信息，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取当前用户信息",frontmatter:{},regularPath:"/develop/gosdk/api/user/me.html",relativePath:"develop/gosdk/api/user/me.md",key:"v-72809de6",path:"/develop/gosdk/api/user/me.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:15},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:271},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:289},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:637}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 返回说明 User 返回示例",content:'# 获取当前用户信息\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nuser, meError := api.Me(ctx)\nif meError != nil {\n  log.Fatalln("调用 Me 接口失败, err = ", meError)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 返回说明\n\n使用当前用户信息填充的 User 对象\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "username": "zsh-测试中",\n  "avatar": "xxxxxx",\n  "union_openid": "xxxxxx",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 获取当前用户信息\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nuser, meerror := api.me(ctx)\nif meerror != nil {\n  log.fatalln("调用 me 接口失败, err = ", meerror)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 返回说明\n\n使用当前用户信息填充的 user 对象\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "username": "zsh-测试中",\n  "avatar": "xxxxxx",\n  "union_openid": "xxxxxx",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"公告对象（Announces）",frontmatter:{},regularPath:"/develop/gosdk/model/announce.html",relativePath:"develop/gosdk/model/announce.md",key:"v-69a3d206",path:"/develop/gosdk/model/announce.html",headers:[{level:2,title:"Announces",slug:"announces",normalizedTitle:"announces",charIndex:7},{level:2,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:297}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Announces RecommendChannel",content:"# 公告对象（Announces）\n\n\n# Announces\n\n字段名                 类型                     描述\nGuildID             string                 频道 ID\nChannelID           string                 子频道 ID\nMessageID           string                 消息 ID\nAnnouncesType       uint32                 公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nRecommendChannels   []* RecommendChannel   推荐子频道列表\n\n\n# RecommendChannel\n\n字段名         类型       描述\nChannelID   string   子频道 ID\nIntroduce   string   推荐语",normalizedContent:"# 公告对象（announces）\n\n\n# announces\n\n字段名                 类型                     描述\nguildid             string                 频道 id\nchannelid           string                 子频道 id\nmessageid           string                 消息 id\nannouncestype       uint32                 公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommendchannels   []* recommendchannel   推荐子频道列表\n\n\n# recommendchannel\n\n字段名         类型       描述\nchannelid   string   子频道 id\nintroduce   string   推荐语",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"API 权限对象",frontmatter:{},regularPath:"/develop/gosdk/model/api_permission.html",relativePath:"develop/gosdk/model/api_permission.md",key:"v-51063227",path:"/develop/gosdk/model/api_permission.html",headers:[{level:2,title:"接口权限对象(APIPermission)",slug:"接口权限对象-apipermission",normalizedTitle:"接口权限对象(apipermission)",charIndex:15},{level:3,title:"APIPermission",slug:"apipermission",normalizedTitle:"apipermission",charIndex:22},{level:2,title:"接口权限需求对象（APIPermissionDemand）",slug:"接口权限需求对象-apipermissiondemand",normalizedTitle:"接口权限需求对象（apipermissiondemand）",charIndex:276},{level:3,title:"APIPermissionDemand",slug:"apipermissiondemand",normalizedTitle:"apipermissiondemand",charIndex:285},{level:2,title:"接口权限需求标识对象（APIPermissionDemandIdentify）",slug:"接口权限需求标识对象-apipermissiondemandidentify",normalizedTitle:"接口权限需求标识对象（apipermissiondemandidentify）",charIndex:683},{level:3,title:"APIPermissionDemandIdentify",slug:"apipermissiondemandidentify",normalizedTitle:"apipermissiondemandidentify",charIndex:513}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"接口权限对象(APIPermission) APIPermission 接口权限需求对象（APIPermissionDemand） APIPermissionDemand 接口权限需求标识对象（APIPermissionDemandIdentify） APIPermissionDemandIdentify",content:"# API 权限对象\n\n\n# 接口权限对象(APIPermission)\n\n\n# APIPermission\n\n字段名          类型       描述\nPath         string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nMethod       string   请求方法，例如 GET\nDesc         string   API 接口名称，例如 获取频道信\nAuthStatus   int      授权状态，AuthStatus 为 1 时已授权\n\n\n# 接口权限需求对象（APIPermissionDemand）\n\n\n# APIPermissionDemand\n\n字段名           类型                            描述\nGuildID       string                        申请接口权限的频道 ID\nChannelID     string                        接口权限需求授权链接发送的子频道 ID\nAPIIdentify   APIPermissionDemandIdentify   权限接口唯一标识\nTitle         string                        接口权限链接中的接口权限描述信息\nDesc          string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（APIPermissionDemandIdentify）\n\n\n# APIPermissionDemandIdentify\n\n字段名      类型       描述\nPath     string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nMethod   string   请求方法，例如 GET",normalizedContent:"# api 权限对象\n\n\n# 接口权限对象(apipermission)\n\n\n# apipermission\n\n字段名          类型       描述\npath         string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod       string   请求方法，例如 get\ndesc         string   api 接口名称，例如 获取频道信\nauthstatus   int      授权状态，authstatus 为 1 时已授权\n\n\n# 接口权限需求对象（apipermissiondemand）\n\n\n# apipermissiondemand\n\n字段名           类型                            描述\nguildid       string                        申请接口权限的频道 id\nchannelid     string                        接口权限需求授权链接发送的子频道 id\napiidentify   apipermissiondemandidentify   权限接口唯一标识\ntitle         string                        接口权限链接中的接口权限描述信息\ndesc          string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（apipermissiondemandidentify）\n\n\n# apipermissiondemandidentify\n\n字段名      类型       描述\npath     string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 get",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"语音对象(AudioControl)",frontmatter:{},regularPath:"/develop/gosdk/model/audio.html",relativePath:"develop/gosdk/model/audio.md",key:"v-ffe26726",path:"/develop/gosdk/model/audio.html",headers:[{level:2,title:"AudioControl",slug:"audiocontrol",normalizedTitle:"audiocontrol",charIndex:7},{level:3,title:"AudioStatus",slug:"audiostatus",normalizedTitle:"audiostatus",charIndex:187},{level:2,title:"AudioAction",slug:"audioaction",normalizedTitle:"audioaction",charIndex:316}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"AudioControl AudioStatus AudioAction",content:"# 语音对象(AudioControl)\n\n\n# AudioControl\n\n字段名      类型       描述\nURL      string   音频数据的 url status 为 0 时传\nText     string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nStatus   STATUS   播放状态，参考 AudioStatus\n\n\n# AudioStatus\n\n字段名      值   描述\nSTART    0   开始播放操作\nPAUSE    1   暂停播放操作\nRESUME   2   继续播放操作\nSTOP     3   停止播放操作\n\n\n# AudioAction\n\n字段名         类型       描述\nGuildID     string   频道 ID\nChannelID   string   子频道 ID\nURL         string   音频数据的 url status 为 0 时传\nText        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传",normalizedContent:"# 语音对象(audiocontrol)\n\n\n# audiocontrol\n\n字段名      类型       描述\nurl      string   音频数据的 url status 为 0 时传\ntext     string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus   status   播放状态，参考 audiostatus\n\n\n# audiostatus\n\n字段名      值   描述\nstart    0   开始播放操作\npause    1   暂停播放操作\nresume   2   继续播放操作\nstop     3   停止播放操作\n\n\n# audioaction\n\n字段名         类型       描述\nguildid     string   频道 id\nchannelid   string   子频道 id\nurl         string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取当前用户频道列表",frontmatter:{},regularPath:"/develop/gosdk/api/user/me_guilds.html",relativePath:"develop/gosdk/api/user/me_guilds.md",key:"v-28e4d12a",path:"/develop/gosdk/api/user/me_guilds.html",headers:[{level:3,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:17},{level:3,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:322},{level:3,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:551},{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:164},{level:3,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:936}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"使用示例 参数说明 返回说明 Guild 返回示例",content:'# 获取当前用户频道列表\n\n\n# 使用示例\n\ntoken := token.BotToken("appid", "token")\napi := botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\nctx := context.Background()\n\nguilds, meGuildError := api.MeGuilds(ctx, &dto.GuildPager{})\nif meGuildError != nil {\n    log.Fatalln("调用 MeGuild 接口失败, err = ", meGuildError)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\nGuildPager表示获取频道列表范围\n\n字段名      必填   类型       描述\nbefore   否    string   读取此 guild id 之前的数据\nafter    否    string   读取此 guild id 之后的数据\nlimit    否    number   每次拉取多少条数据，最大不超过 100，默认 100\n\n注意\n\nbefore、after 同时存在时，以 before 为准。\n\n\n# 返回说明\n\n当前用户所加入的所有 Guild 对象列表\n\n\n# Guild\n\n字段名           类型          描述\nID            string      频道 ID\nName          string      频道名称\nIcon          string      频道头像\nOwnerID       string      拥有者ID\nIsOwner       bool        当前人是否是创建人\nMemberCount   int         成员数\nMaxMembers    int64       最大成员数\nDesc          string      描述\nJoinedAt      Timestamp   当前用户加入群的时间，此字段只在GUILD_CREATE事件中使用\n\n\n# 返回示例\n\ndata：\n\n[{\n    "id": "696527283900292399",\n    "name": "鹅们的萌宠啦咔咔啦",\n    "icon": "https://groupprohead-76292.picgzc.qpic.cn/482231626508223/100?t=1626508224633",\n    "owner_id": "4828365788198541698",\n    "owner": false,\n    "joined_at": "2021-12-08T16:12:31+08:00",\n    "member_count": 17,\n    "max_members": 300,\n    "description": "123"\n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 获取当前用户频道列表\n\n\n# 使用示例\n\ntoken := token.bottoken("appid", "token")\napi := botgo.newopenapi(token).withtimeout(3 * time.second)\nctx := context.background()\n\nguilds, meguilderror := api.meguilds(ctx, &dto.guildpager{})\nif meguilderror != nil {\n    log.fatalln("调用 meguild 接口失败, err = ", meguilderror)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数说明\n\nguildpager表示获取频道列表范围\n\n字段名      必填   类型       描述\nbefore   否    string   读取此 guild id 之前的数据\nafter    否    string   读取此 guild id 之后的数据\nlimit    否    number   每次拉取多少条数据，最大不超过 100，默认 100\n\n注意\n\nbefore、after 同时存在时，以 before 为准。\n\n\n# 返回说明\n\n当前用户所加入的所有 guild 对象列表\n\n\n# guild\n\n字段名           类型          描述\nid            string      频道 id\nname          string      频道名称\nicon          string      频道头像\nownerid       string      拥有者id\nisowner       bool        当前人是否是创建人\nmembercount   int         成员数\nmaxmembers    int64       最大成员数\ndesc          string      描述\njoinedat      timestamp   当前用户加入群的时间，此字段只在guild_create事件中使用\n\n\n# 返回示例\n\ndata：\n\n[{\n    "id": "696527283900292399",\n    "name": "鹅们的萌宠啦咔咔啦",\n    "icon": "https://groupprohead-76292.picgzc.qpic.cn/482231626508223/100?t=1626508224633",\n    "owner_id": "4828365788198541698",\n    "owner": false,\n    "joined_at": "2021-12-08t16:12:31+08:00",\n    "member_count": 17,\n    "max_members": 300,\n    "description": "123"\n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道对象(Channel)",frontmatter:{},regularPath:"/develop/gosdk/model/channel.html",relativePath:"develop/gosdk/model/channel.md",key:"v-b5feab66",path:"/develop/gosdk/model/channel.html",headers:[{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:8},{level:3,title:"有关 position 的说明",slug:"有关-position-的说明",normalizedTitle:"有关 position 的说明",charIndex:621},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:245},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:291},{level:3,title:"SpeakPermissionType",slug:"speakpermissiontype",normalizedTitle:"speakpermissiontype",charIndex:512},{level:3,title:"ChannelPrivateType",slug:"channelprivatetype",normalizedTitle:"channelprivatetype",charIndex:458},{level:3,title:"应用子频道的应用类型",slug:"应用子频道的应用类型",normalizedTitle:"应用子频道的应用类型",charIndex:1255}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Channel 有关 position 的说明 ChannelType ChannelSubType SpeakPermissionType ChannelPrivateType 应用子频道的应用类型",content:"# 子频道对象(Channel)\n\n子频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# Channel\n\n字段名               类型       描述\nID                string   子频道id\nGuildID           string   频道id\nName              string   子频道名\nType              int      子频道类型 ChannelType\nSubType           int      子频道子类型 ChannelSubType\nPosition          int64    排序，必填，而且不能够和其他子频道的值重复\nParentID          string   分组 id\nOwnerID           string   创建人 id\nPrivateType       int      子频道的可见类型 ChannelPrivateType\nSpeakPermission   int      子频道发言权限 SpeakPermissionType\nApplicationID     string   应用子频道的应用ID，仅应用子频道有效\nPermissions       string   用户拥有的子频道权限\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始。\n * 当子频道类型为 子频道分组（ChannelType=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始。\n * 如果不传默认追加到分组下最后一个。\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前。\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值。\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知类型的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# SpeakPermissionType\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# ChannelPrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   CoDM 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于 QQ 频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",normalizedContent:"# 子频道对象(channel)\n\n子频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# channel\n\n字段名               类型       描述\nid                string   子频道id\nguildid           string   频道id\nname              string   子频道名\ntype              int      子频道类型 channeltype\nsubtype           int      子频道子类型 channelsubtype\nposition          int64    排序，必填，而且不能够和其他子频道的值重复\nparentid          string   分组 id\nownerid           string   创建人 id\nprivatetype       int      子频道的可见类型 channelprivatetype\nspeakpermission   int      子频道发言权限 speakpermissiontype\napplicationid     string   应用子频道的应用id，仅应用子频道有效\npermissions       string   用户拥有的子频道权限\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始。\n * 当子频道类型为 子频道分组（channeltype=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始。\n * 如果不传默认追加到分组下最后一个。\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前。\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值。\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知类型的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# speakpermissiontype\n\n值   描述\n0   公开发言权限\n1   指定成员可发言\n\n\n# channelprivatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   codm 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于 qq 频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道权限对象(ChannelPermissions)",frontmatter:{},regularPath:"/develop/gosdk/model/channel_permission.html",relativePath:"develop/gosdk/model/channel_permission.md",key:"v-f76b258e",path:"/develop/gosdk/model/channel_permission.html",headers:[{level:3,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:10},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:17}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"ChannelPermissions Permissions",content:'# 子频道权限对象(ChannelPermissions)\n\n\n# ChannelPermissions\n\n字段名           类型            描述\nChannelID     string        子频道 ID\nUserID        string        用户 ID\nPermissions   permissions   用户拥有的子频道权限，是个 string\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n\n# 参数参考\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限',normalizedContent:'# 子频道权限对象(channelpermissions)\n\n\n# channelpermissions\n\n字段名           类型            描述\nchannelid     string        子频道 id\nuserid        string        用户 id\npermissions   permissions   用户拥有的子频道权限，是个 string\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6fff，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n\n# 参数参考\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"私信会话对象（DirectMessage）",frontmatter:{},regularPath:"/develop/gosdk/model/dms.html",relativePath:"develop/gosdk/model/dms.md",key:"v-3d0bb0ad",path:"/develop/gosdk/model/dms.html",headers:[{level:2,title:"DirectMessage",slug:"directmessage",normalizedTitle:"directmessage",charIndex:9}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"DirectMessage",content:"# 私信会话对象（DirectMessage）\n\n\n# DirectMessage\n\n字段名          类型       描述\nGuildID      string   频道 ID\nChannelID    string   子频道 ID\nCreateTime   string   创建时间",normalizedContent:"# 私信会话对象（directmessage）\n\n\n# directmessage\n\n字段名          类型       描述\nguildid      string   频道 id\nchannelid    string   子频道 id\ncreatetime   string   创建时间",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情对象",frontmatter:{},regularPath:"/develop/gosdk/model/emoji.html",relativePath:"develop/gosdk/model/emoji.md",key:"v-4d36f66d",path:"/develop/gosdk/model/emoji.html",headers:[{level:3,title:"Emoji",slug:"emoji",normalizedTitle:"emoji",charIndex:26},{level:3,title:"EmojiType",slug:"emojitype",normalizedTitle:"emojitype",charIndex:114},{level:3,title:"Emoji 列表",slug:"emoji-列表",normalizedTitle:"emoji 列表",charIndex:158}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Emoji EmojiType Emoji 列表",content:"# 表情对象\n\n用来表示一个表情基本单位。\n\n\n# Emoji\n\n字段名    必填   类型       描述\nType   是    int      表情类型\nID     是    string   表情 ID\n\n\n# EmojiType\n\n值   描述\n1   系统表情\n2   emoji 表情\n\n\n# Emoji 列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的 QQ 系统表情类型（EmojiType=1）来处理。\n\n表情类型   表情 ID    表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      NO\n1      124      OK\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",normalizedContent:"# 表情对象\n\n用来表示一个表情基本单位。\n\n\n# emoji\n\n字段名    必填   类型       描述\ntype   是    int      表情类型\nid     是    string   表情 id\n\n\n# emojitype\n\n值   描述\n1   系统表情\n2   emoji 表情\n\n\n# emoji 列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的 qq 系统表情类型（emojitype=1）来处理。\n\n表情类型   表情 id    表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      no\n1      124      ok\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"成员对象(Member)",frontmatter:{},regularPath:"/develop/gosdk/model/member.html",relativePath:"develop/gosdk/model/member.md",key:"v-1279841b",path:"/develop/gosdk/model/member.html",headers:[{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:7},{level:2,title:"Timestamp",slug:"timestamp",normalizedTitle:"timestamp",charIndex:238}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Member Timestamp",content:'# 成员对象(Member)\n\n\n# Member\n\n字段名        类型          描述\nGuildID    string      频道ID\nUser       User        用户基础信息，来自 QQ 资料，只有成员相关接口中会填充此信息\nNick       string      用户在频道内的昵称\nRoles      string[]    用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\nJoinedAt   Timestamp   用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# Timestamp\n\n字段名         类型       描述\nTimestamp   string   时间',normalizedContent:'# 成员对象(member)\n\n\n# member\n\n字段名        类型          描述\nguildid    string      频道id\nuser       user        用户基础信息，来自 qq 资料，只有成员相关接口中会填充此信息\nnick       string      用户在频道内的昵称\nroles      string[]    用户在频道内的身份组 id，默认值可参考defaultroleids\njoinedat   timestamp   用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# timestamp\n\n字段名         类型       描述\ntimestamp   string   时间',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道对象(Guild)",frontmatter:{},regularPath:"/develop/gosdk/model/guild.html",relativePath:"develop/gosdk/model/guild.md",key:"v-5255e166",path:"/develop/gosdk/model/guild.html",headers:[{level:2,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:7}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Guild",content:"# 频道对象(Guild)\n\n频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# Guild\n\n字段名           类型          描述\nID            string      频道 ID\nName          string      频道名称\nIcon          string      频道头像\nOwnerID       string      拥有者ID\nIsOwner       bool        当前人是否是创建人\nMemberCount   int         成员数\nMaxMembers    int64       最大成员数\nDesc          string      描述\nJoinedAt      Timestamp   当前用户加入群的时间，此字段只在GUILD_CREATE事件中使用",normalizedContent:"# 频道对象(guild)\n\n频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# guild\n\n字段名           类型          描述\nid            string      频道 id\nname          string      频道名称\nicon          string      频道头像\nownerid       string      拥有者id\nisowner       bool        当前人是否是创建人\nmembercount   int         成员数\nmaxmembers    int64       最大成员数\ndesc          string      描述\njoinedat      timestamp   当前用户加入群的时间，此字段只在guild_create事件中使用",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息对象(Message)",frontmatter:{},regularPath:"/develop/gosdk/model/message.html",relativePath:"develop/gosdk/model/message.md",key:"v-53308a66",path:"/develop/gosdk/model/message.html",headers:[{level:2,title:"Message",slug:"message",normalizedTitle:"message",charIndex:7},{level:2,title:"MessageSendRequest",slug:"messagesendrequest",normalizedTitle:"messagesendrequest",charIndex:1209},{level:2,title:"MessageEmbed",slug:"messageembed",normalizedTitle:"messageembed",charIndex:724},{level:2,title:"MessageEmbedField",slug:"messageembedfield",normalizedTitle:"messageembedfield",charIndex:1931},{level:2,title:"MessageAttachment",slug:"messageattachment",normalizedTitle:"messageattachment",charIndex:679},{level:2,title:"MessageArk",slug:"messageark",normalizedTitle:"messageark",charIndex:880},{level:2,title:"MessageArkKv",slug:"messagearkkv",normalizedTitle:"messagearkkv",charIndex:2243},{level:2,title:"MessageArkObj",slug:"messagearkobj",normalizedTitle:"messagearkobj",charIndex:2356},{level:2,title:"MessageArkObjKv",slug:"messagearkobjkv",normalizedTitle:"messagearkobjkv",charIndex:2448},{level:2,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:1176},{level:2,title:"MessageAudited",slug:"messageaudited",normalizedTitle:"messageaudited",charIndex:2750}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Message MessageSendRequest MessageEmbed MessageEmbedField MessageAttachment MessageArk MessageArkKv MessageArkObj MessageArkObjKv MessageReference MessageAudited",content:'# 消息对象(Message)\n\n\n# Message\n\n字段名                 类型                    描述\nid                  string                消息 id\nchannel_id          string                子频道 ID\nguild_id            string                频道 ID\ncontent             string                消息内容\ntimestamp           string                消息创建时间，是个 iISO8601 timestamp\n                                          字符串，例："2021-11-23T15:16:48+08:00"\nedited_timestamp    string                消息编辑时间，是个 iISO8601 timestamp\n                                          字符串，例："2021-11-23T15:16:48+08:00"\nmention_everyone    boolean               是否是@全员消息\nauthor              User                  消息创建者\nattachments         MessageAttachment[]   附件\nembeds              MessageEmbed[]        embed\nmentions            User                  消息中@的人\nmember              Member                消息创建者的 member 信息\nark                 MessageArk            ark 消息\nseq                 number                用于消息间的排序，seq\n                                          在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序。(目前只在消息事件中有值，后续废弃)\nseq_in_channel      string                子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序\nmessage_reference   MessageReference      引用消息对象\n\n\n# MessageSendRequest\n\n字段名                 类型                 描述\ncontent             string             消息内容，文本内容，支持内嵌格式\nembed               MessageEmbed       embed 消息，一种特殊的 ark\nark                 MessageArk         ark 消息\nimage               string             图片 url 地址\nmsg_id              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessage_reference   MessageReference   引用消息对象\n\n\n# MessageEmbed\n\n字段名           类型                    描述\ntitle         string                标题\ndescription   string                描述\nprompt        string                消息弹窗内容\ntimestamp     string                消息创建时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\nfields        MessageEmbedField[]   消息体\n\n\n# MessageEmbedField\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# MessageAttachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# MessageArk\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            MessageAkrKv[]   kv 值列表\n\n\n# MessageArkKv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     MessageArkObj[]   ark obj 类型的列表\n\n\n# MessageArkObj\n\n字段名      类型                  描述\nobj_kv   MessageArkObjKv[]   ark objkv 列表\n\n\n# MessageArkObjKv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# MessageReference\n\n字段名                        类型        必填 ｜描述\nmessage_id                 string    是 ｜ 需要引用回复的消息 ID\nignore_get_message_error   boolean   否 ｜ 是否忽略获取引用消息详情错误，默认否\n\n\n# MessageAudited\n\n消息审核对象\n\n字段名              类型                 描述\naudit_id         string             消息审核 ID\nmessage_id       string             消息 ID，只有审核通过事件才会有值\nguild_id         string             频道 ID\nchannel_id       string             子频道 ID\naudit_time       string             消息审核时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\ncreate_time      string timestamp   消息创建时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\nseq_in_channel   string             子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序',normalizedContent:'# 消息对象(message)\n\n\n# message\n\n字段名                 类型                    描述\nid                  string                消息 id\nchannel_id          string                子频道 id\nguild_id            string                频道 id\ncontent             string                消息内容\ntimestamp           string                消息创建时间，是个 iiso8601 timestamp\n                                          字符串，例："2021-11-23t15:16:48+08:00"\nedited_timestamp    string                消息编辑时间，是个 iiso8601 timestamp\n                                          字符串，例："2021-11-23t15:16:48+08:00"\nmention_everyone    boolean               是否是@全员消息\nauthor              user                  消息创建者\nattachments         messageattachment[]   附件\nembeds              messageembed[]        embed\nmentions            user                  消息中@的人\nmember              member                消息创建者的 member 信息\nark                 messageark            ark 消息\nseq                 number                用于消息间的排序，seq\n                                          在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序。(目前只在消息事件中有值，后续废弃)\nseq_in_channel      string                子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序\nmessage_reference   messagereference      引用消息对象\n\n\n# messagesendrequest\n\n字段名                 类型                 描述\ncontent             string             消息内容，文本内容，支持内嵌格式\nembed               messageembed       embed 消息，一种特殊的 ark\nark                 messageark         ark 消息\nimage               string             图片 url 地址\nmsg_id              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessage_reference   messagereference   引用消息对象\n\n\n# messageembed\n\n字段名           类型                    描述\ntitle         string                标题\ndescription   string                描述\nprompt        string                消息弹窗内容\ntimestamp     string                消息创建时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\nfields        messageembedfield[]   消息体\n\n\n# messageembedfield\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# messageattachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# messageark\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            messageakrkv[]   kv 值列表\n\n\n# messagearkkv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     messagearkobj[]   ark obj 类型的列表\n\n\n# messagearkobj\n\n字段名      类型                  描述\nobj_kv   messagearkobjkv[]   ark objkv 列表\n\n\n# messagearkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# messagereference\n\n字段名                        类型        必填 ｜描述\nmessage_id                 string    是 ｜ 需要引用回复的消息 id\nignore_get_message_error   boolean   否 ｜ 是否忽略获取引用消息详情错误，默认否\n\n\n# messageaudited\n\n消息审核对象\n\n字段名              类型                 描述\naudit_id         string             消息审核 id\nmessage_id       string             消息 id，只有审核通过事件才会有值\nguild_id         string             频道 id\nchannel_id       string             子频道 id\naudit_time       string             消息审核时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\ncreate_time      string timestamp   消息创建时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\nseq_in_channel   string             子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"精华消息对象(PinsMessage)",frontmatter:{},regularPath:"/develop/gosdk/model/pins_message.html",relativePath:"develop/gosdk/model/pins_message.md",key:"v-758e5903",path:"/develop/gosdk/model/pins_message.html",headers:[{level:2,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:9}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"PinsMessage",content:"# 精华消息对象(PinsMessage)\n\n\n# PinsMessage\n\n字段名           类型          描述\nguild_id      string      频道 ID\nchannel_id    string      子频道 ID\nmessage_ids   string 列表   消息 ID 列表",normalizedContent:"# 精华消息对象(pinsmessage)\n\n\n# pinsmessage\n\n字段名           类型          描述\nguild_id      string      频道 id\nchannel_id    string      子频道 id\nmessage_ids   string 列表   消息 id 列表",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道身份组对象(Role)",frontmatter:{},regularPath:"/develop/gosdk/model/role.html",relativePath:"develop/gosdk/model/role.md",key:"v-97f3b4ba",path:"/develop/gosdk/model/role.html",headers:[{level:3,title:"Role",slug:"role",normalizedTitle:"role",charIndex:10},{level:3,title:"DefaultRoleIDs(系统默认生成下列身份组 ID)",slug:"defaultroleids-系统默认生成下列身份组-id",normalizedTitle:"defaultroleids(系统默认生成下列身份组 id)",charIndex:284}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Role DefaultRoleIDs(系统默认生成下列身份组 ID)",content:"# 频道身份组对象(Role)\n\n\n# Role\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# DefaultRoleIDs(系统默认生成下列身份组 ID)\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员",normalizedContent:"# 频道身份组对象(role)\n\n\n# role\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# defaultroleids(系统默认生成下列身份组 id)\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情表态对象",frontmatter:{},regularPath:"/develop/gosdk/model/reaction.html",relativePath:"develop/gosdk/model/reaction.md",key:"v-4d19bb7d",path:"/develop/gosdk/model/reaction.html",headers:[{level:2,title:"MessageReaction",slug:"messagereaction",normalizedTitle:"messagereaction",charIndex:85},{level:2,title:"ReactionTarget",slug:"reactiontarget",normalizedTitle:"reactiontarget",charIndex:257},{level:2,title:"ReactionTargetType",slug:"reactiontargettype",normalizedTitle:"reactiontargettype",charIndex:405},{level:2,title:"表情表态事件监听",slug:"表情表态事件监听",normalizedTitle:"表情表态事件监听",charIndex:487},{level:3,title:"代码示例",slug:"代码示例",normalizedTitle:"代码示例",charIndex:500}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"MessageReaction ReactionTarget ReactionTargetType 表情表态事件监听 代码示例",content:'# 表情表态对象\n\n在消息、帖子、评论、回复中使用的表情。\n\n表情表态相关事件可参考表情表态事件。\n\n事件监听方式可参考ws 使用。\n\n具体示例可参考使用示例。\n\n\n# MessageReaction\n\n字段名          类型               描述\nuser_id      string           用户 ID\nguild_id     string           频道 ID\nchannel_id   string           子频道 ID\ntarget       ReactionTarget   表态对象\nemoji        Emoji            表态所用表情\n\n\n# ReactionTarget\n\n字段名    类型       描述\nid     string   表态对象 ID\ntype   number   表态对象类型，参考 ReactionTargetType\n\n\n# ReactionTargetType\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复\n\n\n# 表情表态事件监听\n\n\n# 代码示例\n\nimport qqbot\nfrom qqbot.core.util.yaml_util import YamlUtil\n\ntest_config = YamlUtil.read(os.path.join(os.path.dirname(__file__), "config.yaml"))\n\n\nasync def _reaction_handler(event, reaction: qqbot.Reaction):\n    qqbot.logger.info("event %s" % event + ", reaction channel id %s" % reaction.channel_id)\n\n\nif __name__ == "__main__":\n    t_token = qqbot.Token(test_config["token"]["appid"], test_config["token"]["token"])\n    handler = qqbot.Handler(qqbot.HandlerType.MESSAGE_REACTIONS_EVENT_HANDLER, _reaction_handler)\n    qqbot.async_listen_events(t_token, False, handler)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n在频道内，长按某条消息进行表情回复 👍，ws 收到消息并打印如下 log 信息：\n\n"event MESSAGE_REACTION_ADD, reaction channel id 2568610"\n\n\n1\n',normalizedContent:'# 表情表态对象\n\n在消息、帖子、评论、回复中使用的表情。\n\n表情表态相关事件可参考表情表态事件。\n\n事件监听方式可参考ws 使用。\n\n具体示例可参考使用示例。\n\n\n# messagereaction\n\n字段名          类型               描述\nuser_id      string           用户 id\nguild_id     string           频道 id\nchannel_id   string           子频道 id\ntarget       reactiontarget   表态对象\nemoji        emoji            表态所用表情\n\n\n# reactiontarget\n\n字段名    类型       描述\nid     string   表态对象 id\ntype   number   表态对象类型，参考 reactiontargettype\n\n\n# reactiontargettype\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复\n\n\n# 表情表态事件监听\n\n\n# 代码示例\n\nimport qqbot\nfrom qqbot.core.util.yaml_util import yamlutil\n\ntest_config = yamlutil.read(os.path.join(os.path.dirname(__file__), "config.yaml"))\n\n\nasync def _reaction_handler(event, reaction: qqbot.reaction):\n    qqbot.logger.info("event %s" % event + ", reaction channel id %s" % reaction.channel_id)\n\n\nif __name__ == "__main__":\n    t_token = qqbot.token(test_config["token"]["appid"], test_config["token"]["token"])\n    handler = qqbot.handler(qqbot.handlertype.message_reactions_event_handler, _reaction_handler)\n    qqbot.async_listen_events(t_token, false, handler)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n在频道内，长按某条消息进行表情回复 👍，ws 收到消息并打印如下 log 信息：\n\n"event message_reaction_add, reaction channel id 2568610"\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"用户对象(User)",frontmatter:{},regularPath:"/develop/gosdk/model/user.html",relativePath:"develop/gosdk/model/user.md",key:"v-0adf9ab9",path:"/develop/gosdk/model/user.html",headers:[{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:7}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"User",content:"# 用户对象(User)\n\n用户对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# User\n\n字段名                类型       描述\nID                 string   用户 ID\nUsername           string   用户名\nAvatar             string   用户头像地址\nBot                bool     是否是机器人\nUnionOpenID        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nUnionUserAccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。",normalizedContent:"# 用户对象(user)\n\n用户对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# user\n\n字段名                类型       描述\nid                 string   用户 id\nusername           string   用户名\navatar             string   用户头像地址\nbot                bool     是否是机器人\nunionopenid        string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunionuseraccount   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"日程对象(Schedule)",frontmatter:{},regularPath:"/develop/gosdk/model/schedule.html",relativePath:"develop/gosdk/model/schedule.md",key:"v-001cac21",path:"/develop/gosdk/model/schedule.html",headers:[{level:2,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:7},{level:2,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:302}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"Schedule RemindType",content:"# 日程对象(Schedule)\n\n\n# Schedule\n\n字段名              类型       描述\nID               string   日程 ID\nName             string   日程名称\nDescription      string   日程描述\nStartTimestamp   string   日程开始时间戳(ms)\nEndTimestamp     string   日程结束时间戳(ms)\nCreator          Member   创建者\nJumpChannelID    string   日程开始时跳转到的子频道 ID\nRemindType       string   日程提醒类型，取值参考RemindType\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",normalizedContent:"# 日程对象(schedule)\n\n\n# schedule\n\n字段名              类型       描述\nid               string   日程 id\nname             string   日程名称\ndescription      string   日程描述\nstarttimestamp   string   日程开始时间戳(ms)\nendtimestamp     string   日程结束时间戳(ms)\ncreator          member   创建者\njumpchannelid    string   日程开始时跳转到的子频道 id\nremindtype       string   日程提醒类型，取值参考remindtype\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"WSS 消息体",frontmatter:{},regularPath:"/develop/gosdk/websocket/listen_events.html",relativePath:"develop/gosdk/websocket/listen_events.md",key:"v-bc235c66",path:"/develop/gosdk/websocket/listen_events.html",headers:[{level:2,title:"当前支持的事件",slug:"当前支持的事件",normalizedTitle:"当前支持的事件",charIndex:14},{level:2,title:"当前事件的返回类型",slug:"当前事件的返回类型",normalizedTitle:"当前事件的返回类型",charIndex:2060},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:4826},{level:3,title:"创建 WSS 实例并监听消息",slug:"创建-wss-实例并监听消息",normalizedTitle:"创建 wss 实例并监听消息",charIndex:4835}],lastUpdated:"4/29/2022, 6:13:18 AM",lastUpdatedTimestamp:1651212798e3,headersStr:"当前支持的事件 当前事件的返回类型 使用示例 创建 WSS 实例并监听消息",content:'# WSS 消息体\n\n\n# 当前支持的事件\n\n// 事件类型\nconst (\n\tEventGuildCreate           EventType = "GUILD_CREATE"\n\tEventGuildUpdate           EventType = "GUILD_UPDATE"\n\tEventGuildDelete           EventType = "GUILD_DELETE"\n\tEventChannelCreate         EventType = "CHANNEL_CREATE"\n\tEventChannelUpdate         EventType = "CHANNEL_UPDATE"\n\tEventChannelDelete         EventType = "CHANNEL_DELETE"\n\tEventGuildMemberAdd        EventType = "GUILD_MEMBER_ADD"\n\tEventGuildMemberUpdate     EventType = "GUILD_MEMBER_UPDATE"\n\tEventGuildMemberRemove     EventType = "GUILD_MEMBER_REMOVE"\n\tEventMessageCreate         EventType = "MESSAGE_CREATE"\n\tEventMessageReactionAdd    EventType = "MESSAGE_REACTION_ADD"\n\tEventMessageReactionRemove EventType = "MESSAGE_REACTION_REMOVE"\n\tEventAtMessageCreate       EventType = "AT_MESSAGE_CREATE"\n\tEventPublicMessageDelete   EventType = "PUBLIC_MESSAGE_DELETE"\n\tEventDirectMessageCreate   EventType = "DIRECT_MESSAGE_CREATE"\n\tEventDirectMessageDelete   EventType = "DIRECT_MESSAGE_DELETE"\n\tEventAudioStart            EventType = "AUDIO_START"\n\tEventAudioFinish           EventType = "AUDIO_FINISH"\n\tEventAudioOnMic            EventType = "AUDIO_ON_MIC"\n\tEventAudioOffMic           EventType = "AUDIO_OFF_MIC"\n\tEventMessageAuditPass      EventType = "MESSAGE_AUDIT_PASS"\n\tEventMessageAuditReject    EventType = "MESSAGE_AUDIT_REJECT"\n\tEventMessageDelete         EventType = "MESSAGE_DELETE"\n\tEventForumThreadCreate     EventType = "FORUM_THREAD_CREATE"\n\tEventForumThreadUpdate     EventType = "FORUM_THREAD_UPDATE"\n\tEventForumThreadDelete     EventType = "FORUM_THREAD_DELETE"\n\tEventForumPostCreate       EventType = "FORUM_POST_CREATE"\n\tEventForumPostDelete       EventType = "FORUM_POST_DELETE"\n\tEventForumReplyCreate      EventType = "FORUM_REPLY_CREATE"\n\tEventForumReplyDelete      EventType = "FORUM_REPLY_DELETE"\n\tEventForumAuditResult      EventType = "FORUM_PUBLISH_AUDIT_RESULT"\n\tEventInteractionCreate     EventType = "INTERACTION_CREATE"\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 当前事件的返回类型\n\n// ReadyHandler 可以处理 ws 的 ready 事件\ntype ReadyHandler func(event *dto.WSPayload, data *dto.WSReadyData)\n\n// ErrorNotifyHandler 当 ws 连接发生错误的时候，会回调，方便使用方监控相关错误\n// 比如 reconnect invalidSession 等错误，错误可以转换为 bot.Err\ntype ErrorNotifyHandler func(err error)\n\n// PlainEventHandler 透传handler\ntype PlainEventHandler func(event *dto.WSPayload, message []byte) error\n\n// GuildEventHandler 频道事件handler\ntype GuildEventHandler func(event *dto.WSPayload, data *dto.WSGuildData) error\n\n// GuildMemberEventHandler 频道成员事件 handler\ntype GuildMemberEventHandler func(event *dto.WSPayload, data *dto.WSGuildMemberData) error\n\n// ChannelEventHandler 子频道事件 handler\ntype ChannelEventHandler func(event *dto.WSPayload, data *dto.WSChannelData) error\n\n// MessageEventHandler 消息事件 handler\ntype MessageEventHandler func(event *dto.WSPayload, data *dto.WSMessageData) error\n\n// MessageDeleteEventHandler 消息事件 handler\ntype MessageDeleteEventHandler func(event *dto.WSPayload, data *dto.WSMessageDeleteData) error\n\n// PublicMessageDeleteEventHandler 消息事件 handler\ntype PublicMessageDeleteEventHandler func(event *dto.WSPayload, data *dto.WSPublicMessageDeleteData) error\n\n// DirectMessageDeleteEventHandler 消息事件 handler\ntype DirectMessageDeleteEventHandler func(event *dto.WSPayload, data *dto.WSDirectMessageDeleteData) error\n\n// MessageReactionEventHandler 表情表态事件 handler\ntype MessageReactionEventHandler func(event *dto.WSPayload, data *dto.WSMessageReactionData) error\n\n// ATMessageEventHandler at 机器人消息事件 handler\ntype ATMessageEventHandler func(event *dto.WSPayload, data *dto.WSATMessageData) error\n\n// DirectMessageEventHandler 私信消息事件 handler\ntype DirectMessageEventHandler func(event *dto.WSPayload, data *dto.WSDirectMessageData) error\n\n// AudioEventHandler 音频机器人事件 handler\ntype AudioEventHandler func(event *dto.WSPayload, data *dto.WSAudioData) error\n\n// MessageAuditEventHandler 消息审核事件 handler\ntype MessageAuditEventHandler func(event *dto.WSPayload, data *dto.WSMessageAuditData) error\n\n// ThreadEventHandler 论坛主题事件 handler\ntype ThreadEventHandler func(event *dto.WSPayload, data *dto.WSThreadData) error\n\n// PostEventHandler 论坛回帖事件 handler\ntype PostEventHandler func(event *dto.WSPayload, data *dto.WSPostData) error\n\n// ReplyEventHandler 论坛帖子回复事件 handler\ntype ReplyEventHandler func(event *dto.WSPayload, data *dto.WSReplyData) error\n\n// ForumAuditEventHandler 论坛帖子审核事件 handler\ntype ForumAuditEventHandler func(event *dto.WSPayload, data *dto.WSForumAuditData) error\n\n// InteractionEventHandler 互动事件 handler\ntype InteractionEventHandler func(event *dto.WSPayload, data *dto.WSInteractionData) error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n\n\n\n# 使用示例\n\n\n# 创建 WSS 实例并监听消息\n\nfunc main() {\n\ttoken := token.BotToken(config.AppID, config.Token) //生成token\n\tapi = botgo.NewOpenAPI(token).WithTimeout(3 * time.Second)\n\tctx = context.Background()\n\tws, _ := api.WS(ctx, nil, "") //websocket\n\n\tvar atMessage event.ATMessageEventHandler = atMessageEventHandler //@事件处理\n\tintent := websocket.RegisterHandlers(atMessage)                   // 注册socket消息处理\n\tbotgo.NewSessionManager().Start(ws, token, &intent)               // 启动socket监听\n}\n\nfunc atMessageEventHandler(event *dto.WSPayload, data *dto.WSATMessageData) error {\n\tmessage, err := api.PostMessage(ctx, channelId, &dto.MessageToCreate{\n\t\tMsgID:   msgId, //如果未空则表示主动消息\n\t\tContent: "hello world",\n\t})\n\tif err != nil {\n\t\tlog.Fatalln("调用 PostMessage 接口失败, err = ", err)\n\t}\n\tlog.Println(message)\n\treturn nil\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n如果同时需要监听多个事件，在listen_events增加多个事件的handler对象\n\n//同时监听at消息和私信消息的事件\nvar atMessage event.ATMessageEventHandler = atMessageEventHandler //@事件处理\nvar directMessage event.DirectMessageEventHandler = directMessageEventHandler//私信事件处理\n\nintent := websocket.RegisterHandlers(atMessage, directMessage)                   // 注册socket消息处理\nbotgo.NewSessionManager().Start(ws, token, &intent)               // 启动socket监听\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# wss 消息体\n\n\n# 当前支持的事件\n\n// 事件类型\nconst (\n\teventguildcreate           eventtype = "guild_create"\n\teventguildupdate           eventtype = "guild_update"\n\teventguilddelete           eventtype = "guild_delete"\n\teventchannelcreate         eventtype = "channel_create"\n\teventchannelupdate         eventtype = "channel_update"\n\teventchanneldelete         eventtype = "channel_delete"\n\teventguildmemberadd        eventtype = "guild_member_add"\n\teventguildmemberupdate     eventtype = "guild_member_update"\n\teventguildmemberremove     eventtype = "guild_member_remove"\n\teventmessagecreate         eventtype = "message_create"\n\teventmessagereactionadd    eventtype = "message_reaction_add"\n\teventmessagereactionremove eventtype = "message_reaction_remove"\n\teventatmessagecreate       eventtype = "at_message_create"\n\teventpublicmessagedelete   eventtype = "public_message_delete"\n\teventdirectmessagecreate   eventtype = "direct_message_create"\n\teventdirectmessagedelete   eventtype = "direct_message_delete"\n\teventaudiostart            eventtype = "audio_start"\n\teventaudiofinish           eventtype = "audio_finish"\n\teventaudioonmic            eventtype = "audio_on_mic"\n\teventaudiooffmic           eventtype = "audio_off_mic"\n\teventmessageauditpass      eventtype = "message_audit_pass"\n\teventmessageauditreject    eventtype = "message_audit_reject"\n\teventmessagedelete         eventtype = "message_delete"\n\teventforumthreadcreate     eventtype = "forum_thread_create"\n\teventforumthreadupdate     eventtype = "forum_thread_update"\n\teventforumthreaddelete     eventtype = "forum_thread_delete"\n\teventforumpostcreate       eventtype = "forum_post_create"\n\teventforumpostdelete       eventtype = "forum_post_delete"\n\teventforumreplycreate      eventtype = "forum_reply_create"\n\teventforumreplydelete      eventtype = "forum_reply_delete"\n\teventforumauditresult      eventtype = "forum_publish_audit_result"\n\teventinteractioncreate     eventtype = "interaction_create"\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 当前事件的返回类型\n\n// readyhandler 可以处理 ws 的 ready 事件\ntype readyhandler func(event *dto.wspayload, data *dto.wsreadydata)\n\n// errornotifyhandler 当 ws 连接发生错误的时候，会回调，方便使用方监控相关错误\n// 比如 reconnect invalidsession 等错误，错误可以转换为 bot.err\ntype errornotifyhandler func(err error)\n\n// plaineventhandler 透传handler\ntype plaineventhandler func(event *dto.wspayload, message []byte) error\n\n// guildeventhandler 频道事件handler\ntype guildeventhandler func(event *dto.wspayload, data *dto.wsguilddata) error\n\n// guildmembereventhandler 频道成员事件 handler\ntype guildmembereventhandler func(event *dto.wspayload, data *dto.wsguildmemberdata) error\n\n// channeleventhandler 子频道事件 handler\ntype channeleventhandler func(event *dto.wspayload, data *dto.wschanneldata) error\n\n// messageeventhandler 消息事件 handler\ntype messageeventhandler func(event *dto.wspayload, data *dto.wsmessagedata) error\n\n// messagedeleteeventhandler 消息事件 handler\ntype messagedeleteeventhandler func(event *dto.wspayload, data *dto.wsmessagedeletedata) error\n\n// publicmessagedeleteeventhandler 消息事件 handler\ntype publicmessagedeleteeventhandler func(event *dto.wspayload, data *dto.wspublicmessagedeletedata) error\n\n// directmessagedeleteeventhandler 消息事件 handler\ntype directmessagedeleteeventhandler func(event *dto.wspayload, data *dto.wsdirectmessagedeletedata) error\n\n// messagereactioneventhandler 表情表态事件 handler\ntype messagereactioneventhandler func(event *dto.wspayload, data *dto.wsmessagereactiondata) error\n\n// atmessageeventhandler at 机器人消息事件 handler\ntype atmessageeventhandler func(event *dto.wspayload, data *dto.wsatmessagedata) error\n\n// directmessageeventhandler 私信消息事件 handler\ntype directmessageeventhandler func(event *dto.wspayload, data *dto.wsdirectmessagedata) error\n\n// audioeventhandler 音频机器人事件 handler\ntype audioeventhandler func(event *dto.wspayload, data *dto.wsaudiodata) error\n\n// messageauditeventhandler 消息审核事件 handler\ntype messageauditeventhandler func(event *dto.wspayload, data *dto.wsmessageauditdata) error\n\n// threadeventhandler 论坛主题事件 handler\ntype threadeventhandler func(event *dto.wspayload, data *dto.wsthreaddata) error\n\n// posteventhandler 论坛回帖事件 handler\ntype posteventhandler func(event *dto.wspayload, data *dto.wspostdata) error\n\n// replyeventhandler 论坛帖子回复事件 handler\ntype replyeventhandler func(event *dto.wspayload, data *dto.wsreplydata) error\n\n// forumauditeventhandler 论坛帖子审核事件 handler\ntype forumauditeventhandler func(event *dto.wspayload, data *dto.wsforumauditdata) error\n\n// interactioneventhandler 互动事件 handler\ntype interactioneventhandler func(event *dto.wspayload, data *dto.wsinteractiondata) error\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n\n\n\n# 使用示例\n\n\n# 创建 wss 实例并监听消息\n\nfunc main() {\n\ttoken := token.bottoken(config.appid, config.token) //生成token\n\tapi = botgo.newopenapi(token).withtimeout(3 * time.second)\n\tctx = context.background()\n\tws, _ := api.ws(ctx, nil, "") //websocket\n\n\tvar atmessage event.atmessageeventhandler = atmessageeventhandler //@事件处理\n\tintent := websocket.registerhandlers(atmessage)                   // 注册socket消息处理\n\tbotgo.newsessionmanager().start(ws, token, &intent)               // 启动socket监听\n}\n\nfunc atmessageeventhandler(event *dto.wspayload, data *dto.wsatmessagedata) error {\n\tmessage, err := api.postmessage(ctx, channelid, &dto.messagetocreate{\n\t\tmsgid:   msgid, //如果未空则表示主动消息\n\t\tcontent: "hello world",\n\t})\n\tif err != nil {\n\t\tlog.fatalln("调用 postmessage 接口失败, err = ", err)\n\t}\n\tlog.println(message)\n\treturn nil\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n如果同时需要监听多个事件，在listen_events增加多个事件的handler对象\n\n//同时监听at消息和私信消息的事件\nvar atmessage event.atmessageeventhandler = atmessageeventhandler //@事件处理\nvar directmessage event.directmessageeventhandler = directmessageeventhandler//私信事件处理\n\nintent := websocket.registerhandlers(atmessage, directmessage)                   // 注册socket消息处理\nbotgo.newsessionmanager().start(ws, token, &intent)               // 启动socket监听\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"NodeSDK 接入指南",frontmatter:{},regularPath:"/develop/nodesdk/",relativePath:"develop/nodesdk/README.md",key:"v-71917040",path:"/develop/nodesdk/",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:19},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:66},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:288},{level:3,title:"使用 client",slug:"使用-client",normalizedTitle:"使用 client",charIndex:1380},{level:3,title:"client 返回示例",slug:"client-返回示例",normalizedTitle:"client 返回示例",charIndex:1750},{level:3,title:"使用 ws",slug:"使用-ws",normalizedTitle:"使用 ws",charIndex:2210},{level:3,title:"ws 返回示例",slug:"ws-返回示例",normalizedTitle:"ws 返回示例",charIndex:3414},{level:2,title:"SDK 架构说明",slug:"sdk-架构说明",normalizedTitle:"sdk 架构说明",charIndex:4363}],lastUpdated:"6/15/2023, 7:47:38 AM",lastUpdatedTimestamp:1686815258e3,headersStr:"介绍 安装 使用示例 使用 client client 返回示例 使用 ws ws 返回示例 SDK 架构说明",content:"# NodeSDK 接入指南\n\n\n# 介绍\n\nNodeSDK主要基于基础 API封装，提供给用户一种简单、高效的使用方式。\n\n\n# 安装\n\nnpm i qq-guild-bot\n\n# 或者使用yarn\nyarn add qq-guild-bot\n\n# 国内安装可以使用腾讯源\nnpm i qq-guild-bot --registry=https://mirrors.tencent.com/npm/\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n注意\n\n@tencent-connect/bot-node-sdk已更名为qq-guild-bot。 原包已废弃，请使用新包！!\n\n\n# 使用示例\n\n使用前请先确保已在机器人平台创建机器人，并拿到相应的BotAppID及BotToken。\n\n// ESModule | TypeScript\n// import { createOpenAPI, createWebsocket } from 'qq-guild-bot';\n\n// CommonJs\nconst { createOpenAPI, createWebsocket } = require('qq-guild-bot');\n\nconst testConfig = {\n  appID: 'APPID', // 申请机器人时获取到的机器人 BotAppID\n  token: 'TOKEN', // 申请机器人时获取到的机器人 BotToken\n  intents: ['PUBLIC_GUILD_MESSAGES'], // 事件订阅,用于开启可接收的消息类型\n  sandbox: false, // 沙箱支持，可选，默认false. v2.7.0+\n};\n\n// 创建 client\nconst client = createOpenAPI(testConfig);\n\n// 创建 websocket 连接\nconst ws = createWebsocket(testConfig);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n * intents 可选值举例：['GUILDS', 'GUILD_MEMBERS', 'GUILD_MESSAGES','GUILD_MESSAGE_REACTIONS','DIRECT_MESSAGE', 'INTERACTION','MESSAGE_AUDIT','FORUMS_EVENT','AUDIO_ACTION', 'PUBLIC_GUILD_MESSAGES']，详情参考。\n * 沙箱配置说明：接口域名\n\n注意\n\n * 事件类型的订阅，是有权限控制的，除了 GUILDS，PUBLIC_GUILD_MESSAGES，DIRECT_MESSAGE，GUILD_MEMBERS 事件是基础的事件，默认有权限订阅之外，其他的特殊事件，都需要经过申请才能够使用，如果在鉴权的时候传递了无权限的 intents，websocket 会报错，并直接关闭连接。\n\n * intents传空数组时，将默认开启全部事件类型的监听。\n\n通过上述示例代码我们可以拿到整个 NodeSDK 最核心的两个对象client和ws，整个 SDK 能力将由这两个对象提供。\n\n\n# 使用 client\n\nclient提供了一系列操作频道和发送消息的能力，如：创建频道、创建频道身份组、发送私信等等，具体能力见左侧菜单。\n\n# client 调用示例\n\n以给子频道发送消息为例，使用示例如下：\n\nclient.messageApi\n  .postMessage(channelID, {\n    content: 'messageApi接口触发：hello',\n  })\n  .then(res => {\n    // 数据存储在data中\n    console.log(res.data);\n  })\n  .catch(err => {\n    // err信息错误码请参考API文档错误码描述\n    console.log(err);\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# client 返回示例\n\nclient操作的返回结果与REST OPENAPI 接口保持一致。\n\n{\n  \"id\": \"xxxxx\",\n  \"channel_id\": \"xxxxx\",\n  \"guild_id\": \"xxxxx\",\n  \"content\": \"messageApi接口触发：hello\",\n  \"timestamp\": \"2021-12-03T17:20:00+08:00\",\n  \"tts\": false,\n  \"mention_everyone\": false,\n  \"author\": {\n    \"id\": \"xxxxx\",\n    \"username\": \"\",\n    \"avatar\": \"\",\n    \"bot\": true\n  },\n  \"pinned\": false,\n  \"type\": 0,\n  \"flags\": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n提示\n\n针对返回失败的情况，可查看错误状态码描述。\n\n\n# 使用 ws\n\nws用于频道内消息监听，如要使用client向指定子频道发送消息，必须先建立 ws 连接。\n\n# ws 调用示例\n\n// 消息监听\nws.on('READY', (wsdata) => {\n  console.log('[READY] 事件接收 :', wsdata);\n});\nws.on('ERROR', (data) => {\n  console.log('[ERROR] 事件接收 :', data);\n});\nws.on('GUILDS', (data) => {\n  console.log('[GUILDS] 事件接收 :', data);\n});\nws.on('GUILD_MEMBERS', (data) => {\n  console.log('[GUILD_MEMBERS] 事件接收 :', data);\n});\nws.on('GUILD_MESSAGES', (data) => {\n  console.log('[GUILD_MESSAGES] 事件接收 :', data);\n});\nws.on('GUILD_MESSAGE_REACTIONS', (data) => {\n  console.log('[GUILD_MESSAGE_REACTIONS] 事件接收 :', data);\n});\nws.on('DIRECT_MESSAGE', (data) => {\n  console.log('[DIRECT_MESSAGE] 事件接收 :', data);\n});\nws.on('INTERACTION', (data) => {\n  console.log('[INTERACTION] 事件接收 :', data);\n});\nws.on('MESSAGE_AUDIT', (data) => {\n  console.log('[MESSAGE_AUDIT] 事件接收 :', data);\n});\nws.on('FORUMS_EVENT', (data) => {\n  console.log('[FORUMS_EVENT] 事件接收 :', data);\n});\nws.on('AUDIO_ACTION', (data) => {\n  console.log('[AUDIO_ACTION] 事件接收 :', data);\n});\nws.on('PUBLIC_GUILD_MESSAGES', (data) => {\n  console.log('[PUBLIC_GUILD_MESSAGES] 事件接收 :', data);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n\n# ws 返回示例\n\n以下是某个监听的返回示例：\n\n{\n  eventType: 'EVENT_TYPE',\n  eventId: 'xxx',\n  msg: {\n    author: {\n      avatar: 'xxx',\n      bot: false,\n      id: 'xxx',\n      username: 'xxx,'\n    },\n    channel_id: 'xxx',\n    content: 'xxx',\n    guild_id: 'xxx',\n    id: 'xxx',\n    member: { joined_at: 'xxx', roles: [Array] },\n    mentions: [ [Object] ],\n    timestamp: 'xxx'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n拿 “创建子频道” 场景举个例子：\n\n// 开启事件监听\nws.on('GUILDS', data => {\n  console.log(data);\n});\n\n// 创建子频道\nclient.channelApi.postChannel('GUILD_ID', {\n  name: 'test_creation',\n  type: 0,\n  parent_id: 'CHANNEL_ID',\n  owner_id: '0',\n  sub_type: 0,\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n上述代码打印信息为：\n\n{\n  eventType: 'CHANNEL_CREATE',\n  eventId: 'xxxxxx',\n  msg: {\n    guild_id: 'xxxxxx',\n    id: 'xxxxxx',\n    name: 'test_creation',\n    op_user_id: 'xxxxxx',\n    owner_id: 'xxxxxx',\n    sub_type: 0,\n    type: 0\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# SDK 架构说明\n\n整个 SDK 设计与实现基于两条主线：\n\n * 主动的事件触发\n   * 频道操作能力：子频道增删改、身份组增删改、成员增删改等。\n   * 主动消息推送能力。\n * 被动的事件监听\n   * 通过 websocket 监听事件。\n\nSDK 分三层设计：应用层、框架层、基础层，具体结构如下图所示：",normalizedContent:"# nodesdk 接入指南\n\n\n# 介绍\n\nnodesdk主要基于基础 api封装，提供给用户一种简单、高效的使用方式。\n\n\n# 安装\n\nnpm i qq-guild-bot\n\n# 或者使用yarn\nyarn add qq-guild-bot\n\n# 国内安装可以使用腾讯源\nnpm i qq-guild-bot --registry=https://mirrors.tencent.com/npm/\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n注意\n\n@tencent-connect/bot-node-sdk已更名为qq-guild-bot。 原包已废弃，请使用新包！!\n\n\n# 使用示例\n\n使用前请先确保已在机器人平台创建机器人，并拿到相应的botappid及bottoken。\n\n// esmodule | typescript\n// import { createopenapi, createwebsocket } from 'qq-guild-bot';\n\n// commonjs\nconst { createopenapi, createwebsocket } = require('qq-guild-bot');\n\nconst testconfig = {\n  appid: 'appid', // 申请机器人时获取到的机器人 botappid\n  token: 'token', // 申请机器人时获取到的机器人 bottoken\n  intents: ['public_guild_messages'], // 事件订阅,用于开启可接收的消息类型\n  sandbox: false, // 沙箱支持，可选，默认false. v2.7.0+\n};\n\n// 创建 client\nconst client = createopenapi(testconfig);\n\n// 创建 websocket 连接\nconst ws = createwebsocket(testconfig);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n * intents 可选值举例：['guilds', 'guild_members', 'guild_messages','guild_message_reactions','direct_message', 'interaction','message_audit','forums_event','audio_action', 'public_guild_messages']，详情参考。\n * 沙箱配置说明：接口域名\n\n注意\n\n * 事件类型的订阅，是有权限控制的，除了 guilds，public_guild_messages，direct_message，guild_members 事件是基础的事件，默认有权限订阅之外，其他的特殊事件，都需要经过申请才能够使用，如果在鉴权的时候传递了无权限的 intents，websocket 会报错，并直接关闭连接。\n\n * intents传空数组时，将默认开启全部事件类型的监听。\n\n通过上述示例代码我们可以拿到整个 nodesdk 最核心的两个对象client和ws，整个 sdk 能力将由这两个对象提供。\n\n\n# 使用 client\n\nclient提供了一系列操作频道和发送消息的能力，如：创建频道、创建频道身份组、发送私信等等，具体能力见左侧菜单。\n\n# client 调用示例\n\n以给子频道发送消息为例，使用示例如下：\n\nclient.messageapi\n  .postmessage(channelid, {\n    content: 'messageapi接口触发：hello',\n  })\n  .then(res => {\n    // 数据存储在data中\n    console.log(res.data);\n  })\n  .catch(err => {\n    // err信息错误码请参考api文档错误码描述\n    console.log(err);\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# client 返回示例\n\nclient操作的返回结果与rest openapi 接口保持一致。\n\n{\n  \"id\": \"xxxxx\",\n  \"channel_id\": \"xxxxx\",\n  \"guild_id\": \"xxxxx\",\n  \"content\": \"messageapi接口触发：hello\",\n  \"timestamp\": \"2021-12-03t17:20:00+08:00\",\n  \"tts\": false,\n  \"mention_everyone\": false,\n  \"author\": {\n    \"id\": \"xxxxx\",\n    \"username\": \"\",\n    \"avatar\": \"\",\n    \"bot\": true\n  },\n  \"pinned\": false,\n  \"type\": 0,\n  \"flags\": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n提示\n\n针对返回失败的情况，可查看错误状态码描述。\n\n\n# 使用 ws\n\nws用于频道内消息监听，如要使用client向指定子频道发送消息，必须先建立 ws 连接。\n\n# ws 调用示例\n\n// 消息监听\nws.on('ready', (wsdata) => {\n  console.log('[ready] 事件接收 :', wsdata);\n});\nws.on('error', (data) => {\n  console.log('[error] 事件接收 :', data);\n});\nws.on('guilds', (data) => {\n  console.log('[guilds] 事件接收 :', data);\n});\nws.on('guild_members', (data) => {\n  console.log('[guild_members] 事件接收 :', data);\n});\nws.on('guild_messages', (data) => {\n  console.log('[guild_messages] 事件接收 :', data);\n});\nws.on('guild_message_reactions', (data) => {\n  console.log('[guild_message_reactions] 事件接收 :', data);\n});\nws.on('direct_message', (data) => {\n  console.log('[direct_message] 事件接收 :', data);\n});\nws.on('interaction', (data) => {\n  console.log('[interaction] 事件接收 :', data);\n});\nws.on('message_audit', (data) => {\n  console.log('[message_audit] 事件接收 :', data);\n});\nws.on('forums_event', (data) => {\n  console.log('[forums_event] 事件接收 :', data);\n});\nws.on('audio_action', (data) => {\n  console.log('[audio_action] 事件接收 :', data);\n});\nws.on('public_guild_messages', (data) => {\n  console.log('[public_guild_messages] 事件接收 :', data);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n\n# ws 返回示例\n\n以下是某个监听的返回示例：\n\n{\n  eventtype: 'event_type',\n  eventid: 'xxx',\n  msg: {\n    author: {\n      avatar: 'xxx',\n      bot: false,\n      id: 'xxx',\n      username: 'xxx,'\n    },\n    channel_id: 'xxx',\n    content: 'xxx',\n    guild_id: 'xxx',\n    id: 'xxx',\n    member: { joined_at: 'xxx', roles: [array] },\n    mentions: [ [object] ],\n    timestamp: 'xxx'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n拿 “创建子频道” 场景举个例子：\n\n// 开启事件监听\nws.on('guilds', data => {\n  console.log(data);\n});\n\n// 创建子频道\nclient.channelapi.postchannel('guild_id', {\n  name: 'test_creation',\n  type: 0,\n  parent_id: 'channel_id',\n  owner_id: '0',\n  sub_type: 0,\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n上述代码打印信息为：\n\n{\n  eventtype: 'channel_create',\n  eventid: 'xxxxxx',\n  msg: {\n    guild_id: 'xxxxxx',\n    id: 'xxxxxx',\n    name: 'test_creation',\n    op_user_id: 'xxxxxx',\n    owner_id: 'xxxxxx',\n    sub_type: 0,\n    type: 0\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# sdk 架构说明\n\n整个 sdk 设计与实现基于两条主线：\n\n * 主动的事件触发\n   * 频道操作能力：子频道增删改、身份组增删改、成员增删改等。\n   * 主动消息推送能力。\n * 被动的事件监听\n   * 通过 websocket 监听事件。\n\nsdk 分三层设计：应用层、框架层、基础层，具体结构如下图所示：",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道公告",frontmatter:{},regularPath:"/develop/nodesdk/announce/delete_channel_announce.html",relativePath:"develop/nodesdk/announce/delete_channel_announce.md",key:"v-b04be47e",path:"/develop/nodesdk/announce/delete_channel_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:156},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:260},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:279}],lastUpdated:"1/8/2022, 12:02:56 PM",lastUpdatedTimestamp:1641643376e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 删除子频道公告\n\n删除子频道公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceApi.deleteChannelAnnounce(channelId, messageId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmessageId   是    string   消息 ID\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 删除子频道公告\n\n删除子频道公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceapi.deletechannelannounce(channelid, messageid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmessageid   是    string   消息 id\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道公告推荐子频道",frontmatter:{},regularPath:"/develop/nodesdk/announce/patch_guild_recommend.html",relativePath:"develop/nodesdk/announce/patch_guild_recommend.md",key:"v-154f157e",path:"/develop/nodesdk/announce/patch_guild_recommend.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:178},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:309},{level:3,title:"RecommendObj",slug:"recommendobj",normalizedTitle:"recommendobj",charIndex:414},{level:3,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:604},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:739},{level:3,title:"Announce",slug:"announce",normalizedTitle:"announce",charIndex:748},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1101}],lastUpdated:"2/24/2022, 9:00:59 AM",lastUpdatedTimestamp:1645693259e3,headersStr:"使用示例 参数说明 RecommendObj RecommendChannel 返回说明 Announce 返回示例",content:'# 创建频道公告推荐子频道\n\n用于将子频道设置为频道内推荐子频道的全局公告。\n\n注意\n\n * 同频道内推荐子频道最多只能创建 3 条。\n * 推荐子频道和全局公告不能同时存在，会互相顶替设置。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 message_id 设置为 all。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceApi.patchGuildRecommend(guildId, recommendObj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名            必填   类型             描述\nguildId        是    string         频道 ID\nrecommendObj   是    RecommendObj   频道设置对象\n\n\n# RecommendObj\n\n字段名                  必填   类型                   描述\nannounces_type       否    number               公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommend_channels   是    RecommendChannel[]   推荐子频道列表\n\n\n# RecommendChannel\n\n字段名          类型       描述\nchannel_id   string   子频道 ID\nintroduce    string   推荐语\n\n\n# 返回说明\n\n返回 Announce 对象。\n\n\n# Announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 ID\nchannel_id           string                  子频道 ID\nmessage_id           string                  消息 ID\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   RecommendChannel[] 数组   推荐子频道详情列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxx",\n  "message_id": "",\n  "announces_type": 1,\n  "recommend_channels": [\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    },\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# 创建频道公告推荐子频道\n\n用于将子频道设置为频道内推荐子频道的全局公告。\n\n注意\n\n * 同频道内推荐子频道最多只能创建 3 条。\n * 推荐子频道和全局公告不能同时存在，会互相顶替设置。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 message_id 设置为 all。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceapi.patchguildrecommend(guildid, recommendobj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名            必填   类型             描述\nguildid        是    string         频道 id\nrecommendobj   是    recommendobj   频道设置对象\n\n\n# recommendobj\n\n字段名                  必填   类型                   描述\nannounces_type       否    number               公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommend_channels   是    recommendchannel[]   推荐子频道列表\n\n\n# recommendchannel\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   推荐语\n\n\n# 返回说明\n\n返回 announce 对象。\n\n\n# announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 id\nchannel_id           string                  子频道 id\nmessage_id           string                  消息 id\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   recommendchannel[] 数组   推荐子频道详情列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxx",\n  "message_id": "",\n  "announces_type": 1,\n  "recommend_channels": [\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    },\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道公告",frontmatter:{},regularPath:"/develop/nodesdk/announce/post_channel_announce.html",relativePath:"develop/nodesdk/announce/post_channel_announce.md",key:"v-518722eb",path:"/develop/nodesdk/announce/post_channel_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:31},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:161},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:265},{level:3,title:"Announce",slug:"announce",normalizedTitle:"announce",charIndex:114},{level:3,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:589},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:729}],lastUpdated:"2/24/2022, 9:00:59 AM",lastUpdatedTimestamp:1645693259e3,headersStr:"使用示例 参数说明 返回说明 Announce RecommendChannel 返回示例",content:'# 创建子频道公告\n\n将某条消息创建为子频道的公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceApi.postChannelAnnounce(channelId, messageId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmessageId   是    string   消息 ID\n\n\n# 返回说明\n\n返回 Announce 对象。\n\n\n# Announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 ID\nchannel_id           string                  子频道 ID\nmessage_id           string                  消息 ID\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   RecommendChannel[] 数组   推荐子频道详情列表\n\n\n# RecommendChannel\n\n字段名          类型       描述\nchannel_id   string   子频道 ID\nintroduce    string   推荐语\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "message_id": "xxxxxx",\n  "announces_type": 0,\n  "recommend_channels": []\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 创建子频道公告\n\n将某条消息创建为子频道的公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceapi.postchannelannounce(channelid, messageid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmessageid   是    string   消息 id\n\n\n# 返回说明\n\n返回 announce 对象。\n\n\n# announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 id\nchannel_id           string                  子频道 id\nmessage_id           string                  消息 id\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   recommendchannel[] 数组   推荐子频道详情列表\n\n\n# recommendchannel\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   推荐语\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "message_id": "xxxxxx",\n  "announces_type": 0,\n  "recommend_channels": []\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道全局公告",frontmatter:{},regularPath:"/develop/nodesdk/announce/delete_guild_announce.html",relativePath:"develop/nodesdk/announce/delete_guild_announce.md",key:"v-3fb920be",path:"/develop/nodesdk/announce/delete_guild_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:154},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:257},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:276}],lastUpdated:"1/8/2022, 12:02:56 PM",lastUpdatedTimestamp:1641643376e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 删除频道全局公告\n\n删除频道全局公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceApi.deleteGuildAnnounce(guildId, messageId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nguildId     是    string   频道 ID\nmessageId   是    string   消息 ID\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 删除频道全局公告\n\n删除频道全局公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceapi.deleteguildannounce(guildid, messageid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nguildid     是    string   频道 id\nmessageid   是    string   消息 id\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道全局公告",frontmatter:{},regularPath:"/develop/nodesdk/announce/post_guild_announce.html",relativePath:"develop/nodesdk/announce/post_guild_announce.md",key:"v-5ecaac8b",path:"/develop/nodesdk/announce/post_guild_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:38},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:175},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:311},{level:3,title:"Announce",slug:"announce",normalizedTitle:"announce",charIndex:119},{level:3,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:635},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:775}],lastUpdated:"2/24/2022, 9:00:59 AM",lastUpdatedTimestamp:1645693259e3,headersStr:"使用示例 参数说明 返回说明 Announce RecommendChannel 返回示例",content:'# 创建频道全局公告\n\n将某个子频道的某条消息创建为频道全局公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceApi.postGuildAnnounce(guildId, channelId, messageId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nguildId     是    string   频道 ID\nchannelId   是    string   子频道 ID\nmessageId   是    string   消息 ID\n\n\n# 返回说明\n\n返回 Announce 对象。\n\n\n# Announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 ID\nchannel_id           string                  子频道 ID\nmessage_id           string                  消息 ID\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   RecommendChannel[] 数组   推荐子频道详情列表\n\n\n# RecommendChannel\n\n字段名          类型       描述\nchannel_id   string   子频道 ID\nintroduce    string   推荐语\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "message_id": "xxxxxx",\n  "announces_type": 0,\n  "recommend_channels": []\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 创建频道全局公告\n\n将某个子频道的某条消息创建为频道全局公告。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceapi.postguildannounce(guildid, channelid, messageid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nguildid     是    string   频道 id\nchannelid   是    string   子频道 id\nmessageid   是    string   消息 id\n\n\n# 返回说明\n\n返回 announce 对象。\n\n\n# announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 id\nchannel_id           string                  子频道 id\nmessage_id           string                  消息 id\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   recommendchannel[] 数组   推荐子频道详情列表\n\n\n# recommendchannel\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   推荐语\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "123456",\n  "message_id": "xxxxxx",\n  "announces_type": 0,\n  "recommend_channels": []\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道可用权限列表",frontmatter:{},regularPath:"/develop/nodesdk/api_permissions/get_permissions.html",relativePath:"develop/nodesdk/api_permissions/get_permissions.md",key:"v-356490cd",path:"/develop/nodesdk/api_permissions/get_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:42},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:159},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:226},{level:3,title:"APIPermission",slug:"apipermission",normalizedTitle:"apipermission",charIndex:267},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:539}],lastUpdated:"1/30/2022, 11:17:21 AM",lastUpdatedTimestamp:1643541441e3,headersStr:"使用示例 参数说明 返回说明 APIPermission 返回示例",content:'# 获取频道可用权限列表\n\n用于获取机器人在指定频道内可以使用的权限列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildPermissionsApi.permissions(guildID);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildID   是    string   频道 ID\n\n\n# 返回说明\n\n字段名    类型                描述\napis   APIPermission[]   机器人可用权限列表\n\n\n# APIPermission\n\n字段名           类型       描述\npath          string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 GET\ndesc          string   API 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 返回示例\n\ndata：\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "GET",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "POST",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# 获取频道可用权限列表\n\n用于获取机器人在指定频道内可以使用的权限列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildpermissionsapi.permissions(guildid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n字段名    类型                描述\napis   apipermission[]   机器人可用权限列表\n\n\n# apipermission\n\n字段名           类型       描述\npath          string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 get\ndesc          string   api 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 返回示例\n\ndata：\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "get",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "post",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道公告推荐子频道",frontmatter:{},regularPath:"/develop/nodesdk/announce/post_guild_recommend.html",relativePath:"develop/nodesdk/announce/post_guild_recommend.md",key:"v-6097c74d",path:"/develop/nodesdk/announce/post_guild_recommend.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:187},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:317},{level:3,title:"RecommendObj",slug:"recommendobj",normalizedTitle:"recommendobj",charIndex:422},{level:3,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:615},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:750},{level:3,title:"Announce",slug:"announce",normalizedTitle:"announce",charIndex:759},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1112}],lastUpdated:"3/3/2022, 1:27:18 PM",lastUpdatedTimestamp:1646314038e3,headersStr:"使用示例 参数说明 RecommendObj RecommendChannel 返回说明 Announce 返回示例",content:'# 创建频道公告推荐子频道\n\n用于将指定子频道设置为当前频道的推荐子频道，并以全局公告形式展示。\n\n注意\n\n * 同频道内推荐子频道最多只能创建 3 条。\n * 推荐子频道和全局公告不能同时存在，会互相顶替设置。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 messageId 设置为 all。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceApi.postGuildRecommend(guildId, recommendObj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名            必填   类型             描述\nguildId        是    string         频道 ID\nrecommendObj   是    RecommendObj   推荐子频道设置对象\n\n\n# RecommendObj\n\n字段名                  必填   类型                   描述\nannounces_type       否    number               公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommend_channels   是    RecommendChannel[]   推荐子频道列表\n\n\n# RecommendChannel\n\n字段名          类型       描述\nchannel_id   string   子频道 ID\nintroduce    string   推荐语\n\n\n# 返回说明\n\n返回 Announce 对象。\n\n\n# Announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 ID\nchannel_id           string                  子频道 ID\nmessage_id           string                  消息 ID\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   RecommendChannel[] 数组   推荐子频道详情列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxx",\n  "message_id": "",\n  "announces_type": 1,\n  "recommend_channels": [\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    },\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# 创建频道公告推荐子频道\n\n用于将指定子频道设置为当前频道的推荐子频道，并以全局公告形式展示。\n\n注意\n\n * 同频道内推荐子频道最多只能创建 3 条。\n * 推荐子频道和全局公告不能同时存在，会互相顶替设置。\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 messageid 设置为 all。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.announceapi.postguildrecommend(guildid, recommendobj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名            必填   类型             描述\nguildid        是    string         频道 id\nrecommendobj   是    recommendobj   推荐子频道设置对象\n\n\n# recommendobj\n\n字段名                  必填   类型                   描述\nannounces_type       否    number               公告类别 0:成员公告，1:欢迎公告，默认为成员公告\nrecommend_channels   是    recommendchannel[]   推荐子频道列表\n\n\n# recommendchannel\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   推荐语\n\n\n# 返回说明\n\n返回 announce 对象。\n\n\n# announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 id\nchannel_id           string                  子频道 id\nmessage_id           string                  消息 id\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   recommendchannel[] 数组   推荐子频道详情列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxx",\n  "message_id": "",\n  "announces_type": 1,\n  "recommend_channels": [\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    },\n    {\n      "channel_id": "xxxx",\n      "introduce": "推荐语"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道 API 权限授权链接",frontmatter:{},regularPath:"/develop/nodesdk/api_permissions/post_permission.html",relativePath:"develop/nodesdk/api_permissions/post_permission.md",key:"v-66d773ad",path:"/develop/nodesdk/api_permissions/post_permission.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:187},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:608},{level:3,title:"PermissionDemandToCreate",slug:"permissiondemandtocreate",normalizedTitle:"permissiondemandtocreate",charIndex:758},{level:3,title:"APIPermissionDemandIdentify",slug:"apipermissiondemandidentify",normalizedTitle:"apipermissiondemandidentify",charIndex:959},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1234},{level:3,title:"APIPermissionDemand",slug:"apipermissiondemand",normalizedTitle:"apipermissiondemand",charIndex:959},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1649}],lastUpdated:"4/28/2022, 12:32:32 PM",lastUpdatedTimestamp:1651149152e3,headersStr:"使用示例 参数说明 PermissionDemandToCreate APIPermissionDemandIdentify 返回说明 APIPermissionDemand 返回示例",content:'# 创建频道 API 权限授权链接\n\n用于创建 API 接口权限授权链接，该链接指向 guildID 对应的频道 。调用成功后，参数指定的子频道会受到一条“申请授权【xxx】权限”消息，管理员点击可进行机器人 API 权限授予。\n\n注意\n\n * 需要建立 ws 连接。\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接，如需调整，请联系平台申请权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildPermissionsApi.postPermissionDemand(guildID, permissionDemandObj);\n\n  // e.g.\n  // let { data } = await client.guildPermissionsApi.postPermissionDemand(\'123456\', {\n  //   channel_id: \'112233\',\n  //   api_identify: {\n  //     path: \'/guilds/{guild_id}\',\n  //     method: \'GET\',\n  //   },\n  //   desc: \'频道权限\',\n  // });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 参数说明\n\n字段名                   必填   类型                         描述\nguildID               是    string                     频道 ID\npermissionDemandObj   是    PermissionDemandToCreate   授权链接对象\n\n\n# PermissionDemandToCreate\n\n字段名            必填   类型                            描述\nchannel_id     是    string                        授权链接发送的子频道 ID\napi_identify   是    APIPermissionDemandIdentify   API 权限需求标识对象\ndesc           否    string                        机器人申请对应的 API 接口权限后可以使用功能的描述\n\n\n# APIPermissionDemandIdentify\n\n字段名      类型       描述\npath     string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 GET\n\n\n# 返回说明\n\n返回 APIPermissionDemand对象。\n\n\n# APIPermissionDemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 ID\nchannel_id     string                        接口权限需求授权链接发送的子频道 ID\napi_identify   APIPermissionDemandIdentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "123456",\n  "channel_id": "112233",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "GET"\n  },\n  "title": "申请授权【获取频道】权限",\n  "desc": "允许授权后才能正常使用机器人「频道权限」功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时打开“channel_id”对应的频道，可看到一条机器人发出的 API 授权申请消息。',normalizedContent:'# 创建频道 api 权限授权链接\n\n用于创建 api 接口权限授权链接，该链接指向 guildid 对应的频道 。调用成功后，参数指定的子频道会受到一条“申请授权【xxx】权限”消息，管理员点击可进行机器人 api 权限授予。\n\n注意\n\n * 需要建立 ws 连接。\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接，如需调整，请联系平台申请权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildpermissionsapi.postpermissiondemand(guildid, permissiondemandobj);\n\n  // e.g.\n  // let { data } = await client.guildpermissionsapi.postpermissiondemand(\'123456\', {\n  //   channel_id: \'112233\',\n  //   api_identify: {\n  //     path: \'/guilds/{guild_id}\',\n  //     method: \'get\',\n  //   },\n  //   desc: \'频道权限\',\n  // });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 参数说明\n\n字段名                   必填   类型                         描述\nguildid               是    string                     频道 id\npermissiondemandobj   是    permissiondemandtocreate   授权链接对象\n\n\n# permissiondemandtocreate\n\n字段名            必填   类型                            描述\nchannel_id     是    string                        授权链接发送的子频道 id\napi_identify   是    apipermissiondemandidentify   api 权限需求标识对象\ndesc           否    string                        机器人申请对应的 api 接口权限后可以使用功能的描述\n\n\n# apipermissiondemandidentify\n\n字段名      类型       描述\npath     string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 get\n\n\n# 返回说明\n\n返回 apipermissiondemand对象。\n\n\n# apipermissiondemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 id\nchannel_id     string                        接口权限需求授权链接发送的子频道 id\napi_identify   apipermissiondemandidentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "123456",\n  "channel_id": "112233",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "get"\n  },\n  "title": "申请授权【获取频道】权限",\n  "desc": "允许授权后才能正常使用机器人「频道权限」功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时打开“channel_id”对应的频道，可看到一条机器人发出的 api 授权申请消息。',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"音频控制",frontmatter:{},regularPath:"/develop/nodesdk/audio/audio_control.html",relativePath:"develop/nodesdk/audio/audio_control.md",key:"v-0c95e2cd",path:"/develop/nodesdk/audio/audio_control.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:20},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:140},{level:3,title:"AudioControl",slug:"audiocontrol",normalizedTitle:"audiocontrol",charIndex:246},{level:3,title:"STATUS",slug:"status",normalizedTitle:"status",charIndex:433},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:569},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:588}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 AudioControl STATUS 返回说明 返回示例",content:"# 音频控制\n\n用于控制音频。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.audioApi.postAudio(channelID, audioControl);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名            必填   类型             描述\nchannelID      是    string         子频道 ID\naudioControl   是    AudioControl   audio 控制参数\n\n\n# AudioControl\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      STATUS   播放状态，参考 STATUS\n\n\n# STATUS\n\n字段名      值   描述\nSTART    0   开始播放操作\nPAUSE    1   暂停播放操作\nRESUME   2   继续播放操作\nSTOP     3   停止播放操作\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 音频控制\n\n用于控制音频。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.audioapi.postaudio(channelid, audiocontrol);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名            必填   类型             描述\nchannelid      是    string         子频道 id\naudiocontrol   是    audiocontrol   audio 控制参数\n\n\n# audiocontrol\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      status   播放状态，参考 status\n\n\n# status\n\n字段名      值   描述\nstart    0   开始播放操作\npause    1   暂停播放操作\nresume   2   继续播放操作\nstop     3   停止播放操作\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"机器人下麦",frontmatter:{},regularPath:"/develop/nodesdk/audio/bot_off_mic.html",relativePath:"develop/nodesdk/audio/bot_off_mic.md",key:"v-d1e2f026",path:"/develop/nodesdk/audio/bot_off_mic.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:96},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:202},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:276},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:295}],lastUpdated:"6/2/2022, 7:28:32 AM",lastUpdatedTimestamp:1654154912e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 机器人下麦\n\n机器人在 channel_id 对应的语音子频道下麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.audioApi.botOffMic(channelID);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelID   是    string   语音子频道 ID\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 机器人下麦\n\n机器人在 channel_id 对应的语音子频道下麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.audioapi.botoffmic(channelid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   语音子频道 id\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"NodeSDK更新日志",frontmatter:{},regularPath:"/develop/nodesdk/changelog/",relativePath:"develop/nodesdk/changelog/README.md",key:"v-03c7bdd6",path:"/develop/nodesdk/changelog/",headers:[{level:2,title:"2.5.0 (2022-01-12)",slug:"_2-5-0-2022-01-12",normalizedTitle:"2.5.0 (2022-01-12)",charIndex:132},{level:3,title:"Features",slug:"features",normalizedTitle:"features",charIndex:155},{level:2,title:"2.4.0 (2022-01-12)",slug:"_2-4-0-2022-01-12",normalizedTitle:"2.4.0 (2022-01-12)",charIndex:194},{level:3,title:"Features",slug:"features-2",normalizedTitle:"features",charIndex:155},{level:2,title:"2.3.0 (2022-01-11)",slug:"_2-3-0-2022-01-11",normalizedTitle:"2.3.0 (2022-01-11)",charIndex:288},{level:3,title:"Features",slug:"features-3",normalizedTitle:"features",charIndex:155},{level:2,title:"2.2.0 (2022-01-08)",slug:"_2-2-0-2022-01-08",normalizedTitle:"2.2.0 (2022-01-08)",charIndex:346},{level:3,title:"Features",slug:"features-4",normalizedTitle:"features",charIndex:155},{level:2,title:"2.1.0 (2022-01-08)",slug:"_2-1-0-2022-01-08",normalizedTitle:"2.1.0 (2022-01-08)",charIndex:404},{level:3,title:"Features",slug:"features-5",normalizedTitle:"features",charIndex:155},{level:3,title:"Bug Fixes",slug:"bug-fixes",normalizedTitle:"bug fixes",charIndex:509},{level:2,title:"2.0.0 (2022-01-05)",slug:"_2-0-0-2022-01-05",normalizedTitle:"2.0.0 (2022-01-05)",charIndex:553},{level:3,title:"Features",slug:"features-6",normalizedTitle:"features",charIndex:155},{level:2,title:"1.5.0 (2022-01-01)",slug:"_1-5-0-2022-01-01",normalizedTitle:"1.5.0 (2022-01-01)",charIndex:610},{level:3,title:"Features",slug:"features-7",normalizedTitle:"features",charIndex:155},{level:2,title:"1.4.0 (2022-01-01)",slug:"_1-4-0-2022-01-01",normalizedTitle:"1.4.0 (2022-01-01)",charIndex:673},{level:3,title:"Features",slug:"features-8",normalizedTitle:"features",charIndex:155},{level:3,title:"1.3.1 (2021-12-31)",slug:"_1-3-1-2021-12-31",normalizedTitle:"1.3.1 (2021-12-31)",charIndex:747},{level:3,title:"Features",slug:"features-9",normalizedTitle:"features",charIndex:155},{level:2,title:"1.3.0 (2021-12-30)",slug:"_1-3-0-2021-12-30",normalizedTitle:"1.3.0 (2021-12-30)",charIndex:811},{level:3,title:"Features",slug:"features-10",normalizedTitle:"features",charIndex:155},{level:3,title:"1.2.2 (2021-12-28)",slug:"_1-2-2-2021-12-28",normalizedTitle:"1.2.2 (2021-12-28)",charIndex:877},{level:3,title:"Bug Fixes",slug:"bug-fixes-2",normalizedTitle:"bug fixes",charIndex:509},{level:3,title:"1.2.1 (2021-12-25)",slug:"_1-2-1-2021-12-25",normalizedTitle:"1.2.1 (2021-12-25)",charIndex:956},{level:3,title:"Bug Fixes",slug:"bug-fixes-3",normalizedTitle:"bug fixes",charIndex:509},{level:2,title:"1.2.0 (2021-12-24)",slug:"_1-2-0-2021-12-24",normalizedTitle:"1.2.0 (2021-12-24)",charIndex:1035},{level:3,title:"Features",slug:"features-11",normalizedTitle:"features",charIndex:155},{level:3,title:"Bug Fixes",slug:"bug-fixes-4",normalizedTitle:"bug fixes",charIndex:509},{level:3,title:"1.1.2 (2021-12-22)",slug:"_1-1-2-2021-12-22",normalizedTitle:"1.1.2 (2021-12-22)",charIndex:1192},{level:3,title:"Bug Fixes",slug:"bug-fixes-5",normalizedTitle:"bug fixes",charIndex:509},{level:3,title:"1.1.1 (2021-12-22)",slug:"_1-1-1-2021-12-22",normalizedTitle:"1.1.1 (2021-12-22)",charIndex:1340},{level:3,title:"Bug Fixes",slug:"bug-fixes-6",normalizedTitle:"bug fixes",charIndex:509},{level:2,title:"1.1.0 (2021-12-09)",slug:"_1-1-0-2021-12-09",normalizedTitle:"1.1.0 (2021-12-09)",charIndex:1488},{level:3,title:"Features",slug:"features-12",normalizedTitle:"features",charIndex:155},{level:2,title:"1.0.0 (2021-12-03)",slug:"_1-0-0-2021-12-03",normalizedTitle:"1.0.0 (2021-12-03)",charIndex:1610},{level:3,title:"Features",slug:"features-13",normalizedTitle:"features",charIndex:155},{level:3,title:"Bug Fixes",slug:"bug-fixes-7",normalizedTitle:"bug fixes",charIndex:509}],lastUpdated:"1/13/2022, 10:48:19 AM",lastUpdatedTimestamp:1642070899e3,headersStr:"2.5.0 (2022-01-12) Features 2.4.0 (2022-01-12) Features 2.3.0 (2022-01-11) Features 2.2.0 (2022-01-08) Features 2.1.0 (2022-01-08) Features Bug Fixes 2.0.0 (2022-01-05) Features 1.5.0 (2022-01-01) Features 1.4.0 (2022-01-01) Features 1.3.1 (2021-12-31) Features 1.3.0 (2021-12-30) Features 1.2.2 (2021-12-28) Bug Fixes 1.2.1 (2021-12-25) Bug Fixes 1.2.0 (2021-12-24) Features Bug Fixes 1.1.2 (2021-12-22) Bug Fixes 1.1.1 (2021-12-22) Bug Fixes 1.1.0 (2021-12-09) Features 1.0.0 (2021-12-03) Features Bug Fixes",content:"# NodeSDK更新日志\n\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n\n# 2.5.0 (2022-01-12)\n\n\n# Features\n\n * 完善intents事件 (fdd8569)\n\n\n# 2.4.0 (2022-01-12)\n\n\n# Features\n\n * 获取频道列表参数补齐 (bbfc4e7)\n * 扩展创建子频道参数，支持创建私密子频道 (38ee7a4)\n\n\n# 2.3.0 (2022-01-11)\n\n\n# Features\n\n * 添加日程API (ad05262)\n\n\n# 2.2.0 (2022-01-08)\n\n\n# Features\n\n * 添加公告API (dfd33c9)\n\n\n# 2.1.0 (2022-01-08)\n\n\n# Features\n\n * 添加禁言API (9d5e47b)\n * 重命名sdk (5d7e22e)\n * sdk中添加撤回消息API (69058d6)\n\n\n# Bug Fixes\n\n * 修复MuteAPI返回类型问题 (7ab3a8f)\n\n\n# 2.0.0 (2022-01-05)\n\n\n# Features\n\n * 重命名sdk (f755cc0)\n\n\n# 1.5.0 (2022-01-01)\n\n\n# Features\n\n * 将类型定义导出到打包结果 (99b2c57)\n\n\n# 1.4.0 (2022-01-01)\n\n\n# Features\n\n * 添加子频道身份组权限api(测试用例待补充)' (400fc34)\n\n\n# 1.3.1 (2021-12-31)\n\n\n# Features\n\n * 异常返回带上traceid (b151628)\n\n\n# 1.3.0 (2021-12-30)\n\n\n# Features\n\n * 补充'身份组成员'接口传参方式 (cb0ae47)\n\n\n# 1.2.2 (2021-12-28)\n\n\n# Bug Fixes\n\n * err返回值兼容response.data不存在的情况 (fe7c7cc)\n\n\n# 1.2.1 (2021-12-25)\n\n\n# Bug Fixes\n\n * err返回值兼容response.data不存在的情况 (fe7c7cc)\n\n\n# 1.2.0 (2021-12-24)\n\n\n# Features\n\n * 修改shards与intents入参为可选 (29d5c96)\n\n\n# Bug Fixes\n\n * 修复ws模块拼写错误 (dd3a85b)\n * 修改错误拼写 (56a7270)\n * ws相关方法参数类型修复 (2ed828d)\n\n\n# 1.1.2 (2021-12-22)\n\n\n# Bug Fixes\n\n * 配置文件修改 (ea84dd7)\n * 去除多余文件 (ae367b4)\n * support for passing filter params when post & patch role (1f66b6c)\n\n\n# 1.1.1 (2021-12-22)\n\n\n# Bug Fixes\n\n * support for passing filter params when post & patch role (1f66b6c)\n * 去除多余文件 (ae367b4)\n * 配置文件修改 (ea84dd7)\n\n\n# 1.1.0 (2021-12-09)\n\n\n# Features\n\n * 去除APPID/token等信息 (9997c5b)\n * 修改ws信息获取时的鉴权信息 (bcd1521)\n * ws断线优化,事件分发优化 (ccfab14)\n\n\n# 1.0.0 (2021-12-03)\n\n\n# Features\n\n * 代码优化 (dc30d86)\n * 代码优化 (65df46e)\n * 底层会话优化 (473b6f7)\n * 功能优化 (2a9545d)\n * 会话优化 (7c042a2)\n * 结构调整 (b36bc04)\n * 添加单测用例 (23581ef)\n * 添加readme, 部分代码优化 (08bc505)\n * 心跳重连 (67445ba)\n * 优化心跳 (7626e20)\n * add channel permissions openapis (5b70182)\n * add direct message openapi (19e6cf6)\n * add example (b6e076b)\n * add meApi (2f37b33)\n * add openapi (dfebe4a)\n * add openapis (991dcd1)\n * add resty-client (05c213e)\n * add user openapis (171a5bd)\n * guildMembers接口添加分页参数 (4bd7a61)\n * openapi design (ea9a19a)\n * orange-ci 自动化构建 (ab1611c)\n * register openapis (d7f18d1)\n * SDK基础架构 (7cca61c)\n * tune the main process (ec70a0b)\n * websocket基础链接+心跳重连 (2e330c8)\n * ws监听事件优化,结构调整 (cb91c8d)\n * ws优化 (abf75cc)\n * ws优化 (0105a85)\n * wss请求地址优化 (9fd4bcd)\n * wss优化 (6bb374e)\n\n\n# Bug Fixes\n\n * 修正eslint校验 (7e6cd0d)\n * add fix openapis boundary (0dc47e2)\n * fix apis (c183a39)",normalizedContent:"# nodesdk更新日志\n\nall notable changes to this project will be documented in this file. see standard-version for commit guidelines.\n\n\n# 2.5.0 (2022-01-12)\n\n\n# features\n\n * 完善intents事件 (fdd8569)\n\n\n# 2.4.0 (2022-01-12)\n\n\n# features\n\n * 获取频道列表参数补齐 (bbfc4e7)\n * 扩展创建子频道参数，支持创建私密子频道 (38ee7a4)\n\n\n# 2.3.0 (2022-01-11)\n\n\n# features\n\n * 添加日程api (ad05262)\n\n\n# 2.2.0 (2022-01-08)\n\n\n# features\n\n * 添加公告api (dfd33c9)\n\n\n# 2.1.0 (2022-01-08)\n\n\n# features\n\n * 添加禁言api (9d5e47b)\n * 重命名sdk (5d7e22e)\n * sdk中添加撤回消息api (69058d6)\n\n\n# bug fixes\n\n * 修复muteapi返回类型问题 (7ab3a8f)\n\n\n# 2.0.0 (2022-01-05)\n\n\n# features\n\n * 重命名sdk (f755cc0)\n\n\n# 1.5.0 (2022-01-01)\n\n\n# features\n\n * 将类型定义导出到打包结果 (99b2c57)\n\n\n# 1.4.0 (2022-01-01)\n\n\n# features\n\n * 添加子频道身份组权限api(测试用例待补充)' (400fc34)\n\n\n# 1.3.1 (2021-12-31)\n\n\n# features\n\n * 异常返回带上traceid (b151628)\n\n\n# 1.3.0 (2021-12-30)\n\n\n# features\n\n * 补充'身份组成员'接口传参方式 (cb0ae47)\n\n\n# 1.2.2 (2021-12-28)\n\n\n# bug fixes\n\n * err返回值兼容response.data不存在的情况 (fe7c7cc)\n\n\n# 1.2.1 (2021-12-25)\n\n\n# bug fixes\n\n * err返回值兼容response.data不存在的情况 (fe7c7cc)\n\n\n# 1.2.0 (2021-12-24)\n\n\n# features\n\n * 修改shards与intents入参为可选 (29d5c96)\n\n\n# bug fixes\n\n * 修复ws模块拼写错误 (dd3a85b)\n * 修改错误拼写 (56a7270)\n * ws相关方法参数类型修复 (2ed828d)\n\n\n# 1.1.2 (2021-12-22)\n\n\n# bug fixes\n\n * 配置文件修改 (ea84dd7)\n * 去除多余文件 (ae367b4)\n * support for passing filter params when post & patch role (1f66b6c)\n\n\n# 1.1.1 (2021-12-22)\n\n\n# bug fixes\n\n * support for passing filter params when post & patch role (1f66b6c)\n * 去除多余文件 (ae367b4)\n * 配置文件修改 (ea84dd7)\n\n\n# 1.1.0 (2021-12-09)\n\n\n# features\n\n * 去除appid/token等信息 (9997c5b)\n * 修改ws信息获取时的鉴权信息 (bcd1521)\n * ws断线优化,事件分发优化 (ccfab14)\n\n\n# 1.0.0 (2021-12-03)\n\n\n# features\n\n * 代码优化 (dc30d86)\n * 代码优化 (65df46e)\n * 底层会话优化 (473b6f7)\n * 功能优化 (2a9545d)\n * 会话优化 (7c042a2)\n * 结构调整 (b36bc04)\n * 添加单测用例 (23581ef)\n * 添加readme, 部分代码优化 (08bc505)\n * 心跳重连 (67445ba)\n * 优化心跳 (7626e20)\n * add channel permissions openapis (5b70182)\n * add direct message openapi (19e6cf6)\n * add example (b6e076b)\n * add meapi (2f37b33)\n * add openapi (dfebe4a)\n * add openapis (991dcd1)\n * add resty-client (05c213e)\n * add user openapis (171a5bd)\n * guildmembers接口添加分页参数 (4bd7a61)\n * openapi design (ea9a19a)\n * orange-ci 自动化构建 (ab1611c)\n * register openapis (d7f18d1)\n * sdk基础架构 (7cca61c)\n * tune the main process (ec70a0b)\n * websocket基础链接+心跳重连 (2e330c8)\n * ws监听事件优化,结构调整 (cb91c8d)\n * ws优化 (abf75cc)\n * ws优化 (0105a85)\n * wss请求地址优化 (9fd4bcd)\n * wss优化 (6bb374e)\n\n\n# bug fixes\n\n * 修正eslint校验 (7e6cd0d)\n * add fix openapis boundary (0dc47e2)\n * fix apis (c183a39)",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道",frontmatter:{},regularPath:"/develop/nodesdk/channel/delete_channel.html",relativePath:"develop/nodesdk/channel/delete_channel.md",key:"v-6b8813f1",path:"/develop/nodesdk/channel/delete_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:247},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:319},{level:3,title:"ChannelRes",slug:"channelres",normalizedTitle:"channelres",charIndex:330},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:488},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:727}],lastUpdated:"1/20/2022, 2:45:14 AM",lastUpdatedTimestamp:1642646714e3,headersStr:"使用示例 参数说明 返回说明 ChannelRes ChannelType 返回示例",content:"# 删除子频道\n\n移除一个子频道。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelApi.deleteChannel(channelId);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 子频道的删除是无法撤回的，一旦删除，将无法恢复。\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\n\n\n# 返回说明\n\n返回一个 ChannelRes 对象。\n\n\n# ChannelRes\n\n字段名        类型       描述\nid         string   子频道 ID\nguild_id   string   频道 ID\nname       string   子频道名\ntype       number   子频道类型 ChannelType\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# 返回示例\n\ndata：\n\n{\n    id: 'CHENNAL_ID',\n    type: 3,\n    name: 'ostwindli话题讨论',\n    guild_id: 'GUILD_ID'\n  }\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"# 删除子频道\n\n移除一个子频道。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelapi.deletechannel(channelid);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 子频道的删除是无法撤回的，一旦删除，将无法恢复。\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\n\n\n# 返回说明\n\n返回一个 channelres 对象。\n\n\n# channelres\n\n字段名        类型       描述\nid         string   子频道 id\nguild_id   string   频道 id\nname       string   子频道名\ntype       number   子频道类型 channeltype\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# 返回示例\n\ndata：\n\n{\n    id: 'chennal_id',\n    type: 3,\n    name: 'ostwindli话题讨论',\n    guild_id: 'guild_id'\n  }\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"机器人上麦",frontmatter:{},regularPath:"/develop/nodesdk/audio/bot_on_mic.html",relativePath:"develop/nodesdk/audio/bot_on_mic.md",key:"v-dfdc5d92",path:"/develop/nodesdk/audio/bot_on_mic.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:96},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:201},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:275},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:294}],lastUpdated:"6/2/2022, 7:28:32 AM",lastUpdatedTimestamp:1654154912e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 机器人上麦\n\n机器人在 channel_id 对应的语音子频道上麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.audioApi.botOnMic(channelID);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelID   是    string   语音子频道 ID\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 机器人上麦\n\n机器人在 channel_id 对应的语音子频道上麦。\n\n音频接口：仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.audioapi.botonmic(channelid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   语音子频道 id\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道详情",frontmatter:{},regularPath:"/develop/nodesdk/channel/get_channel.html",relativePath:"develop/nodesdk/channel/get_channel.md",key:"v-454e93a6",path:"/develop/nodesdk/channel/get_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:130},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:202},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:213},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:367},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:407},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:787}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 返回说明 Channel ChannelType ChannelSubType 返回示例",content:"# 获取子频道详情\n\n获取子频道详情。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelApi.channel(channelId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\n\n\n# 返回说明\n\n字段参见 Channel。\n\n\n# Channel\n\n字段名         类型       描述\nid          string   子频道 ID\nguild_id    string   频道 ID\nname        string   子频道名\ntype        number   子频道类型 ChannelType\nsub_type    number   子频道子类型 ChannelSubType\nposition    number   排序，非必填\nparent_id   string   分组 ID\nowner_id    string   创建人 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n{\n    id: 'CHANNEL_ID',\n    guild_id: 'GUILD_ID',\n    name: 'ostwindli的子频道',\n    type: 0,\n    last_message_id: '0',\n    nsfw: false,\n    position: 1638519748,\n    parent_id: 'PARENT_ID',\n    rate_limit_per_user: 0,\n    owner_id: 'OWNER_ID',\n    sub_type: 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",normalizedContent:"# 获取子频道详情\n\n获取子频道详情。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelapi.channel(channelid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\n\n\n# 返回说明\n\n字段参见 channel。\n\n\n# channel\n\n字段名         类型       描述\nid          string   子频道 id\nguild_id    string   频道 id\nname        string   子频道名\ntype        number   子频道类型 channeltype\nsub_type    number   子频道子类型 channelsubtype\nposition    number   排序，非必填\nparent_id   string   分组 id\nowner_id    string   创建人 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n{\n    id: 'channel_id',\n    guild_id: 'guild_id',\n    name: 'ostwindli的子频道',\n    type: 0,\n    last_message_id: '0',\n    nsfw: false,\n    position: 1638519748,\n    parent_id: 'parent_id',\n    rate_limit_per_user: 0,\n    owner_id: 'owner_id',\n    sub_type: 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道",frontmatter:{},regularPath:"/develop/nodesdk/channel/patch_channel.html",relativePath:"develop/nodesdk/channel/patch_channel.md",key:"v-01afe12d",path:"/develop/nodesdk/channel/patch_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:212},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:101},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:429},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:805},{level:3,title:"ChannelRes",slug:"channelres",normalizedTitle:"channelres",charIndex:814},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:1035},{level:3,title:"PrivateType",slug:"privatetype",normalizedTitle:"privatetype",charIndex:545},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1307}],lastUpdated:"1/20/2022, 2:45:14 AM",lastUpdatedTimestamp:1642646714e3,headersStr:"使用示例 参数说明 Channel ChannelType 返回说明 ChannelRes ChannelSubType PrivateType 返回示例",content:'# 修改子频道\n\n修改某个子频道的信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelApi.patchChannel(channelId, channel);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件。\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nchannelId   是    string    子频道 ID\nchannel     是    Channel   子频道对象\n\n\n# Channel\n\n字段名            必填   类型       描述\nname           否    string   子频道名\ntype           否    number   子频道类型 ChannelType\nposition       否    number   排序\nparent_id      否    string   分组 ID\nprivate_type   否    number   子频道私密类型 PrivateType\n\n上述字段需要修改哪个，就传递哪个即可。\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# 返回说明\n\n返回 ChannelRes 对象。\n\n\n# ChannelRes\n\n字段名            类型       描述\nid             string   子频道 ID\nguild_id       string   频道 ID\nname           string   子频道名\ntype           number   子频道类型 ChannelType\nsub_type       number   子频道子类型 ChannelSubType\nposition       number   排序，非必填\nparent_id      string   分组 ID\nowner_id       string   创建人 ID\nprivate_type   string   子频道私密类型 PrivateType\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# PrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "name": "子频道",\n  "type": 0,\n  "position": 2,\n  "parent_id": "1531395",\n  "owner_id": "17734236238436271167",\n  "sub_type": 0,\n  "private_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 修改子频道\n\n修改某个子频道的信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelapi.patchchannel(channelid, channel);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件。\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nchannelid   是    string    子频道 id\nchannel     是    channel   子频道对象\n\n\n# channel\n\n字段名            必填   类型       描述\nname           否    string   子频道名\ntype           否    number   子频道类型 channeltype\nposition       否    number   排序\nparent_id      否    string   分组 id\nprivate_type   否    number   子频道私密类型 privatetype\n\n上述字段需要修改哪个，就传递哪个即可。\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# 返回说明\n\n返回 channelres 对象。\n\n\n# channelres\n\n字段名            类型       描述\nid             string   子频道 id\nguild_id       string   频道 id\nname           string   子频道名\ntype           number   子频道类型 channeltype\nsub_type       number   子频道子类型 channelsubtype\nposition       number   排序，非必填\nparent_id      string   分组 id\nowner_id       string   创建人 id\nprivate_type   string   子频道私密类型 privatetype\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# privatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "name": "子频道",\n  "type": 0,\n  "position": 2,\n  "parent_id": "1531395",\n  "owner_id": "17734236238436271167",\n  "sub_type": 0,\n  "private_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道",frontmatter:{},regularPath:"/develop/nodesdk/channel/post_channels.html",relativePath:"develop/nodesdk/channel/post_channels.md",key:"v-176c6466",path:"/develop/nodesdk/channel/post_channels.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:252},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:97},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:480},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:534},{level:3,title:"PrivateType",slug:"privatetype",normalizedTitle:"privatetype",charIndex:675},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1077},{level:3,title:"ChannelRes",slug:"channelres",normalizedTitle:"channelres",charIndex:1086},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1358}],lastUpdated:"1/20/2022, 2:45:14 AM",lastUpdatedTimestamp:1642646714e3,headersStr:"使用示例 参数说明 Channel ChannelType ChannelSubType PrivateType 返回说明 ChannelRes 返回示例",content:"# 创建子频道\n\n创建一个子频道。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelApi.postChannel(guildId, channel);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 目前不支持创建的子频道类型\n   * 子频道分组\n\n\n# 参数说明\n\n字段名       必填   类型        描述\nguildId   是    string    频道 ID\nchannel   是    Channel   子频道对象\n\n\n# Channel\n\n字段名                类型         必填   描述\nname               string     是    子频道名\ntype               number     是    子频道类型 ChannelType\nsub_type           number     是    子频道子类型 ChannelSubType\nposition           number     否    排序，非必填\nparent_id          string     否    分组 ID\nprivate_type       number     否    子频道私密类型 PrivateType\nprivate_user_ids   string[]   否    私密子频道成员 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# PrivateType\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回说明\n\n返回 ChannelRes 对象。\n\n\n# ChannelRes\n\n字段名        类型       描述\nid         string   子频道 ID\nguild_id   string   频道 ID\nname       string   子频道名\ntype       number   子频道类型 ChannelType\nsub_type   number   子频道子类型 ChannelSubType\nposition   number   排序，非必填\nowner_id   string   创建人用户 ID\n\n\n# 返回示例\n\ndata：\n\n{\n    id: 'CHANNEL_ID',\n    guild_id: 'GUILD_ID',\n    name: 'ostwindli的子频道',\n    type: 1,\n    position: 1638519748,\n    owner_id: '2854209121',\n    sub_type: 0\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",normalizedContent:"# 创建子频道\n\n创建一个子频道。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelapi.postchannel(guildid, channel);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 目前不支持创建的子频道类型\n   * 子频道分组\n\n\n# 参数说明\n\n字段名       必填   类型        描述\nguildid   是    string    频道 id\nchannel   是    channel   子频道对象\n\n\n# channel\n\n字段名                类型         必填   描述\nname               string     是    子频道名\ntype               number     是    子频道类型 channeltype\nsub_type           number     是    子频道子类型 channelsubtype\nposition           number     否    排序，非必填\nparent_id          string     否    分组 id\nprivate_type       number     否    子频道私密类型 privatetype\nprivate_user_ids   string[]   否    私密子频道成员 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# privatetype\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员\n\n\n# 返回说明\n\n返回 channelres 对象。\n\n\n# channelres\n\n字段名        类型       描述\nid         string   子频道 id\nguild_id   string   频道 id\nname       string   子频道名\ntype       number   子频道类型 channeltype\nsub_type   number   子频道子类型 channelsubtype\nposition   number   排序，非必填\nowner_id   string   创建人用户 id\n\n\n# 返回示例\n\ndata：\n\n{\n    id: 'channel_id',\n    guild_id: 'guild_id',\n    name: 'ostwindli的子频道',\n    type: 1,\n    position: 1638519748,\n    owner_id: '2854209121',\n    sub_type: 0\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道身份组权限",frontmatter:{},regularPath:"/develop/nodesdk/channel_permissions/get_channel_role_permissions.html",relativePath:"develop/nodesdk/channel_permissions/get_channel_role_permissions.md",key:"v-429e3cce",path:"/develop/nodesdk/channel_permissions/get_channel_role_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:33},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:173},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:287},{level:3,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:296},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:100},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1052}],lastUpdated:"6/2/2022, 3:31:30 AM",lastUpdatedTimestamp:165414069e4,headersStr:"使用示例 参数说明 返回说明 ChannelPermissions Permissions 返回示例",content:"# 获取子频道身份组权限\n\n获取指定子频道身份组的权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.channelRolePermissions(channelId, roleId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nroleId      是    string   身份组 ID ，参考 Role\n\n\n# 返回说明\n\n返回 ChannelPermissions 对象。\n\n\n# ChannelPermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 ID\nrole_id       string   身份组 ID，参考 Role\npermissions   string   用户拥有的子频道权限，参考 Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，以下面返回示例为例，permissions是'1'，表示拥有可查看子频道(1)权限。\n\n\n# 返回示例\n\ndata：\n\n{\n    channel_id: 'CHANNEL_ID',\n    role_id: 'ROLE_ID',\n    permissions: '1'\n}\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 获取子频道身份组权限\n\n获取指定子频道身份组的权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.channelrolepermissions(channelid, roleid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nroleid      是    string   身份组 id ，参考 role\n\n\n# 返回说明\n\n返回 channelpermissions 对象。\n\n\n# channelpermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 id\nrole_id       string   身份组 id，参考 role\npermissions   string   用户拥有的子频道权限，参考 permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，以下面返回示例为例，permissions是'1'，表示拥有可查看子频道(1)权限。\n\n\n# 返回示例\n\ndata：\n\n{\n    channel_id: 'channel_id',\n    role_id: 'role_id',\n    permissions: '1'\n}\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道列表",frontmatter:{},regularPath:"/develop/nodesdk/channel/get_channels.html",relativePath:"develop/nodesdk/channel/get_channels.md",key:"v-b0c78dc6",path:"/develop/nodesdk/channel/get_channels.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:38},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:143},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:210},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:23},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:376},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:416},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:796}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 返回说明 Channel ChannelType ChannelSubType 返回示例",content:"# 获取子频道列表\n\n获取子频道列表，子频道用Channel描述。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelApi.channels(guildId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\n\n\n# 返回说明\n\n返回 Channel 数组。\n\n\n# Channel\n\n字段名         类型       描述\nid          string   子频道 ID\nguild_id    string   频道 ID\nname        string   子频道名\ntype        number   子频道类型 ChannelType\nsub_type    number   子频道子类型 ChannelSubType\nposition    number   排序，非必填\nparent_id   string   分组 ID\nowner_id    string   创建人 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    id: 'xxxxxx',\n    guild_id: 'xxxxxx',\n    name: '很高兴遇见你',\n    type: 4,\n    position: 2,\n    parent_id: '0',\n    owner_id: '0',\n    sub_type: 0,\n  },\n  {\n    id: 'xxxxxx',\n    guild_id: 'xxxxxx',\n    name: '话题讨论',\n    type: 4,\n    position: 3,\n    parent_id: '0',\n    owner_id: '0',\n    sub_type: 0,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n",normalizedContent:"# 获取子频道列表\n\n获取子频道列表，子频道用channel描述。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelapi.channels(guildid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n返回 channel 数组。\n\n\n# channel\n\n字段名         类型       描述\nid          string   子频道 id\nguild_id    string   频道 id\nname        string   子频道名\ntype        number   子频道类型 channeltype\nsub_type    number   子频道子类型 channelsubtype\nposition    number   排序，非必填\nparent_id   string   分组 id\nowner_id    string   创建人 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    id: 'xxxxxx',\n    guild_id: 'xxxxxx',\n    name: '很高兴遇见你',\n    type: 4,\n    position: 2,\n    parent_id: '0',\n    owner_id: '0',\n    sub_type: 0,\n  },\n  {\n    id: 'xxxxxx',\n    guild_id: 'xxxxxx',\n    name: '话题讨论',\n    type: 4,\n    position: 3,\n    parent_id: '0',\n    owner_id: '0',\n    sub_type: 0,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道身份组权限",frontmatter:{},regularPath:"/develop/nodesdk/channel_permissions/put_channel_role_permissions.html",relativePath:"develop/nodesdk/channel_permissions/put_channel_role_permissions.md",key:"v-787c290b",path:"/develop/nodesdk/channel_permissions/put_channel_role_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:31},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:325},{level:3,title:"UpdatePermission",slug:"updatepermission",normalizedTitle:"updatepermission",charIndex:510},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:98},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1710},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1728}],lastUpdated:"6/2/2022, 3:31:30 AM",lastUpdatedTimestamp:165414069e4,headersStr:"使用示例 参数说明 UpdatePermission Permissions 返回说明 返回示例",content:"# 修改子频道身份组权限\n\n修改子频道身份组的权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.putChannelRolePermissions(\n    channelId,\n    roleId,\n    // updatePermission\n    {\n      remove: '1',\n    },\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                必填   类型                 描述\nchannelId          是    string             子频道 ID\nroleId             是    string             身份组 ID ，参考 Role\nupdatePermission   是    UpdatePermission   权限参数\n\n\n# UpdatePermission\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考Permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，可参考如下提示：\n\n提示\n\n以添加可查看子频道权限为例：\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.putChannelRolePermissions(channelId, roleId, {\n    add: '1',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n同理，移除可查看子频道如下：\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.putChannelRolePermissions(channelId, roleId, {\n    remove: '1',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",normalizedContent:"# 修改子频道身份组权限\n\n修改子频道身份组的权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.putchannelrolepermissions(\n    channelid,\n    roleid,\n    // updatepermission\n    {\n      remove: '1',\n    },\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                必填   类型                 描述\nchannelid          是    string             子频道 id\nroleid             是    string             身份组 id ，参考 role\nupdatepermission   是    updatepermission   权限参数\n\n\n# updatepermission\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，可参考如下提示：\n\n提示\n\n以添加可查看子频道权限为例：\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.putchannelrolepermissions(channelid, roleid, {\n    add: '1',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n同理，移除可查看子频道如下：\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.putchannelrolepermissions(channelid, roleid, {\n    remove: '1',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建私信会话",frontmatter:{},regularPath:"/develop/nodesdk/dms/post_dms.html",relativePath:"develop/nodesdk/dms/post_dms.md",key:"v-e42846f2",path:"/develop/nodesdk/dms/post_dms.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:65},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:350},{level:3,title:"DMSToCreate",slug:"dmstocreate",normalizedTitle:"dmstocreate",charIndex:399},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:555},{level:3,title:"DMS",slug:"dms",normalizedTitle:"dms",charIndex:399},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:715}],lastUpdated:"1/20/2022, 2:44:29 PM",lastUpdatedTimestamp:1642689869e3,headersStr:"使用示例 参数说明 DMSToCreate 返回说明 DMS 返回示例",content:'# 创建私信会话\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n注意\n\n机器人和用户存在共同频道才能创建私信会话。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.directMessageApi.createDirectMessage(dmObj);\n\n  // e.g.\n  //let { data } = await client.directMessageApi.createDirectMessage({\n  //   source_guild_id:"123456",\n  //   recipient_id:"123456"\n  // });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 参数说明\n\n字段名     必填   类型            描述\ndmObj   是    DMSToCreate   创建私信结构体\n\n\n# DMSToCreate\n\n字段名               必填   类型       描述\nsource_guild_id   是    string   源频道 ID\nrecipient_id      是    string   接收者 ID\n\n\n# 返回说明\n\n返回DMS对象。\n\n\n# DMS\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 ID\nchannel_id    string   私信会话关联的子频道 ID\ncreate_time   string   创建私信会话时间戳\n\n\n# 返回示例\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1642545606"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建私信会话\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n注意\n\n机器人和用户存在共同频道才能创建私信会话。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.directmessageapi.createdirectmessage(dmobj);\n\n  // e.g.\n  //let { data } = await client.directmessageapi.createdirectmessage({\n  //   source_guild_id:"123456",\n  //   recipient_id:"123456"\n  // });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 参数说明\n\n字段名     必填   类型            描述\ndmobj   是    dmstocreate   创建私信结构体\n\n\n# dmstocreate\n\n字段名               必填   类型       描述\nsource_guild_id   是    string   源频道 id\nrecipient_id      是    string   接收者 id\n\n\n# 返回说明\n\n返回dms对象。\n\n\n# dms\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 id\nchannel_id    string   私信会话关联的子频道 id\ncreate_time   string   创建私信会话时间戳\n\n\n# 返回示例\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1642545606"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道权限",frontmatter:{},regularPath:"/develop/nodesdk/channel_permissions/put_channel_permissions.html",relativePath:"develop/nodesdk/channel_permissions/put_channel_permissions.md",key:"v-0e69c4e6",path:"/develop/nodesdk/channel_permissions/put_channel_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:333},{level:3,title:"UpdatePermission",slug:"updatepermission",normalizedTitle:"updatepermission",charIndex:517},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:91},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1709},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1727}],lastUpdated:"6/2/2022, 3:31:30 AM",lastUpdatedTimestamp:165414069e4,headersStr:"使用示例 参数说明 UpdatePermission Permissions 返回说明 返回示例",content:"# 修改子频道权限\n\n修改子频道权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.putChannelPermissions(\n    channelId,\n    userId,\n    // updatePermission\n    {\n      remove: '1',\n      add: '4',\n    },\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                必填   类型                 描述\nchannelId          是    string             子频道 ID\nuserId             是    string             用户 ID ，参考 User\nupdatePermission   是    UpdatePermission   权限参数\n\n\n# UpdatePermission\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考Permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，可参考如下提示：\n\n提示\n\n以添加可发言子频道权限为例：\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.putChannelPermissions(channelId, userId, {\n    add: '4',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n同理，移除可发言子频道如下：\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.putChannelPermissions(channelId, userId, {\n    remove: '4',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",normalizedContent:"# 修改子频道权限\n\n修改子频道权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.putchannelpermissions(\n    channelid,\n    userid,\n    // updatepermission\n    {\n      remove: '1',\n      add: '4',\n    },\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                必填   类型                 描述\nchannelid          是    string             子频道 id\nuserid             是    string             用户 id ，参考 user\nupdatepermission   是    updatepermission   权限参数\n\n\n# updatepermission\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，可参考如下提示：\n\n提示\n\n以添加可发言子频道权限为例：\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.putchannelpermissions(channelid, userid, {\n    add: '4',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n同理，移除可发言子频道如下：\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.putchannelpermissions(channelid, userid, {\n    remove: '4',\n  });\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道权限",frontmatter:{},regularPath:"/develop/nodesdk/channel_permissions/get_channel_permissions.html",relativePath:"develop/nodesdk/channel_permissions/get_channel_permissions.md",key:"v-75d44e6d",path:"/develop/nodesdk/channel_permissions/get_channel_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:27},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:163},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:276},{level:3,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:285},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:94},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1040}],lastUpdated:"6/2/2022, 3:31:30 AM",lastUpdatedTimestamp:165414069e4,headersStr:"使用示例 参数说明 返回说明 ChannelPermissions Permissions 返回示例",content:"# 获取子频道权限\n\n获取指定子频道的权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelPermissionsApi.channelPermissions(channelId, userId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nuserId      是    string   用户 ID ，参考 User\n\n\n# 返回说明\n\n返回 ChannelPermissions 对象。\n\n\n# ChannelPermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 ID\nuser_id       string   用户 ID，参考 User\npermissions   string   用户拥有的子频道权限，参考 Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，以下面返回示例为例，permissions是'5'，表示拥有可发言子频道(4)+可查看子频道(1)两种权限。\n\n\n# 返回示例\n\ndata：\n\n{\n    channel_id: 'CHANNEL_ID',\n    user_id: 'USER_ID',\n    permissions: '5'\n}\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 获取子频道权限\n\n获取指定子频道的权限。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.channelpermissionsapi.channelpermissions(channelid, userid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nuserid      是    string   用户 id ，参考 user\n\n\n# 返回说明\n\n返回 channelpermissions 对象。\n\n\n# channelpermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 id\nuser_id       string   用户 id，参考 user\npermissions   string   用户拥有的子频道权限，参考 permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                       描述\n可查看子频道   0x0000000001(1 << 0)    支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)    创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)    支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000008 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，以下面返回示例为例，permissions是'5'，表示拥有可发言子频道(4)+可查看子频道(1)两种权限。\n\n\n# 返回示例\n\ndata：\n\n{\n    channel_id: 'channel_id',\n    user_id: 'user_id',\n    permissions: '5'\n}\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组成员",frontmatter:{},regularPath:"/develop/nodesdk/guild/delete_guild_member_role.html",relativePath:"develop/nodesdk/guild/delete_guild_member_role.md",key:"v-1e883079",path:"/develop/nodesdk/guild/delete_guild_member_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:222},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:533},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:661}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 DefaultRoleIDs 返回说明",content:"# 删除频道身份组成员\n\n删除频道身份组成员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.memberApi.memberDeleteRole(guildId, roleId, userId, channelId);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限，如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nguildId     是    string    频道 ID\nroleId      是    string    身份组 ID\nuserId      是    string    用户 ID\nchannel     否    Channel   只填充 id 属性的 Channel 对象(已弃用，请使用 channelId)\nchannelId   否    string    子频道 ID\n\n注意\n\n * 如果目标身份组 ID 是 5-子频道管理员（即：roleId = '5'），需要指定channelId参数，否则会报错。\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID:\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回说明\n\n返回结果为空，HTTP 状态码 204。",normalizedContent:"# 删除频道身份组成员\n\n删除频道身份组成员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.memberapi.memberdeleterole(guildid, roleid, userid, channelid);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限，如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nguildid     是    string    频道 id\nroleid      是    string    身份组 id\nuserid      是    string    用户 id\nchannel     否    channel   只填充 id 属性的 channel 对象(已弃用，请使用 channelid)\nchannelid   否    string    子频道 id\n\n注意\n\n * 如果目标身份组 id 是 5-子频道管理员（即：roleid = '5'），需要指定channelid参数，否则会报错。\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id:\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回说明\n\n返回结果为空，http 状态码 204。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"openapi 错误",frontmatter:{},regularPath:"/develop/nodesdk/error/error.html",relativePath:"develop/nodesdk/error/error.md",key:"v-0ef7d38d",path:"/develop/nodesdk/error/error.html",headers:[{level:2,title:"错误处理",slug:"错误处理",normalizedTitle:"错误处理",charIndex:17},{level:3,title:"http 状态码",slug:"http-状态码",normalizedTitle:"http 状态码",charIndex:37},{level:3,title:"code",slug:"code",normalizedTitle:"code",charIndex:71}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"错误处理 http 状态码 code",content:"# openapi 错误\n\n\n# 错误处理\n\n错误码分为两部分：\n\n * http 状态码\n * http body 返回的 json 中的 code\n\n如：\n\n\n# http 状态码\n\n值     含义\n20x   成功 (200,201,204 等)\n401   认证失败\n404   未找到 API\n405   http method 不允许\n429   频率限制\n500   处理失败\n504   处理失败\n\n\n# code\n\n值                 含义\n10001             UnknownAccount 账号异常\n10003             UnknownChannel 子频道异常\n10004             UnknownGuild 频道异常\n11281             ErrorCheckAdminFailed 检查是否是管理员失败，系统错误，一般重试一次会好，最多只能重试一次\n11282             ErrorCheckAdminNotPass\n                  检查是否是管理员未通过，该接口需要管理员权限，但是用户在添加机器人的时候并未授予该权限，属于逻辑错误，可以提示用户进行授权\n11251             ErrorWrongAppid 参数中的 appid 错误，开发者填的 token 错误，appid 无法识别\n11252             ErrorCheckAppPrivilegeFailed 检查应用权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11253             ErrorCheckAppPrivilegeNotPass\n                  检查应用权限不通过，该机器人应用未获得调用该接口的权限，需要向平台申请\n11254             ErrorInterfaceForbidden 应用接口被封禁，该机器人虽然获得了该接口权限，但是被封禁了。\n11261             ErrorWrongAppid 参数中缺少 appid，同 11251\n11262             ErrorCheckRobot 当前接口不支持使用机器人 Bot Token 调用\n11263             ErrorCheckGuildAuth 检查频道权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11264             ErrorGuildAuthNotPass\n                  检查小站权限未通过，管理员添加机器人的时候未授予该接口权限，属于逻辑错误，可提示用户进行授权\n11265             ErrorRobotHasBaned 机器人已经被封禁\n11241             ErrorWrongToken 参数中缺少 token\n11242             ErrorCheckTokenFailed 校验 token 失败，系统错误，一般重试一次会好，最多只能重试一次\n11243             ErrorCheckTokenNotPass 校验 token 未通过，用户填充的 token 错误，需要开发者进行检查\n11273             ErrorCheckUserAuth 检查用户权限失败，当前接口不支持使用 Bearer Token 调用\n11274             ErrorUserAuthNotPass 检查用户权限未通过，用户 OAuth\n                  授权时未给与该接口权限，可提示用户重新进行授权\n11275             ErrorWrongAppid 无 appid ，同 11251\n12001             ReplaceIDFailed 替换 id 失败\n12002             RequestInvalid 请求体错误\n12003             ResponseInvalid 回包错误\n20028             ChannelHitWriteRateLimit 子频道消息触发限频\n50006             CannotSendEmptyMessage 消息为空\n50035             InvalidFormBody form-data 内容异常\n304003            URL_NOT_ALLOWED url 未报备\n304004            ARK_NOT_ALLOWED 没有发 ark 消息权限\n304005            EMBED_LIMIT embed 长度超限\n304006            SERVER_CONFIG 后台配置错误\n304007            GET_GUILD 查询频道异常\n304008            GET_BOT 查询机器人异常\n304009            GET_CHENNAL 查询子频道异常\n304010            CHANGE_IMAGE_URL 图片转存错误\n304011            NO_TEMPLATE 模板不存在\n304012            GET_TEMPLATE 取模板错误\n304014            ARK_PRIVILEGE 没有模板权限\n304016            SEND_ERROR 发消息错误\n304017            UPLOAD_IMAGE 图片上传错误\n304018            SESSION_NOT_EXIST 机器人没连上 gateway\n304019            AT_EVERYONE_TIMES @全体成员 次数超限\n304020            FILE_SIZE 文件大小超限\n304021            GET_FILE 下载文件错误\n304022            PUSH_TIME 推送消息时间限制\n304023            PUSH_MSG_ASYNC_OK 推送消息异步调用成功, 等待人工审核\n304024            REPLY_MSG_ASYNC_OK 回复消息异步调用成功, 等待人工审核\n304025            BEAT 消息被打击\n304026            MSG_ID 回复的消息 id 错误\n304027            MSG_EXPIRE 回复的消息过期\n304028            MSG_PROTECT 非 At 当前用户的消息不允许回复\n304029            CORPUS_ERROR 调语料服务错误\n304030            CORPUS_NOT_MATCH 语料不匹配\n1000000~2999999   发消息错误\n1100100           安全打击：消息被限频\n1100101           安全打击：内容涉及敏感，请返回修改\n1100102           安全打击：抱歉，暂未获得新功能体验资格\n1100103           安全打击\n1100104           安全打击：该群已失效或当前群已不存在\n1100300           系统内部错误\n1100301           调用方不是群成员\n1100302           获取指定频道名称失败\n1100303           主页频道非管理员不允许发消息\n1100304           @次数鉴权失败\n1100305           TinyId 转换 Uin 失败\n1100306           非私有频道成员\n1100307           非白名单应用子频道\n1100308           触发频道内限频\n1100499           其他错误",normalizedContent:"# openapi 错误\n\n\n# 错误处理\n\n错误码分为两部分：\n\n * http 状态码\n * http body 返回的 json 中的 code\n\n如：\n\n\n# http 状态码\n\n值     含义\n20x   成功 (200,201,204 等)\n401   认证失败\n404   未找到 api\n405   http method 不允许\n429   频率限制\n500   处理失败\n504   处理失败\n\n\n# code\n\n值                 含义\n10001             unknownaccount 账号异常\n10003             unknownchannel 子频道异常\n10004             unknownguild 频道异常\n11281             errorcheckadminfailed 检查是否是管理员失败，系统错误，一般重试一次会好，最多只能重试一次\n11282             errorcheckadminnotpass\n                  检查是否是管理员未通过，该接口需要管理员权限，但是用户在添加机器人的时候并未授予该权限，属于逻辑错误，可以提示用户进行授权\n11251             errorwrongappid 参数中的 appid 错误，开发者填的 token 错误，appid 无法识别\n11252             errorcheckappprivilegefailed 检查应用权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11253             errorcheckappprivilegenotpass\n                  检查应用权限不通过，该机器人应用未获得调用该接口的权限，需要向平台申请\n11254             errorinterfaceforbidden 应用接口被封禁，该机器人虽然获得了该接口权限，但是被封禁了。\n11261             errorwrongappid 参数中缺少 appid，同 11251\n11262             errorcheckrobot 当前接口不支持使用机器人 bot token 调用\n11263             errorcheckguildauth 检查频道权限失败，系统错误，一般重试一次会好，最多只能重试一次\n11264             errorguildauthnotpass\n                  检查小站权限未通过，管理员添加机器人的时候未授予该接口权限，属于逻辑错误，可提示用户进行授权\n11265             errorrobothasbaned 机器人已经被封禁\n11241             errorwrongtoken 参数中缺少 token\n11242             errorchecktokenfailed 校验 token 失败，系统错误，一般重试一次会好，最多只能重试一次\n11243             errorchecktokennotpass 校验 token 未通过，用户填充的 token 错误，需要开发者进行检查\n11273             errorcheckuserauth 检查用户权限失败，当前接口不支持使用 bearer token 调用\n11274             erroruserauthnotpass 检查用户权限未通过，用户 oauth\n                  授权时未给与该接口权限，可提示用户重新进行授权\n11275             errorwrongappid 无 appid ，同 11251\n12001             replaceidfailed 替换 id 失败\n12002             requestinvalid 请求体错误\n12003             responseinvalid 回包错误\n20028             channelhitwriteratelimit 子频道消息触发限频\n50006             cannotsendemptymessage 消息为空\n50035             invalidformbody form-data 内容异常\n304003            url_not_allowed url 未报备\n304004            ark_not_allowed 没有发 ark 消息权限\n304005            embed_limit embed 长度超限\n304006            server_config 后台配置错误\n304007            get_guild 查询频道异常\n304008            get_bot 查询机器人异常\n304009            get_chennal 查询子频道异常\n304010            change_image_url 图片转存错误\n304011            no_template 模板不存在\n304012            get_template 取模板错误\n304014            ark_privilege 没有模板权限\n304016            send_error 发消息错误\n304017            upload_image 图片上传错误\n304018            session_not_exist 机器人没连上 gateway\n304019            at_everyone_times @全体成员 次数超限\n304020            file_size 文件大小超限\n304021            get_file 下载文件错误\n304022            push_time 推送消息时间限制\n304023            push_msg_async_ok 推送消息异步调用成功, 等待人工审核\n304024            reply_msg_async_ok 回复消息异步调用成功, 等待人工审核\n304025            beat 消息被打击\n304026            msg_id 回复的消息 id 错误\n304027            msg_expire 回复的消息过期\n304028            msg_protect 非 at 当前用户的消息不允许回复\n304029            corpus_error 调语料服务错误\n304030            corpus_not_match 语料不匹配\n1000000~2999999   发消息错误\n1100100           安全打击：消息被限频\n1100101           安全打击：内容涉及敏感，请返回修改\n1100102           安全打击：抱歉，暂未获得新功能体验资格\n1100103           安全打击\n1100104           安全打击：该群已失效或当前群已不存在\n1100300           系统内部错误\n1100301           调用方不是群成员\n1100302           获取指定频道名称失败\n1100303           主页频道非管理员不允许发消息\n1100304           @次数鉴权失败\n1100305           tinyid 转换 uin 失败\n1100306           非私有频道成员\n1100307           非白名单应用子频道\n1100308           触发频道内限频\n1100499           其他错误",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送私信消息",frontmatter:{},regularPath:"/develop/nodesdk/dms/post_dms_messages.html",relativePath:"develop/nodesdk/dms/post_dms_messages.md",key:"v-2c02facd",path:"/develop/nodesdk/dms/post_dms_messages.html",headers:[{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:37},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:172},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:297},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:429},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:463}],lastUpdated:"1/20/2022, 2:44:29 PM",lastUpdatedTimestamp:1642689869e3,headersStr:"功能描述 使用示例 参数说明 返回说明 返回示例",content:"# 发送私信消息\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n\n# 功能描述\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# 使用示例\n\nasync function demo() {\n  const res = await client.directMessageApi.postDirectMessage(guildId, msgObj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型                描述\nguildId   是    string            私信频道 ID\nmsgObj    是    MessageToCreate   消息体 ，参考发送消息\n\n\n# 返回说明\n\n同发送消息返回说明，返回Message 对象。\n\n\n# 返回示例\n\n参考发送消息返回示例。",normalizedContent:"# 发送私信消息\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n\n# 功能描述\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# 使用示例\n\nasync function demo() {\n  const res = await client.directmessageapi.postdirectmessage(guildid, msgobj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型                描述\nguildid   是    string            私信频道 id\nmsgobj    是    messagetocreate   消息体 ，参考发送消息\n\n\n# 返回说明\n\n同发送消息返回说明，返回message 对象。\n\n\n# 返回示例\n\n参考发送消息返回示例。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组",frontmatter:{},regularPath:"/develop/nodesdk/guild/delete_guild_role.html",relativePath:"develop/nodesdk/guild/delete_guild_role.md",key:"v-53d9502d",path:"/develop/nodesdk/guild/delete_guild_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:244},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:372},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:470},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:488}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 DefaultRoleIDs 参数说明 返回说明 返回示例",content:"# 删除频道身份组\n\n删除频道身份组。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleApi.deleteRole(guildId, roleId);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID:\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 参数说明\n\n参数        必填   类型       说明\nguildId   是    string   频道 ID\nroleId    是    string   身份组 ID\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",normalizedContent:"# 删除频道身份组\n\n删除频道身份组。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleapi.deleterole(guildid, roleid);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 id 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id:\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 参数说明\n\n参数        必填   类型       说明\nguildid   是    string   频道 id\nroleid    是    string   身份组 id\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道详情",frontmatter:{},regularPath:"/develop/nodesdk/guild/get_guild.html",relativePath:"develop/nodesdk/guild/get_guild.md",key:"v-b57398a6",path:"/develop/nodesdk/guild/get_guild.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:122},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:189},{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:198},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:469}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 返回说明 Guild 返回示例",content:'# 获取频道详情\n\n获取频道详情。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildApi.guild(guildId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\n\n\n# 返回说明\n\n返回 Guild 对象。\n\n\n# Guild\n\n字段名            类型        描述\nid             string    频道 ID\nname           string    频道名称\nowner_id       string    创建人用户 ID\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\n\n\n# 返回示例\n\ndata：\n\n{\n    "id": "GUILD_ID",\n    "name": "Ost测试频道",\n    "owner_id": "OWNER_ID",\n    "owner": false,\n    "member_count": 10,\n    "max_members": 300,\n    "description": "测试用"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 获取频道详情\n\n获取频道详情。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildapi.guild(guildid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n返回 guild 对象。\n\n\n# guild\n\n字段名            类型        描述\nid             string    频道 id\nname           string    频道名称\nowner_id       string    创建人用户 id\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\n\n\n# 返回示例\n\ndata：\n\n{\n    "id": "guild_id",\n    "name": "ost测试频道",\n    "owner_id": "owner_id",\n    "owner": false,\n    "member_count": 10,\n    "max_members": 300,\n    "description": "测试用"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道列表",frontmatter:{},regularPath:"/develop/nodesdk/guild/guilds.html",relativePath:"develop/nodesdk/guild/guilds.md",key:"v-783ae9a2",path:"/develop/nodesdk/guild/guilds.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:41},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:141},{level:3,title:"ReqOptions",slug:"reqoptions",normalizedTitle:"reqoptions",charIndex:193},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:420},{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:28},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:575}],lastUpdated:"1/20/2022, 4:11:17 PM",lastUpdatedTimestamp:1642695077e3,headersStr:"使用示例 参数说明 ReqOptions 返回说明 Guild 返回示例",content:"# 获取频道列表\n\n获取当前用户下的所有频道列表，频道用Guild描述。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.meApi.meGuilds(options);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型           描述\noptions   否    ReqOptions   获取频道列表范围\n\n\n# ReqOptions\n\n字段名      必填   类型       描述\nbefore   否    string   读取此 id 之前的数据\nafter    否    string   读取此 id 之后的数据\nlimit    否    number   每次拉取多少条数据，最大不超过 100，默认 100\n\n注意\n\nbefore、after 同时存在时，以 before 为准。\n\n\n# 返回说明\n\n返回 Guild 数组。\n\n\n# Guild\n\n字段名     类型        描述\nid      string    频道 ID\nname    string    频道名称\nicon    string    频道头像地址\nowner   boolean   当前人是否是创建人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    id: 'xxxxxx',\n    name: 'Ost测试频道',\n    icon: 'xxxxxx',\n    owner: false,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n",normalizedContent:"# 获取频道列表\n\n获取当前用户下的所有频道列表，频道用guild描述。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.meapi.meguilds(options);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型           描述\noptions   否    reqoptions   获取频道列表范围\n\n\n# reqoptions\n\n字段名      必填   类型       描述\nbefore   否    string   读取此 id 之前的数据\nafter    否    string   读取此 id 之后的数据\nlimit    否    number   每次拉取多少条数据，最大不超过 100，默认 100\n\n注意\n\nbefore、after 同时存在时，以 before 为准。\n\n\n# 返回说明\n\n返回 guild 数组。\n\n\n# guild\n\n字段名     类型        描述\nid      string    频道 id\nname    string    频道名称\nicon    string    频道头像地址\nowner   boolean   当前人是否是创建人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    id: 'xxxxxx',\n    name: 'ost测试频道',\n    icon: 'xxxxxx',\n    owner: false,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改频道身份组",frontmatter:{},regularPath:"/develop/nodesdk/guild/patch_guild_role.html",relativePath:"develop/nodesdk/guild/patch_guild_role.md",key:"v-21352306",path:"/develop/nodesdk/guild/patch_guild_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:197},{level:3,title:"RoleInfo",slug:"roleinfo",normalizedTitle:"roleinfo",charIndex:316},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:510},{level:3,title:"GuildRole",slug:"guildrole",normalizedTitle:"guildrole",charIndex:612},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:905}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 RoleInfo 返回说明 GuildRole 返回示例",content:"# 修改频道身份组\n\n修改频道身份组信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleApi.patchRole(guildId, roleId, roleInfo);\n}\n\n\n1\n2\n3\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名        必填   类型         描述\nguildId    是    string     频道 ID\nroleId     是    string     身份组 ID\nroleInfo   是    RoleInfo   频道身份组参数\n\n\n# RoleInfo\n\n字段名     必填   类型       描述\nname    是    string   名称\ncolor   否    number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist   否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名        类型          描述\nguild_id   string      频道 ID\nrole_id    string      身份组 ID\nrole       GuildRole   频道身份组对象\n\n\n# GuildRole\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata:\n\n{\n    guild_id: 'GUILD_ID',\n    role_id: 'ROLE_ID',\n    role: {\n      id: 'ROLE_ID',\n      name: '4533333',\n      color: 4286151052,\n      hoist: 0,\n      number: 0,\n      member_limit: 2000\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n",normalizedContent:"# 修改频道身份组\n\n修改频道身份组信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleapi.patchrole(guildid, roleid, roleinfo);\n}\n\n\n1\n2\n3\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名        必填   类型         描述\nguildid    是    string     频道 id\nroleid     是    string     身份组 id\nroleinfo   是    roleinfo   频道身份组参数\n\n\n# roleinfo\n\n字段名     必填   类型       描述\nname    是    string   名称\ncolor   否    number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist   否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名        类型          描述\nguild_id   string      频道 id\nrole_id    string      身份组 id\nrole       guildrole   频道身份组对象\n\n\n# guildrole\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata:\n\n{\n    guild_id: 'guild_id',\n    role_id: 'role_id',\n    role: {\n      id: 'role_id',\n      name: '4533333',\n      color: 4286151052,\n      hoist: 0,\n      number: 0,\n      member_limit: 2000\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道身份组列表",frontmatter:{},regularPath:"/develop/nodesdk/guild/get_guild_roles.html",relativePath:"develop/nodesdk/guild/get_guild_roles.md",key:"v-b7b390a6",path:"/develop/nodesdk/guild/get_guild_roles.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:127},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:194},{level:3,title:"GuildRole",slug:"guildrole",normalizedTitle:"guildrole",charIndex:270},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:567}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 返回说明 GuildRole 返回示例",content:"# 获取频道身份组列表\n\n获取频道身份组列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleApi.roles(guildId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\n\n\n# 返回说明\n\n字段名        类型            描述\nguild_id   string        频道 ID\nroles      GuildRole[]   频道身份组对象数组\n\n\n# GuildRole\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n  guild_id: 'GUILD_ID',\n  roles: [\n    {\n      id: '4',\n      name: '创建者',\n      color: 4294927682,\n      hoist: 1,\n      number: 1,\n      member_limit: 1\n    },\n    {\n      id: '2',\n      name: '管理员',\n      color: 4280276644,\n      hoist: 1,\n      number: 6,\n      member_limit: 50\n    },\n  ],\n  role_num_limit: '30'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n",normalizedContent:"# 获取频道身份组列表\n\n获取频道身份组列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleapi.roles(guildid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\n\n\n# 返回说明\n\n字段名        类型            描述\nguild_id   string        频道 id\nroles      guildrole[]   频道身份组对象数组\n\n\n# guildrole\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n  guild_id: 'guild_id',\n  roles: [\n    {\n      id: '4',\n      name: '创建者',\n      color: 4294927682,\n      hoist: 1,\n      number: 1,\n      member_limit: 1\n    },\n    {\n      id: '2',\n      name: '管理员',\n      color: 4280276644,\n      hoist: 1,\n      number: 6,\n      member_limit: 50\n    },\n  ],\n  role_num_limit: '30'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道身份组成员",frontmatter:{},regularPath:"/develop/nodesdk/guild/put_guild_member_role.html",relativePath:"develop/nodesdk/guild/put_guild_member_role.md",key:"v-6f9c4066",path:"/develop/nodesdk/guild/put_guild_member_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:219},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:530},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:658},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:676}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 DefaultRoleIDs 返回说明 返回示例",content:"# 创建频道身份组成员\n\n创建频道身份组成员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.memberApi.memberAddRole(guildId, roleId, userId, channelId);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限，如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nguildId     是    string    频道 ID\nroleId      是    string    身份组 ID\nuserId      是    string    用户 ID\nchannel     否    Channel   只填充 id 属性的 Channel 对象(已弃用，请使用 channelId)\nchannelId   否    string    子频道 ID\n\n注意\n\n * 如果目标身份组 ID 是 5-子频道管理员（即：roleId = '5'），需要指定channelId参数，否则会报错。\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID:\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata:\n\n'';\n\n\n1\n",normalizedContent:"# 创建频道身份组成员\n\n创建频道身份组成员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.memberapi.memberaddrole(guildid, roleid, userid, channelid);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限，如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nguildid     是    string    频道 id\nroleid      是    string    身份组 id\nuserid      是    string    用户 id\nchannel     否    channel   只填充 id 属性的 channel 对象(已弃用，请使用 channelid)\nchannelid   否    string    子频道 id\n\n注意\n\n * 如果目标身份组 id 是 5-子频道管理员（即：roleid = '5'），需要指定channelid参数，否则会报错。\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id:\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata:\n\n'';\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道身份组",frontmatter:{},regularPath:"/develop/nodesdk/guild/post_guild_role.html",relativePath:"develop/nodesdk/guild/post_guild_role.md",key:"v-725590e6",path:"/develop/nodesdk/guild/post_guild_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:188},{level:3,title:"RoleInfo",slug:"roleinfo",normalizedTitle:"roleinfo",charIndex:273},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:467},{level:3,title:"GuildRole",slug:"guildrole",normalizedTitle:"guildrole",charIndex:539},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:832}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 RoleInfo 返回说明 GuildRole 返回示例",content:"# 创建频道身份组\n\n创建一个频道身份组。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleApi.postRole(guildId, roleInfo);\n}\n\n\n1\n2\n3\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名        必填   类型         描述\nguildId    是    string     频道 ID\nroleInfo   是    RoleInfo   频道身份组参数\n\n\n# RoleInfo\n\n字段名     必填   类型       描述\nname    是    string   名称\ncolor   否    number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist   否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名       类型          描述\nrole_id   string      频道身份组 ID\nrole      GuildRole   频道身份组对象\n\n\n# GuildRole\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    role_id: 'ROLE_ID',\n    role: {\n      id: 'ROLE_ID',\n      name: '普通成员222',\n      color: 4286151052,\n      hoist: 0,\n      number: 0,\n      member_limit: 2000\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",normalizedContent:"# 创建频道身份组\n\n创建一个频道身份组。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.roleapi.postrole(guildid, roleinfo);\n}\n\n\n1\n2\n3\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名        必填   类型         描述\nguildid    是    string     频道 id\nroleinfo   是    roleinfo   频道身份组参数\n\n\n# roleinfo\n\n字段名     必填   类型       描述\nname    是    string   名称\ncolor   否    number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist   否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名       类型          描述\nrole_id   string      频道身份组 id\nrole      guildrole   频道身份组对象\n\n\n# guildrole\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    role_id: 'role_id',\n    role: {\n      id: 'role_id',\n      name: '普通成员222',\n      color: 4286151052,\n      hoist: 0,\n      number: 0,\n      member_limit: 2000\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道成员",frontmatter:{},regularPath:"/develop/nodesdk/member/delete_member.html",relativePath:"develop/nodesdk/member/delete_member.md",key:"v-e1722716",path:"/develop/nodesdk/member/delete_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:216},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:313},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:331}],lastUpdated:"1/20/2022, 2:45:14 AM",lastUpdatedTimestamp:1642646714e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 删除频道成员\n\n移除频道的某个成员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildApi.deleteGuildMember(guildId, userId);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\nuserId    是    string   用户 ID\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata:\n\n'';\n\n\n1\n",normalizedContent:"# 删除频道成员\n\n移除频道的某个成员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildapi.deleteguildmember(guildid, userid);\n}\n\n\n1\n2\n3\n\n\n注意\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\nuserid    是    string   用户 id\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata:\n\n'';\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取语音子频道在线成员列表",frontmatter:{},regularPath:"/develop/nodesdk/member/get_voice_members.html",relativePath:"develop/nodesdk/member/get_voice_members.md",key:"v-30fec46a",path:"/develop/nodesdk/member/get_voice_members.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:59},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:173},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:247},{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:138},{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:317},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:808}],lastUpdated:"6/2/2022, 6:45:56 AM",lastUpdatedTimestamp:1654152356e3,headersStr:"使用示例 参数说明 返回说明 Member User 返回示例",content:'# 获取语音子频道在线成员列表\n\n用于获取 channelID 指定的语音子频道中，所有在线成员的详情列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildApi.guildVoiceMembers(channelID);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelID   是    string   语音子频道 ID\n\n\n# 返回说明\n\n返回 Member 对象。\n\n\n# Member\n\n字段名         类型         描述\nuser        User       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n查询的子频道不是语音子频道，返回的status code为400\n\n{\n    "code": 13011,\n    "message": "not a voice-channel"\n}\n\n\n1\n2\n3\n4\n\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n[\n    {\n        "user": {\n            "id": "14756834636912871346",\n            "bot": false\n        },\n        "nick": "XXXXXX",\n        "joined_at": "2022-04-22T11:20:52+08:00",\n        "mute": false\n    },\n    {\n        "user": {\n            "id": "17125389050417448421",\n            "bot": true\n        },\n        "nick": "",\n        "joined_at": "2022-04-22T15:11:25+08:00",\n        "mute": false\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 获取语音子频道在线成员列表\n\n用于获取 channelid 指定的语音子频道中，所有在线成员的详情列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildapi.guildvoicemembers(channelid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   语音子频道 id\n\n\n# 返回说明\n\n返回 member 对象。\n\n\n# member\n\n字段名         类型         描述\nuser        user       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n查询的子频道不是语音子频道，返回的status code为400\n\n{\n    "code": 13011,\n    "message": "not a voice-channel"\n}\n\n\n1\n2\n3\n4\n\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n[\n    {\n        "user": {\n            "id": "14756834636912871346",\n            "bot": false\n        },\n        "nick": "xxxxxx",\n        "joined_at": "2022-04-22t11:20:52+08:00",\n        "mute": false\n    },\n    {\n        "user": {\n            "id": "17125389050417448421",\n            "bot": true\n        },\n        "nick": "",\n        "joined_at": "2022-04-22t15:11:25+08:00",\n        "mute": false\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员详情",frontmatter:{},regularPath:"/develop/nodesdk/member/get_member.html",relativePath:"develop/nodesdk/member/get_member.md",key:"v-042ee0ad",path:"/develop/nodesdk/member/get_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:30},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:144},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:241},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:104},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:311},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:424},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:824}],lastUpdated:"1/11/2022, 11:40:35 AM",lastUpdatedTimestamp:1641901235e3,headersStr:"使用示例 参数说明 返回说明 Member User DefaultRoleIDs 返回示例",content:"# 获取频道成员详情\n\n获取频道下某个成员的信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildApi.guildMember(guildId, userId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildId   是    string   频道 ID\nuserId    是    string   用户 ID\n\n\n# 返回说明\n\n返回 Member 对象。\n\n\n# Member\n\n字段名         类型         描述\nuser        User       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例：\"2021-11-23T15:16:48+08:00\"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID:\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata：\n\n{\n    user: {\n      id: 'USERID',\n      username: '机器人管家-ostwindli',\n      avatar: 'http://thirdqq.qlogo.cn/g?b=oidb&k=oPicoPIg01ujpSr8oosudkQ&s=0&t=1637218059',\n      bot: false,\n      public_flags: 0,\n      system: false\n    },\n    nick: '阿青',\n    roles: [ '4' ],\n    joined_at: '2021-11-23T15:16:48+08:00',\n    deaf: false,\n    mute: false,\n    pending: false\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n",normalizedContent:"# 获取频道成员详情\n\n获取频道下某个成员的信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildapi.guildmember(guildid, userid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名       必填   类型       描述\nguildid   是    string   频道 id\nuserid    是    string   用户 id\n\n\n# 返回说明\n\n返回 member 对象。\n\n\n# member\n\n字段名         类型         描述\nuser        user       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例：\"2021-11-23t15:16:48+08:00\"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id:\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata：\n\n{\n    user: {\n      id: 'userid',\n      username: '机器人管家-ostwindli',\n      avatar: 'http://thirdqq.qlogo.cn/g?b=oidb&k=opicopig01ujpsr8oosudkq&s=0&t=1637218059',\n      bot: false,\n      public_flags: 0,\n      system: false\n    },\n    nick: '阿青',\n    roles: [ '4' ],\n    joined_at: '2021-11-23t15:16:48+08:00',\n    deaf: false,\n    mute: false,\n    pending: false\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员列表",frontmatter:{},regularPath:"/develop/nodesdk/member/get_members.html",relativePath:"develop/nodesdk/member/get_members.md",key:"v-5de8c571",path:"/develop/nodesdk/member/get_members.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:148},{level:3,title:"QueryParams",slug:"queryparams",normalizedTitle:"queryparams",charIndex:248},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:409},{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:102},{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:479},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:864}],lastUpdated:"1/20/2022, 2:45:14 AM",lastUpdatedTimestamp:1642646714e3,headersStr:"使用示例 参数说明 QueryParams 返回说明 Member User 返回示例",content:"# 获取频道成员列表\n\n获取频道下的成员列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildApi.guildMembers(guildId, queryParams);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型            描述\nguildId       是    string        频道 ID\nqueryParams   否    QueryParams   查询参数\n\n\n# QueryParams\n\n字段名     必填   类型       描述\nafter   否    string   上一次回包中最大的用户 ID， 如果是第一次请求填 0，默认为 0\nlimit   否    number   分页大小，1-1000，默认是 1\n\n\n# 返回说明\n\n返回 Member 对象。\n\n\n# Member\n\n字段名         类型         描述\nuser        User       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例：\"2021-11-23T15:16:48+08:00\"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    user: {\n      id: 'USERID',\n      username: '机器人管家-ostwindli',\n      avatar: 'http://thirdqq.qlogo.cn/g?b=oidb&k=oPicoPIg01ujpSr8oosudkQ&s=0&t=1637218059',\n      bot: false,\n      public_flags: 0,\n      system: false,\n    },\n    nick: '阿青',\n    roles: ['4'],\n    joined_at: '2021-11-23T15:16:48+08:00',\n    deaf: false,\n    mute: false,\n    pending: false,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n",normalizedContent:"# 获取频道成员列表\n\n获取频道下的成员列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.guildapi.guildmembers(guildid, queryparams);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型            描述\nguildid       是    string        频道 id\nqueryparams   否    queryparams   查询参数\n\n\n# queryparams\n\n字段名     必填   类型       描述\nafter   否    string   上一次回包中最大的用户 id， 如果是第一次请求填 0，默认为 0\nlimit   否    number   分页大小，1-1000，默认是 1\n\n\n# 返回说明\n\n返回 member 对象。\n\n\n# member\n\n字段名         类型         描述\nuser        user       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例：\"2021-11-23t15:16:48+08:00\"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    user: {\n      id: 'userid',\n      username: '机器人管家-ostwindli',\n      avatar: 'http://thirdqq.qlogo.cn/g?b=oidb&k=opicopig01ujpsr8oosudkq&s=0&t=1637218059',\n      bot: false,\n      public_flags: 0,\n      system: false,\n    },\n    nick: '阿青',\n    roles: ['4'],\n    joined_at: '2021-11-23t15:16:48+08:00',\n    deaf: false,\n    mute: false,\n    pending: false,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"撤回消息",frontmatter:{},regularPath:"/develop/nodesdk/message/delete_message.html",relativePath:"develop/nodesdk/message/delete_message.md",key:"v-0fe4a4f1",path:"/develop/nodesdk/message/delete_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:96},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:228},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:403},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:421}],lastUpdated:"5/12/2022, 6:54:15 AM",lastUpdatedTimestamp:1652338455e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 撤回消息\n\n撤回子频道内的消息。\n\n注意\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n * 增加hideTip选项，控制是否显示撤回消息的小灰条。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageApi.deleteMessage(channelID, messageID, hideTip);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型        说明\nchannelID   是    string    子频道 ID\nmessageID   是    string    消息 ID\nhideTip     否    boolean   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",normalizedContent:"# 撤回消息\n\n撤回子频道内的消息。\n\n注意\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n * 增加hidetip选项，控制是否显示撤回消息的小灰条。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageapi.deletemessage(channelid, messageid, hidetip);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型        说明\nchannelid   是    string    子频道 id\nmessageid   是    string    消息 id\nhidetip     否    boolean   选填，是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取指定消息",frontmatter:{},regularPath:"/develop/nodesdk/message/get_message_of_id.html",relativePath:"develop/nodesdk/message/get_message_of_id.md",key:"v-4eef646d",path:"/develop/nodesdk/message/get_message_of_id.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:139},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:243},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:282},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:576},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:604},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:825},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1083}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 参数说明 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 获取指定消息\n\n获取指定消息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageApi.message(channelID, messageID);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型       说明\nchannelID   是    string   子频道 ID\nmessageID   是    string   消息 ID\n\n\n# 返回说明\n\n参数        类型        说明\nmessage   Message   返回 message 对象\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "message": {\n    "id": "abcdef01",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25T15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": ["1"],\n      "joined_at": "2021-04-12T16:34:42+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取指定消息\n\n获取指定消息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageapi.message(channelid, messageid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型       说明\nchannelid   是    string   子频道 id\nmessageid   是    string   消息 id\n\n\n# 返回说明\n\n参数        类型        说明\nmessage   message   返回 message 对象\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "message": {\n    "id": "abcdef01",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25t15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": ["1"],\n      "joined_at": "2021-04-12t16:34:42+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息模板",frontmatter:{},regularPath:"/develop/nodesdk/message/message_template.html",relativePath:"develop/nodesdk/message/message_template.md",key:"v-3d1d9cb3",path:"/develop/nodesdk/message/message_template.html",headers:[{level:2,title:"可用模板",slug:"可用模板",normalizedTitle:"可用模板",charIndex:140},{level:2,title:"embed 消息",slug:"embed-消息",normalizedTitle:"embed 消息",charIndex:149},{level:3,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:222},{level:3,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:229},{level:3,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:682},{level:3,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:821},{level:3,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:845},{level:2,title:"链接、文本列表模板",slug:"链接、文本列表模板",normalizedTitle:"链接、文本列表模板",charIndex:1645},{level:3,title:"样式(id=23)",slug:"样式-id-23",normalizedTitle:"样式(id=23)",charIndex:1659},{level:3,title:"模板格式",slug:"模板格式",normalizedTitle:"模板格式",charIndex:1673},{level:3,title:"字段描述",slug:"字段描述",normalizedTitle:"字段描述",charIndex:1912},{level:3,title:"LIST 结构",slug:"list-结构",normalizedTitle:"list 结构",charIndex:2022},{level:2,title:"文本、缩略图模板",slug:"文本、缩略图模板",normalizedTitle:"文本、缩略图模板",charIndex:4246},{level:3,title:"样式(id=24)",slug:"样式-id-24",normalizedTitle:"样式(id=24)",charIndex:4259},{level:3,title:"模板格式",slug:"模板格式-2",normalizedTitle:"模板格式",charIndex:1673},{level:3,title:"字段描述",slug:"字段描述-2",normalizedTitle:"字段描述",charIndex:1912},{level:2,title:"大图模板 34",slug:"大图模板-34",normalizedTitle:"大图模板 34",charIndex:186},{level:3,title:"样式(id=34)",slug:"样式-id-34",normalizedTitle:"样式(id=34)",charIndex:5775},{level:3,title:"模板格式",slug:"模板格式-3",normalizedTitle:"模板格式",charIndex:1673},{level:3,title:"字段描述",slug:"字段描述-3",normalizedTitle:"字段描述",charIndex:1912},{level:2,title:"大图模板 37",slug:"大图模板-37",normalizedTitle:"大图模板 37",charIndex:197},{level:3,title:"样式(id=37)",slug:"样式-id-37",normalizedTitle:"样式(id=37)",charIndex:7301},{level:3,title:"模板格式",slug:"模板格式-4",normalizedTitle:"模板格式",charIndex:1673},{level:3,title:"字段描述",slug:"字段描述-4",normalizedTitle:"字段描述",charIndex:1912}],lastUpdated:"4/28/2022, 12:32:32 PM",lastUpdatedTimestamp:1651149152e3,headersStr:"可用模板 embed 消息 样式 使用示例 参数说明 返回说明 返回示例 链接、文本列表模板 样式(id=23) 模板格式 字段描述 LIST 结构 文本、缩略图模板 样式(id=24) 模板格式 字段描述 大图模板 34 样式(id=34) 模板格式 字段描述 大图模板 37 样式(id=37) 模板格式 字段描述",content:'# 消息模板\n\n为了丰富消息内容，SDK 提供了几种消息模板。\n\n注意\n\n * 发送消息时所有字段均使用字符串类型。\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 URL 配置”。\n\n\n# 可用模板\n\n * embed 消息\n * 链接+文本列表模板\n * 文本+缩略图模板\n * 大图模板 34\n * 大图模板 37\n\n\n# embed 消息\n\n\n# 样式\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageApi.postMessage(\'channelId\', {\n    embed: {\n      title: \'标题\',\n      prompt: \'消息通知\',\n      thumbnail: {\n        url: \'xxxxx.png\',\n      },\n      fields: [\n        {\n          name: \'当前等级：黄金\',\n        },\n        {\n          name: \'之前等级：白银\',\n        },\n        {\n          name: \'😁继续努力\',\n        },\n      ],\n    },\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 参数说明\n\n字段名     类型             描述\nembed   MessageEmbed   embed 消息详情\n\n注意\n\n * 其中 embed.thumbnail 为选填，没有缩略图的可以不填。\n * embed.fields.name 为文本。\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# 返回示例\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "timestamp": "2021-12-07T15:24:54+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {\n      "title": "标题",\n      "description": "",\n      "thumbnail": {\n        "url": "xxxxxx.png"\n      },\n      "fields": [\n        {\n          "name": "当前等级：黄金",\n          "value": ""\n        },\n        {\n          "name": "之前等级：白银",\n          "value": ""\n        },\n        {\n          "name": "😁继续努力",\n          "value": ""\n        }\n      ]\n    }\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 链接、文本列表模板\n\n\n# 样式(id=23)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "list": "#LIST#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#DESC#     string   描述\n#PROMPT#   string   提示消息\n#LIST#     array    #LIST#数组\n\n\n# LIST 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：UI问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 文本、缩略图模板\n\n\n# 样式(id=24)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#METADESC#",\n      "img": "#IMG#",\n      "link": "#LINK#",\n      "subTitle": "#SUBTITLE#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#DESC#       string   描述\n#PROMPT#     string   提示文本\n#TITLE#      string   标题\n#METADESC#   string   详情描述\n#IMG#        string   图片链接\n#LINK#       string   跳转链接\n#SUBTITLE#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#METADESC#",\n        "value": "Meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#IMG#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#LINK#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#SUBTITLE#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 34\n\n\n# 样式(id=34)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.miniapp_01",\n  "view": "view_8C8E89B49BE609866298ADDFF2DBABA4",\n  "ver": "1.0.1.12",\n  "desc": "#DESC#",\n  "prompt": "#PROMPT#",\n  "meta": {\n    "detail_1": {\n      "title": "#METATITLE#",\n      "desc": "#METADESC#",\n      "icon": "#METAICON#",\n      "preview": "#METAPREVIEW#",\n      "url": "#METAURL#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名             类型       描述\n#DESC#          string   描述\n#PROMPT#        string   提示消息\n#METATITLE#     string   标题\n#METADESC#      string   描述\n#METAICON#      string   小图标\n#METAPREVIEW#   string   大图\n#METAURL#       string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 34,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#METATITLE#",\n        "value": "metatitle"\n      },\n      {\n        "key": "#METADESC#",\n        "value": "metadesc"\n      },\n      {\n        "key": "#METAICON#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#METAPREVIEW#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#METAURL#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 37\n\n\n# 样式(id=37)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#PROMPT#",\n  "meta": {\n    "robot": {\n      "title": "#METATITLE#",\n      "subtitle": "#METASUBTITLE#",\n      "cover": "#METACOVER#",\n      "jump_url": "#METAURL#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#PROMPT#         string   提示消息\n#METATITLE#      string   标题\n#METASUBTITLE#   string   子标题\n#METACOVER#      string   大图，尺寸为 975*540\n#METAURL#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#PROMPT#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#METATITLE#",\n        "value": "标题"\n      },\n      {\n        "key": "#METASUBTITLE#",\n        "value": "子标题"\n      },\n      {\n        "key": "#METACOVER#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#METAURL#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',normalizedContent:'# 消息模板\n\n为了丰富消息内容，sdk 提供了几种消息模板。\n\n注意\n\n * 发送消息时所有字段均使用字符串类型。\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 url 配置”。\n\n\n# 可用模板\n\n * embed 消息\n * 链接+文本列表模板\n * 文本+缩略图模板\n * 大图模板 34\n * 大图模板 37\n\n\n# embed 消息\n\n\n# 样式\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageapi.postmessage(\'channelid\', {\n    embed: {\n      title: \'标题\',\n      prompt: \'消息通知\',\n      thumbnail: {\n        url: \'xxxxx.png\',\n      },\n      fields: [\n        {\n          name: \'当前等级：黄金\',\n        },\n        {\n          name: \'之前等级：白银\',\n        },\n        {\n          name: \'😁继续努力\',\n        },\n      ],\n    },\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 参数说明\n\n字段名     类型             描述\nembed   messageembed   embed 消息详情\n\n注意\n\n * 其中 embed.thumbnail 为选填，没有缩略图的可以不填。\n * embed.fields.name 为文本。\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# 返回示例\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "timestamp": "2021-12-07t15:24:54+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {\n      "title": "标题",\n      "description": "",\n      "thumbnail": {\n        "url": "xxxxxx.png"\n      },\n      "fields": [\n        {\n          "name": "当前等级：黄金",\n          "value": ""\n        },\n        {\n          "name": "之前等级：白银",\n          "value": ""\n        },\n        {\n          "name": "😁继续努力",\n          "value": ""\n        }\n      ]\n    }\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 链接、文本列表模板\n\n\n# 样式(id=23)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "list": "#list#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#desc#     string   描述\n#prompt#   string   提示消息\n#list#     array    #list#数组\n\n\n# list 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#prompt#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：ui问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 文本、缩略图模板\n\n\n# 样式(id=24)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#metadesc#",\n      "img": "#img#",\n      "link": "#link#",\n      "subtitle": "#subtitle#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#desc#       string   描述\n#prompt#     string   提示文本\n#title#      string   标题\n#metadesc#   string   详情描述\n#img#        string   图片链接\n#link#       string   跳转链接\n#subtitle#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#prompt#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#title#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#metadesc#",\n        "value": "meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#img#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#link#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#subtitle#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 34\n\n\n# 样式(id=34)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.miniapp_01",\n  "view": "view_8c8e89b49be609866298addff2dbaba4",\n  "ver": "1.0.1.12",\n  "desc": "#desc#",\n  "prompt": "#prompt#",\n  "meta": {\n    "detail_1": {\n      "title": "#metatitle#",\n      "desc": "#metadesc#",\n      "icon": "#metaicon#",\n      "preview": "#metapreview#",\n      "url": "#metaurl#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名             类型       描述\n#desc#          string   描述\n#prompt#        string   提示消息\n#metatitle#     string   标题\n#metadesc#      string   描述\n#metaicon#      string   小图标\n#metapreview#   string   大图\n#metaurl#       string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 34,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#prompt#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#metatitle#",\n        "value": "metatitle"\n      },\n      {\n        "key": "#metadesc#",\n        "value": "metadesc"\n      },\n      {\n        "key": "#metaicon#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#metapreview#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#metaurl#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 37\n\n\n# 样式(id=37)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#prompt#",\n  "meta": {\n    "robot": {\n      "title": "#metatitle#",\n      "subtitle": "#metasubtitle#",\n      "cover": "#metacover#",\n      "jump_url": "#metaurl#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#prompt#         string   提示消息\n#metatitle#      string   标题\n#metasubtitle#   string   子标题\n#metacover#      string   大图，尺寸为 975*540\n#metaurl#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#prompt#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#metatitle#",\n        "value": "标题"\n      },\n      {\n        "key": "#metasubtitle#",\n        "value": "子标题"\n      },\n      {\n        "key": "#metacover#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#metaurl#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送模板消息",frontmatter:{},regularPath:"/develop/nodesdk/message/post_ark_messages.html",relativePath:"develop/nodesdk/message/post_ark_messages.md",key:"v-232db9ad",path:"/develop/nodesdk/message/post_ark_messages.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:219},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:353},{level:3,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:456},{level:3,title:"MessageEmbed",slug:"messageembed",normalizedTitle:"messageembed",charIndex:581},{level:2,title:"MessageEmbedThumbnail",slug:"messageembedthumbnail",normalizedTitle:"messageembedthumbnail",charIndex:898},{level:3,title:"MessageEmbedField",slug:"messageembedfield",normalizedTitle:"messageembedfield",charIndex:938},{level:3,title:"MessageArk",slug:"messageark",normalizedTitle:"messageark",charIndex:625},{level:3,title:"MessageArkKv",slug:"messagearkkv",normalizedTitle:"messagearkkv",charIndex:1240},{level:3,title:"MessageArkObj",slug:"messagearkobj",normalizedTitle:"messagearkobj",charIndex:1353},{level:3,title:"MessageArkObjKv",slug:"messagearkobjkv",normalizedTitle:"messagearkobjkv",charIndex:1445},{level:2,title:"参数示例",slug:"参数示例",normalizedTitle:"参数示例",charIndex:1567},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:3416},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:309},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:3920},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:3955},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:4177},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:4435}],lastUpdated:"4/28/2022, 12:32:32 PM",lastUpdatedTimestamp:1651149152e3,headersStr:"使用示例 参数说明 MessageToCreate MessageEmbed MessageEmbedThumbnail MessageEmbedField MessageArk MessageArkKv MessageArkObj MessageArkObjKv 参数示例 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 发送模板消息\n\n注意\n\n * 要求操作人在该子频道具有发送消息和 模板消息 的权限。\n * 调用前需要先申请消息模板，这一步会得到一个模板 id，在请求时填在 ark.template_id 上。\n * 发送成功之后，会触发一个创建消息的事件。\n * 可用模板参考消息模板\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 URL 配置”\n\n\n# 使用示例\n\n需要关注ark字段的使用。\n\nasync function demo() {\n  let { data } = await client.messageApi.postMessage(channelID, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelID   是    string            子频道 ID\nmesssage    是    MessageToCreate   消息体结构\n\n\n# MessageToCreate\n\n字段名       类型             描述\ncontent   string         消息内容，文本内容，支持内嵌格式\nembed     MessageEmbed   embed 消息，一种特殊的 ark\nark       MessageArk     ark 消息\nimage     string         图片 url 地址\nmsg_id    string         要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# MessageEmbed\n\n字段名         类型                      描述\ntitle       string                  标题\nprompt      string                  消息弹窗内容\nthumbnail   MessageEmbedThumbnail   缩略图\nfields      MessageEmbedField[]     embed 字段数据\n\n\n# MessageEmbedThumbnail\n\n字段名   类型       描述\nurl   string   图片地址\n\n\n# MessageEmbedField\n\n字段名    类型       描述\nname   string   字段名\n\n\n# MessageArk\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            MessageAkrKv[]   kv 值列表\n\n\n# MessageArkKv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     MessageArkObj[]   ark obj 类型的列表\n\n\n# MessageArkObj\n\n字段名      类型                  描述\nobj_kv   MessageArkObjKv[]   ark objkv 列表\n\n\n# MessageArkObjKv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# 参数示例\n\n假设模板如下，其中#META_LIST#类型为数组、#META_URL#类型为 URL、其他为文本。\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#META_DESC#",\n      "url": "#META_URL#",\n      "list": "#META_LIST#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n请求体中的 ark 内容为\n\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "XX机器人"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "XX机器人消息"\n      },\n      {\n        "key": "#META_URL#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#META_LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n则实际下发的 json 为\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "机器人订阅消息",\n  "prompt": "[QQ小程序]XX机器人",\n  "meta": {\n    "detail": {\n      "title": "XX机器人消息",\n      "url": "http://domain.com/",\n      "list": [\n        { "name": "aaa", "age": "3" },\n        { "name": "bbb", "age": "4" }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名                类型        描述\nid                 string    消息 id\nchannel_id         string    子频道 ID\nguild_id           string    频道 ID\ncontent            string    消息内容\ntimestamp          string    消息创建时间，是个 iISO8601 timestamp\n                             字符串，例："2021-11-23T15:16:48+08:00"\nedited_timestamp   string    消息编辑时间，是个 iISO8601 timestamp\n                             字符串，例："2021-11-23T15:16:48+08:00"\nmention_everyone   boolean   是否是@全员消息\nauthor             User      消息创建者\nmember             Member    消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 发送模板消息\n\n注意\n\n * 要求操作人在该子频道具有发送消息和 模板消息 的权限。\n * 调用前需要先申请消息模板，这一步会得到一个模板 id，在请求时填在 ark.template_id 上。\n * 发送成功之后，会触发一个创建消息的事件。\n * 可用模板参考消息模板\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 url 配置”\n\n\n# 使用示例\n\n需要关注ark字段的使用。\n\nasync function demo() {\n  let { data } = await client.messageapi.postmessage(channelid, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelid   是    string            子频道 id\nmesssage    是    messagetocreate   消息体结构\n\n\n# messagetocreate\n\n字段名       类型             描述\ncontent   string         消息内容，文本内容，支持内嵌格式\nembed     messageembed   embed 消息，一种特殊的 ark\nark       messageark     ark 消息\nimage     string         图片 url 地址\nmsg_id    string         要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# messageembed\n\n字段名         类型                      描述\ntitle       string                  标题\nprompt      string                  消息弹窗内容\nthumbnail   messageembedthumbnail   缩略图\nfields      messageembedfield[]     embed 字段数据\n\n\n# messageembedthumbnail\n\n字段名   类型       描述\nurl   string   图片地址\n\n\n# messageembedfield\n\n字段名    类型       描述\nname   string   字段名\n\n\n# messageark\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            messageakrkv[]   kv 值列表\n\n\n# messagearkkv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     messagearkobj[]   ark obj 类型的列表\n\n\n# messagearkobj\n\n字段名      类型                  描述\nobj_kv   messagearkobjkv[]   ark objkv 列表\n\n\n# messagearkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# 参数示例\n\n假设模板如下，其中#meta_list#类型为数组、#meta_url#类型为 url、其他为文本。\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#meta_desc#",\n      "url": "#meta_url#",\n      "list": "#meta_list#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n请求体中的 ark 内容为\n\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#prompt#",\n        "value": "xx机器人"\n      },\n      {\n        "key": "#title#",\n        "value": "xx机器人消息"\n      },\n      {\n        "key": "#meta_url#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#meta_list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n则实际下发的 json 为\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "机器人订阅消息",\n  "prompt": "[qq小程序]xx机器人",\n  "meta": {\n    "detail": {\n      "title": "xx机器人消息",\n      "url": "http://domain.com/",\n      "list": [\n        { "name": "aaa", "age": "3" },\n        { "name": "bbb", "age": "4" }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名                类型        描述\nid                 string    消息 id\nchannel_id         string    子频道 id\nguild_id           string    频道 id\ncontent            string    消息内容\ntimestamp          string    消息创建时间，是个 iiso8601 timestamp\n                             字符串，例："2021-11-23t15:16:48+08:00"\nedited_timestamp   string    消息编辑时间，是个 iiso8601 timestamp\n                             字符串，例："2021-11-23t15:16:48+08:00"\nmention_everyone   boolean   是否是@全员消息\nauthor             user      消息创建者\nmember             member    消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息内嵌格式",frontmatter:{},regularPath:"/develop/nodesdk/message/message_format.html",relativePath:"develop/nodesdk/message/message_format.md",key:"v-6b25410e",path:"/develop/nodesdk/message/message_format.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:101},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:220},{level:3,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:323},{level:3,title:"支持的格式",slug:"支持的格式",normalizedTitle:"支持的格式",charIndex:416},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1043},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:176},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1333},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:1361},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:1582},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1840}],lastUpdated:"3/4/2022, 10:17:25 AM",lastUpdatedTimestamp:1646389045e3,headersStr:"使用示例 参数说明 MessageToCreate 支持的格式 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 消息内嵌格式\n\n注意\n\n * 消息不支持 markdown 格式，会自动移除 markdown 格式。\n * 内嵌格式仅在 content 中会生效，在 Ark 和 Embed 中不生效。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageApi.postMessage(channelID, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelID   是    string            子频道 ID\nmesssage    是    MessageToCreate   消息体结构\n\n\n# MessageToCreate\n\n字段名       类型       描述\ncontent   string   消息内容，参考支持的格式\nimage     string   图片 url 地址\nmsg_id    string   要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# 支持的格式\n\n类型     结构              描述                                                            示例\n@用户    <@user_id>      解析为 @用户 标签                                                    <@1234000000001>\n@所有人   @everyone       解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限                              @everyone\n#子频道   <#channel_id>   解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道                           <#12345>\n表情     <emoji:id>      解析为系统表情，具体表情 id 参考 Emoji 列表，仅支持 type=1 的系统表情，type=2 的 emoji   <emoji:4> 解析为得意表情\n                       表情直接按字符串填写即可\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容<@!1234>hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 消息内嵌格式\n\n注意\n\n * 消息不支持 markdown 格式，会自动移除 markdown 格式。\n * 内嵌格式仅在 content 中会生效，在 ark 和 embed 中不生效。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageapi.postmessage(channelid, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelid   是    string            子频道 id\nmesssage    是    messagetocreate   消息体结构\n\n\n# messagetocreate\n\n字段名       类型       描述\ncontent   string   消息内容，参考支持的格式\nimage     string   图片 url 地址\nmsg_id    string   要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# 支持的格式\n\n类型     结构              描述                                                            示例\n@用户    <@user_id>      解析为 @用户 标签                                                    <@1234000000001>\n@所有人   @everyone       解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限                              @everyone\n#子频道   <#channel_id>   解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道                           <#12345>\n表情     <emoji:id>      解析为系统表情，具体表情 id 参考 emoji 列表，仅支持 type=1 的系统表情，type=2 的 emoji   <emoji:4> 解析为得意表情\n                       表情直接按字符串填写即可\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容<@!1234>hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送带有按钮的消息",frontmatter:{},regularPath:"/develop/nodesdk/message/post_keyboard_message.html",relativePath:"develop/nodesdk/message/post_keyboard_message.md",key:"v-228f036d",path:"/develop/nodesdk/message/post_keyboard_message.html",headers:[{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:16},{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:25},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:343},{level:3,title:"1：使用 keyboard 模版",slug:"_1-使用-keyboard-模版",normalizedTitle:"1：使用 keyboard 模版",charIndex:352},{level:3,title:"2：使用自定义 keyboard",slug:"_2-使用自定义-keyboard",normalizedTitle:"2：使用自定义 keyboard",charIndex:719},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1855}],lastUpdated:"6/9/2022, 2:36:07 AM",lastUpdatedTimestamp:1654742167e3,headersStr:"效果 功能描述 使用示例 1：使用 keyboard 模版 2：使用自定义 keyboard 返回说明",content:"# 发送带有按钮的消息\n\n\n# 效果\n\n\n\n\n# 功能描述\n\n通过在 MessageToCreate 中指定 keyboard 字段发送带按钮的消息，支持 keyboard 模版 和 自定义 keyboard 两种请求格式。\n\n * 要求操作人在该子频道具有发送消息和 对应消息按钮组件 的权限。\n * 请求参数 keyboard 模版 和 自定义 keyboard 只能单一传值。\n * keyboard 模版\n   * 调用前需要先申请消息按钮组件模板，这一步会得到一个模板 id，在请求时填在 keyboard 字段上。\n   * 申请消息按钮组件模板需要提供响应的 json，具体格式参考 InlineKeyboard。\n * 仅 markdown 消息支持消息按钮。\n\n\n# 使用示例\n\n\n# 1：使用 keyboard 模版\n\nasync function demo() {\n  let { data } = await client.messageApi.postMessage(channelID, {\n    markdown: {\n      template_id: 1,\n      params: [\n        {\n          key: 'title',\n          value: ['标题'],\n        },\n      ],\n    },\n    msg_id: 'xxxxxx',\n    keyboard: {\n      id: '123',\n    },\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 2：使用自定义 keyboard\n\nasync function demo() {\n  let { data } = await client.messageApi.postMessage(channelID, {\n    markdown: {\n      template_id: 1,\n      params: [\n        {\n          key: 'title',\n          value: ['标题'],\n        },\n      ],\n    },\n    msg_id: 'xxxxxx',\n    keyboard: {\n      content: {\n        rows: [\n          {\n            buttons: [\n              {\n                id: '1',\n                render_data: {\n                  label: 'AtBot-按钮1',\n                  visited_label: '点击后按钮1上文字',\n                },\n                action: {\n                  type: 2,\n                  permission: {\n                    type: 2,\n                    specify_role_ids: ['1', '2', '3'],\n                  },\n                  click_limit: 10,\n                  unsupport_tips: '编辑-兼容文本',\n                  data: '/搜索',\n                  at_bot_show_channel_list: true,\n                },\n              },\n            ],\n          },\n        ],\n        bot_appid: 123123123,\n      },\n    },\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 返回说明\n\n成功返回 Message 对象",normalizedContent:"# 发送带有按钮的消息\n\n\n# 效果\n\n\n\n\n# 功能描述\n\n通过在 messagetocreate 中指定 keyboard 字段发送带按钮的消息，支持 keyboard 模版 和 自定义 keyboard 两种请求格式。\n\n * 要求操作人在该子频道具有发送消息和 对应消息按钮组件 的权限。\n * 请求参数 keyboard 模版 和 自定义 keyboard 只能单一传值。\n * keyboard 模版\n   * 调用前需要先申请消息按钮组件模板，这一步会得到一个模板 id，在请求时填在 keyboard 字段上。\n   * 申请消息按钮组件模板需要提供响应的 json，具体格式参考 inlinekeyboard。\n * 仅 markdown 消息支持消息按钮。\n\n\n# 使用示例\n\n\n# 1：使用 keyboard 模版\n\nasync function demo() {\n  let { data } = await client.messageapi.postmessage(channelid, {\n    markdown: {\n      template_id: 1,\n      params: [\n        {\n          key: 'title',\n          value: ['标题'],\n        },\n      ],\n    },\n    msg_id: 'xxxxxx',\n    keyboard: {\n      id: '123',\n    },\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 2：使用自定义 keyboard\n\nasync function demo() {\n  let { data } = await client.messageapi.postmessage(channelid, {\n    markdown: {\n      template_id: 1,\n      params: [\n        {\n          key: 'title',\n          value: ['标题'],\n        },\n      ],\n    },\n    msg_id: 'xxxxxx',\n    keyboard: {\n      content: {\n        rows: [\n          {\n            buttons: [\n              {\n                id: '1',\n                render_data: {\n                  label: 'atbot-按钮1',\n                  visited_label: '点击后按钮1上文字',\n                },\n                action: {\n                  type: 2,\n                  permission: {\n                    type: 2,\n                    specify_role_ids: ['1', '2', '3'],\n                  },\n                  click_limit: 10,\n                  unsupport_tips: '编辑-兼容文本',\n                  data: '/搜索',\n                  at_bot_show_channel_list: true,\n                },\n              },\n            ],\n          },\n        ],\n        bot_appid: 123123123,\n      },\n    },\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 返回说明\n\n成功返回 message 对象",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送消息",frontmatter:{},regularPath:"/develop/nodesdk/message/post_messages.html",relativePath:"develop/nodesdk/message/post_messages.md",key:"v-3331c466",path:"/develop/nodesdk/message/post_messages.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:323},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:442},{level:3,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:545},{level:3,title:"MessageEmbed",slug:"messageembed",normalizedTitle:"messageembed",charIndex:786},{level:3,title:"MessageArk",slug:"messageark",normalizedTitle:"messageark",charIndex:873},{level:3,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:960},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1468},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:296},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1874},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:1902},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:2123},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:2381}],lastUpdated:"2/15/2022, 8:51:44 AM",lastUpdatedTimestamp:1644915104e3,headersStr:"使用示例 参数说明 MessageToCreate MessageEmbed MessageArk MessageReference 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 发送消息\n\n向指定子频道推送消息。\n\n注意\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动推送消息，默认每天往每个频道可推送的消息数是 20 条，超过会被限制。\n * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息，超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟，超时会报错。\n * 发送消息接口要求机器人接口需要链接到 websocket gateway 上保持在线状态。\n * 有关主动消息审核，可以通过 Intents 中审核事件 MESSAGE_AUDIT 返回 MessageAudited 对象获取结果。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageApi.postMessage(channelID, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelID   是    string            子频道 ID\nmesssage    是    MessageToCreate   消息体结构\n\n\n# MessageToCreate\n\n字段名                 类型                 必填                                             描述\ncontent             string             否    消息内容，文本内容，支持内嵌格式                          \nembed               MessageEmbed       否    embed 消息，一种特殊的 ark                        \nark                 MessageArk         否    ark 消息                                    \nmessage_reference   MessageReference   否    引用消息                                      \nimage               string             否    图片 url 地址                                 \nmsg_id              string             否    要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息   \n\ncontent、embed、ark、image至少需要有一个字段，否则无法下发消息。\n\n主动消息与被动消息\n\n * 主动消息：发送消息时，未填充 msg_id 字段的消息。\n * 被动消息：发送消息时，填充了 msg_id 字段的消息。接口使用此 msg_id 拉取用户的消息，同时判断用户消息的发送时间，如果超过被动消息回复时效，将会不允许发送该消息。\n\n\n# MessageEmbed\n\n详见消息模板。\n\n\n# MessageArk\n\n详见发送模板消息。\n\n\n# MessageReference\n\n详见发送引用消息。\n\n\n# 返回说明\n\n主动消息都需要审核，返回结果如下：\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now"\n}\n\n\n1\n2\n3\n4\n\n\n若为私域机器人可正常返回Message 对象。\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 发送消息\n\n向指定子频道推送消息。\n\n注意\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动推送消息，默认每天往每个频道可推送的消息数是 20 条，超过会被限制。\n * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息，超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟，超时会报错。\n * 发送消息接口要求机器人接口需要链接到 websocket gateway 上保持在线状态。\n * 有关主动消息审核，可以通过 intents 中审核事件 message_audit 返回 messageaudited 对象获取结果。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.messageapi.postmessage(channelid, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelid   是    string            子频道 id\nmesssage    是    messagetocreate   消息体结构\n\n\n# messagetocreate\n\n字段名                 类型                 必填                                             描述\ncontent             string             否    消息内容，文本内容，支持内嵌格式                          \nembed               messageembed       否    embed 消息，一种特殊的 ark                        \nark                 messageark         否    ark 消息                                    \nmessage_reference   messagereference   否    引用消息                                      \nimage               string             否    图片 url 地址                                 \nmsg_id              string             否    要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息   \n\ncontent、embed、ark、image至少需要有一个字段，否则无法下发消息。\n\n主动消息与被动消息\n\n * 主动消息：发送消息时，未填充 msg_id 字段的消息。\n * 被动消息：发送消息时，填充了 msg_id 字段的消息。接口使用此 msg_id 拉取用户的消息，同时判断用户消息的发送时间，如果超过被动消息回复时效，将会不允许发送该消息。\n\n\n# messageembed\n\n详见消息模板。\n\n\n# messageark\n\n详见发送模板消息。\n\n\n# messagereference\n\n详见发送引用消息。\n\n\n# 返回说明\n\n主动消息都需要审核，返回结果如下：\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now"\n}\n\n\n1\n2\n3\n4\n\n\n若为私域机器人可正常返回message 对象。\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送引用消息",frontmatter:{},regularPath:"/develop/nodesdk/message/post_reference_messages.html",relativePath:"develop/nodesdk/message/post_reference_messages.md",key:"v-de24c766",path:"/develop/nodesdk/message/post_reference_messages.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:76},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:233},{level:3,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:336},{level:2,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:676},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:951},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:189},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1241},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:1269},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:1490},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1748}],lastUpdated:"2/15/2022, 8:51:44 AM",lastUpdatedTimestamp:1644915104e3,headersStr:"使用示例 参数说明 MessageToCreate MessageReference 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 发送引用消息\n\n注意\n\n * 只支持引用机器人自己发送到的消息以及用户@机器人产生的消息。\n * 发送成功之后，会触发一个创建消息的事件。\n\n\n# 使用示例\n\n使用方式同发送消息，需注意参数message_reference的使用。\n\nasync function demo() {\n  let { data } = await client.messageApi.postMessage(channelID, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelID   是    string            子频道 ID\nmesssage    是    MessageToCreate   消息体结构\n\n\n# MessageToCreate\n\n字段名                 类型                 必填   描述\ncontent             string             否    消息内容\nembed               MessageEmbed       否    embed 消息 ，可参考消息模板\nark                 MessageArk         否    ark 消息 ，可参考 发送模板消息\nimage               string             否    图片 url 地址\nmessage_reference   MessageReference   是    引用消息配置\n\n引用消息支持内嵌格式、消息模板及图片，设置相应参数即可。\n\n\n# MessageReference\n\n字段名                        类型        必填   描述\nmessage_id                 string    是    需要引用回复的消息 ID\nignore_get_message_error   boolean   否    是否忽略获取引用消息详情错误，默认否（如不忽略，当获取引用消息详情出错时，消息将不会发出）\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "xxxxxx",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 发送引用消息\n\n注意\n\n * 只支持引用机器人自己发送到的消息以及用户@机器人产生的消息。\n * 发送成功之后，会触发一个创建消息的事件。\n\n\n# 使用示例\n\n使用方式同发送消息，需注意参数message_reference的使用。\n\nasync function demo() {\n  let { data } = await client.messageapi.postmessage(channelid, message);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n参数          必填   类型                说明\nchannelid   是    string            子频道 id\nmesssage    是    messagetocreate   消息体结构\n\n\n# messagetocreate\n\n字段名                 类型                 必填   描述\ncontent             string             否    消息内容\nembed               messageembed       否    embed 消息 ，可参考消息模板\nark                 messageark         否    ark 消息 ，可参考 发送模板消息\nimage               string             否    图片 url 地址\nmessage_reference   messagereference   是    引用消息配置\n\n引用消息支持内嵌格式、消息模板及图片，设置相应参数即可。\n\n\n# messagereference\n\n字段名                        类型        必填   描述\nmessage_id                 string    是    需要引用回复的消息 id\nignore_get_message_error   boolean   否    是否忽略获取引用消息详情错误，默认否（如不忽略，当获取引用消息详情出错时，消息将不会发出）\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "xxxxxx",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"语音对象(AudioControl)",frontmatter:{},regularPath:"/develop/nodesdk/model/audio.html",relativePath:"develop/nodesdk/model/audio.md",key:"v-e1c3a526",path:"/develop/nodesdk/model/audio.html",headers:[{level:2,title:"AudioControl",slug:"audiocontrol",normalizedTitle:"audiocontrol",charIndex:7},{level:2,title:"STATUS",slug:"status",normalizedTitle:"status",charIndex:182},{level:2,title:"AudioAction",slug:"audioaction",normalizedTitle:"audioaction",charIndex:318}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"AudioControl STATUS AudioAction",content:"# 语音对象(AudioControl)\n\n\n# AudioControl\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      STATUS   播放状态，参考 STATUS\n\n\n# STATUS\n\n字段名      值   描述\nSTART    0   开始播放操作\nPAUSE    1   暂停播放操作\nRESUME   2   继续播放操作\nSTOP     3   停止播放操作\n\n\n# AudioAction\n\n字段名          类型       描述\nguild_id     string   频道 ID\nchannel_id   string   子频道 ID\naudio_url    string   音频数据的 url status 为 0 时传\ntext         string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传",normalizedContent:"# 语音对象(audiocontrol)\n\n\n# audiocontrol\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      status   播放状态，参考 status\n\n\n# status\n\n字段名      值   描述\nstart    0   开始播放操作\npause    1   暂停播放操作\nresume   2   继续播放操作\nstop     3   停止播放操作\n\n\n# audioaction\n\n字段名          类型       描述\nguild_id     string   频道 id\nchannel_id   string   子频道 id\naudio_url    string   音频数据的 url status 为 0 时传\ntext         string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"公告对象（Announce）",frontmatter:{},regularPath:"/develop/nodesdk/model/announce.html",relativePath:"develop/nodesdk/model/announce.md",key:"v-25accec9",path:"/develop/nodesdk/model/announce.html",headers:[{level:2,title:"Announce",slug:"announce",normalizedTitle:"announce",charIndex:7},{level:2,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:319}],lastUpdated:"2/24/2022, 9:00:59 AM",lastUpdatedTimestamp:1645693259e3,headersStr:"Announce RecommendChannel",content:"# 公告对象（Announce）\n\n\n# Announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 ID\nchannel_id           string                  子频道 ID\nmessage_id           string                  消息 ID\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   RecommendChannel[] 数组   推荐子频道详情列表\n\n\n# RecommendChannel\n\n子频道对象\n\n字段名          类型       描述\nchannel_id   string   子频道 ID\nintroduce    string   推荐语",normalizedContent:"# 公告对象（announce）\n\n\n# announce\n\n字段名                  类型                      描述\nguild_id             string                  频道 id\nchannel_id           string                  子频道 id\nmessage_id           string                  消息 id\nannounce_type        number                  推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   recommendchannel[] 数组   推荐子频道详情列表\n\n\n# recommendchannel\n\n子频道对象\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   推荐语",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"API 权限对象",frontmatter:{},regularPath:"/develop/nodesdk/model/api_permission.html",relativePath:"develop/nodesdk/model/api_permission.md",key:"v-3502b333",path:"/develop/nodesdk/model/api_permission.html",headers:[{level:2,title:"接口权限对象(APIPermission)",slug:"接口权限对象-apipermission",normalizedTitle:"接口权限对象(apipermission)",charIndex:15},{level:3,title:"APIPermission",slug:"apipermission",normalizedTitle:"apipermission",charIndex:22},{level:2,title:"接口权限需求对象（APIPermissionDemand）",slug:"接口权限需求对象-apipermissiondemand",normalizedTitle:"接口权限需求对象（apipermissiondemand）",charIndex:281},{level:3,title:"APIPermissionDemand",slug:"apipermissiondemand",normalizedTitle:"apipermissiondemand",charIndex:290},{level:2,title:"接口权限需求标识对象（APIPermissionDemandIdentify）",slug:"接口权限需求标识对象-apipermissiondemandidentify",normalizedTitle:"接口权限需求标识对象（apipermissiondemandidentify）",charIndex:694},{level:3,title:"APIPermissionDemandIdentify",slug:"apipermissiondemandidentify",normalizedTitle:"apipermissiondemandidentify",charIndex:522}],lastUpdated:"1/27/2022, 5:26:54 AM",lastUpdatedTimestamp:1643261214e3,headersStr:"接口权限对象(APIPermission) APIPermission 接口权限需求对象（APIPermissionDemand） APIPermissionDemand 接口权限需求标识对象（APIPermissionDemandIdentify） APIPermissionDemandIdentify",content:"# API 权限对象\n\n\n# 接口权限对象(APIPermission)\n\n\n# APIPermission\n\n字段名           类型       描述\npath          string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 GET\ndesc          string   API 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 接口权限需求对象（APIPermissionDemand）\n\n\n# APIPermissionDemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 ID\nchannel_id     string                        接口权限需求授权链接发送的子频道 ID\napi_identify   APIPermissionDemandIdentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（APIPermissionDemandIdentify）\n\n\n# APIPermissionDemandIdentify\n\n字段名      类型       描述\npath     string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 GET",normalizedContent:"# api 权限对象\n\n\n# 接口权限对象(apipermission)\n\n\n# apipermission\n\n字段名           类型       描述\npath          string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 get\ndesc          string   api 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 接口权限需求对象（apipermissiondemand）\n\n\n# apipermissiondemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 id\nchannel_id     string                        接口权限需求授权链接发送的子频道 id\napi_identify   apipermissiondemandidentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（apipermissiondemandidentify）\n\n\n# apipermissiondemandidentify\n\n字段名      类型       描述\npath     string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 get",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道对象(Channel)",frontmatter:{},regularPath:"/develop/nodesdk/model/channel.html",relativePath:"develop/nodesdk/model/channel.md",key:"v-493b728d",path:"/develop/nodesdk/model/channel.html",headers:[{level:2,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:8},{level:3,title:"有关 position 的说明",slug:"有关-position-的说明",normalizedTitle:"有关 position 的说明",charIndex:648},{level:2,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:252},{level:2,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:299},{level:2,title:"PrivateType",slug:"privatetype",normalizedTitle:"privatetype",charIndex:454},{level:3,title:"SpeakPermission",slug:"speakpermission",normalizedTitle:"speakpermission",charIndex:502},{level:3,title:"应用子频道的应用类型",slug:"应用子频道的应用类型",normalizedTitle:"应用子频道的应用类型",charIndex:582}],lastUpdated:"2/24/2022, 9:15:29 AM",lastUpdatedTimestamp:1645694129e3,headersStr:"Channel 有关 position 的说明 ChannelType ChannelSubType PrivateType SpeakPermission 应用子频道的应用类型",content:"# 子频道对象(Channel)\n\n子频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# Channel\n\n字段名                类型       描述\nid                 string   子频道 ID\nguild_id           string   频道 ID\nname               string   子频道名\ntype               number   子频道类型 ChannelType\nsub_type           number   子频道子类型 ChannelSubType\nposition           number   排序，非必填\nparent_id          string   分组 ID\nowner_id           string   创建人 ID\nprivate_type       string   子频道私密类型 PrivateType\nspeak_permission   number   子频道发言权限 SpeakPermission\napplication_id     string   用于标识应用子频道应用类型，仅应用子频道时会使用该字段，具体定义请参考 应用子频道的应用类型\npermissions        string   用户拥有的子频道权限 Permissions\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始。\n * 当子频道类型为 子频道分组（ChannelType=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始。\n * 如果不传默认追加到分组下最后一个。\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前。\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值。\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n注：目前只有文字子频道具有 ChannelSubType 二级分类，同时二级分类也可能会不断增加，开发者也需要注意对未知 ID 的处理。\n\n\n# PrivateType\n\n子频道私密类型。\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# SpeakPermission\n\n值   描述\n0   无效类型\n1   所有人\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   CoDM 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于 QQ 频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",normalizedContent:"# 子频道对象(channel)\n\n子频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# channel\n\n字段名                类型       描述\nid                 string   子频道 id\nguild_id           string   频道 id\nname               string   子频道名\ntype               number   子频道类型 channeltype\nsub_type           number   子频道子类型 channelsubtype\nposition           number   排序，非必填\nparent_id          string   分组 id\nowner_id           string   创建人 id\nprivate_type       string   子频道私密类型 privatetype\nspeak_permission   number   子频道发言权限 speakpermission\napplication_id     string   用于标识应用子频道应用类型，仅应用子频道时会使用该字段，具体定义请参考 应用子频道的应用类型\npermissions        string   用户拥有的子频道权限 permissions\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始。\n * 当子频道类型为 子频道分组（channeltype=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始。\n * 如果不传默认追加到分组下最后一个。\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前。\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值。\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n注：目前只有文字子频道具有 channelsubtype 二级分类，同时二级分类也可能会不断增加，开发者也需要注意对未知 id 的处理。\n\n\n# privatetype\n\n子频道私密类型。\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# speakpermission\n\n值   描述\n0   无效类型\n1   所有人\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   codm 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于 qq 频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情对象",frontmatter:{},regularPath:"/develop/nodesdk/model/emoji.html",relativePath:"develop/nodesdk/model/emoji.md",key:"v-6775fb6d",path:"/develop/nodesdk/model/emoji.html",headers:[{level:3,title:"Emoji",slug:"emoji",normalizedTitle:"emoji",charIndex:11},{level:3,title:"EmojiType",slug:"emojitype",normalizedTitle:"emojitype",charIndex:127},{level:3,title:"Emoji 列表",slug:"emoji-列表",normalizedTitle:"emoji 列表",charIndex:97}],lastUpdated:"3/4/2022, 10:17:25 AM",lastUpdatedTimestamp:1646389045e3,headersStr:"Emoji EmojiType Emoji 列表",content:"# 表情对象\n\n\n# Emoji\n\n字段名    类型       描述\nid     string   表情 ID，系统表情使用数字为 ID，emoji 使用 emoji 本身为 id，参考 Emoji 列表\ntype   uint32   表情类型 EmojiType\n\n\n# EmojiType\n\n值   描述\n1   系统表情\n2   emoji 表情\n\n\n# Emoji 列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的 QQ 系统表情类型（EmojiType=1）来处理。\n\n表情类型   表情 ID    表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      NO\n1      124      OK\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",normalizedContent:"# 表情对象\n\n\n# emoji\n\n字段名    类型       描述\nid     string   表情 id，系统表情使用数字为 id，emoji 使用 emoji 本身为 id，参考 emoji 列表\ntype   uint32   表情类型 emojitype\n\n\n# emojitype\n\n值   描述\n1   系统表情\n2   emoji 表情\n\n\n# emoji 列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的 qq 系统表情类型（emojitype=1）来处理。\n\n表情类型   表情 id    表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      no\n1      124      ok\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道权限对象(ChannelPermissions)",frontmatter:{},regularPath:"/develop/nodesdk/model/channel_permission.html",relativePath:"develop/nodesdk/model/channel_permission.md",key:"v-1c39df05",path:"/develop/nodesdk/model/channel_permission.html",headers:[{level:2,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:10},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:17}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"ChannelPermissions Permissions",content:"# 子频道权限对象(ChannelPermissions)\n\n\n# ChannelPermissions\n\n字段名               类型       描述\nchannel_id        string   子频道 ID\nuser_id/role_id   string   用户 ID 或 身份组 ID\npermissions       string   用户拥有的子频道权限，具体值参考permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，例如字符串'2'表示拥有可管理子频道权限。",normalizedContent:"# 子频道权限对象(channelpermissions)\n\n\n# channelpermissions\n\n字段名               类型       描述\nchannel_id        string   子频道 id\nuser_id/role_id   string   用户 id 或 身份组 id\npermissions       string   用户拥有的子频道权限，具体值参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，例如字符串'2'表示拥有可管理子频道权限。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"私信会话对象（DMS）",frontmatter:{},regularPath:"/develop/nodesdk/model/dms.html",relativePath:"develop/nodesdk/model/dms.md",key:"v-443c562d",path:"/develop/nodesdk/model/dms.html",headers:[{level:2,title:"DMS",slug:"dms",normalizedTitle:"dms",charIndex:9}],lastUpdated:"1/20/2022, 2:44:29 PM",lastUpdatedTimestamp:1642689869e3,headersStr:"DMS",content:"# 私信会话对象（DMS）\n\n\n# DMS\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 ID\nchannel_id    string   私信会话关联的子频道 ID\ncreate_time   string   创建私信会话时间戳",normalizedContent:"# 私信会话对象（dms）\n\n\n# dms\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 id\nchannel_id    string   私信会话关联的子频道 id\ncreate_time   string   创建私信会话时间戳",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道对象(Guild)",frontmatter:{},regularPath:"/develop/nodesdk/model/guild.html",relativePath:"develop/nodesdk/model/guild.md",key:"v-60b1ad0d",path:"/develop/nodesdk/model/guild.html",headers:[{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:7}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"Guild",content:"# 频道对象(Guild)\n\n频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# Guild\n\n字段名            类型        描述\nid             string    频道ID\nname           string    频道名称\nicon           string    频道头像地址\nowner_id       string    创建人用户ID\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\njoined_at      string    加入时间",normalizedContent:"# 频道对象(guild)\n\n频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# guild\n\n字段名            类型        描述\nid             string    频道id\nname           string    频道名称\nicon           string    频道头像地址\nowner_id       string    创建人用户id\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\njoined_at      string    加入时间",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"成员对象(Member)",frontmatter:{},regularPath:"/develop/nodesdk/model/member.html",relativePath:"develop/nodesdk/model/member.md",key:"v-6f025eb2",path:"/develop/nodesdk/model/member.html",headers:[{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:7},{level:3,title:"MemberWithGuildID",slug:"memberwithguildid",normalizedTitle:"memberwithguildid",charIndex:308}],lastUpdated:"1/11/2022, 11:40:35 AM",lastUpdatedTimestamp:1641901235e3,headersStr:"Member MemberWithGuildID",content:'# 成员对象(Member)\n\n\n# Member\n\n字段名         类型         描述\nuser        User       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# MemberWithGuildID\n\n字段名         类型         描述\nguild_id    string     频道 ID\nuser        User       用户基础信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"',normalizedContent:'# 成员对象(member)\n\n\n# member\n\n字段名         类型         描述\nuser        user       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# memberwithguildid\n\n字段名         类型         描述\nguild_id    string     频道 id\nuser        user       用户基础信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息按钮组件（InlineKeyboard）",frontmatter:{},regularPath:"/develop/nodesdk/model/inline_keyboard.html",relativePath:"develop/nodesdk/model/inline_keyboard.md",key:"v-21880566",path:"/develop/nodesdk/model/inline_keyboard.html",headers:[{level:3,title:"InlineKeyboard",slug:"inlinekeyboard",normalizedTitle:"inlinekeyboard",charIndex:9},{level:3,title:"InlineKeyboardRow",slug:"inlinekeyboardrow",normalizedTitle:"inlinekeyboardrow",charIndex:94},{level:3,title:"Button",slug:"button",normalizedTitle:"button",charIndex:214},{level:3,title:"RenderData",slug:"renderdata",normalizedTitle:"renderdata",charIndex:386},{level:3,title:"RenderStyle",slug:"renderstyle",normalizedTitle:"renderstyle",charIndex:612},{level:3,title:"Action",slug:"action",normalizedTitle:"action",charIndex:434},{level:3,title:"ActionType",slug:"actiontype",normalizedTitle:"actiontype",charIndex:799},{level:3,title:"Permission",slug:"permission",normalizedTitle:"permission",charIndex:837},{level:3,title:"PermissionType",slug:"permissiontype",normalizedTitle:"permissiontype",charIndex:1293}],lastUpdated:"6/9/2022, 2:36:07 AM",lastUpdatedTimestamp:1654742167e3,headersStr:"InlineKeyboard InlineKeyboardRow Button RenderData RenderStyle Action ActionType Permission PermissionType",content:"# 消息按钮组件（InlineKeyboard）\n\n\n# InlineKeyboard\n\n字段名    类型                              描述\nrows   InlineKeyboardRow 消息按钮组件行对象数组   数组的一项代表消息按钮组件的一行,最多含有 5 行\n\n\n# InlineKeyboardRow\n\n字段名       类型              描述\nbuttons   Button 按钮对象数组   数组的一项代表一个按钮，每个 InlineKeyboardRow 最多含有 5 个 Button\n\n\n# Button\n\n字段名           类型                    描述\nid            string                按钮 id\nrender_data   RenderData 按纽渲染展示对象   用于设定按钮的显示效果\naction        Action 该按纽操作相关字段      用于设定按钮点击后的操作\n\n\n# RenderData\n\n字段名             类型       描述\nlabel           string   按纽上的文字\nvisited_label   string   点击后按纽上文字\nstyle           int      按钮样式，参考 RenderStyle\n\n\n# RenderStyle\n\n字段名   类型    描述\n0     int   灰色线框\n1     int   蓝色线框\n\n\n# Action\n\n字段名                        类型              描述\ntype                       int             操作类型，参考 ActionType\npermission                 Permission 对象   用于设定操作按钮所需的权限\nclick_limit                int             可点击的次数, 默认不限\ndata                       string          操作相关数据\nat_bot_show_channel_list   bool            false:不弹出子频道选择器 true:弹出子频道选择器\n\n\n# ActionType\n\n值   描述\n0   http 或 小程序 客户端识别 schem, data字段为链接\n1   回调后台接口, data 传给后台\n2   at机器人, 根据 at_bot_show_channel_list 决定在当前频道或用户选择频道,自动在输入框\n    @bot data\n\n\n# Permission\n\n字段名                类型          描述\ntype               int         权限类型，参考 PermissionType\nspecify_role_ids   string 数组   有权限的身份组id的列表\nspecify_user_ids   string 数组   有权限的用户id的列表\n\n\n# PermissionType\n\n值   描述\n0   指定用户可操作\n1   仅管理者可操作\n2   所有人可操作\n3   指定身份组可操作",normalizedContent:"# 消息按钮组件（inlinekeyboard）\n\n\n# inlinekeyboard\n\n字段名    类型                              描述\nrows   inlinekeyboardrow 消息按钮组件行对象数组   数组的一项代表消息按钮组件的一行,最多含有 5 行\n\n\n# inlinekeyboardrow\n\n字段名       类型              描述\nbuttons   button 按钮对象数组   数组的一项代表一个按钮，每个 inlinekeyboardrow 最多含有 5 个 button\n\n\n# button\n\n字段名           类型                    描述\nid            string                按钮 id\nrender_data   renderdata 按纽渲染展示对象   用于设定按钮的显示效果\naction        action 该按纽操作相关字段      用于设定按钮点击后的操作\n\n\n# renderdata\n\n字段名             类型       描述\nlabel           string   按纽上的文字\nvisited_label   string   点击后按纽上文字\nstyle           int      按钮样式，参考 renderstyle\n\n\n# renderstyle\n\n字段名   类型    描述\n0     int   灰色线框\n1     int   蓝色线框\n\n\n# action\n\n字段名                        类型              描述\ntype                       int             操作类型，参考 actiontype\npermission                 permission 对象   用于设定操作按钮所需的权限\nclick_limit                int             可点击的次数, 默认不限\ndata                       string          操作相关数据\nat_bot_show_channel_list   bool            false:不弹出子频道选择器 true:弹出子频道选择器\n\n\n# actiontype\n\n值   描述\n0   http 或 小程序 客户端识别 schem, data字段为链接\n1   回调后台接口, data 传给后台\n2   at机器人, 根据 at_bot_show_channel_list 决定在当前频道或用户选择频道,自动在输入框\n    @bot data\n\n\n# permission\n\n字段名                类型          描述\ntype               int         权限类型，参考 permissiontype\nspecify_role_ids   string 数组   有权限的身份组id的列表\nspecify_user_ids   string 数组   有权限的用户id的列表\n\n\n# permissiontype\n\n值   描述\n0   指定用户可操作\n1   仅管理者可操作\n2   所有人可操作\n3   指定身份组可操作",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息对象(Message)",frontmatter:{},regularPath:"/develop/nodesdk/model/message.html",relativePath:"develop/nodesdk/model/message.md",key:"v-1192520d",path:"/develop/nodesdk/model/message.html",headers:[{level:2,title:"Message",slug:"message",normalizedTitle:"message",charIndex:7},{level:2,title:"MessageToCreate",slug:"messagetocreate",normalizedTitle:"messagetocreate",charIndex:1209},{level:2,title:"MessageEmbed",slug:"messageembed",normalizedTitle:"messageembed",charIndex:724},{level:2,title:"MessageEmbedThumbnail",slug:"messageembedthumbnail",normalizedTitle:"messageembedthumbnail",charIndex:1623},{level:2,title:"MessageEmbedField",slug:"messageembedfield",normalizedTitle:"messageembedfield",charIndex:1663},{level:2,title:"MessageAttachment",slug:"messageattachment",normalizedTitle:"messageattachment",charIndex:679},{level:2,title:"MessageArk",slug:"messageark",normalizedTitle:"messageark",charIndex:880},{level:2,title:"MessageArkKv",slug:"messagearkkv",normalizedTitle:"messagearkkv",charIndex:2026},{level:2,title:"MessageArkObj",slug:"messagearkobj",normalizedTitle:"messagearkobj",charIndex:2139},{level:2,title:"MessageArkObjKv",slug:"messagearkobjkv",normalizedTitle:"messagearkobjkv",charIndex:2231},{level:2,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:1176},{level:2,title:"MessageAudited",slug:"messageaudited",normalizedTitle:"messageaudited",charIndex:2521}],lastUpdated:"3/4/2022, 10:17:25 AM",lastUpdatedTimestamp:1646389045e3,headersStr:"Message MessageToCreate MessageEmbed MessageEmbedThumbnail MessageEmbedField MessageAttachment MessageArk MessageArkKv MessageArkObj MessageArkObjKv MessageReference MessageAudited",content:'# 消息对象(Message)\n\n\n# Message\n\n字段名                 类型                    描述\nid                  string                消息 id\nchannel_id          string                子频道 ID\nguild_id            string                频道 ID\ncontent             string                消息内容\ntimestamp           string                消息创建时间，是个 iISO8601 timestamp\n                                          字符串，例："2021-11-23T15:16:48+08:00"\nedited_timestamp    string                消息编辑时间，是个 iISO8601 timestamp\n                                          字符串，例："2021-11-23T15:16:48+08:00"\nmention_everyone    boolean               是否是@全员消息\nauthor              User                  消息创建者\nattachments         MessageAttachment[]   附件\nembeds              MessageEmbed[]        embed\nmentions            User                  消息中@的人\nmember              Member                消息创建者的 member 信息\nark                 MessageArk            ark 消息\nseq                 number                用于消息间的排序，seq\n                                          在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序。(目前只在消息事件中有值，后续废弃)\nseq_in_channel      string                子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序\nmessage_reference   MessageReference 对象   引用消息对象\n\n\n# MessageToCreate\n\n字段名       类型             描述\ncontent   string         消息内容，文本内容，支持内嵌格式\nembed     MessageEmbed   embed 消息，一种特殊的 ark\nark       MessageArk     ark 消息\nimage     string         图片 url 地址\nmsg_id    string         要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# MessageEmbed\n\n字段名         类型                      描述\ntitle       string                  标题\nprompt      string                  消息弹窗内容\nthumbnail   MessageEmbedThumbnail   缩略图\nfields      MessageEmbedField[]     embed 字段数据\n\n\n# MessageEmbedThumbnail\n\n字段名   类型       描述\nurl   string   图片地址\n\n\n# MessageEmbedField\n\n字段名    类型       描述\nname   string   字段名\n\n\n# MessageAttachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# MessageArk\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            MessageAkrKv[]   kv 值列表\n\n\n# MessageArkKv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     MessageArkObj[]   ark obj 类型的列表\n\n\n# MessageArkObj\n\n字段名      类型                  描述\nobj_kv   MessageArkObjKv[]   ark objkv 列表\n\n\n# MessageArkObjKv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# MessageReference\n\n字段名                        类型        描述\nmessage_id                 string    需要引用回复的消息 ID\nignore_get_message_error   boolean   是否忽略获取引用消息详情错误，默认否\n\n\n# MessageAudited\n\n消息审核对象\n\n字段名              类型                 描述\naudit_id         string             消息审核 ID\nmessage_id       string             消息 ID，只有审核通过事件才会有值\nguild_id         string             频道 ID\nchannel_id       string             子频道 ID\naudit_time       string             消息审核时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\ncreate_time      string timestamp   消息创建时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\nseq_in_channel   string             子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序',normalizedContent:'# 消息对象(message)\n\n\n# message\n\n字段名                 类型                    描述\nid                  string                消息 id\nchannel_id          string                子频道 id\nguild_id            string                频道 id\ncontent             string                消息内容\ntimestamp           string                消息创建时间，是个 iiso8601 timestamp\n                                          字符串，例："2021-11-23t15:16:48+08:00"\nedited_timestamp    string                消息编辑时间，是个 iiso8601 timestamp\n                                          字符串，例："2021-11-23t15:16:48+08:00"\nmention_everyone    boolean               是否是@全员消息\nauthor              user                  消息创建者\nattachments         messageattachment[]   附件\nembeds              messageembed[]        embed\nmentions            user                  消息中@的人\nmember              member                消息创建者的 member 信息\nark                 messageark            ark 消息\nseq                 number                用于消息间的排序，seq\n                                          在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序。(目前只在消息事件中有值，后续废弃)\nseq_in_channel      string                子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序\nmessage_reference   messagereference 对象   引用消息对象\n\n\n# messagetocreate\n\n字段名       类型             描述\ncontent   string         消息内容，文本内容，支持内嵌格式\nembed     messageembed   embed 消息，一种特殊的 ark\nark       messageark     ark 消息\nimage     string         图片 url 地址\nmsg_id    string         要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# messageembed\n\n字段名         类型                      描述\ntitle       string                  标题\nprompt      string                  消息弹窗内容\nthumbnail   messageembedthumbnail   缩略图\nfields      messageembedfield[]     embed 字段数据\n\n\n# messageembedthumbnail\n\n字段名   类型       描述\nurl   string   图片地址\n\n\n# messageembedfield\n\n字段名    类型       描述\nname   string   字段名\n\n\n# messageattachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# messageark\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            messageakrkv[]   kv 值列表\n\n\n# messagearkkv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     messagearkobj[]   ark obj 类型的列表\n\n\n# messagearkobj\n\n字段名      类型                  描述\nobj_kv   messagearkobjkv[]   ark objkv 列表\n\n\n# messagearkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# messagereference\n\n字段名                        类型        描述\nmessage_id                 string    需要引用回复的消息 id\nignore_get_message_error   boolean   是否忽略获取引用消息详情错误，默认否\n\n\n# messageaudited\n\n消息审核对象\n\n字段名              类型                 描述\naudit_id         string             消息审核 id\nmessage_id       string             消息 id，只有审核通过事件才会有值\nguild_id         string             频道 id\nchannel_id       string             子频道 id\naudit_time       string             消息审核时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\ncreate_time      string timestamp   消息创建时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\nseq_in_channel   string             子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"精华消息对象(PinsMessage)",frontmatter:{},regularPath:"/develop/nodesdk/model/pins_message.html",relativePath:"develop/nodesdk/model/pins_message.md",key:"v-c2d779e2",path:"/develop/nodesdk/model/pins_message.html",headers:[{level:2,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:9}],lastUpdated:"2/24/2022, 7:05:26 AM",lastUpdatedTimestamp:1645686326e3,headersStr:"PinsMessage",content:"# 精华消息对象(PinsMessage)\n\n\n# PinsMessage\n\n字段名           类型         描述\nguild_id      string     频道 ID\nchannel_id    string     子频道 ID\nmessage_ids   string[]   消息 ID数组",normalizedContent:"# 精华消息对象(pinsmessage)\n\n\n# pinsmessage\n\n字段名           类型         描述\nguild_id      string     频道 id\nchannel_id    string     子频道 id\nmessage_ids   string[]   消息 id数组",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情表态对象",frontmatter:{},regularPath:"/develop/nodesdk/model/reaction.html",relativePath:"develop/nodesdk/model/reaction.md",key:"v-eae6396e",path:"/develop/nodesdk/model/reaction.html",headers:[{level:2,title:"MessageReaction",slug:"messagereaction",normalizedTitle:"messagereaction",charIndex:85},{level:2,title:"ReactionTarget",slug:"reactiontarget",normalizedTitle:"reactiontarget",charIndex:257},{level:2,title:"ReactionTargetType",slug:"reactiontargettype",normalizedTitle:"reactiontargettype",charIndex:405},{level:2,title:"表情表态事件监听",slug:"表情表态事件监听",normalizedTitle:"表情表态事件监听",charIndex:487},{level:3,title:"代码示例",slug:"代码示例",normalizedTitle:"代码示例",charIndex:500}],lastUpdated:"1/12/2022, 8:43:51 AM",lastUpdatedTimestamp:1641977031e3,headersStr:"MessageReaction ReactionTarget ReactionTargetType 表情表态事件监听 代码示例",content:"# 表情表态对象\n\n在消息、帖子、评论、回复中使用的表情。\n\n表情表态相关事件可参考表情表态事件。\n\n事件监听方式可参考ws 使用。\n\n具体示例可参考使用示例。\n\n\n# MessageReaction\n\n字段名          类型               描述\nuser_id      string           用户 ID\nguild_id     string           频道 ID\nchannel_id   string           子频道 ID\ntarget       ReactionTarget   表态对象\nemoji        Emoji            表态所用表情\n\n\n# ReactionTarget\n\n字段名    类型       描述\nid     string   表态对象 ID\ntype   number   表态对象类型，参考 ReactionTargetType\n\n\n# ReactionTargetType\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复\n\n\n# 表情表态事件监听\n\n\n# 代码示例\n\nconst { createWebsocket } = require('qq-guild-bot');\n\n// 创建ws连接\nconst config = {\n  appID: 'xxxxxx',\n  token: 'xxxxxx',\n  intents: ['GUILD_MESSAGE_REACTIONS'],\n};\nconst ws = createWebsocket(config);\n\n// 监听事件\nws.on('GUILD_MESSAGE_REACTIONS', data => {\n  console.log('[GUILD_MESSAGE_REACTIONS] 事件接收 :', data);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n在频道内，长按某条消息进行表情回复 👍，ws 收到消息并打印如下信息：\n\n[GUILD_MESSAGE_REACTIONS] 事件接收 : {\n  eventType: 'MESSAGE_REACTION_ADD',\n  msg: {\n    channel_id: 'xxxxxx',\n    emoji: { id: '76', type: 1 },\n    guild_id: 'xxxxxx',\n    target: { id: '24', type: 0 },\n    user_id: 'xxxxxx'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n",normalizedContent:"# 表情表态对象\n\n在消息、帖子、评论、回复中使用的表情。\n\n表情表态相关事件可参考表情表态事件。\n\n事件监听方式可参考ws 使用。\n\n具体示例可参考使用示例。\n\n\n# messagereaction\n\n字段名          类型               描述\nuser_id      string           用户 id\nguild_id     string           频道 id\nchannel_id   string           子频道 id\ntarget       reactiontarget   表态对象\nemoji        emoji            表态所用表情\n\n\n# reactiontarget\n\n字段名    类型       描述\nid     string   表态对象 id\ntype   number   表态对象类型，参考 reactiontargettype\n\n\n# reactiontargettype\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复\n\n\n# 表情表态事件监听\n\n\n# 代码示例\n\nconst { createwebsocket } = require('qq-guild-bot');\n\n// 创建ws连接\nconst config = {\n  appid: 'xxxxxx',\n  token: 'xxxxxx',\n  intents: ['guild_message_reactions'],\n};\nconst ws = createwebsocket(config);\n\n// 监听事件\nws.on('guild_message_reactions', data => {\n  console.log('[guild_message_reactions] 事件接收 :', data);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n在频道内，长按某条消息进行表情回复 👍，ws 收到消息并打印如下信息：\n\n[guild_message_reactions] 事件接收 : {\n  eventtype: 'message_reaction_add',\n  msg: {\n    channel_id: 'xxxxxx',\n    emoji: { id: '76', type: 1 },\n    guild_id: 'xxxxxx',\n    target: { id: '24', type: 0 },\n    user_id: 'xxxxxx'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道身份组对象(Role)",frontmatter:{},regularPath:"/develop/nodesdk/model/role.html",relativePath:"develop/nodesdk/model/role.md",key:"v-79da6daf",path:"/develop/nodesdk/model/role.html",headers:[{level:2,title:"Role",slug:"role",normalizedTitle:"role",charIndex:10},{level:2,title:"DefaultRoleIDs(系统默认生成下列身份组 ID)",slug:"defaultroleids-系统默认生成下列身份组-id",normalizedTitle:"defaultroleids(系统默认生成下列身份组 id)",charIndex:284}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"Role DefaultRoleIDs(系统默认生成下列身份组 ID)",content:"# 频道身份组对象(Role)\n\n\n# Role\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# DefaultRoleIDs(系统默认生成下列身份组 ID)\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员",normalizedContent:"# 频道身份组对象(role)\n\n\n# role\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# defaultroleids(系统默认生成下列身份组 id)\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"日程对象(Schedule)",frontmatter:{},regularPath:"/develop/nodesdk/model/schedule.html",relativePath:"develop/nodesdk/model/schedule.md",key:"v-623c076d",path:"/develop/nodesdk/model/schedule.html",headers:[{level:2,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:7},{level:2,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:348}],lastUpdated:"1/11/2022, 11:40:35 AM",lastUpdatedTimestamp:1641901235e3,headersStr:"Schedule RemindType",content:"# 日程对象(Schedule)\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",normalizedContent:"# 日程对象(schedule)\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"用户对象(User)",frontmatter:{},regularPath:"/develop/nodesdk/model/user.html",relativePath:"develop/nodesdk/model/user.md",key:"v-900787f6",path:"/develop/nodesdk/model/user.html",headers:[{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:7}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"User",content:"# 用户对象(User)\n\n用户对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# User\n\n字段名                  类型        描述\nid                   string    用户 ID\nusername             string    用户名\navatar               string    用户头像地址\nbot                  boolean   是否是机器人\nunion_openid         string    特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string    机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。",normalizedContent:"# 用户对象(user)\n\n用户对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# user\n\n字段名                  类型        描述\nid                   string    用户 id\nusername             string    用户名\navatar               string    用户头像地址\nbot                  boolean   是否是机器人\nunion_openid         string    特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string    机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"禁言全员",frontmatter:{},regularPath:"/develop/nodesdk/mute/mute_all.html",relativePath:"develop/nodesdk/mute/mute_all.md",key:"v-0003000d",path:"/develop/nodesdk/mute/mute_all.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:57},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:601},{level:3,title:"MuteOptions",slug:"muteoptions",normalizedTitle:"muteoptions",charIndex:689},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:919},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:938}],lastUpdated:"1/20/2022, 2:32:14 PM",lastUpdatedTimestamp:1642689134e3,headersStr:"使用示例 参数说明 MuteOptions 返回说明 返回示例",content:'# 禁言全员\n\n将频道内全部成员（非管理员）禁言。\n\n该接口同样可用于解除禁言，具体使用见解除全员禁言。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.muteApi.muteAll(guildID, options);\n\n  // e.g. 禁言 100 秒\n  // let { data } = await client.muteApi.muteAll("xxxxxx", { seconds:"100" });\n\n  // e.g. 禁言到 2022-01-08 10:29:11\n  // let { data } = await client.muteApi.muteAll("xxxxxx", { timeTo:"1641608951" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteApi.muteAll("xxxxxx", { timeTo:"0" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteApi.muteAll("xxxxxx", { seconds:"0" });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名       必填   类型            描述\nguildID   是    string        频道 ID\noptions   是    MuteOptions   禁言时长控制参数\n\n\n# MuteOptions\n\n字段名       类型       描述\ntimeTo    string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nseconds   string   禁言多少秒（两个字段二选一，默认以 timeTo 为准）\n\n# 解除禁言\n\n该接口同样支持解除全员禁言，将timeTo或seconds传值为字符串\'0\'即可。\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n',normalizedContent:'# 禁言全员\n\n将频道内全部成员（非管理员）禁言。\n\n该接口同样可用于解除禁言，具体使用见解除全员禁言。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.muteapi.muteall(guildid, options);\n\n  // e.g. 禁言 100 秒\n  // let { data } = await client.muteapi.muteall("xxxxxx", { seconds:"100" });\n\n  // e.g. 禁言到 2022-01-08 10:29:11\n  // let { data } = await client.muteapi.muteall("xxxxxx", { timeto:"1641608951" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteapi.muteall("xxxxxx", { timeto:"0" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteapi.muteall("xxxxxx", { seconds:"0" });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名       必填   类型            描述\nguildid   是    string        频道 id\noptions   是    muteoptions   禁言时长控制参数\n\n\n# muteoptions\n\n字段名       类型       描述\ntimeto    string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nseconds   string   禁言多少秒（两个字段二选一，默认以 timeto 为准）\n\n# 解除禁言\n\n该接口同样支持解除全员禁言，将timeto或seconds传值为字符串\'0\'即可。\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"禁言指定成员",frontmatter:{},regularPath:"/develop/nodesdk/mute/mute_member.html",relativePath:"develop/nodesdk/mute/mute_member.md",key:"v-aebcebda",path:"/develop/nodesdk/mute/mute_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:60},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:667},{level:3,title:"MuteOptions",slug:"muteoptions",normalizedTitle:"muteoptions",charIndex:790},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1022},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1041}],lastUpdated:"1/20/2022, 2:32:14 PM",lastUpdatedTimestamp:1642689134e3,headersStr:"使用示例 参数说明 MuteOptions 返回说明 返回示例",content:'# 禁言指定成员\n\n将频道指定成员（非管理员）禁言。\n\n该接口同样可用于解除禁言，具体使用见解除指定成员禁言。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.muteApi.muteMember(guildID, userID, options);\n\n  // e.g. 禁言 100 秒\n  // let { data } = await client.muteApi.muteMember("xxxxxx", "xxxxxx", { seconds:"100" });\n\n  // e.g. 禁言到 2022-01-08 10:29:11\n  // let { data } = await client.muteApi.muteMember("xxxxxx", "xxxxxx", { timeTo:"1641608951" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteApi.muteMember("xxxxxx", "xxxxxx", { timeTo:"0" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteApi.muteMember("xxxxxx", "xxxxxx", { seconds:"0" });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名       必填   类型            描述\nguildID   是    string        频道 ID\nuserID    是    string        成员 ID\noptions   是    MuteOptions   禁言时长控制参数\n\n\n# MuteOptions\n\n字段名       类型       描述\ntimeTo    string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nseconds   string   禁言多少秒（两个字段二选一，默认以 timeTo 为准）\n\n# 解除禁言\n\n该接口同样支持解除指定成员禁言，将timeTo或seconds传值为字符串\'0\'即可。\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n',normalizedContent:'# 禁言指定成员\n\n将频道指定成员（非管理员）禁言。\n\n该接口同样可用于解除禁言，具体使用见解除指定成员禁言。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.muteapi.mutemember(guildid, userid, options);\n\n  // e.g. 禁言 100 秒\n  // let { data } = await client.muteapi.mutemember("xxxxxx", "xxxxxx", { seconds:"100" });\n\n  // e.g. 禁言到 2022-01-08 10:29:11\n  // let { data } = await client.muteapi.mutemember("xxxxxx", "xxxxxx", { timeto:"1641608951" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteapi.mutemember("xxxxxx", "xxxxxx", { timeto:"0" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteapi.mutemember("xxxxxx", "xxxxxx", { seconds:"0" });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名       必填   类型            描述\nguildid   是    string        频道 id\nuserid    是    string        成员 id\noptions   是    muteoptions   禁言时长控制参数\n\n\n# muteoptions\n\n字段名       类型       描述\ntimeto    string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nseconds   string   禁言多少秒（两个字段二选一，默认以 timeto 为准）\n\n# 解除禁言\n\n该接口同样支持解除指定成员禁言，将timeto或seconds传值为字符串\'0\'即可。\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"禁言批量成员",frontmatter:{},regularPath:"/develop/nodesdk/mute/mute_members.html",relativePath:"develop/nodesdk/mute/mute_members.md",key:"v-58a3d20d",path:"/develop/nodesdk/mute/mute_members.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:62},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:722},{level:3,title:"MuteOptions",slug:"muteoptions",normalizedTitle:"muteoptions",charIndex:857},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1091},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1110}],lastUpdated:"5/12/2022, 2:26:03 AM",lastUpdatedTimestamp:1652322363e3,headersStr:"使用示例 参数说明 MuteOptions 返回说明 返回示例",content:'# 禁言批量成员\n\n将频道批量成员（非管理员）禁言。\n\n该接口同样可用于解除批量禁言，具体使用见解除批量成员禁言。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.muteApi.muteMembers(guildID, userIDList, options);\n\n  // e.g. 禁言 100 秒\n  // let { data } = await client.muteApi.muteMembers("xxxxxx", ["xxxxxx","xxxxxx"], { seconds:"100" });\n\n  // e.g. 禁言到 2022-01-08 10:29:11\n  // let { data } = await client.muteApi.muteMembers("xxxxxx", ["xxxxxx","xxxxxx"], { timeTo:"1641608951" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteApi.muteMembers("xxxxxx", ["xxxxxx","xxxxxx"], { timeTo:"0" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteApi.muteMembers("xxxxxx", ["xxxxxx","xxxxxx"], { seconds:"0" });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名          必填   类型            描述\nguildID      是    string        频道 ID\nuserIDList   是    Array         成员 ID\noptions      是    MuteOptions   禁言时长控制参数\n\n\n# MuteOptions\n\n字段名       类型       描述\ntimeTo    string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nseconds   string   禁言多少秒（两个字段二选一，默认以 timeTo 为准）\n\n# 解除批量禁言\n\n该接口同样支持解除批量成员禁言，将timeTo或seconds传值为字符串\'0\'即可。\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n',normalizedContent:'# 禁言批量成员\n\n将频道批量成员（非管理员）禁言。\n\n该接口同样可用于解除批量禁言，具体使用见解除批量成员禁言。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.muteapi.mutemembers(guildid, useridlist, options);\n\n  // e.g. 禁言 100 秒\n  // let { data } = await client.muteapi.mutemembers("xxxxxx", ["xxxxxx","xxxxxx"], { seconds:"100" });\n\n  // e.g. 禁言到 2022-01-08 10:29:11\n  // let { data } = await client.muteapi.mutemembers("xxxxxx", ["xxxxxx","xxxxxx"], { timeto:"1641608951" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteapi.mutemembers("xxxxxx", ["xxxxxx","xxxxxx"], { timeto:"0" });\n\n  // e.g. 解除禁言\n  // let { data } = await client.muteapi.mutemembers("xxxxxx", ["xxxxxx","xxxxxx"], { seconds:"0" });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 参数说明\n\n字段名          必填   类型            描述\nguildid      是    string        频道 id\nuseridlist   是    array         成员 id\noptions      是    muteoptions   禁言时长控制参数\n\n\n# muteoptions\n\n字段名       类型       描述\ntimeto    string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）\nseconds   string   禁言多少秒（两个字段二选一，默认以 timeto 为准）\n\n# 解除批量禁言\n\n该接口同样支持解除批量成员禁言，将timeto或seconds传值为字符串\'0\'即可。\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除精华消息",frontmatter:{},regularPath:"/develop/nodesdk/pins_message/delete_pins_message.html",relativePath:"develop/nodesdk/pins_message/delete_pins_message.md",key:"v-871b4d76",path:"/develop/nodesdk/pins_message/delete_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:51},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:182},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:286},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:305}],lastUpdated:"2/24/2022, 7:05:26 AM",lastUpdatedTimestamp:1645686326e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 删除精华消息\n\n用于移除子频道 channelId 下的精华消息 messageId 。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.pinsMessageApi.deletePinsMessage(channelId, messageId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmessageId   是    string   消息 ID\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 删除精华消息\n\n用于移除子频道 channelid 下的精华消息 messageid 。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.pinsmessageapi.deletepinsmessage(channelid, messageid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmessageid   是    string   消息 id\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取精华消息",frontmatter:{},regularPath:"/develop/nodesdk/pins_message/get_pins_message.html",relativePath:"develop/nodesdk/pins_message/get_pins_message.md",key:"v-0c39c52d",path:"/develop/nodesdk/pins_message/get_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:40},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:154},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:226},{level:3,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:235},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:396}],lastUpdated:"2/24/2022, 7:05:26 AM",lastUpdatedTimestamp:1645686326e3,headersStr:"使用示例 参数说明 返回说明 PinsMessage 返回示例",content:'# 获取精华消息\n\n用于获取子频道 channelId 内的精华消息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.pinsMessageApi.pinsMessage(channelId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\n\n\n# 返回说明\n\n返回 PinsMessage 对象。\n\n\n# PinsMessage\n\n字段名           类型         描述\nguild_id      string     频道 ID\nchannel_id    string     子频道 ID\nmessage_ids   string[]   消息 ID数组\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取精华消息\n\n用于获取子频道 channelid 内的精华消息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.pinsmessageapi.pinsmessage(channelid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\n\n\n# 返回说明\n\n返回 pinsmessage 对象。\n\n\n# pinsmessage\n\n字段名           类型         描述\nguild_id      string     频道 id\nchannel_id    string     子频道 id\nmessage_ids   string[]   消息 id数组\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建精华消息",frontmatter:{},regularPath:"/develop/nodesdk/pins_message/put_pins_message.html",relativePath:"develop/nodesdk/pins_message/put_pins_message.md",key:"v-0cb42a4d",path:"/develop/nodesdk/pins_message/put_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:160},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:288},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:392},{level:3,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:238},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:562}],lastUpdated:"2/24/2022, 7:05:26 AM",lastUpdatedTimestamp:1645686326e3,headersStr:"使用示例 参数说明 返回说明 PinsMessage 返回示例",content:'# 创建精华消息\n\n用于将messageId添加为子频道 channelId 内的精华消息。\n\n注意\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.pinsMessageApi.putPinsMessage(channelId, messageId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nmessageId   是    string   消息 ID\n\n\n# 返回说明\n\n返回 PinsMessage 对象。\n\n\n# PinsMessage\n\n字段名           类型         描述\nguild_id      string     频道 ID\nchannel_id    string     子频道 ID\nmessage_ids   string[]   消息 ID数组\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建精华消息\n\n用于将messageid添加为子频道 channelid 内的精华消息。\n\n注意\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.pinsmessageapi.putpinsmessage(channelid, messageid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nmessageid   是    string   消息 id\n\n\n# 返回说明\n\n返回 pinsmessage 对象。\n\n\n# pinsmessage\n\n字段名           类型         描述\nguild_id      string     频道 id\nchannel_id    string     子频道 id\nmessage_ids   string[]   消息 id数组\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除表情表态",frontmatter:{},regularPath:"/develop/nodesdk/reaction/delete_reaction.html",relativePath:"develop/nodesdk/reaction/delete_reaction.md",key:"v-a64c1d8e",path:"/develop/nodesdk/reaction/delete_reaction.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:40},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:167},{level:3,title:"ReactionToDelete",slug:"reactiontodelete",normalizedTitle:"reactiontodelete",charIndex:278},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:605},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:624}],lastUpdated:"3/14/2022, 2:00:12 PM",lastUpdatedTimestamp:1647266412e3,headersStr:"使用示例 参数说明 ReactionToDelete 返回说明 返回示例",content:"# 删除表情表态\n\n删除自己对消息 message_id 的表情表态。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.reactionApi.deleteReaction(channelId, reactionObj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型                 描述\nchannelId     是    string             子频道 ID\nreactionObj   是    ReactionToDelete   表情表态对象\n\n\n# ReactionToDelete\n\n注意\n\nv2.9.0 版本的emojy_type、emojy_id存在拼写错误（emojy -> emoji），该错误已在 v2.9.1 版本修正，如使用 v2.9.0 版本，请留意升级后修正 emoji_type 和 emoji_id拼写。\n\n字段名          必填   类型       描述\nmessage_id   是    string   消息 ID\nemoji_type   是    number   表情类型，参考EmojiType\nemoji_id     是    string   表情 ID，参考 Emoji 列表\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 删除表情表态\n\n删除自己对消息 message_id 的表情表态。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.reactionapi.deletereaction(channelid, reactionobj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型                 描述\nchannelid     是    string             子频道 id\nreactionobj   是    reactiontodelete   表情表态对象\n\n\n# reactiontodelete\n\n注意\n\nv2.9.0 版本的emojy_type、emojy_id存在拼写错误（emojy -> emoji），该错误已在 v2.9.1 版本修正，如使用 v2.9.0 版本，请留意升级后修正 emoji_type 和 emoji_id拼写。\n\n字段名          必填   类型       描述\nmessage_id   是    string   消息 id\nemoji_type   是    number   表情类型，参考emojitype\nemoji_id     是    string   表情 id，参考 emoji 列表\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"拉取表情表态用户列表",frontmatter:{},regularPath:"/develop/nodesdk/reaction/get_reaction_user_list.html",relativePath:"develop/nodesdk/reaction/get_reaction_user_list.md",key:"v-fb864e66",path:"/develop/nodesdk/reaction/get_reaction_user_list.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:48},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:189},{level:3,title:"ReactionToCreate",slug:"reactiontocreate",normalizedTitle:"reactiontocreate",charIndex:300},{level:3,title:"QueryParam",slug:"queryparam",normalizedTitle:"queryparam",charIndex:345},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:814},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:976}],lastUpdated:"5/18/2022, 6:45:32 AM",lastUpdatedTimestamp:1652856332e3,headersStr:"使用示例 参数说明 ReactionToCreate QueryParam 返回说明 返回示例",content:'# 拉取表情表态用户列表\n\n拉取对消息 message_id 指定表情表态的用户列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.reactionApi.getReactionUserList(channelId, reactionObj, options);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型                 描述\nchannelId     是    string             子频道 ID\nreactionObj   是    ReactionToCreate   表情表态对象\noptions       是    QueryParam         用户列表入参对象\n\n\n# ReactionToCreate\n\n注意\n\nv2.9.0 版本的emojy_type、emojy_id存在拼写错误（emojy -> emoji），该错误已在 v2.9.1 版本修正，如使用 v2.9.0 版本，请留意升级后修正 emoji_type 和 emoji_id拼写。\n\n字段名          必填   类型       描述\nmessage_id   是    string   消息 ID\nemoji_type   是    number   表情类型，参考EmojiType\nemoji_id     是    string   表情 ID，参考 Emoji 列表\n\n\n# QueryParam\n\n字段名      必填   类型       描述\ncookie   是    string   上次请求返回的cookie，第一次请求无需填写\nlimit    是    number   每次拉取数量，默认20，最多50，只在第一次请求时设置\n\n\n# 返回说明\n\n字段名      类型        描述\nusers    array     用户对象，参考 User，会返回 id, username, avatar\ncookie   string    分页参数，用于拉取下一页\nis_end   boolean   是否已拉取完成到最后一页，true代表完成\n\n\n# 返回示例\n\ndata：\n\n{\n    "users": [\n        {\n            "id": "xxx",\n            "username": "频道机器人",\n            "avatar": "http://xxxxx"\n        }\n    ],\n    "cookie":"1_2",\n    "is_end": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 拉取表情表态用户列表\n\n拉取对消息 message_id 指定表情表态的用户列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.reactionapi.getreactionuserlist(channelid, reactionobj, options);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型                 描述\nchannelid     是    string             子频道 id\nreactionobj   是    reactiontocreate   表情表态对象\noptions       是    queryparam         用户列表入参对象\n\n\n# reactiontocreate\n\n注意\n\nv2.9.0 版本的emojy_type、emojy_id存在拼写错误（emojy -> emoji），该错误已在 v2.9.1 版本修正，如使用 v2.9.0 版本，请留意升级后修正 emoji_type 和 emoji_id拼写。\n\n字段名          必填   类型       描述\nmessage_id   是    string   消息 id\nemoji_type   是    number   表情类型，参考emojitype\nemoji_id     是    string   表情 id，参考 emoji 列表\n\n\n# queryparam\n\n字段名      必填   类型       描述\ncookie   是    string   上次请求返回的cookie，第一次请求无需填写\nlimit    是    number   每次拉取数量，默认20，最多50，只在第一次请求时设置\n\n\n# 返回说明\n\n字段名      类型        描述\nusers    array     用户对象，参考 user，会返回 id, username, avatar\ncookie   string    分页参数，用于拉取下一页\nis_end   boolean   是否已拉取完成到最后一页，true代表完成\n\n\n# 返回示例\n\ndata：\n\n{\n    "users": [\n        {\n            "id": "xxx",\n            "username": "频道机器人",\n            "avatar": "http://xxxxx"\n        }\n    ],\n    "cookie":"1_2",\n    "is_end": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发表表情表态",frontmatter:{},regularPath:"/develop/nodesdk/reaction/post_reaction.html",relativePath:"develop/nodesdk/reaction/post_reaction.md",key:"v-5ef23463",path:"/develop/nodesdk/reaction/post_reaction.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:35},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:160},{level:3,title:"ReactionToCreate",slug:"reactiontocreate",normalizedTitle:"reactiontocreate",charIndex:271},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:598},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:617}],lastUpdated:"3/14/2022, 2:00:12 PM",lastUpdatedTimestamp:1647266412e3,headersStr:"使用示例 参数说明 ReactionToCreate 返回说明 返回示例",content:"# 发表表情表态\n\n用于在指定子频道向某条消息发表表情表态。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.reactionApi.postReaction(channelId, reactionObj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型                 描述\nchannelId     是    string             子频道 ID\nreactionObj   是    ReactionToCreate   表情表态对象\n\n\n# ReactionToCreate\n\n注意\n\nv2.9.0 版本的emojy_type、emojy_id存在拼写错误（emojy -> emoji），该错误已在 v2.9.1 版本修正，如使用 v2.9.0 版本，请留意升级后修正 emoji_type 和 emoji_id拼写。\n\n字段名          必填   类型       描述\nmessage_id   是    string   消息 ID\nemoji_type   是    number   表情类型，参考EmojiType\nemoji_id     是    string   表情 ID，参考 Emoji 列表\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",normalizedContent:"# 发表表情表态\n\n用于在指定子频道向某条消息发表表情表态。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.reactionapi.postreaction(channelid, reactionobj);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名           必填   类型                 描述\nchannelid     是    string             子频道 id\nreactionobj   是    reactiontocreate   表情表态对象\n\n\n# reactiontocreate\n\n注意\n\nv2.9.0 版本的emojy_type、emojy_id存在拼写错误（emojy -> emoji），该错误已在 v2.9.1 版本修正，如使用 v2.9.0 版本，请留意升级后修正 emoji_type 和 emoji_id拼写。\n\n字段名          必填   类型       描述\nmessage_id   是    string   消息 id\nemoji_type   是    number   表情类型，参考emojitype\nemoji_id     是    string   表情 id，参考 emoji 列表\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\n{\n}\n\n\n1\n2\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除日程",frontmatter:{},regularPath:"/develop/nodesdk/schedule/delete_schedule.html",relativePath:"develop/nodesdk/schedule/delete_schedule.md",key:"v-207c3481",path:"/develop/nodesdk/schedule/delete_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:69},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:195},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:302},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:320}],lastUpdated:"1/11/2022, 11:40:35 AM",lastUpdatedTimestamp:1641901235e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 删除日程\n\n删除日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleApi.deleteSchedule(channelId, scheduleId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelId    是    string   子频道 ID\nscheduleId   是    string   日程 ID\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",normalizedContent:"# 删除日程\n\n删除日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleapi.deleteschedule(channelid, scheduleid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelid    是    string   子频道 id\nscheduleid   是    string   日程 id\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\n'';\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改日程",frontmatter:{},regularPath:"/develop/nodesdk/schedule/patch_schedule.html",relativePath:"develop/nodesdk/schedule/patch_schedule.md",key:"v-52fbc8a6",path:"/develop/nodesdk/schedule/patch_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:69},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:204},{level:3,title:"ScheduleToPatch",slug:"scheduletopatch",normalizedTitle:"scheduletopatch",charIndex:352},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:735},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:146},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:616},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1147},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:720},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1584}],lastUpdated:"2/8/2022, 7:33:47 AM",lastUpdatedTimestamp:1644305627e3,headersStr:"使用示例 参数说明 ScheduleToPatch 返回说明 Schedule Member User RemindType 返回示例",content:'# 修改日程\n\n修改日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleApi.patchSchedule(channelId, scheduleId, schedule);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名          必填   类型                描述\nchannelId    是    string            子频道 ID\nscheduleId   是    string            日程 ID\nschedule     是    ScheduleToPatch   日程对象\n\n\n# ScheduleToPatch\n\n字段名               必填   类型       描述\nname              否    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms)\nend_timestamp     是    string   日程结束时间戳(ms)\ncreator           否    Member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 ID\nremind_type       是    string   日程提醒类型，取值参考RemindType\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 修改日程\n\n修改日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleapi.patchschedule(channelid, scheduleid, schedule);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名          必填   类型                描述\nchannelid    是    string            子频道 id\nscheduleid   是    string            日程 id\nschedule     是    scheduletopatch   日程对象\n\n\n# scheduletopatch\n\n字段名               必填   类型       描述\nname              否    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms)\nend_timestamp     是    string   日程结束时间戳(ms)\ncreator           否    member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 id\nremind_type       是    string   日程提醒类型，取值参考remindtype\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取日程详情",frontmatter:{},regularPath:"/develop/nodesdk/schedule/get_schedule.html",relativePath:"develop/nodesdk/schedule/get_schedule.md",key:"v-49654e2d",path:"/develop/nodesdk/schedule/get_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:145},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:252},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:261},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:511},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:664},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:605},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1101}],lastUpdated:"1/11/2022, 11:40:35 AM",lastUpdatedTimestamp:1641901235e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 获取日程详情\n\n获取某个日程的详情。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleApi.schedule(channelId, scheduleId);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelId    是    string   子频道 ID\nscheduleId   是    string   日程 ID\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取日程详情\n\n获取某个日程的详情。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleapi.schedule(channelid, scheduleid);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannelid    是    string   子频道 id\nscheduleid   是    string   日程 id\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取日程列表",frontmatter:{},regularPath:"/develop/nodesdk/schedule/get_schedules.html",relativePath:"develop/nodesdk/schedule/get_schedules.md",key:"v-df64ea9e",path:"/develop/nodesdk/schedule/get_schedules.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:33},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:149},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:347},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:356},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:606},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:759},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:700},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1196}],lastUpdated:"1/11/2022, 11:40:35 AM",lastUpdatedTimestamp:1641901235e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 获取日程列表\n\n获取某个日程子频道中当天的日程列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleApi.schedules(channelId, since);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelId   是    string   子频道 ID\nsince       否    string   起始时间戳(ms)\n\n注意\n\nsince 需是毫秒级别的时间戳（13位）。\n\n若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# 返回说明\n\n返回 Schedule 数组。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "xxxxxx",\n    "description": "xxxxxx",\n    "start_timestamp": "1641913200000",\n    "end_timestamp": "1641916800000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": false\n      },\n      "nick": "",\n      "joined_at": "2021-11-24T16:51:35+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "2"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 获取日程列表\n\n获取某个日程子频道中当天的日程列表。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleapi.schedules(channelid, since);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型       描述\nchannelid   是    string   子频道 id\nsince       否    string   起始时间戳(ms)\n\n注意\n\nsince 需是毫秒级别的时间戳（13位）。\n\n若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# 返回说明\n\n返回 schedule 数组。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "xxxxxx",\n    "description": "xxxxxx",\n    "start_timestamp": "1641913200000",\n    "end_timestamp": "1641916800000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": false\n      },\n      "nick": "",\n      "joined_at": "2021-11-24t16:51:35+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "2"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取当前用户频道列表",frontmatter:{},regularPath:"/develop/nodesdk/user/guilds.html",relativePath:"develop/nodesdk/user/guilds.md",key:"v-7588b826",path:"/develop/nodesdk/user/guilds.html",headers:[{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:17},{level:2,title:"返回",slug:"返回",normalizedTitle:"返回",charIndex:47},{level:2,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:75}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"接口 返回 参数",content:"# 获取当前用户频道列表\n\n\n# 接口\n\nGET /users/@me/guilds\n\n\n# 返回\n\n当前用户所加入的 Guild 对象列表\n\n\n# 参数\n\n字段名      类型       描述            要求\nbefore   string   读此 id 之前的数据   guild id, before/after 只能带一个\nafter    string   读此 id 之后的数据   guild id, before/after 只能带一个\nlimit    number   每次拉取多少条数据     最大不超过 100，默认 100",normalizedContent:"# 获取当前用户频道列表\n\n\n# 接口\n\nget /users/@me/guilds\n\n\n# 返回\n\n当前用户所加入的 guild 对象列表\n\n\n# 参数\n\n字段名      类型       描述            要求\nbefore   string   读此 id 之前的数据   guild id, before/after 只能带一个\nafter    string   读此 id 之后的数据   guild id, before/after 只能带一个\nlimit    number   每次拉取多少条数据     最大不超过 100，默认 100",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建日程",frontmatter:{},regularPath:"/develop/nodesdk/schedule/post_schedule.html",relativePath:"develop/nodesdk/schedule/post_schedule.md",key:"v-218409ab",path:"/develop/nodesdk/schedule/post_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:68},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:190},{level:3,title:"ScheduleToCreate",slug:"scheduletocreate",normalizedTitle:"scheduletocreate",charIndex:295},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:715},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:144},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:596},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1127},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:700},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1564}],lastUpdated:"1/11/2022, 11:40:35 AM",lastUpdatedTimestamp:1641901235e3,headersStr:"使用示例 参数说明 ScheduleToCreate 返回说明 Schedule Member User RemindType 返回示例",content:'# 创建日程\n\n在日程子频道创建一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleApi.postSchedule(channelId, schedule);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型                 描述\nchannelId   是    string             子频道 ID\nschedule    是    ScheduleToCreate   日程对象\n\n\n# ScheduleToCreate\n\n字段名               必填   类型       描述\nname              是    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nend_timestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\ncreator           否    Member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 ID\nremind_type       是    string   日程提醒类型，取值参考RemindType\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 创建日程\n\n在日程子频道创建一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.scheduleapi.postschedule(channelid, schedule);\n}\n\n\n1\n2\n3\n\n\n\n# 参数说明\n\n字段名         必填   类型                 描述\nchannelid   是    string             子频道 id\nschedule    是    scheduletocreate   日程对象\n\n\n# scheduletocreate\n\n字段名               必填   类型       描述\nname              是    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nend_timestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\ncreator           否    member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 id\nremind_type       是    string   日程提醒类型，取值参考remindtype\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"Python SDK 接入指南",frontmatter:{},regularPath:"/develop/pythonsdk/",relativePath:"develop/pythonsdk/README.md",key:"v-35a13f58",path:"/develop/pythonsdk/",headers:[{level:2,title:"sdk 安装",slug:"sdk-安装",normalizedTitle:"sdk 安装",charIndex:24},{level:2,title:"sdk 使用",slug:"sdk-使用",normalizedTitle:"sdk 使用",charIndex:115},{level:3,title:"兼容提示",slug:"兼容提示",normalizedTitle:"兼容提示",charIndex:166},{level:2,title:"示例机器人",slug:"示例机器人",normalizedTitle:"示例机器人",charIndex:230},{level:2,title:"botpy-API",slug:"botpy-api",normalizedTitle:"botpy-api",charIndex:269},{level:3,title:"快速示例",slug:"快速示例",normalizedTitle:"快速示例",charIndex:312},{level:2,title:"botpy-事件监听",slug:"botpy-事件监听",normalizedTitle:"botpy-事件监听",charIndex:740},{level:2,title:"订阅事件的方法",slug:"订阅事件的方法",normalizedTitle:"订阅事件的方法",charIndex:836},{level:3,title:"方法一：",slug:"方法一",normalizedTitle:"方法一：",charIndex:848},{level:3,title:"方法二：",slug:"方法二",normalizedTitle:"方法二：",charIndex:1042},{level:3,title:"备注",slug:"备注",normalizedTitle:"备注",charIndex:1320},{level:2,title:"日志打印",slug:"日志打印",normalizedTitle:"日志打印",charIndex:1850},{level:3,title:"使用方法",slug:"使用方法",normalizedTitle:"使用方法",charIndex:1926},{level:3,title:"日志设置",slug:"日志设置",normalizedTitle:"日志设置",charIndex:2111},{level:3,title:"log_level",slug:"log-level",normalizedTitle:"log_level",charIndex:2226},{level:3,title:"log_format",slug:"log-format",normalizedTitle:"log_format",charIndex:2244},{level:3,title:"bot_log",slug:"bot-log",normalizedTitle:"bot_log",charIndex:2273},{level:3,title:"ext_handlers",slug:"ext-handlers",normalizedTitle:"ext_handlers",charIndex:2291},{level:3,title:"log_config",slug:"log-config",normalizedTitle:"log_config",charIndex:2315}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"sdk 安装 sdk 使用 兼容提示 示例机器人 botpy-API 快速示例 botpy-事件监听 订阅事件的方法 方法一： 方法二： 备注 日志打印 使用方法 日志设置 log_level log_format bot_log ext_handlers log_config",content:'# Python SDK 接入指南\n\n\n\n\n# sdk 安装\n\n外发版本通过下面方式安装\n\npip install qq-botpy\n\n\n1\n\n\n> 更新包的话需要添加 --upgrade 兼容版本：python3.8+\n\n\n# sdk 使用\n\n需要使用的地方import botpy\n\nimport botpy\n\n\n1\n\n\n\n# 兼容提示\n\n> 原机器人的老版本qq-bot仍然可以使用，但新接口的支持上会逐渐暂停，此次升级不会影响线上使用的机器人\n\n\n# 示例机器人\n\nexamples 目录下存放示例机器人，可供实现参考。\n\n\n# botpy-API\n\n基于 机器人开放平台API 实现的 API 接口封装。\n\n\n# 快速示例\n\n通过继承实现bot.Client, 实现自己的机器人Client\n\nimport botpy\nfrom botpy.types.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.post_message(channel_id=message.channel_id, content="content")\n\nintents = botpy.Intents(public_guild_messages=True) \nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# botpy-事件监听\n\n异步模块基于 websocket 技术用于监听频道内的相关事件，如消息、成员变化等事件，用于开发者对事件进行相应的处理。\n\n更完整的事件说明，请参考 事件监听\n\n\n# 订阅事件的方法\n\n\n# 方法一：\n\nintents = botpy.Intents() \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n在Intents中填入对应的参数\n\n例子：\n\nintents = botpy.Intents(public_guild_messages=True, direct_message=True, guilds=True)\n\n\n1\n\n\n\n# 方法二：\n\nintents = botpy.Intents.none()\n\n\n1\n\n\n然后打开对应的订阅(参数列表)\n\nintents.public_guild_messages=True\nintents.direct_message=True\nintents.guilds=True\n\n\n1\n2\n3\n\n\n说明：\n\n方法二对应的快捷订阅方式为\n\n 1. 订阅所有事件\n\nintents = botpy.Intents.all()\n\n\n1\n\n 2. 订阅所有的公域事件\n\nintents = botpy.Intents.default()\n\n\n1\n\n\n\n# 备注\n\n也可以通过预设置的类型，设置需要监听的事件通道\n\nimport botpy\n\nintents = botpy.Intents.none()\nintents.public_guild_messages=True\n\n\n1\n2\n3\n4\n\n\n# 参数列表\n\n参数                        含义\npublic_guild_messages     公域消息事件\nguild_messages            消息事件 (仅 私域 机器人能够设置此 intents)\ndirect_message            私信事件\nguild_message_reactions   消息相关互动事件\nguilds                    频道事件\nguild_members             频道成员事件\ninteraction               互动事件\nmessage_audit             消息审核事件\nforums                    论坛事件 (仅 私域 机器人能够设置此 intents)\naudio_action              音频事件\n\n\n# 日志打印\n\n基于自带的 logging 模块封装的日志模块，提供了日志写入以及美化了打印格式，并支持调整打印级别（默认打印级别为 INFO）。\n\n\n# 使用方法\n\n引用模块，并获取 logger 实例：\n\nfrom botpy import logging\n\n\n1\n\n\n或者通过botpy.logger也可以获取logger对象\n\n然后就可以愉快地使用 logger 进行打印。例如：\n\nfrom botpy import logger\n\nlogger.info("hello world!")\n\n\n1\n2\n3\n\n\n\n# 日志设置\n\nSDK的日志设置集成在bot.Client的实例化阶段，也可通过logging.configure_logging修改(均为可选)\n\nimport botpy\n\n# 示例，非默认值\nbotpy.Client(\n    log_level=10,\n    log_format="new format",\n    bot_log=None,\n    ext_handlers=False,\n    log_config="log_config.json"\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# log_level\n\n日志级别，默认为INFO\n\n命令行启动py可增加参数-d 或 --debug快捷打开debug日志\n\npython3 demo_at_reply.py -d\n\n\n1\n\n\n几个可选取值（参考了logging模块的取值）：\n\nLEVEL      取值\nCRITICAL   50\nERROR      40\nWARNING    30\nINFO       20\nDEBUG      10\nNOTSET     0\n\n\n# log_format\n\n日志控制台输出格式，默认为 "\\033[1;33m[%(levelname)s]\\t(%(filename)s:%(lineno)s)%(funcName)s\\t\\033[0m%(message)s"\n\n\n# bot_log\n\n是否启用botpy日志，默认为True\n\nTrue 启用\nNone 禁用 拓展\nFalse 禁用 拓展+控制台输出\n\n\n# ext_handlers\n\n日志Handler拓展，为True使用默认拓展，False不添加拓展，可用list添加多个拓展。默认为True\n\n默认拓展\n\nimport os\nimport logging\nfrom logging.handlers import TimedRotatingFileHandler\n\nDEFAULT_FILE_HANDLER = {\n    # 要实例化的Handler\n    "handler": TimedRotatingFileHandler,\n    # 可选 Default to DEFAULT_FILE_FORMAT\n    "format": "%(asctime)s\\t[%(levelname)s]\\t(%(filename)s:%(lineno)s)%(funcName)s\\t%(message)s",\n    # 可选 Default to DEBUG\n    "level": logging.DEBUG,\n    # 以下是Handler相关参数\n    "when": "D",\n    "backupCount": 7,\n    "encoding": "utf-8",\n    # *特殊* 对于filename参数，其中如有 %(name)s 会在实例化阶段填入相应的日志name\n    "filename": os.path.join(os.getcwd(), "%(name)s.log"),\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# 修改默认拓展\n\nimport os\nimport botpy\nfrom botpy.logging import DEFAULT_FILE_HANDLER\n\n# 修改日志路径\nDEFAULT_FILE_HANDLER["filename"] = os.path.join(os.getcwd(), "log", "%(name)s.log")\n# 修改日志格式\nDEFAULT_FILE_HANDLER["format"] = "new format"\n\nbotpy.Client(ext_handlers=DEFAULT_FILE_HANDLER)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# log_config\n\n该参数将传入logging.config.dictConfig(内置logging而非botpy.logging)，如果为.json/.yaml文件路径将从文件中读取配置，无默认值',normalizedContent:'# python sdk 接入指南\n\n\n\n\n# sdk 安装\n\n外发版本通过下面方式安装\n\npip install qq-botpy\n\n\n1\n\n\n> 更新包的话需要添加 --upgrade 兼容版本：python3.8+\n\n\n# sdk 使用\n\n需要使用的地方import botpy\n\nimport botpy\n\n\n1\n\n\n\n# 兼容提示\n\n> 原机器人的老版本qq-bot仍然可以使用，但新接口的支持上会逐渐暂停，此次升级不会影响线上使用的机器人\n\n\n# 示例机器人\n\nexamples 目录下存放示例机器人，可供实现参考。\n\n\n# botpy-api\n\n基于 机器人开放平台api 实现的 api 接口封装。\n\n\n# 快速示例\n\n通过继承实现bot.client, 实现自己的机器人client\n\nimport botpy\nfrom botpy.types.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.post_message(channel_id=message.channel_id, content="content")\n\nintents = botpy.intents(public_guild_messages=true) \nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# botpy-事件监听\n\n异步模块基于 websocket 技术用于监听频道内的相关事件，如消息、成员变化等事件，用于开发者对事件进行相应的处理。\n\n更完整的事件说明，请参考 事件监听\n\n\n# 订阅事件的方法\n\n\n# 方法一：\n\nintents = botpy.intents() \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n在intents中填入对应的参数\n\n例子：\n\nintents = botpy.intents(public_guild_messages=true, direct_message=true, guilds=true)\n\n\n1\n\n\n\n# 方法二：\n\nintents = botpy.intents.none()\n\n\n1\n\n\n然后打开对应的订阅(参数列表)\n\nintents.public_guild_messages=true\nintents.direct_message=true\nintents.guilds=true\n\n\n1\n2\n3\n\n\n说明：\n\n方法二对应的快捷订阅方式为\n\n 1. 订阅所有事件\n\nintents = botpy.intents.all()\n\n\n1\n\n 2. 订阅所有的公域事件\n\nintents = botpy.intents.default()\n\n\n1\n\n\n\n# 备注\n\n也可以通过预设置的类型，设置需要监听的事件通道\n\nimport botpy\n\nintents = botpy.intents.none()\nintents.public_guild_messages=true\n\n\n1\n2\n3\n4\n\n\n# 参数列表\n\n参数                        含义\npublic_guild_messages     公域消息事件\nguild_messages            消息事件 (仅 私域 机器人能够设置此 intents)\ndirect_message            私信事件\nguild_message_reactions   消息相关互动事件\nguilds                    频道事件\nguild_members             频道成员事件\ninteraction               互动事件\nmessage_audit             消息审核事件\nforums                    论坛事件 (仅 私域 机器人能够设置此 intents)\naudio_action              音频事件\n\n\n# 日志打印\n\n基于自带的 logging 模块封装的日志模块，提供了日志写入以及美化了打印格式，并支持调整打印级别（默认打印级别为 info）。\n\n\n# 使用方法\n\n引用模块，并获取 logger 实例：\n\nfrom botpy import logging\n\n\n1\n\n\n或者通过botpy.logger也可以获取logger对象\n\n然后就可以愉快地使用 logger 进行打印。例如：\n\nfrom botpy import logger\n\nlogger.info("hello world!")\n\n\n1\n2\n3\n\n\n\n# 日志设置\n\nsdk的日志设置集成在bot.client的实例化阶段，也可通过logging.configure_logging修改(均为可选)\n\nimport botpy\n\n# 示例，非默认值\nbotpy.client(\n    log_level=10,\n    log_format="new format",\n    bot_log=none,\n    ext_handlers=false,\n    log_config="log_config.json"\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# log_level\n\n日志级别，默认为info\n\n命令行启动py可增加参数-d 或 --debug快捷打开debug日志\n\npython3 demo_at_reply.py -d\n\n\n1\n\n\n几个可选取值（参考了logging模块的取值）：\n\nlevel      取值\ncritical   50\nerror      40\nwarning    30\ninfo       20\ndebug      10\nnotset     0\n\n\n# log_format\n\n日志控制台输出格式，默认为 "\\033[1;33m[%(levelname)s]\\t(%(filename)s:%(lineno)s)%(funcname)s\\t\\033[0m%(message)s"\n\n\n# bot_log\n\n是否启用botpy日志，默认为true\n\ntrue 启用\nnone 禁用 拓展\nfalse 禁用 拓展+控制台输出\n\n\n# ext_handlers\n\n日志handler拓展，为true使用默认拓展，false不添加拓展，可用list添加多个拓展。默认为true\n\n默认拓展\n\nimport os\nimport logging\nfrom logging.handlers import timedrotatingfilehandler\n\ndefault_file_handler = {\n    # 要实例化的handler\n    "handler": timedrotatingfilehandler,\n    # 可选 default to default_file_format\n    "format": "%(asctime)s\\t[%(levelname)s]\\t(%(filename)s:%(lineno)s)%(funcname)s\\t%(message)s",\n    # 可选 default to debug\n    "level": logging.debug,\n    # 以下是handler相关参数\n    "when": "d",\n    "backupcount": 7,\n    "encoding": "utf-8",\n    # *特殊* 对于filename参数，其中如有 %(name)s 会在实例化阶段填入相应的日志name\n    "filename": os.path.join(os.getcwd(), "%(name)s.log"),\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# 修改默认拓展\n\nimport os\nimport botpy\nfrom botpy.logging import default_file_handler\n\n# 修改日志路径\ndefault_file_handler["filename"] = os.path.join(os.getcwd(), "log", "%(name)s.log")\n# 修改日志格式\ndefault_file_handler["format"] = "new format"\n\nbotpy.client(ext_handlers=default_file_handler)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# log_config\n\n该参数将传入logging.config.dictconfig(内置logging而非botpy.logging)，如果为.json/.yaml文件路径将从文件中读取配置，无默认值',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取当前用户信息",frontmatter:{},regularPath:"/develop/nodesdk/user/me.html",relativePath:"develop/nodesdk/user/me.md",key:"v-287f2926",path:"/develop/nodesdk/user/me.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:113},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:131},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:457}],lastUpdated:"1/1/2022, 4:28:26 AM",lastUpdatedTimestamp:1641011306e3,headersStr:"使用示例 返回说明 User 返回示例",content:'# 获取当前用户信息\n\n获取当前用户信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.meApi.me();\n}\n\n\n1\n2\n3\n\n\n\n# 返回说明\n\n使用当前用户信息填充的 User 对象。\n\n\n# User\n\n字段名                  类型       描述\nid                   string   用户 ID\nusername             string   用户名\navatar               string   用户头像地址\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 返回示例\n\ndata：\n\n{\n    "id": "xxxxxx",\n    "username": "zsh-测试中",\n    "avatar": "xxxxxx",\n    "union_openid": "xxxxxx",\n    "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 获取当前用户信息\n\n获取当前用户信息。\n\n\n# 使用示例\n\nasync function demo() {\n  let { data } = await client.meapi.me();\n}\n\n\n1\n2\n3\n\n\n\n# 返回说明\n\n使用当前用户信息填充的 user 对象。\n\n\n# user\n\n字段名                  类型       描述\nid                   string   用户 id\nusername             string   用户名\navatar               string   用户头像地址\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 返回示例\n\ndata：\n\n{\n    "id": "xxxxxx",\n    "username": "zsh-测试中",\n    "avatar": "xxxxxx",\n    "union_openid": "xxxxxx",\n    "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"WSS 消息体",frontmatter:{},regularPath:"/develop/nodesdk/wss/model.html",relativePath:"develop/nodesdk/wss/model.md",key:"v-6d5699e6",path:"/develop/nodesdk/wss/model.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:1886},{level:3,title:"创建 WS 实例并监听消息",slug:"创建-ws-实例并监听消息",normalizedTitle:"创建 ws 实例并监听消息",charIndex:1895},{level:3,title:"接收到的通知示例",slug:"接收到的通知示例",normalizedTitle:"接收到的通知示例",charIndex:3105}],lastUpdated:"5/17/2022, 2:19:49 AM",lastUpdatedTimestamp:1652753989e3,headersStr:"使用示例 创建 WS 实例并监听消息 接收到的通知示例",content:"# WSS 消息体\n\nWS 支持监听的事件类型可参考事件订阅 intents。\n\nGUILDS (1 << 0)\n  - GUILD_CREATE           // 当机器人加入新guild时\n  - GUILD_UPDATE           // 当guild资料发生变更时\n  - GUILD_DELETE           // 当机器人退出guild时\n  - CHANNEL_CREATE         // 当channel被创建时\n  - CHANNEL_UPDATE         // 当channel被更新时\n  - CHANNEL_DELETE         // 当channel被删除时\n\nGUILD_MEMBERS (1 << 1)\n  - GUILD_MEMBER_ADD       // 当成员加入时\n  - GUILD_MEMBER_UPDATE    // 当成员资料变更时\n  - GUILD_MEMBER_REMOVE    // 当成员被移除时\n\nGUILD_MESSAGES (1 << 9)    // 消息事件，仅 *私域* 机器人能够设置此 intents。\n  - MESSAGE_CREATE         // 发送消息事件，代表频道内的全部消息，而不只是 at 机器人的消息。内容与 AT_MESSAGE_CREATE 相同\n  - MESSAGE_DELETE         // 删除（撤回）消息事件\n\nGUILD_MESSAGE_REACTIONS (1 << 10)\n  - MESSAGE_REACTION_ADD    // 为消息添加表情表态\n  - MESSAGE_REACTION_REMOVE // 为消息删除表情表态\n\nDIRECT_MESSAGE (1 << 12)\n  - DIRECT_MESSAGE_CREATE   // 当收到用户发给机器人的私信消息时\n  - DIRECT_MESSAGE_DELETE   // 删除（撤回）消息事件\n\nINTERACTION (1 << 26)\n  - INTERACTION_CREATE     // 互动事件创建时\n\nMESSAGE_AUDIT (1 << 27)\n- MESSAGE_AUDIT_PASS     // 消息审核通过\n- MESSAGE_AUDIT_REJECT   // 消息审核不通过\n\nFORUMS_EVENT (1 << 28)  // 论坛事件，仅 *私域* 机器人能够设置此 intents。\n  - FORUM_THREAD_CREATE     // 当用户创建主题时\n  - FORUM_THREAD_UPDATE     // 当用户更新主题时\n  - FORUM_THREAD_DELETE     // 当用户删除主题时\n  - FORUM_POST_CREATE       // 当用户创建帖子时\n  - FORUM_POST_DELETE       // 当用户删除帖子时\n  - FORUM_REPLY_CREATE      // 当用户回复评论时\n  - FORUM_REPLY_DELETE      // 当用户删除评论时\n  - FORUM_PUBLISH_AUDIT_RESULT      // 当用户发表审核通过时\n\nAUDIO_ACTION (1 << 29)\n  - AUDIO_START             // 音频开始播放时\n  - AUDIO_FINISH            // 音频播放结束时\n  - AUDIO_ON_MIC            // 上麦时\n  - AUDIO_OFF_MIC           // 下麦时\n\nPUBLIC_GUILD_MESSAGES (1 << 30) // 消息事件，此为公域的消息事件\n  - AT_MESSAGE_CREATE       // 当收到@机器人的消息时\n  - PUBLIC_MESSAGE_DELETE   // 当频道的消息被删除时\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n\n# 使用示例\n\n\n# 创建 WS 实例并监听消息\n\nimport { createWebsocket } from 'qq-guild-bot';\nconst ws = createWebsocket(testConfigWs);\nws.on('READY', data => {\n  console.log('[READY] 事件接收 :', data);\n});\nws.on('ERROR', data => {\n  console.log('[ERROR] 事件接收 :', data);\n});\nws.on('GUILDS', data => {\n  console.log('[GUILDS] 事件接收 :', data);\n});\nws.on('GUILD_MEMBERS', data => {\n  console.log('[GUILD_MEMBERS] 事件接收 :', data);\n});\nws.on('GUILD_MESSAGES', data => {\n  console.log('[GUILD_MESSAGES] 事件接收 :', data);\n});\nws.on('GUILD_MESSAGE_REACTIONS', data => {\n  console.log('[GUILD_MESSAGE_REACTIONS] 事件接收 :', data);\n});\nws.on('DIRECT_MESSAGE', data => {\n  console.log('[DIRECT_MESSAGE] 事件接收 :', data);\n});\nws.on('INTERACTION',data => {\n  console.log('[INTERACTION] 事件接收 :', data);\n});\nws.on('MESSAGE_AUDIT', data => {\n  console.log('[MESSAGE_AUDIT] 事件接收 :', data);\n});\nws.on('FORUMS_EVENT', data => {\n  console.log('[FORUMS_EVENT] 事件接收 :', data);\n});\nws.on('AUDIO_ACTION', data => {\n  console.log('[AUDIO_ACTION] 事件接收 :', data);\n});\nws.on('PUBLIC_GUILD_MESSAGES', data => {\n  console.log('[PUBLIC_GUILD_MESSAGES] 事件接收 :', data);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# 接收到的通知示例\n\n以“创建子频道”为例，通过 client API 创建一个子频道，我们将在GUILDS事件中拿到如下结果：\n\n{\n  eventType: 'CHANNEL_CREATE',\n  eventId: 'xxxxx',\n  msg: {\n    guild_id: 'xxxxxx',\n    id: 'xxxxxx',\n    name: 'test_creation',\n    op_user_id: 'xxxxxx',\n    owner_id: 'xxxxxx',\n    sub_type: 0,\n    type: 0\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n其中eventType值类型可参考事件类型。",normalizedContent:"# wss 消息体\n\nws 支持监听的事件类型可参考事件订阅 intents。\n\nguilds (1 << 0)\n  - guild_create           // 当机器人加入新guild时\n  - guild_update           // 当guild资料发生变更时\n  - guild_delete           // 当机器人退出guild时\n  - channel_create         // 当channel被创建时\n  - channel_update         // 当channel被更新时\n  - channel_delete         // 当channel被删除时\n\nguild_members (1 << 1)\n  - guild_member_add       // 当成员加入时\n  - guild_member_update    // 当成员资料变更时\n  - guild_member_remove    // 当成员被移除时\n\nguild_messages (1 << 9)    // 消息事件，仅 *私域* 机器人能够设置此 intents。\n  - message_create         // 发送消息事件，代表频道内的全部消息，而不只是 at 机器人的消息。内容与 at_message_create 相同\n  - message_delete         // 删除（撤回）消息事件\n\nguild_message_reactions (1 << 10)\n  - message_reaction_add    // 为消息添加表情表态\n  - message_reaction_remove // 为消息删除表情表态\n\ndirect_message (1 << 12)\n  - direct_message_create   // 当收到用户发给机器人的私信消息时\n  - direct_message_delete   // 删除（撤回）消息事件\n\ninteraction (1 << 26)\n  - interaction_create     // 互动事件创建时\n\nmessage_audit (1 << 27)\n- message_audit_pass     // 消息审核通过\n- message_audit_reject   // 消息审核不通过\n\nforums_event (1 << 28)  // 论坛事件，仅 *私域* 机器人能够设置此 intents。\n  - forum_thread_create     // 当用户创建主题时\n  - forum_thread_update     // 当用户更新主题时\n  - forum_thread_delete     // 当用户删除主题时\n  - forum_post_create       // 当用户创建帖子时\n  - forum_post_delete       // 当用户删除帖子时\n  - forum_reply_create      // 当用户回复评论时\n  - forum_reply_delete      // 当用户删除评论时\n  - forum_publish_audit_result      // 当用户发表审核通过时\n\naudio_action (1 << 29)\n  - audio_start             // 音频开始播放时\n  - audio_finish            // 音频播放结束时\n  - audio_on_mic            // 上麦时\n  - audio_off_mic           // 下麦时\n\npublic_guild_messages (1 << 30) // 消息事件，此为公域的消息事件\n  - at_message_create       // 当收到@机器人的消息时\n  - public_message_delete   // 当频道的消息被删除时\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n\n# 使用示例\n\n\n# 创建 ws 实例并监听消息\n\nimport { createwebsocket } from 'qq-guild-bot';\nconst ws = createwebsocket(testconfigws);\nws.on('ready', data => {\n  console.log('[ready] 事件接收 :', data);\n});\nws.on('error', data => {\n  console.log('[error] 事件接收 :', data);\n});\nws.on('guilds', data => {\n  console.log('[guilds] 事件接收 :', data);\n});\nws.on('guild_members', data => {\n  console.log('[guild_members] 事件接收 :', data);\n});\nws.on('guild_messages', data => {\n  console.log('[guild_messages] 事件接收 :', data);\n});\nws.on('guild_message_reactions', data => {\n  console.log('[guild_message_reactions] 事件接收 :', data);\n});\nws.on('direct_message', data => {\n  console.log('[direct_message] 事件接收 :', data);\n});\nws.on('interaction',data => {\n  console.log('[interaction] 事件接收 :', data);\n});\nws.on('message_audit', data => {\n  console.log('[message_audit] 事件接收 :', data);\n});\nws.on('forums_event', data => {\n  console.log('[forums_event] 事件接收 :', data);\n});\nws.on('audio_action', data => {\n  console.log('[audio_action] 事件接收 :', data);\n});\nws.on('public_guild_messages', data => {\n  console.log('[public_guild_messages] 事件接收 :', data);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# 接收到的通知示例\n\n以“创建子频道”为例，通过 client api 创建一个子频道，我们将在guilds事件中拿到如下结果：\n\n{\n  eventtype: 'channel_create',\n  eventid: 'xxxxx',\n  msg: {\n    guild_id: 'xxxxxx',\n    id: 'xxxxxx',\n    name: 'test_creation',\n    op_user_id: 'xxxxxx',\n    owner_id: 'xxxxxx',\n    sub_type: 0,\n    type: 0\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n其中eventtype值类型可参考事件类型。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道公告",frontmatter:{},regularPath:"/develop/pythonsdk/api/announce/create_channel_announce.html",relativePath:"develop/pythonsdk/api/announce/create_channel_announce.md",key:"v-20d75376",path:"/develop/pythonsdk/api/announce/create_channel_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:31},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:484},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:635}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回示例",content:'# 创建子频道公告\n\n将某条消息创建为子频道的公告。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        message_id = "088de19cbeb883e7e97110a2e39c0138d401"\n        await self.api.create_announce(message.guild_id, message.channel_id, message_id)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填       类型       描述\nguild_id     是        string   频道 ID\nchannel_id   是        string   子频道 ID\nmessage_id   string   消息 ID    \n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建子频道公告\n\n将某条消息创建为子频道的公告。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        message_id = "088de19cbeb883e7e97110a2e39c0138d401"\n        await self.api.create_announce(message.guild_id, message.channel_id, message_id)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填       类型       描述\nguild_id     是        string   频道 id\nchannel_id   是        string   子频道 id\nmessage_id   string   消息 id    \n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道公告推荐子频道",frontmatter:{},regularPath:"/develop/pythonsdk/api/announce/create_guild_announce.html",relativePath:"develop/pythonsdk/api/announce/create_guild_announce.md",key:"v-e5a924b6",path:"/develop/pythonsdk/api/announce/create_guild_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:134},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:677},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:828}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回示例",content:'# 创建频道公告推荐子频道\n\n用于将指定子频道设置为当前频道的推荐子频道，并以全局公告形式展示。\n\n注意\n\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 messageId 设置为 all。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\nfrom botpy.types.announce import AnnouncesType\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        channel_list = [{"channel_id": message.channel_id, "introduce": "introduce"}]\n        await self.api.create_recommend_announce(message.guild_id, AnnouncesType.MEMBER, channel_list)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名          必填       类型       描述\nguild_id     是        string   频道 ID\nchannel_id   是        string   子频道 ID\nmessage_id   string   消息 ID    \n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建频道公告推荐子频道\n\n用于将指定子频道设置为当前频道的推荐子频道，并以全局公告形式展示。\n\n注意\n\n * 只有子频道权限为全体成员可见才可设置为推荐子频道。\n * 删除频道公告推荐子频道请使用 删除频道公告,并将 messageid 设置为 all。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\nfrom botpy.types.announce import announcestype\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        channel_list = [{"channel_id": message.channel_id, "introduce": "introduce"}]\n        await self.api.create_recommend_announce(message.guild_id, announcestype.member, channel_list)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名          必填       类型       描述\nguild_id     是        string   频道 id\nchannel_id   是        string   子频道 id\nmessage_id   string   消息 id    \n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "channel_id":"channel_id",\n    "message_id":"message_id"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道公告",frontmatter:{},regularPath:"/develop/pythonsdk/api/announce/delete_channel_announce.html",relativePath:"develop/pythonsdk/api/announce/delete_channel_announce.md",key:"v-ccf6a73a",path:"/develop/pythonsdk/api/announce/delete_channel_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:457},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:570},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:589}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 删除子频道公告\n\n删除子频道公告。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        message_id = "088de19cbeb883e7e97110a2e39c0138d401"\n        await self.api.delete_announce(message.guild_id, message_id)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填       类型       描述\nguild_id     是        string   频道 ID\nmessage_id   string   消息 ID    \n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 删除子频道公告\n\n删除子频道公告。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        message_id = "088de19cbeb883e7e97110a2e39c0138d401"\n        await self.api.delete_announce(message.guild_id, message_id)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填       类型       描述\nguild_id     是        string   频道 id\nmessage_id   string   消息 id    \n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道可用权限列表",frontmatter:{},regularPath:"/develop/pythonsdk/api/api_permissions/get_permissions.html",relativePath:"develop/pythonsdk/api/api_permissions/get_permissions.md",key:"v-9cc9c0a6",path:"/develop/pythonsdk/api/api_permissions/get_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:42},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:622},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:691},{level:3,title:"APIPermission",slug:"apipermission",normalizedTitle:"apipermission",charIndex:732},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1004}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 APIPermission 返回示例",content:'# 获取频道可用权限列表\n\n用于获取机器人在指定频道内可以使用的权限列表。\n\n\n# 使用示例\n\nimport os\n\nimport botpy\nfrom botpy import logging\nfrom botpy.message import Message\n\n_log = logging.get_logger()\n\n\nclass MyClient(botpy.Client):\n\n    async def on_at_message_create(self, message: Message):\n      \n        apis = await self.api.get_permissions(message.guild_id)\n        for api in apis:\n            _log.info("api: %s" % api["desc"] + ", status: %d" % api["auth_status"])\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\n\n\n# 返回说明\n\n字段名    类型                描述\napis   APIPermission[]   机器人可用权限列表\n\n\n# APIPermission\n\n字段名           类型       描述\npath          string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 GET\ndesc          string   API 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 返回示例\n\ndata：\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "GET",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "POST",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# 获取频道可用权限列表\n\n用于获取机器人在指定频道内可以使用的权限列表。\n\n\n# 使用示例\n\nimport os\n\nimport botpy\nfrom botpy import logging\nfrom botpy.message import message\n\n_log = logging.get_logger()\n\n\nclass myclient(botpy.client):\n\n    async def on_at_message_create(self, message: message):\n      \n        apis = await self.api.get_permissions(message.guild_id)\n        for api in apis:\n            _log.info("api: %s" % api["desc"] + ", status: %d" % api["auth_status"])\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\n\n\n# 返回说明\n\n字段名    类型                描述\napis   apipermission[]   机器人可用权限列表\n\n\n# apipermission\n\n字段名           类型       描述\npath          string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 get\ndesc          string   api 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 返回示例\n\ndata：\n\n{\n  "apis": [\n    {\n      "path": "/guilds/{guild_id}/members/{user_id}",\n      "method": "get",\n      "desc": "获取当前频道成员信息",\n      "auth_status": 0\n    },\n    {\n      "path": "/channels/{channel_id}/messages",\n      "method": "post",\n      "desc": "创建消息",\n      "auth_status": 1\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道推荐子频道",frontmatter:{},regularPath:"/develop/pythonsdk/api/announce/delete_guild_announce.html",relativePath:"develop/pythonsdk/api/announce/delete_guild_announce.md",key:"v-4794f9fa",path:"/develop/pythonsdk/api/announce/delete_guild_announce.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:393},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:499},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:518}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 删除频道推荐子频道\n\n删除频道推荐子频道。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.delete_announce(message.guild_id, "all")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nguild_id     是    string   频道 ID\nmessage_id   是    string   消息 ID\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 删除频道推荐子频道\n\n删除频道推荐子频道。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.delete_announce(message.guild_id, "all")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nguild_id     是    string   频道 id\nmessage_id   是    string   消息 id\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"机器人下麦",frontmatter:{},regularPath:"/develop/pythonsdk/api/audio/audio_off_mic.html",relativePath:"develop/pythonsdk/api/audio/audio_off_mic.md",key:"v-4f8a3ced",path:"/develop/pythonsdk/api/audio/audio_off_mic.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:12},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:350},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:414}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明",content:"# 机器人下麦\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.audio import Audio\n\nclass MyClient(botpy.Client):\n    async def on_audio_start(self, audio: Audio):\n        await self.api.off_microphone(audio.channel_id)\n\nintents = botpy.Intents(audio_action=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          类型       描述\nchannel_id   String   子频道 id\n\n\n# 返回说明\n\n{}\n\n\n1\n",normalizedContent:"# 机器人下麦\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.audio import audio\n\nclass myclient(botpy.client):\n    async def on_audio_start(self, audio: audio):\n        await self.api.off_microphone(audio.channel_id)\n\nintents = botpy.intents(audio_action=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          类型       描述\nchannel_id   string   子频道 id\n\n\n# 返回说明\n\n{}\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"机器人上麦",frontmatter:{},regularPath:"/develop/pythonsdk/api/audio/audio_on_mic.html",relativePath:"develop/pythonsdk/api/audio/audio_on_mic.md",key:"v-2572bc37",path:"/develop/pythonsdk/api/audio/audio_on_mic.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:12},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:349},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:413}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明",content:"# 机器人上麦\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.audio import Audio\n\nclass MyClient(botpy.Client):\n    async def on_audio_start(self, audio: Audio):\n        await self.api.on_microphone(audio.channel_id)\n\nintents = botpy.Intents(audio_action=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          类型       描述\nchannel_id   String   子频道 id\n\n\n# 返回说明\n\n{}\n\n\n1\n",normalizedContent:"# 机器人上麦\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.audio import audio\n\nclass myclient(botpy.client):\n    async def on_audio_start(self, audio: audio):\n        await self.api.on_microphone(audio.channel_id)\n\nintents = botpy.intents(audio_action=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          类型       描述\nchannel_id   string   子频道 id\n\n\n# 返回说明\n\n{}\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"音频控制",frontmatter:{},regularPath:"/develop/pythonsdk/api/audio/post_audio.html",relativePath:"develop/pythonsdk/api/audio/post_audio.md",key:"v-5c070569",path:"/develop/pythonsdk/api/audio/post_audio.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:11},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:516},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:640},{level:2,title:"AudioControl",slug:"audiocontrol",normalizedTitle:"audiocontrol",charIndex:610},{level:3,title:"STATUS",slug:"status",normalizedTitle:"status",charIndex:834}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 AudioControl STATUS",content:'# 音频控制\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.audio import Audio\n\nclass MyClient(botpy.Client):\n    async def on_audio_start(self, audio: Audio):\n        audio_control={\n            "audio_url":"url",\n            "text":"简单爱-周杰伦",\n            "status":"START",\n        }\n        await self.api.update_audio(audio.channel_id, audio_control=audio_control)\n\nintents = botpy.Intents(audio_action=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 参数说明\n\n字段名             类型             描述\nchannel_id      String         子频道 id\naudio_control   AudioControl   audio 控制参数\n\n\n# 返回说明\n\n字段参见 AudioControl\n\n\n# 语音对象\n\n\n# AudioControl\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      STATUS   播放状态，参考 STATUS\n\n\n# STATUS\n\n字段名      值   描述\nSTART    0   开始播放操作\nPAUSE    1   暂停播放操作\nRESUME   2   继续播放操作\nSTOP     3   停止播放操作',normalizedContent:'# 音频控制\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.audio import audio\n\nclass myclient(botpy.client):\n    async def on_audio_start(self, audio: audio):\n        audio_control={\n            "audio_url":"url",\n            "text":"简单爱-周杰伦",\n            "status":"start",\n        }\n        await self.api.update_audio(audio.channel_id, audio_control=audio_control)\n\nintents = botpy.intents(audio_action=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 参数说明\n\n字段名             类型             描述\nchannel_id      string         子频道 id\naudio_control   audiocontrol   audio 控制参数\n\n\n# 返回说明\n\n字段参见 audiocontrol\n\n\n# 语音对象\n\n\n# audiocontrol\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      status   播放状态，参考 status\n\n\n# status\n\n字段名      值   描述\nstart    0   开始播放操作\npause    1   暂停播放操作\nresume   2   继续播放操作\nstop     3   停止播放操作',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道 API 权限授权链接",frontmatter:{},regularPath:"/develop/pythonsdk/api/api_permissions/post_permission.html",relativePath:"develop/pythonsdk/api/api_permissions/post_permission.md",key:"v-3d911f66",path:"/develop/pythonsdk/api/api_permissions/post_permission.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:187},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:972},{level:3,title:"APIPermissionDemandIdentify",slug:"apipermissiondemandidentify",normalizedTitle:"apipermissiondemandidentify",charIndex:430},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1446},{level:3,title:"APIPermissionDemand",slug:"apipermissiondemand",normalizedTitle:"apipermissiondemand",charIndex:430},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1861}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 APIPermissionDemandIdentify 返回说明 APIPermissionDemand 返回示例",content:'# 创建频道 API 权限授权链接\n\n用于创建 API 接口权限授权链接，该链接指向 guildID 对应的频道 。调用成功后，参数指定的子频道会受到一条“申请授权【xxx】权限”消息，管理员点击可进行机器人 API 权限授予。\n\n注意\n\n * 需要建立 ws 连接。\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接，如需调整，请联系平台申请权限。\n\n\n# 使用示例\n\nimport os\n\nimport botpy\nfrom botpy import logging\nfrom botpy.message import Message\n\n_log = logging.get_logger()\n\n\nclass MyClient(botpy.Client):\n\n    async def on_at_message_create(self, message: Message):\n      \n      demand_identity = APIPermissionDemandIdentify(path="/guilds/{guild_id}/members/{user_id}", method="GET")\n      demand = await self.api.post_permission_demand(\n          message.guild_id,\n          message.channel_id,\n          demand_identity,\n          \'获取当前频道成员信息\'\n      )\n      _log.info("api title: %s" % demand["title"] + ", desc: %s" % demand["desc"])\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 参数说明\n\n字段名            必填   类型                            描述\nguild_id       是    string                        频道 ID\nchannel_id     是    string                        授权链接发送的子频道 ID\napi_identify   是    APIPermissionDemandIdentify   API 权限需求标识对象\ndesc           否    string                        机器人申请对应的 API 接口权限后可以使用功能的描述\n\n\n# APIPermissionDemandIdentify\n\n字段名      类型       描述\npath     string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 GET\n\n\n# 返回说明\n\n返回 APIPermissionDemand对象。\n\n\n# APIPermissionDemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 ID\nchannel_id     string                        接口权限需求授权链接发送的子频道 ID\napi_identify   APIPermissionDemandIdentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "123456",\n  "channel_id": "112233",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "GET"\n  },\n  "title": "申请授权【获取频道】权限",\n  "desc": "允许授权后才能正常使用机器人「频道权限」功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时打开“channel_id”对应的频道，可看到一条机器人发出的 API 授权申请消息。',normalizedContent:'# 创建频道 api 权限授权链接\n\n用于创建 api 接口权限授权链接，该链接指向 guildid 对应的频道 。调用成功后，参数指定的子频道会受到一条“申请授权【xxx】权限”消息，管理员点击可进行机器人 api 权限授予。\n\n注意\n\n * 需要建立 ws 连接。\n * 每天只能在一个频道内发 3 条（默认值）频道权限授权链接，如需调整，请联系平台申请权限。\n\n\n# 使用示例\n\nimport os\n\nimport botpy\nfrom botpy import logging\nfrom botpy.message import message\n\n_log = logging.get_logger()\n\n\nclass myclient(botpy.client):\n\n    async def on_at_message_create(self, message: message):\n      \n      demand_identity = apipermissiondemandidentify(path="/guilds/{guild_id}/members/{user_id}", method="get")\n      demand = await self.api.post_permission_demand(\n          message.guild_id,\n          message.channel_id,\n          demand_identity,\n          \'获取当前频道成员信息\'\n      )\n      _log.info("api title: %s" % demand["title"] + ", desc: %s" % demand["desc"])\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 参数说明\n\n字段名            必填   类型                            描述\nguild_id       是    string                        频道 id\nchannel_id     是    string                        授权链接发送的子频道 id\napi_identify   是    apipermissiondemandidentify   api 权限需求标识对象\ndesc           否    string                        机器人申请对应的 api 接口权限后可以使用功能的描述\n\n\n# apipermissiondemandidentify\n\n字段名      类型       描述\npath     string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 get\n\n\n# 返回说明\n\n返回 apipermissiondemand对象。\n\n\n# apipermissiondemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 id\nchannel_id     string                        接口权限需求授权链接发送的子频道 id\napi_identify   apipermissiondemandidentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "123456",\n  "channel_id": "112233",\n  "api_identify": {\n    "path": "/guilds/{guild_id}",\n    "method": "get"\n  },\n  "title": "申请授权【获取频道】权限",\n  "desc": "允许授权后才能正常使用机器人「频道权限」功能"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时打开“channel_id”对应的频道，可看到一条机器人发出的 api 授权申请消息。',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建子频道",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel/create_channel.html",relativePath:"develop/pythonsdk/api/channel/create_channel.md",key:"v-9c41da1e",path:"/develop/pythonsdk/api/channel/create_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:767},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:123},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:107},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1333},{level:3,title:"ChannelRes",slug:"channelres",normalizedTitle:"channelres",charIndex:1342},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1612}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 ChannelType ChannelSubType 返回说明 ChannelRes 返回示例",content:'# 创建子频道\n\n创建一个子频道。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\nfrom botpy.types.channel import ChannelSubType, ChannelType\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.create_channel(\n          guild_id=message.guild_id,\n          name="创建子频道",\n          type=ChannelType.TEXT_CHANNEL,\n          sub_type=ChannelSubType.TALK,\n          position=1,\n          parent_id=1,\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 目前不支持创建的子频道类型\n   * 子频道分组\n   * 私密子频道\n\n\n# 参数说明\n\n字段名         必填   类型               描述\nguild_id    是    string           频道 ID\nname        是    string           子频道名\ntype        是    ChannelType      子频道类型\nsub_type    是    ChannelSubType   子频道子类型\nposition    否    int              排序，非必填\nparent_id   否    int              分组 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回说明\n\n返回 ChannelRes 对象。\n\n\n# ChannelRes\n\n字段名        类型       描述\nid         string   子频道 ID\nguild_id   string   频道 ID\nname       string   子频道名\ntype       int      子频道类型 ChannelType\nsub_type   int      子频道子类型 ChannelSubType\nposition   int      排序，非必填\nowner_id   string   创建者 ID\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "channel_id",\n  "guild_id": "guild_id",\n  "name": "channel_test",\n  "type": 1,\n  "sub_type": 0,\n  "position": 1640240055,\n  "owner_id": "2854198244"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 创建子频道\n\n创建一个子频道。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\nfrom botpy.types.channel import channelsubtype, channeltype\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.create_channel(\n          guild_id=message.guild_id,\n          name="创建子频道",\n          type=channeltype.text_channel,\n          sub_type=channelsubtype.talk,\n          position=1,\n          parent_id=1,\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 目前不支持创建的子频道类型\n   * 子频道分组\n   * 私密子频道\n\n\n# 参数说明\n\n字段名         必填   类型               描述\nguild_id    是    string           频道 id\nname        是    string           子频道名\ntype        是    channeltype      子频道类型\nsub_type    是    channelsubtype   子频道子类型\nposition    否    int              排序，非必填\nparent_id   否    int              分组 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回说明\n\n返回 channelres 对象。\n\n\n# channelres\n\n字段名        类型       描述\nid         string   子频道 id\nguild_id   string   频道 id\nname       string   子频道名\ntype       int      子频道类型 channeltype\nsub_type   int      子频道子类型 channelsubtype\nposition   int      排序，非必填\nowner_id   string   创建者 id\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "channel_id",\n  "guild_id": "guild_id",\n  "name": "channel_test",\n  "type": 1,\n  "sub_type": 0,\n  "position": 1640240055,\n  "owner_id": "2854198244"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除子频道",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel/delete_channel.html",relativePath:"develop/pythonsdk/api/channel/delete_channel.md",key:"v-5fb5275a",path:"/develop/pythonsdk/api/channel/delete_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:493},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:567},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:595}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 删除子频道\n\n移除一个子频道。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.delete_channel(channel_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 子频道的删除是无法撤回的，一旦删除，将无法恢复。\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\n\n\n# 返回说明\n\n成功返回 HTTP 状态码 200\n\n\n# 返回示例\n\ndata：\n\n{}\n\n\n1\n',normalizedContent:'# 删除子频道\n\n移除一个子频道。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.delete_channel(channel_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n * 子频道的删除是无法撤回的，一旦删除，将无法恢复。\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\n\n\n# 返回说明\n\n成功返回 http 状态码 200\n\n\n# 返回示例\n\ndata：\n\n{}\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道信息",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel/get_channel.html",relativePath:"develop/pythonsdk/api/channel/get_channel.md",key:"v-6172b04d",path:"/develop/pythonsdk/api/channel/get_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:32},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:387},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:451},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:462},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:686},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:726},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1119}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Channel ChannelType ChannelSubType 返回示例",content:'# 获取子频道信息\n\n获取子频道 channel 详情\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_channel(channel_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          类型       描述\nchannel_id   String   子频道 ID\n\n\n# 返回说明\n\n字段参见 Channel\n\n\n# 子频道对象(Channel)\n\n子频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关。请不要理解为真实的 ID\n\n\n# Channel\n\n字段名         类型       描述\nid          String   子频道id\nguild_id    String   频道id\nname        String   子频道名\ntype        int      子频道类型 ChannelType\nsub_type    int      子频道子类型 ChannelSubType\nposition    int      排序，必填，而且不能够和其他子频道的值重复\nparent_id   String   分组 id\nowner_id    String   创建人 id\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知类型的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"channel_id",\n    "guild_id":"guild_id",\n    "name":"子频道名",\n    "type":0,\n    "last_message_id":"21",\n    "nsfw":false,\n    "position":2,\n    "parent_id":"分组 id  ",\n    "rate_limit_per_user":0,\n    "owner_id":"0",\n    "sub_type":0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'# 获取子频道信息\n\n获取子频道 channel 详情\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_channel(channel_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          类型       描述\nchannel_id   string   子频道 id\n\n\n# 返回说明\n\n字段参见 channel\n\n\n# 子频道对象(channel)\n\n子频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关。请不要理解为真实的 id\n\n\n# channel\n\n字段名         类型       描述\nid          string   子频道id\nguild_id    string   频道id\nname        string   子频道名\ntype        int      子频道类型 channeltype\nsub_type    int      子频道子类型 channelsubtype\nposition    int      排序，必填，而且不能够和其他子频道的值重复\nparent_id   string   分组 id\nowner_id    string   创建人 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知类型的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"channel_id",\n    "guild_id":"guild_id",\n    "name":"子频道名",\n    "type":0,\n    "last_message_id":"21",\n    "nsfw":false,\n    "position":2,\n    "parent_id":"分组 id  ",\n    "rate_limit_per_user":0,\n    "owner_id":"0",\n    "sub_type":0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道列表",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel/get_channels.html",relativePath:"develop/pythonsdk/api/channel/get_channels.md",key:"v-235dc1bf",path:"/develop/pythonsdk/api/channel/get_channels.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:36},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:390},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:459},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:468},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:625},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:665},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1060}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Channel ChannelType ChannelSubType 返回示例",content:'# 获取子频道列表\n\nget_channels 获取子频道列表\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_channels(guild_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\n\n\n# 返回说明\n\n返回 Channel 数组。\n\n\n# Channel\n\n字段名         类型       描述\nid          string   子频道 ID\nguild_id    string   频道 ID\nname        string   子频道名\ntype        number   子频道类型 ChannelType\nsub_type    number   子频道子类型 ChannelSubType\nposition    number   排序，必填，而且不能够和其他子频道的值重复\nparent_id   string   分组 ID\nowner_id    string   创建人 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n[\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":2,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    },\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":3,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 获取子频道列表\n\nget_channels 获取子频道列表\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_channels(guild_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\n\n\n# 返回说明\n\n返回 channel 数组。\n\n\n# channel\n\n字段名         类型       描述\nid          string   子频道 id\nguild_id    string   频道 id\nname        string   子频道名\ntype        number   子频道类型 channeltype\nsub_type    number   子频道子类型 channelsubtype\nposition    number   排序，必填，而且不能够和其他子频道的值重复\nparent_id   string   分组 id\nowner_id    string   创建人 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n[\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":2,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    },\n    {\n        "id":"channel_id",\n        "guild_id":"guild_id",\n        "name":"子频道名",\n        "type":4,\n        "position":3,\n        "parent_id":"0",\n        "owner_id":"0",\n        "sub_type":0\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel/update_channel.html",relativePath:"develop/pythonsdk/api/channel/update_channel.md",key:"v-c0ef08d2",path:"/develop/pythonsdk/api/channel/update_channel.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:716},{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:803},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:909},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1218},{level:3,title:"ChannelRes",slug:"channelres",normalizedTitle:"channelres",charIndex:1229},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:1429},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1601}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 Channel ChannelType 返回说明 ChannelRes ChannelSubType 返回示例",content:'# 修改子频道\n\n修改某个子频道的信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        """\n        name\t            string\t子频道名\n        position\t        int\t    排序\n        parent_id\t        string\t分组 id\n        private_type\t    int\t    子频道私密类型 PrivateType\n        speak_permission\tint\t    子频道发言权限 SpeakPermission\n        """\n        await self.api.update_channel(channel_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nchannelId   是    string    子频道 ID\nchannel     是    Channel   子频道对象\n\n\n# Channel\n\n字段名         类型       描述\nname        string   子频道名\ntype        number   子频道类型 ChannelType\nposition    number   排序，必填，而且不能够和其他子频道的值重复\nparent_id   string   分组 ID\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# 返回说明\n\n字段参见 ChannelRes。\n\n\n# ChannelRes\n\n字段名         类型       描述\nid          string   子频道 ID\nguild_id    string   频道 ID\nname        string   子频道名\ntype        number   子频道类型 ChannelType\nsub_type    number   子频道子类型 ChannelSubType\nposition    number   排序，必填，而且不能够和其他子频道的值重复\nparent_id   string   分组 ID\nowner_id    string   创建人 ID\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "2186875",\n  "guild_id": "2020131797974366736",\n  "name": "update_channel",\n  "type": 0,\n  "position": 22,\n  "parent_id": "1128421",\n  "owner_id": null,\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# 修改子频道\n\n修改某个子频道的信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        """\n        name\t            string\t子频道名\n        position\t        int\t    排序\n        parent_id\t        string\t分组 id\n        private_type\t    int\t    子频道私密类型 privatetype\n        speak_permission\tint\t    子频道发言权限 speakpermission\n        """\n        await self.api.update_channel(channel_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 修改成功后，会触发子频道更新事件\n\n\n# 参数说明\n\n字段名         必填   类型        描述\nchannelid   是    string    子频道 id\nchannel     是    channel   子频道对象\n\n\n# channel\n\n字段名         类型       描述\nname        string   子频道名\ntype        number   子频道类型 channeltype\nposition    number   排序，必填，而且不能够和其他子频道的值重复\nparent_id   string   分组 id\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# 返回说明\n\n字段参见 channelres。\n\n\n# channelres\n\n字段名         类型       描述\nid          string   子频道 id\nguild_id    string   频道 id\nname        string   子频道名\ntype        number   子频道类型 channeltype\nsub_type    number   子频道子类型 channelsubtype\nposition    number   排序，必填，而且不能够和其他子频道的值重复\nparent_id   string   分组 id\nowner_id    string   创建人 id\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "2186875",\n  "guild_id": "2020131797974366736",\n  "name": "update_channel",\n  "type": 0,\n  "position": 22,\n  "parent_id": "1128421",\n  "owner_id": null,\n  "sub_type": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道身份组权限",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel_permissions/get_channel_role_permissions.html",relativePath:"develop/pythonsdk/api/channel_permissions/get_channel_role_permissions.md",key:"v-8868cd8a",path:"/develop/pythonsdk/api/channel_permissions/get_channel_role_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:33},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:421},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:529},{level:3,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:538},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:545},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1217}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 ChannelPermissions Permissions 返回示例",content:'# 获取子频道身份组权限\n\n获取指定子频道身份组的权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_channel_role_permissions(channel_id="xxxx", role_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nrole_id      是    string   身份组 ID\n\n\n# 返回说明\n\n返回 ChannelPermissions 对象。\n\n\n# ChannelPermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 ID\nrole_id       string   身份组 ID，\npermissions   string   用户拥有的子频道权限，参考 Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，以下面返回示例为例，permissions是\'1\'，表示拥有可查看子频道(1)权限。\n\n\n# 返回示例\n\ndata：\n\n{\n  "channel_id": \'CHANNEL_ID\',\n  "role_id": \'ROLE_ID\',\n  "permissions": \'1\'\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取子频道身份组权限\n\n获取指定子频道身份组的权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_channel_role_permissions(channel_id="xxxx", role_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nrole_id      是    string   身份组 id\n\n\n# 返回说明\n\n返回 channelpermissions 对象。\n\n\n# channelpermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 id\nrole_id       string   身份组 id，\npermissions   string   用户拥有的子频道权限，参考 permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002+0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，以下面返回示例为例，permissions是\'1\'，表示拥有可查看子频道(1)权限。\n\n\n# 返回示例\n\ndata：\n\n{\n  "channel_id": \'channel_id\',\n  "role_id": \'role_id\',\n  "permissions": \'1\'\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取子频道权限",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel_permissions/get_channel_permissions.html",relativePath:"develop/pythonsdk/api/channel_permissions/get_channel_permissions.md",key:"v-da3e93e6",path:"/develop/pythonsdk/api/channel_permissions/get_channel_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:27},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:415},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:531},{level:3,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:540},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:547},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1227}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 ChannelPermissions Permissions 返回示例",content:'# 获取子频道权限\n\n获取指定子频道的权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_channel_user_permissions(channel_id="xxxx", user_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nuser_id      是    string   用户 ID ，参考 User\n\n\n# 返回说明\n\n返回 ChannelPermissions 对象。\n\n\n# ChannelPermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 ID\nuser_id       string   用户 ID，参考 User\npermissions   string   用户拥有的子频道权限，参考 Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符 不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002 +0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，以下面返回示例为例，permissions是\'5\'，表示拥有可发言子频道(4)+可查看子频道(1)两种权限。\n\n\n# 返回示例\n\ndata：\n\n{\n  "channel_id": "1128412",\n  "user_id": "9962144428931019739",\n  "permissions": "6"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取子频道权限\n\n获取指定子频道的权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_channel_user_permissions(channel_id="xxxx", user_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nuser_id      是    string   用户 id ，参考 user\n\n\n# 返回说明\n\n返回 channelpermissions 对象。\n\n\n# channelpermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 id\nuser_id       string   用户 id，参考 user\npermissions   string   用户拥有的子频道权限，参考 permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符 不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002 +0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，以下面返回示例为例，permissions是\'5\'，表示拥有可发言子频道(4)+可查看子频道(1)两种权限。\n\n\n# 返回示例\n\ndata：\n\n{\n  "channel_id": "1128412",\n  "user_id": "9962144428931019739",\n  "permissions": "6"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道权限",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel_permissions/update_channel_permissions.html",relativePath:"develop/pythonsdk/api/channel_permissions/update_channel_permissions.md",key:"v-373a50d7",path:"/develop/pythonsdk/api/channel_permissions/update_channel_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:479},{level:3,title:"UpdatePermission",slug:"updatepermission",normalizedTitle:"updatepermission",charIndex:666},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:869},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1962},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1981}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 UpdatePermission Permissions 返回说明 返回示例",content:'# 修改子频道权限\n\n修改子频道权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_channel_user_permissions(channel_id="xxxx", user_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                   必填   类型                 描述\nchannel_id            是    string             子频道 ID\nuser_id               是    string             用户 ID\nchannel_permissions   是    UpdatePermission   权限参数\n\n\n# UpdatePermission\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考Permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符 不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002 +0x0000000004=0x0000000006。\n\nSDK中权限用十进制字符串描述，可参考如下提示：\n\n提示\n\n以添加可发言子频道权限为例：\n\nasync def demo():\n    api = qqbot.AsyncChannelPermissionsAPI(token, False)\n    update_permissions = qqbot.UpdatePermission(add="4")\n    is_succeeded = await api.update_channel_permissions(channel_id, user_id, update_permissions)\n\n\n1\n2\n3\n4\n\n\n同理，移除可发言子频道如下：\n\nasync def demo():\n    api = qqbot.AsyncChannelPermissionsAPI(token, False)\n    update_permissions = qqbot.UpdatePermission(remove="4")\n    is_succeeded = await api.update_channel_permissions(channel_id, user_id, update_permissions)\n\n\n1\n2\n3\n4\n\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 修改子频道权限\n\n修改子频道权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_channel_user_permissions(channel_id="xxxx", user_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名                   必填   类型                 描述\nchannel_id            是    string             子频道 id\nuser_id               是    string             用户 id\nchannel_permissions   是    updatepermission   权限参数\n\n\n# updatepermission\n\n参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置1，删除用户权限即把remove对应位置1。当两个字段同一位都为1，表现为删除权限。\n\n字段名      类型       描述\nadd      string   字符串形式的十进制数表示赋予用户的权限，参考permissions\nremove   string   字符串形式的十进制数表示删除用户的权限，参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符 不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002 +0x0000000004=0x0000000006。\n\nsdk中权限用十进制字符串描述，可参考如下提示：\n\n提示\n\n以添加可发言子频道权限为例：\n\nasync def demo():\n    api = qqbot.asyncchannelpermissionsapi(token, false)\n    update_permissions = qqbot.updatepermission(add="4")\n    is_succeeded = await api.update_channel_permissions(channel_id, user_id, update_permissions)\n\n\n1\n2\n3\n4\n\n\n同理，移除可发言子频道如下：\n\nasync def demo():\n    api = qqbot.asyncchannelpermissionsapi(token, false)\n    update_permissions = qqbot.updatepermission(remove="4")\n    is_succeeded = await api.update_channel_permissions(channel_id, user_id, update_permissions)\n\n\n1\n2\n3\n4\n\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改子频道身份组权限",frontmatter:{},regularPath:"/develop/pythonsdk/api/channel_permissions/update_channel_role_permissions.html",relativePath:"develop/pythonsdk/api/channel_permissions/update_channel_role_permissions.md",key:"v-414f814d",path:"/develop/pythonsdk/api/channel_permissions/update_channel_role_permissions.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:31},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:699},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:852},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1407}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 Permissions 返回示例",content:'# 修改子频道身份组权限\n\n修改子频道身份组的权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy import Permission\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.update_channel_role_permissions(\n            channel_id="xxxx",\n            role_id="xxxx",\n            add=Permission(speak_permission=True), # 添加可发言子频道\n            remove=Permission(speak_permission=False), # 移除可发言子频道\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nrole_id      是    string   身份组 ID\nadd          是    string   字符串形式的十进制数表示赋予用户的权限，参考Permissions\nremove       是    string   字符串形式的十进制数表示删除用户的权限，参考Permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符 不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002 +0x0000000004=0x0000000006。\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 修改子频道身份组权限\n\n修改子频道身份组的权限。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy import permission\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.update_channel_role_permissions(\n            channel_id="xxxx",\n            role_id="xxxx",\n            add=permission(speak_permission=true), # 添加可发言子频道\n            remove=permission(speak_permission=false), # 移除可发言子频道\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n注意\n\n * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n * 本接口不支持修改可管理子频道权限。\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nrole_id      是    string   身份组 id\nadd          是    string   字符串形式的十进制数表示赋予用户的权限，参考permissions\nremove       是    string   字符串形式的十进制数表示删除用户的权限，参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n权限在服务端使用十六进制方式描述，现有权限类型如下：\n\n权限       值                      描述\n可查看子频道   0x0000000001(1 << 0)   支持指定成员可见类型，支持身份组可见类型\n可管理子频道   0x0000000002(1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004(1 << 2)   支持指定成员发言类型，支持身份组发言类型\n\n提示\n\n对位运算和移位操作符 不熟悉的可参考相关文档。 以上述可发言子频道权限为例，操作数1经1<<2移位操作后，对应的二进制数为100，对应的16进制数为0x4。同理如果要表示权限可发言 + 可查看，将两种权限做加法即可，即：0x0000000002 +0x0000000004=0x0000000006。\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建私信会话",frontmatter:{},regularPath:"/develop/pythonsdk/api/dms/create_dms.html",relativePath:"develop/pythonsdk/api/dms/create_dms.md",key:"v-7fa9669e",path:"/develop/pythonsdk/api/dms/create_dms.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:65},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:433},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:535},{level:3,title:"DMS",slug:"dms",normalizedTitle:"dms",charIndex:543},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:695}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 DMS 返回示例",content:'# 创建私信会话\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n注意\n\n机器人和用户存在共同频道才能创建私信会话。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.create_dms(guild_id="xxxx", user_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   源频道 ID\nuser_id    是    string   接收者 ID\n\n\n# 返回说明\n\n返回DMS对象。\n\n\n# DMS\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 ID\nchannel_id    string   私信会话关联的子频道 ID\ncreate_time   string   创建私信会话时间戳\n\n\n# 返回示例\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1642545606"\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建私信会话\n\n用于机器人和在同一个频道内的成员创建私信会话。\n\n注意\n\n机器人和用户存在共同频道才能创建私信会话。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.create_dms(guild_id="xxxx", user_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   源频道 id\nuser_id    是    string   接收者 id\n\n\n# 返回说明\n\n返回dms对象。\n\n\n# dms\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 id\nchannel_id    string   私信会话关联的子频道 id\ncreate_time   string   创建私信会话时间戳\n\n\n# 返回示例\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "create_time": "1642545606"\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送私信消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/dms/post_dms.html",relativePath:"develop/pythonsdk/api/dms/post_dms.md",key:"v-9630672e",path:"/develop/pythonsdk/api/dms/post_dms.html",headers:[{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:37},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:172},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:536},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:689},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:723}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"功能描述 使用示例 参数说明 返回说明 返回示例",content:'# 发送私信消息\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n\n# 功能描述\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.post_dms(guild_id="xxxx", content="xx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名           必填   类型                   描述\nguild_id      是    string               私信频道 ID\nmsg_request   是    MessageSendRequest   消息体 ，参考发送消息\n\n\n# 返回说明\n\n同发送消息返回说明，返回Message 对象。\n\n\n# 返回示例\n\n参考发送消息返回示例。',normalizedContent:'# 发送私信消息\n\n用于发送私信消息，前提是已经创建了私信会话。\n\n\n# 功能描述\n\n * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。\n * 私信场景下，每个机器人每天可以对一个用户发 2 条主动消息。\n * 私信场景下，每个机器人每天累计可以发 200 条主动消息。\n * 私信场景下，被动消息没有条数限制。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.post_dms(guild_id="xxxx", content="xx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名           必填   类型                   描述\nguild_id      是    string               私信频道 id\nmsg_request   是    messagesendrequest   消息体 ，参考发送消息\n\n\n# 返回说明\n\n同发送消息返回说明，返回message 对象。\n\n\n# 返回示例\n\n参考发送消息返回示例。',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道详情",frontmatter:{},regularPath:"/develop/pythonsdk/api/guild/get_guild.html",relativePath:"develop/pythonsdk/api/guild/get_guild.md",key:"v-2c7d264d",path:"/develop/pythonsdk/api/guild/get_guild.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:24},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:375},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:444},{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:453},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:724}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Guild 返回示例",content:'# 获取频道详情\n\n获取频道详情信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_guild(guild_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\n\n\n# 返回说明\n\n返回 Guild 对象。\n\n\n# Guild\n\n字段名            类型        描述\nid             string    频道 ID\nname           string    频道名称\nowner_id       string    创建人用户 ID\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"guildId",\n    "name":"频道名称",\n    "owner_id":"owner_id",\n    "owner":false,\n    "member_count":8,\n    "max_members":300,\n    "description":""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 获取频道详情\n\n获取频道详情信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_guild(guild_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\n\n\n# 返回说明\n\n返回 guild 对象。\n\n\n# guild\n\n字段名            类型        描述\nid             string    频道 id\nname           string    频道名称\nowner_id       string    创建人用户 id\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\n\n\n# 返回示例\n\ndata：\n\n{\n    "id":"guildid",\n    "name":"频道名称",\n    "owner_id":"owner_id",\n    "owner":false,\n    "member_count":8,\n    "max_members":300,\n    "description":""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道身份组成员",frontmatter:{},regularPath:"/develop/pythonsdk/api/guild/guild_role/create_guild_role_member.html",relativePath:"develop/pythonsdk/api/guild/guild_role/create_guild_role_member.md",key:"v-bac0b6a6",path:"/develop/pythonsdk/api/guild/guild_role/create_guild_role_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:628},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:802},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:819}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 创建频道身份组成员\n\n创建频道身份组成员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.create_guild_role_member(\n            guild_id="xxxx", \n            role_id="xxxx", \n            user_id="xxxx", \n            channel_id="xxxx"\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限，如果是机器人，要求被添加为管理员。\n * 如果要增加的身份组 ID 是子频道管理员，需要增加 Channel 对象来指定具体是哪个子频道。\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nguild_id     是    string   频道 ID\nrole_id      是    string   身份组 ID\nuser_id      是    string   用户 ID\nchannel_id   否    string   子频道 ID\n\n\n# 返回说明\n\n添加是否成功\n\n\n# 返回示例\n\ndata:\n\nTrue\n\n\n1\n',normalizedContent:'# 创建频道身份组成员\n\n创建频道身份组成员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.create_guild_role_member(\n            guild_id="xxxx", \n            role_id="xxxx", \n            user_id="xxxx", \n            channel_id="xxxx"\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n * 需要使用的 token 对应的用户具备增加身份组成员权限，如果是机器人，要求被添加为管理员。\n * 如果要增加的身份组 id 是子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nguild_id     是    string   频道 id\nrole_id      是    string   身份组 id\nuser_id      是    string   用户 id\nchannel_id   否    string   子频道 id\n\n\n# 返回说明\n\n添加是否成功\n\n\n# 返回示例\n\ndata:\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建频道身份组",frontmatter:{},regularPath:"/develop/pythonsdk/api/guild/guild_role/create_guild_role.html",relativePath:"develop/pythonsdk/api/guild/guild_role/create_guild_role.md",key:"v-57a408be",path:"/develop/pythonsdk/api/guild/guild_role/create_guild_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:549},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:759},{level:3,title:"GuildRole",slug:"guildrole",normalizedTitle:"guildrole",charIndex:831}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 GuildRole",content:'# 创建频道身份组\n\n创建一个频道身份组。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.create_guild_role(\n            guild_id="xxxx",\n            name="xxxx",\n            color="10395294",\n            hoist=1,\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\nname       是    string   名称\ncolor      否    number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist      否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名       类型          描述\nrole_id   string      频道身份组 ID\nrole      GuildRole   频道身份组对象\n\n\n# GuildRole\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限',normalizedContent:'# 创建频道身份组\n\n创建一个频道身份组。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.create_guild_role(\n            guild_id="xxxx",\n            name="xxxx",\n            color="10395294",\n            hoist=1,\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\nname       是    string   名称\ncolor      否    number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist      否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名       类型          描述\nrole_id   string      频道身份组 id\nrole      guildrole   频道身份组对象\n\n\n# guildrole\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道身份组列表",frontmatter:{},regularPath:"/develop/pythonsdk/api/guild/guild_role/get_guild_roles.html",relativePath:"develop/pythonsdk/api/guild/guild_role/get_guild_roles.md",key:"v-10d325db",path:"/develop/pythonsdk/api/guild/guild_role/get_guild_roles.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:385},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:454},{level:3,title:"GuildRole",slug:"guildrole",normalizedTitle:"guildrole",charIndex:530},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:827}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 GuildRole 返回示例",content:'# 获取频道身份组列表\n\n获取频道身份组列表。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_guild_roles(guild_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\n\n\n# 返回说明\n\n字段名        类型            描述\nguild_id   string        频道 ID\nroles      GuildRole[]   频道身份组对象数组\n\n\n# GuildRole\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "roles":[\n        {\n            "id":"4",\n            "name":"名称",\n            "color":4294927682,\n            "hoist":1,\n            "number":1,\n            "member_limit":1\n        },\n        {\n            "id":"2",\n            "name":"名称",\n            "color":4280276644,\n            "hoist":1,\n            "number":4,\n            "member_limit":50\n        }\n    ],\n    "role_num_limit":"30"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 获取频道身份组列表\n\n获取频道身份组列表。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_guild_roles(guild_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\n\n\n# 返回说明\n\n字段名        类型            描述\nguild_id   string        频道 id\nroles      guildrole[]   频道身份组对象数组\n\n\n# guildrole\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id":"guild_id",\n    "roles":[\n        {\n            "id":"4",\n            "name":"名称",\n            "color":4294927682,\n            "hoist":1,\n            "number":1,\n            "member_limit":1\n        },\n        {\n            "id":"2",\n            "name":"名称",\n            "color":4280276644,\n            "hoist":1,\n            "number":4,\n            "member_limit":50\n        }\n    ],\n    "role_num_limit":"30"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组成员",frontmatter:{},regularPath:"/develop/pythonsdk/api/guild/guild_role/delete_guild_role_member.html",relativePath:"develop/pythonsdk/api/guild/guild_role/delete_guild_role_member.md",key:"v-43ce4b0d",path:"/develop/pythonsdk/api/guild/guild_role/delete_guild_role_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:626},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:800},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:819}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 删除频道身份组成员\n\n删除频道身份组成员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.delete_guild_role_member(\n            guild_id="xxxx",\n            role_id="xxxx",\n            user_id="xxxx",\n            channel_id="xxxx"\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nguild_id     是    string   频道 ID\nrole_id      是    string   身份组 ID\nuser_id      是    string   用户 ID\nchannel_id   否    string   子频道 ID\n\n\n# 返回说明\n\n返回删除是否成功\n\n\n# 返回示例\n\ndata:\n\nTrue\n\n\n1\n',normalizedContent:'# 删除频道身份组成员\n\n删除频道身份组成员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.delete_guild_role_member(\n            guild_id="xxxx",\n            role_id="xxxx",\n            user_id="xxxx",\n            channel_id="xxxx"\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。\n * 如果要删除的身份组 id 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nguild_id     是    string   频道 id\nrole_id      是    string   身份组 id\nuser_id      是    string   用户 id\nchannel_id   否    string   子频道 id\n\n\n# 返回说明\n\n返回删除是否成功\n\n\n# 返回示例\n\ndata:\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道身份组",frontmatter:{},regularPath:"/develop/pythonsdk/api/guild/guild_role/delete_guild_role.html",relativePath:"develop/pythonsdk/api/guild/guild_role/delete_guild_role.md",key:"v-39d9007f",path:"/develop/pythonsdk/api/guild/guild_role/delete_guild_role.html",headers:[{level:3,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:390},{level:3,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:491},{level:3,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:508}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"参数说明 返回说明 返回示例",content:'# 删除频道身份组\n\n删除频道身份组。\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.delete_guild_role(guild_id="xxxx", role_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数         必填   类型       说明\nguild_id   是    string   频道 ID\nrole_id    是    string   身份组 ID\n\n\n# 返回说明\n\n是否删除成功\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 删除频道身份组\n\n删除频道身份组。\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.delete_guild_role(guild_id="xxxx", role_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数         必填   类型       说明\nguild_id   是    string   频道 id\nrole_id    是    string   身份组 id\n\n\n# 返回说明\n\n是否删除成功\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除频道成员",frontmatter:{},regularPath:"/develop/pythonsdk/api/member/delete_guild_member.html",relativePath:"develop/pythonsdk/api/member/delete_guild_member.md",key:"v-8887bd82",path:"/develop/pythonsdk/api/member/delete_guild_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:593},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:915},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:927}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 删除频道成员\n\n移除频道的某个成员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_delete_member(\n            guild_id="xxxx", \n            user_id="xxx", \n            add_blacklist=True, \n            delete_history_msg_days=7\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件\n\n\n# 参数说明\n\n字段名                       必填   类型       描述\nguild_id                  是    string   频道 ID\nuser_id                   是    string   用户 ID\nadd_blacklist             是    bool     是否拉入黑名单\ndelete_history_msg_days   是    int      撤回移除成员的消息，可指定撤回消息的时间范围\n\n> 注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息。\n\n\n# 返回说明\n\n无\n\n\n# 返回示例\n\ndata:\n\n{}\n\n\n1\n',normalizedContent:'# 删除频道成员\n\n移除频道的某个成员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_delete_member(\n            guild_id="xxxx", \n            user_id="xxx", \n            add_blacklist=true, \n            delete_history_msg_days=7\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n注意\n\n * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n * 操作成功后，会触发频道成员删除事件\n\n\n# 参数说明\n\n字段名                       必填   类型       描述\nguild_id                  是    string   频道 id\nuser_id                   是    string   用户 id\nadd_blacklist             是    bool     是否拉入黑名单\ndelete_history_msg_days   是    int      撤回移除成员的消息，可指定撤回消息的时间范围\n\n> 注：消息撤回时间范围仅支持固定的天数：3，7，15，30。 特殊的时间范围：-1: 撤回全部消息。默认值为0不撤回任何消息。\n\n\n# 返回说明\n\n无\n\n\n# 返回示例\n\ndata:\n\n{}\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员列表",frontmatter:{},regularPath:"/develop/pythonsdk/api/member/get_guild_members.html",relativePath:"develop/pythonsdk/api/member/get_guild_members.md",key:"v-07296fab",path:"/develop/pythonsdk/api/member/get_guild_members.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:28},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:200},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:371},{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:103},{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:441},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:826}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Member User 返回示例",content:'# 获取频道成员列表\n\n获取频道下的成员列表。\n\n\n# 使用示例\n\nimport qqbot\n\ntoken = qqbot.Token({appid}, {token})\napi = qqbot.GuildMemberAPI(token, False)\nmembers = api.get_guild_members(guild_id, query_params)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\nafter      否    string   上一次回包中最大的用户 ID， 如果是第一次请求填 0，默认为 0\nlimit      否    number   分页大小，1-1000，默认是 1\n\n\n# 返回说明\n\n返回 Member 对象。\n\n\n# Member\n\n字段名         类型         描述\nuser        User       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "user": {\n      "id": "用户 ID",\n      "username": "用户名",\n      "avatar": "用户头像地址",\n      "bot": false,\n      "public_flags": 0,\n      "system": false\n    },\n    "nick": "",\n    "roles": [\n      "4"\n    ],\n    "joined_at": "2021-11-23T15:16:48+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 获取频道成员列表\n\n获取频道下的成员列表。\n\n\n# 使用示例\n\nimport qqbot\n\ntoken = qqbot.token({appid}, {token})\napi = qqbot.guildmemberapi(token, false)\nmembers = api.get_guild_members(guild_id, query_params)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\nafter      否    string   上一次回包中最大的用户 id， 如果是第一次请求填 0，默认为 0\nlimit      否    number   分页大小，1-1000，默认是 1\n\n\n# 返回说明\n\n返回 member 对象。\n\n\n# member\n\n字段名         类型         描述\nuser        user       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "user": {\n      "id": "用户 id",\n      "username": "用户名",\n      "avatar": "用户头像地址",\n      "bot": false,\n      "public_flags": 0,\n      "system": false\n    },\n    "nick": "",\n    "roles": [\n      "4"\n    ],\n    "joined_at": "2021-11-23t15:16:48+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改频道身份组",frontmatter:{},regularPath:"/develop/pythonsdk/api/guild/guild_role/update_guild_role.html",relativePath:"develop/pythonsdk/api/guild/guild_role/update_guild_role.md",key:"v-1b56848a",path:"/develop/pythonsdk/api/guild/guild_role/update_guild_role.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:26},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:579},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:821},{level:3,title:"GuildRole",slug:"guildrole",normalizedTitle:"guildrole",charIndex:923},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1216}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 GuildRole 返回示例",content:'# 修改频道身份组\n\n修改频道身份组信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.update_guild_role(\n            guild_id="xxxx",\n            role_id="xxxx\',\n            name="xxxx",\n            color="10395294",\n            hoist=1,\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\nrole_id    是    string   身份组 ID\nname       是    string   名称\ncolor      否    number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist      否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名        类型          描述\nguild_id   string      频道 ID\nrole_id    string      身份组 ID\nrole       GuildRole   频道身份组对象\n\n\n# GuildRole\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id": "guild_id",\n    "role_id": "role_id",\n    "role": {\n        "id": "role_id",\n        "name": "Test Update Role",\n        "color": 4278245297,\n        "hoist": 0,\n        "number": 0,\n        "member_limit": 2000}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',normalizedContent:'# 修改频道身份组\n\n修改频道身份组信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.update_guild_role(\n            guild_id="xxxx",\n            role_id="xxxx\',\n            name="xxxx",\n            color="10395294",\n            hoist=1,\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n注意\n\n需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\nrole_id    是    string   身份组 id\nname       是    string   名称\ncolor      否    number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist      否    number   在成员列表中单独展示: 0-否, 1-是\n\n\n# 返回说明\n\n字段名        类型          描述\nguild_id   string      频道 id\nrole_id    string      身份组 id\nrole       guildrole   频道身份组对象\n\n\n# guildrole\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# 返回示例\n\ndata：\n\n{\n    "guild_id": "guild_id",\n    "role_id": "role_id",\n    "role": {\n        "id": "role_id",\n        "name": "test update role",\n        "color": 4278245297,\n        "hoist": 0,\n        "number": 0,\n        "member_limit": 2000}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取频道成员详情",frontmatter:{},regularPath:"/develop/pythonsdk/api/member/get_guild_member.html",relativePath:"develop/pythonsdk/api/member/get_guild_member.md",key:"v-4a6468e6",path:"/develop/pythonsdk/api/member/get_guild_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:30},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:403},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:503},{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:512},{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:573},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:958}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Member User 返回示例",content:'# 获取频道成员详情\n\n获取频道下某个成员的信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_guild_member(guild_id="xxxx", user_id="xxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 ID\nuser_id    是    string   用户 ID\n\n\n# 返回说明\n\n返回 Member 对象。\n\n\n# Member\n\n字段名         类型         描述\nuser        User       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n{\n    "user": {\n        "id": "用户 ID",\n        "username": "用户名",\n        "avatar": "用户头像地址",\n        "bot": false,\n        "public_flags": 0,\n        "system": false\n    },\n    "nick": "",\n    "roles": [\n        "4"\n    ],\n    "joined_at": "2021-09-27T17:19:51+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取频道成员详情\n\n获取频道下某个成员的信息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_guild_member(guild_id="xxxx", user_id="xxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   频道 id\nuser_id    是    string   用户 id\n\n\n# 返回说明\n\n返回 member 对象。\n\n\n# member\n\n字段名         类型         描述\nuser        user       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\navatar     string    用户头像地址\nbot        boolean   是否是机器人\n\n\n# 返回示例\n\ndata：\n\n{\n    "user": {\n        "id": "用户 id",\n        "username": "用户名",\n        "avatar": "用户头像地址",\n        "bot": false,\n        "public_flags": 0,\n        "system": false\n    },\n    "nick": "",\n    "roles": [\n        "4"\n    ],\n    "joined_at": "2021-09-27t17:19:51+08:00",\n    "deaf": false,\n    "mute": false,\n    "pending": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取指定消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/get_message.html",relativePath:"develop/pythonsdk/api/message/get_message.md",key:"v-16a33966",path:"/develop/pythonsdk/api/message/get_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:22},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:396},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:503},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:67},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:836},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:864},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:1085},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1343}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 获取指定消息\n\n获取指定消息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_message(channel_id="xxxx", message_id="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数           必填   类型       说明\nchannel_id   是    string   子频道 ID\nmessage_id   是    string   消息 ID\n\n\n# 返回说明\n\n参数        类型        说明\nmessage   Message   返回 message 对象\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "message": {\n    "id": "abcdef01",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25T15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": ["1"],\n      "joined_at": "2021-04-12T16:34:42+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取指定消息\n\n获取指定消息。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_message(channel_id="xxxx", message_id="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数           必填   类型       说明\nchannel_id   是    string   子频道 id\nmessage_id   是    string   消息 id\n\n\n# 返回说明\n\n参数        类型        说明\nmessage   message   返回 message 对象\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "message": {\n    "id": "abcdef01",\n    "channel_id": "100001",\n    "guild_id": "100000000001",\n    "content": "hello",\n    "timestamp": "2021-05-25t15:20:34+08:00",\n    "author": {\n      "id": "1000000001",\n      "username": "az",\n      "bot": false\n    },\n    "member": {\n      "roles": ["1"],\n      "joined_at": "2021-04-12t16:34:42+08:00"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息模板",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/message_template.html",relativePath:"develop/pythonsdk/api/message/message_template.md",key:"v-e3d7e0d6",path:"/develop/pythonsdk/api/message/message_template.html",headers:[{level:2,title:"可用模板",slug:"可用模板",normalizedTitle:"可用模板",charIndex:140},{level:2,title:"链接、文本列表模板",slug:"链接、文本列表模板",normalizedTitle:"链接、文本列表模板",charIndex:183},{level:3,title:"样式(id=23)",slug:"样式-id-23",normalizedTitle:"样式(id=23)",charIndex:197},{level:3,title:"模板格式",slug:"模板格式",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述",normalizedTitle:"字段描述",charIndex:450},{level:3,title:"LIST 结构",slug:"list-结构",normalizedTitle:"list 结构",charIndex:560},{level:2,title:"文本、缩略图模板",slug:"文本、缩略图模板",normalizedTitle:"文本、缩略图模板",charIndex:2784},{level:3,title:"样式(id=24)",slug:"样式-id-24",normalizedTitle:"样式(id=24)",charIndex:2797},{level:3,title:"模板格式",slug:"模板格式-2",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述-2",normalizedTitle:"字段描述",charIndex:450},{level:2,title:"大图模板 34",slug:"大图模板-34",normalizedTitle:"大图模板 34",charIndex:4301},{level:3,title:"样式(id=34)",slug:"样式-id-34",normalizedTitle:"样式(id=34)",charIndex:4313},{level:3,title:"模板格式",slug:"模板格式-3",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述-3",normalizedTitle:"字段描述",charIndex:450},{level:2,title:"大图模板 37",slug:"大图模板-37",normalizedTitle:"大图模板 37",charIndex:5827},{level:3,title:"样式(id=37)",slug:"样式-id-37",normalizedTitle:"样式(id=37)",charIndex:5839},{level:3,title:"模板格式",slug:"模板格式-4",normalizedTitle:"模板格式",charIndex:211},{level:3,title:"字段描述",slug:"字段描述-4",normalizedTitle:"字段描述",charIndex:450}],lastUpdated:"4/28/2022, 12:32:32 PM",lastUpdatedTimestamp:1651149152e3,headersStr:"可用模板 链接、文本列表模板 样式(id=23) 模板格式 字段描述 LIST 结构 文本、缩略图模板 样式(id=24) 模板格式 字段描述 大图模板 34 样式(id=34) 模板格式 字段描述 大图模板 37 样式(id=37) 模板格式 字段描述",content:'# 消息模板\n\n为了丰富消息内容，SDK 提供了几种消息模板。\n\n注意\n\n * 发送消息时所有字段均使用字符串类型。\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 URL 配置”。\n\n\n# 可用模板\n\n * 链接+文本列表模板\n * 文本+缩略图模板\n * 大图模板\n\n\n# 链接、文本列表模板\n\n\n# 样式(id=23)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "list": "#LIST#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#DESC#     string   描述\n#PROMPT#   string   提示消息\n#LIST#     array    #LIST#数组\n\n\n# LIST 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：UI问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 文本、缩略图模板\n\n\n# 样式(id=24)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumAddPic",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#METADESC#",\n      "img": "#IMG#",\n      "link": "#LINK#",\n      "subTitle": "#SUBTITLE#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#DESC#       string   描述\n#PROMPT#     string   提示文本\n#TITLE#      string   标题\n#METADESC#   string   详情描述\n#IMG#        string   图片链接\n#LINK#       string   跳转链接\n#SUBTITLE#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#METADESC#",\n        "value": "Meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#IMG#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#LINK#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#SUBTITLE#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 34\n\n\n# 样式(id=34)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.miniapp_01",\n  "view": "view_8C8E89B49BE609866298ADDFF2DBABA4",\n  "ver": "1.0.1.12",\n  "desc": "#DESC#",\n  "prompt": "#PROMPT#",\n  "meta": {\n    "detail_1": {\n      "title": "#METATITLE#",\n      "desc": "#METADESC#",\n      "icon": "#METAICON#",\n      "preview": "#METAPREVIEW#",\n      "url": "#METAURL#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名             类型       描述\n#DESC#          string   描述\n#PROMPT#        string   提示消息\n#METATITLE#     string   标题\n#METADESC#      string   描述\n#METAICON#      string   小图标\n#METAPREVIEW#   string   大图\n#METAURL#       string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 34,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#METATITLE#",\n        "value": "metatitle"\n      },\n      {\n        "key": "#METADESC#",\n        "value": "metadesc"\n      },\n      {\n        "key": "#METAICON#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#METAPREVIEW#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#METAURL#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 37\n\n\n# 样式(id=37)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#PROMPT#",\n  "meta": {\n    "robot": {\n      "title": "#METATITLE#",\n      "subtitle": "#METASUBTITLE#",\n      "cover": "#METACOVER#",\n      "jump_url": "#METAURL#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#PROMPT#         string   提示消息\n#METATITLE#      string   标题\n#METASUBTITLE#   string   子标题\n#METACOVER#      string   大图，尺寸为 975*540\n#METAURL#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#PROMPT#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#METATITLE#",\n        "value": "标题"\n      },\n      {\n        "key": "#METASUBTITLE#",\n        "value": "子标题"\n      },\n      {\n        "key": "#METACOVER#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#METAURL#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',normalizedContent:'# 消息模板\n\n为了丰富消息内容，sdk 提供了几种消息模板。\n\n注意\n\n * 发送消息时所有字段均使用字符串类型。\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 url 配置”。\n\n\n# 可用模板\n\n * 链接+文本列表模板\n * 文本+缩略图模板\n * 大图模板\n\n\n# 链接、文本列表模板\n\n\n# 样式(id=23)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channel.robot",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "list": "#list#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 字段描述\n\n字段名        类型       描述\n#desc#     string   描述\n#prompt#   string   提示消息\n#list#     array    #list#数组\n\n\n# list 结构\n\n字段名    类型       描述\ndesc   string   文本内容\nlink   string   链接，需要提前报备，如果不填就显示为文本，如果填了就显示为链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 23,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#prompt#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "需求标题：ui问题解决"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "当前状态\\"体验中\\"点击下列动作直接扭转状态到："\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已评审"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "已排期"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "开发中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "增量测试中"\n              },\n              {\n                "key": "link",\n                "value": "https://qun.qq.com"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "desc",\n                "value": "请关注"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 文本、缩略图模板\n\n\n# 样式(id=24)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.channelrobot.smallpic",\n  "view": "albumaddpic",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#metadesc#",\n      "img": "#img#",\n      "link": "#link#",\n      "subtitle": "#subtitle#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名          类型       描述\n#desc#       string   描述\n#prompt#     string   提示文本\n#title#      string   标题\n#metadesc#   string   详情描述\n#img#        string   图片链接\n#link#       string   跳转链接\n#subtitle#   string   来源\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 24,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "描述描述描放假大方了大家反垄断撒娇两款发动机临时卡封疆大吏撒酒疯；里导数据阿弗莱克的撒娇；廊坊述"\n      },\n      {\n        "key": "#prompt#",\n        "value": "通知信息xxxxx"\n      },\n      {\n        "key": "#title#",\n        "value": "标题fjd;lsajfldjsalkfjdkw封疆大吏撒娇锋利的撒娇；付了定金撒标题标题标题标题fjkdlajfldjal;fd放大了发动机上来空"\n      },\n      {\n        "key": "#metadesc#",\n        "value": "meta描述描述描述风好大换热器继往开来积分考虑到；安静了；了；防静电；来撒会今日而我却哦iopqwfjldsa"\n      },\n      {\n        "key": "#img#",\n        "value": "https://pub.idqqimg.com/pc/misc/files/20190820/2f4e70ae3355ece23d161cf5334d4fc1jzjfmtep.png"\n      },\n      {\n        "key": "#link#",\n        "value": "https://qq.com"\n      },\n      {\n        "key": "#subtitle#",\n        "value": "子标题"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 34\n\n\n# 样式(id=34)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.miniapp_01",\n  "view": "view_8c8e89b49be609866298addff2dbaba4",\n  "ver": "1.0.1.12",\n  "desc": "#desc#",\n  "prompt": "#prompt#",\n  "meta": {\n    "detail_1": {\n      "title": "#metatitle#",\n      "desc": "#metadesc#",\n      "icon": "#metaicon#",\n      "preview": "#metapreview#",\n      "url": "#metaurl#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 字段描述\n\n字段名             类型       描述\n#desc#          string   描述\n#prompt#        string   提示消息\n#metatitle#     string   标题\n#metadesc#      string   描述\n#metaicon#      string   小图标\n#metapreview#   string   大图\n#metaurl#       string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 34,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "descaaaaaa"\n      },\n      {\n        "key": "#prompt#",\n        "value": "promptaaaa"\n      },\n      {\n        "key": "#metatitle#",\n        "value": "metatitle"\n      },\n      {\n        "key": "#metadesc#",\n        "value": "metadesc"\n      },\n      {\n        "key": "#metaicon#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#metapreview#",\n        "value": "https://tangram-1251316161.file.myqcloud.com/files/20211014/bfd7d02235e52d60b05a630ac9ef8bcc.png"\n      },\n      {\n        "key": "#metaurl#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 大图模板 37\n\n\n# 样式(id=37)\n\n\n# 模板格式\n\n{\n  "app": "com.tencent.imagetextbot",\n  "view": "index",\n  "ver": "1.0.0.11",\n  "prompt": "#prompt#",\n  "meta": {\n    "robot": {\n      "title": "#metatitle#",\n      "subtitle": "#metasubtitle#",\n      "cover": "#metacover#",\n      "jump_url": "#metaurl#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 字段描述\n\n字段名              类型       描述\n#prompt#         string   提示消息\n#metatitle#      string   标题\n#metasubtitle#   string   子标题\n#metacover#      string   大图，尺寸为 975*540\n#metaurl#        string   跳转链接\n\n# 请求示例\n\n{\n  "ark": {\n    "template_id": 37,\n    "kv": [\n      {\n        "key": "#prompt#",\n        "value": "通知提醒"\n      },\n      {\n        "key": "#metatitle#",\n        "value": "标题"\n      },\n      {\n        "key": "#metasubtitle#",\n        "value": "子标题"\n      },\n      {\n        "key": "#metacover#",\n        "value": "https://vfiles.gtimg.cn/vupload/20211029/bf0ed01635493790634.jpg"\n      },\n      {\n        "key": "#metaurl#",\n        "value": "https://qq.com"\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息内嵌格式",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/message_format.html",relativePath:"develop/pythonsdk/api/message/message_format.md",key:"v-44fb964a",path:"/develop/pythonsdk/api/message/message_format.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:99},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:498},{level:2,title:"Embed",slug:"embed",normalizedTitle:"embed",charIndex:84},{level:2,title:"EmbedField",slug:"embedfield",normalizedTitle:"embedfield",charIndex:1153},{level:3,title:"Ark",slug:"ark",normalizedTitle:"ark",charIndex:78},{level:3,title:"ArkKv",slug:"arkkv",normalizedTitle:"arkkv",charIndex:1426},{level:3,title:"ArkObj",slug:"arkobj",normalizedTitle:"arkobj",charIndex:1511},{level:3,title:"ArkObjKv",slug:"arkobjkv",normalizedTitle:"arkobjkv",charIndex:1582},{level:3,title:"支持的格式",slug:"支持的格式",normalizedTitle:"支持的格式",charIndex:668},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:2219},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:144},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:2509},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:2537},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:2758},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:3016}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 Embed EmbedField Ark ArkKv ArkObj ArkObjKv 支持的格式 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 消息内嵌格式\n\n注意\n\n * 消息不支持 markdown 格式，会自动移除 markdown 格式\n * 内嵌格式仅在 content 中会生效，在 Ark 和 Embed 中不生效\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.post_message(channel_id="xxxx", content="xxx", msg_id="xxxx", embed=embed)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数          必填       类型                                        说明\nchannelID   是        string                                    子频道 ID\ncontent     string   消息内容，参考支持的格式                              \nembed       Embed    embed 消息，一种特殊的 ark                        \nark         Ark      ark 消息                                    \nimage       string   图片 url 地址                                 \nmsg_id      string   要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息   \n\n\n# Embed\n\n字段名           类型             描述\ntitle         string         标题\ndescription   string         描述\nprompt        string         消息弹窗内容\ntimestamp     string         消息创建时间\nfields        EmbedField[]   消息创建时间，是个 ISO8601 timestamp\n                             字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# EmbedField\n\n字段名    类型       描述\nname   string   字段名\n\n\n# Ark\n\n字段名           类型        描述\ntemplate_id   number    ark 模板 id（需要先申请）\nkv            AkrKv[]   kv 值列表\n\n\n# ArkKv\n\n字段名     类型         描述\nkey     string     key\nvalue   string     value\nobj     ArkObj[]   ark obj 类型的列表\n\n\n# ArkObj\n\n字段名      类型           描述\nobj_kv   ArkObjKv[]   ark objkv 列表\n\n\n# ArkObjKv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# 支持的格式\n\n类型     结构              描述                                                            示例\n@用户    <@user_id>      解析为 @用户 标签                                                    <@1234000000001>\n@所有人   @everyone       解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限                              @everyone\n#子频道   <#channel_id>   解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道                           <#12345>\n表情     <emoji:id>      解析为系统表情，具体表情 id 参考 Emoji 列表，仅支持 type=1 的系统表情，type=2 的 emoji   <emoji:4> 解析为得意表情\n                       表情直接按字符串填写即可\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容<@!1234>hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {}\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',normalizedContent:'# 消息内嵌格式\n\n注意\n\n * 消息不支持 markdown 格式，会自动移除 markdown 格式\n * 内嵌格式仅在 content 中会生效，在 ark 和 embed 中不生效\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.post_message(channel_id="xxxx", content="xxx", msg_id="xxxx", embed=embed)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数          必填       类型                                        说明\nchannelid   是        string                                    子频道 id\ncontent     string   消息内容，参考支持的格式                              \nembed       embed    embed 消息，一种特殊的 ark                        \nark         ark      ark 消息                                    \nimage       string   图片 url 地址                                 \nmsg_id      string   要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息   \n\n\n# embed\n\n字段名           类型             描述\ntitle         string         标题\ndescription   string         描述\nprompt        string         消息弹窗内容\ntimestamp     string         消息创建时间\nfields        embedfield[]   消息创建时间，是个 iso8601 timestamp\n                             字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# embedfield\n\n字段名    类型       描述\nname   string   字段名\n\n\n# ark\n\n字段名           类型        描述\ntemplate_id   number    ark 模板 id（需要先申请）\nkv            akrkv[]   kv 值列表\n\n\n# arkkv\n\n字段名     类型         描述\nkey     string     key\nvalue   string     value\nobj     arkobj[]   ark obj 类型的列表\n\n\n# arkobj\n\n字段名      类型           描述\nobj_kv   arkobjkv[]   ark objkv 列表\n\n\n# arkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# 支持的格式\n\n类型     结构              描述                                                            示例\n@用户    <@user_id>      解析为 @用户 标签                                                    <@1234000000001>\n@所有人   @everyone       解析为 @所有人 标签，需要机器人拥有发送 @所有人 消息的权限                              @everyone\n#子频道   <#channel_id>   解析为 #子频道 标签，点击可以跳转至子频道，仅支持当前频道内的子频道                           <#12345>\n表情     <emoji:id>      解析为系统表情，具体表情 id 参考 emoji 列表，仅支持 type=1 的系统表情，type=2 的 emoji   <emoji:4> 解析为得意表情\n                       表情直接按字符串填写即可\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容<@!1234>hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [\n    {}\n  ],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送带有按钮的消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/post_keyboard_message.html",relativePath:"develop/pythonsdk/api/message/post_keyboard_message.md",key:"v-e77aeb66",path:"/develop/pythonsdk/api/message/post_keyboard_message.html",headers:[{level:2,title:"功能描述",slug:"功能描述",normalizedTitle:"功能描述",charIndex:16},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:337},{level:3,title:"1：使用 keyboard 模版",slug:"_1-使用-keyboard-模版",normalizedTitle:"1：使用 keyboard 模版",charIndex:346},{level:3,title:"2：使用自定义 keyboard",slug:"_2-使用自定义-keyboard",normalizedTitle:"2：使用自定义 keyboard",charIndex:1717},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:3513}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"功能描述 使用示例 1：使用 keyboard 模版 2：使用自定义 keyboard 返回说明",content:'# 发送带有按钮的消息\n\n\n# 功能描述\n\n通过在 MessageSendRequest 中指定 keyboard 字段发送带按钮的消息，支持 keyboard 模版 和 自定义 keyboard 两种请求格式。\n\n * 要求操作人在该子频道具有发送消息和 对应消息按钮组件 的权限。\n * 请求参数 keyboard 模版 和 自定义 keyboard 只能单一传值。\n * keyboard 模版\n   * 调用前需要先申请消息按钮组件模板，这一步会得到一个模板 id，在请求时填在 keyboard 字段上。\n   * 申请消息按钮组件模板需要提供响应的 json，具体格式参考 InlineKeyboard。\n * 仅 markdown 消息支持消息按钮。\n\n\n# 使用示例\n\n\n# 1：使用 keyboard 模版\n\nimport botpy\nfrom botpy.message import Message\nfrom botpy.types.message import MarkdownPayload, MessageMarkdownParams\n\nclass MyClient(botpy.Client):\n    async def handle_send_markdown_by_template(self, channel_id, msg_id):\n        params = [\n            MessageMarkdownParams(key="title", values=["标题"]),\n            MessageMarkdownParams(key="content", values=["为了成为一名合格的巫师，请务必阅读频道公告", "藏馆黑色魔法书"]),\n        ]\n        markdown = MarkdownPayload(template_id=65, params=params)\n\n        # 通过api发送回复消息\n        await self.api.post_message(channel_id, markdown=markdown, msg_id=msg_id)\n\n    async def handle_send_markdown_by_content(self, channel_id, msg_id):\n        markdown = MarkdownPayload(content="# 标题 \\n## 简介很开心 \\n内容")\n        # 通过api发送回复消息\n        await self.api.post_message(channel_id, markdown=markdown, msg_id=msg_id)\n\n    async def on_at_message_create(self, message: Message):\n        await message.reply(content=f"机器人{self.robot.name}收到你的@消息了: {message.content}")\n        await self.handle_send_markdown_by_template(message.channel_id, message.id)\n        await self.handle_send_markdown_by_content(message.channel_id, message.id)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 2：使用自定义 keyboard\n\nimport botpy\nfrom botpy import BotAPI\n\nfrom botpy.message import Message\nfrom botpy.types.inline import Keyboard, Button, RenderData, Action, Permission, KeyboardRow\nfrom botpy.types.message import MarkdownPayload, KeyboardPayload\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await send_template_keyboard(self.api, message)\n        await send_self_defined_keyboard(self.api, message)\n\nasync def send_template_keyboard(api: BotAPI, message: Message):\n    markdown = MarkdownPayload(content="# 123 \\n 今天是个好天气")\n    keyboard = KeyboardPayload(id="62")\n    await api.post_keyboard_message(message.channel_id, markdown=markdown, keyboard=keyboard)\n\nasync def send_self_defined_keyboard(api: BotAPI, message: Message):\n    markdown = MarkdownPayload(content="# 标题 \\n## 简介 \\n内容")\n    keyboard = KeyboardPayload(content=build_a_demo_keyboard())\n    await api.post_keyboard_message(message.channel_id, markdown=markdown, keyboard=keyboard)\n\ndef build_a_demo_keyboard() -> Keyboard:\n    """\n    创建一个只有一行且该行只有一个 button 的键盘\n    """\n    button1 = Button(\n        id="1",\n        render_data=RenderData(label="button", visited_label="BUTTON", style=0),\n        action=Action(\n            type=2,\n            permission=Permission(type=2, specify_role_ids=["1"], specify_user_ids=["1"]),\n            click_limit=10,\n            data="/搜索",\n            at_bot_show_channel_list=True,\n        ),\n    )\n\n    row1 = KeyboardRow(buttons=[button1])\n    return Keyboard(rows=[row1])\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n\n# 返回说明\n\n成功返回 Message 对象',normalizedContent:'# 发送带有按钮的消息\n\n\n# 功能描述\n\n通过在 messagesendrequest 中指定 keyboard 字段发送带按钮的消息，支持 keyboard 模版 和 自定义 keyboard 两种请求格式。\n\n * 要求操作人在该子频道具有发送消息和 对应消息按钮组件 的权限。\n * 请求参数 keyboard 模版 和 自定义 keyboard 只能单一传值。\n * keyboard 模版\n   * 调用前需要先申请消息按钮组件模板，这一步会得到一个模板 id，在请求时填在 keyboard 字段上。\n   * 申请消息按钮组件模板需要提供响应的 json，具体格式参考 inlinekeyboard。\n * 仅 markdown 消息支持消息按钮。\n\n\n# 使用示例\n\n\n# 1：使用 keyboard 模版\n\nimport botpy\nfrom botpy.message import message\nfrom botpy.types.message import markdownpayload, messagemarkdownparams\n\nclass myclient(botpy.client):\n    async def handle_send_markdown_by_template(self, channel_id, msg_id):\n        params = [\n            messagemarkdownparams(key="title", values=["标题"]),\n            messagemarkdownparams(key="content", values=["为了成为一名合格的巫师，请务必阅读频道公告", "藏馆黑色魔法书"]),\n        ]\n        markdown = markdownpayload(template_id=65, params=params)\n\n        # 通过api发送回复消息\n        await self.api.post_message(channel_id, markdown=markdown, msg_id=msg_id)\n\n    async def handle_send_markdown_by_content(self, channel_id, msg_id):\n        markdown = markdownpayload(content="# 标题 \\n## 简介很开心 \\n内容")\n        # 通过api发送回复消息\n        await self.api.post_message(channel_id, markdown=markdown, msg_id=msg_id)\n\n    async def on_at_message_create(self, message: message):\n        await message.reply(content=f"机器人{self.robot.name}收到你的@消息了: {message.content}")\n        await self.handle_send_markdown_by_template(message.channel_id, message.id)\n        await self.handle_send_markdown_by_content(message.channel_id, message.id)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 2：使用自定义 keyboard\n\nimport botpy\nfrom botpy import botapi\n\nfrom botpy.message import message\nfrom botpy.types.inline import keyboard, button, renderdata, action, permission, keyboardrow\nfrom botpy.types.message import markdownpayload, keyboardpayload\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await send_template_keyboard(self.api, message)\n        await send_self_defined_keyboard(self.api, message)\n\nasync def send_template_keyboard(api: botapi, message: message):\n    markdown = markdownpayload(content="# 123 \\n 今天是个好天气")\n    keyboard = keyboardpayload(id="62")\n    await api.post_keyboard_message(message.channel_id, markdown=markdown, keyboard=keyboard)\n\nasync def send_self_defined_keyboard(api: botapi, message: message):\n    markdown = markdownpayload(content="# 标题 \\n## 简介 \\n内容")\n    keyboard = keyboardpayload(content=build_a_demo_keyboard())\n    await api.post_keyboard_message(message.channel_id, markdown=markdown, keyboard=keyboard)\n\ndef build_a_demo_keyboard() -> keyboard:\n    """\n    创建一个只有一行且该行只有一个 button 的键盘\n    """\n    button1 = button(\n        id="1",\n        render_data=renderdata(label="button", visited_label="button", style=0),\n        action=action(\n            type=2,\n            permission=permission(type=2, specify_role_ids=["1"], specify_user_ids=["1"]),\n            click_limit=10,\n            data="/搜索",\n            at_bot_show_channel_list=true,\n        ),\n    )\n\n    row1 = keyboardrow(buttons=[button1])\n    return keyboard(rows=[row1])\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n\n# 返回说明\n\n成功返回 message 对象',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送模板消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/post_ark_message.html",relativePath:"develop/pythonsdk/api/message/post_ark_message.md",key:"v-c6cabb1a",path:"/develop/pythonsdk/api/message/post_ark_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:218},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:632},{level:2,title:"Embed",slug:"embed",normalizedTitle:"embed",charIndex:760},{level:2,title:"EmbedField",slug:"embedfield",normalizedTitle:"embedfield",charIndex:1116},{level:3,title:"Ark",slug:"ark",normalizedTitle:"ark",charIndex:805},{level:3,title:"ArkKv",slug:"arkkv",normalizedTitle:"arkkv",charIndex:1412},{level:3,title:"ArkObj",slug:"arkobj",normalizedTitle:"arkobj",charIndex:1497},{level:3,title:"ArkObjKv",slug:"arkobjkv",normalizedTitle:"arkobjkv",charIndex:1568},{level:3,title:"参数示例",slug:"参数示例",normalizedTitle:"参数示例",charIndex:1676},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:3525},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:278},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:4029},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:4064},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:4286},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:4544}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 Embed EmbedField Ark ArkKv ArkObj ArkObjKv 参数示例 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 发送模板消息\n\n注意\n\n * 要求操作人在该子频道具有发送消息和 模板消息 的权限。\n * 调用前需要先申请消息模板，这一步会得到一个模板 id，在请求时填在 ark.template_id 上\n * 发送成功之后，会触发一个创建消息的事件。\n * 可用模板参考可用模板\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 URL 配置”\n\n\n# 使用示例\n\n需要关注ark字段的使用。\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.post_message(channel_id="xxxx", content="xxx", msg_id="xxxx", embed=embed)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数          必填   类型       说明\nchannelID   是    string   子频道 ID\ncontent     是    string   消息内容，文本内容，支持内嵌格式\nembed       否    Embed    embed 消息，一种特殊的 ark\nark         否    Ark      ark 消息\nimage       否    string   图片 url 地址\nmsg_id      否    string   要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# Embed\n\n字段名           类型             描述\ntitle         string         标题\ndescription   string         描述\nprompt        string         消息弹窗内容\ntimestamp     string         消息创建时间\nfields        EmbedField[]   消息创建时间，是个 ISO8601 timestamp\n                             字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# EmbedField\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# Ark\n\n字段名           类型        描述\ntemplate_id   number    ark 模板 id（需要先申请）\nkv            AkrKv[]   kv 值列表\n\n\n# ArkKv\n\n字段名     类型         描述\nkey     string     key\nvalue   string     value\nobj     ArkObj[]   ark obj 类型的列表\n\n\n# ArkObj\n\n字段名      类型           描述\nobj_kv   ArkObjKv[]   ark objkv 列表\n\n\n# ArkObjKv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# 参数示例\n\n假设模板如下，其中#META_LIST#类型为数组、#META_URL#类型为 URL、其他为文本。\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#DESC#",\n  "prompt": "[QQ小程序]#PROMPT#",\n  "meta": {\n    "detail": {\n      "title": "#TITLE#",\n      "desc": "#META_DESC#",\n      "url": "#META_URL#",\n      "list": "#META_LIST#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n请求体中的 ark 内容为\n\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#DESC#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#PROMPT#",\n        "value": "XX机器人"\n      },\n      {\n        "key": "#TITLE#",\n        "value": "XX机器人消息"\n      },\n      {\n        "key": "#META_URL#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#META_LIST#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n则实际下发的 json 为\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "机器人订阅消息",\n  "prompt": "[QQ小程序]XX机器人",\n  "meta": {\n    "detail": {\n      "title": "XX机器人消息",\n      "url": "http://domain.com/",\n      "list": [\n        { "name": "aaa", "age": "3" },\n        { "name": "bbb", "age": "4" }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名                类型        描述\nid                 string    消息 id\nchannel_id         string    子频道 ID\nguild_id           string    频道 ID\ncontent            string    消息内容\ntimestamp          string    消息创建时间，是个 iISO8601 timestamp\n                             字符串，例："2021-11-23T15:16:48+08:00"\nedited_timestamp   string    消息编辑时间，是个 iISO8601 timestamp\n                             字符串，例："2021-11-23T15:16:48+08:00"\nmention_everyone   boolean   是否是@全员消息\nauthor             User      消息创建者\nmember             Member    消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 发送模板消息\n\n注意\n\n * 要求操作人在该子频道具有发送消息和 模板消息 的权限。\n * 调用前需要先申请消息模板，这一步会得到一个模板 id，在请求时填在 ark.template_id 上\n * 发送成功之后，会触发一个创建消息的事件。\n * 可用模板参考可用模板\n * 如果发送的消息中包含链接（网页、图片、视频链接等），需要提前在机器人管理端报备，操作流程：操作路径为：“开发设置” -> “消息 url 配置”\n\n\n# 使用示例\n\n需要关注ark字段的使用。\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.post_message(channel_id="xxxx", content="xxx", msg_id="xxxx", embed=embed)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数          必填   类型       说明\nchannelid   是    string   子频道 id\ncontent     是    string   消息内容，文本内容，支持内嵌格式\nembed       否    embed    embed 消息，一种特殊的 ark\nark         否    ark      ark 消息\nimage       否    string   图片 url 地址\nmsg_id      否    string   要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\n\n\n# embed\n\n字段名           类型             描述\ntitle         string         标题\ndescription   string         描述\nprompt        string         消息弹窗内容\ntimestamp     string         消息创建时间\nfields        embedfield[]   消息创建时间，是个 iso8601 timestamp\n                             字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# embedfield\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# ark\n\n字段名           类型        描述\ntemplate_id   number    ark 模板 id（需要先申请）\nkv            akrkv[]   kv 值列表\n\n\n# arkkv\n\n字段名     类型         描述\nkey     string     key\nvalue   string     value\nobj     arkobj[]   ark obj 类型的列表\n\n\n# arkobj\n\n字段名      类型           描述\nobj_kv   arkobjkv[]   ark objkv 列表\n\n\n# arkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# 参数示例\n\n假设模板如下，其中#meta_list#类型为数组、#meta_url#类型为 url、其他为文本。\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "#desc#",\n  "prompt": "[qq小程序]#prompt#",\n  "meta": {\n    "detail": {\n      "title": "#title#",\n      "desc": "#meta_desc#",\n      "url": "#meta_url#",\n      "list": "#meta_list#"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n请求体中的 ark 内容为\n\n{\n  "ark": {\n    "template_id": 1,\n    "kv": [\n      {\n        "key": "#desc#",\n        "value": "机器人订阅消息"\n      },\n      {\n        "key": "#prompt#",\n        "value": "xx机器人"\n      },\n      {\n        "key": "#title#",\n        "value": "xx机器人消息"\n      },\n      {\n        "key": "#meta_url#",\n        "value": "http://domain.com/"\n      },\n      {\n        "key": "#meta_list#",\n        "obj": [\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "aaa"\n              },\n              {\n                "key": "age",\n                "value": "3"\n              }\n            ]\n          },\n          {\n            "obj_kv": [\n              {\n                "key": "name",\n                "value": "bbb"\n              },\n              {\n                "key": "age",\n                "value": "4"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n则实际下发的 json 为\n\n{\n  "app": "com.tencent.miniapp",\n  "view": "detail",\n  "ver": "0.0.0.1",\n  "desc": "机器人订阅消息",\n  "prompt": "[qq小程序]xx机器人",\n  "meta": {\n    "detail": {\n      "title": "xx机器人消息",\n      "url": "http://domain.com/",\n      "list": [\n        { "name": "aaa", "age": "3" },\n        { "name": "bbb", "age": "4" }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名                类型        描述\nid                 string    消息 id\nchannel_id         string    子频道 id\nguild_id           string    频道 id\ncontent            string    消息内容\ntimestamp          string    消息创建时间，是个 iiso8601 timestamp\n                             字符串，例："2021-11-23t15:16:48+08:00"\nedited_timestamp   string    消息编辑时间，是个 iiso8601 timestamp\n                             字符串，例："2021-11-23t15:16:48+08:00"\nmention_everyone   boolean   是否是@全员消息\nauthor             user      消息创建者\nmember             member    消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "<@!1234>hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送引用消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/post_reference_messages.html",relativePath:"develop/pythonsdk/api/message/post_reference_messages.md",key:"v-65363ba6",path:"/develop/pythonsdk/api/message/post_reference_messages.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:76},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:826},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1250},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:93},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:1598},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1726}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Message DefaultRoleIDs 返回示例",content:'# 发送引用消息\n\n注意\n\n * 只支持引用机器人自己发送到的消息以及用户@机器人产生的消息。\n * 发送成功之后，会触发一个创建消息的事件。\n\n\n# 使用示例\n\n使用方式同发送消息，在MessageSendRequest中设置MessageReference即可发送引用消息。\n\nimport botpy\n\nfrom botpy.message import Message\nfrom botpy.types.message import Reference\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        # 构造消息发送请求数据对象\n        message_reference = Reference(message_id=message.id)\n        # 通过api发送回复消息\n        await self.api.post_message(\n            channel_id=message.channel_id,\n            content="<emoji:4>这是一条引用消息",\n            msg_id=message.id,\n            message_reference=message_reference,\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 参数说明\n\n参数                  必填   类型          说明\nchannel_id          是    string      子频道 ID\ncontent             是    string      消息内容\nmsg_id              是    string      消息ID\nmessage_reference   是    Reference   引用消息体\n\n引用消息支持内嵌格式、消息模板及图片，设置相应参数即可。\n\n\n# Reference\n\n参数                         必填   类型       说明\nmessage_id                 是    string   需要引用回复的消息 ID\nignore_get_message_error   是    bool     是否忽略获取引用消息详情错误，默认否\n\n\n# 返回说明\n\n返回Message 对象。\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "xxxxxx",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 发送引用消息\n\n注意\n\n * 只支持引用机器人自己发送到的消息以及用户@机器人产生的消息。\n * 发送成功之后，会触发一个创建消息的事件。\n\n\n# 使用示例\n\n使用方式同发送消息，在messagesendrequest中设置messagereference即可发送引用消息。\n\nimport botpy\n\nfrom botpy.message import message\nfrom botpy.types.message import reference\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        # 构造消息发送请求数据对象\n        message_reference = reference(message_id=message.id)\n        # 通过api发送回复消息\n        await self.api.post_message(\n            channel_id=message.channel_id,\n            content="<emoji:4>这是一条引用消息",\n            msg_id=message.id,\n            message_reference=message_reference,\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 参数说明\n\n参数                  必填   类型          说明\nchannel_id          是    string      子频道 id\ncontent             是    string      消息内容\nmsg_id              是    string      消息id\nmessage_reference   是    reference   引用消息体\n\n引用消息支持内嵌格式、消息模板及图片，设置相应参数即可。\n\n\n# reference\n\n参数                         必填   类型       说明\nmessage_id                 是    string   需要引用回复的消息 id\nignore_get_message_error   是    bool     是否忽略获取引用消息详情错误，默认否\n\n\n# 返回说明\n\n返回message 对象。\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\ndata:\n\n{\n  "id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "guild_id": "xxxxxx",\n  "content": "",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "xxxxxx",\n    "username": "xxxxxx",\n    "avatar": "",\n    "bot": true\n  },\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发送消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/post_message.html",relativePath:"develop/pythonsdk/api/message/post_message.md",key:"v-5c097a29",path:"/develop/pythonsdk/api/message/post_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:323},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:722},{level:3,title:"被动回复消息",slug:"被动回复消息",normalizedTitle:"被动回复消息",charIndex:176},{level:2,title:"MessageEmbed",slug:"messageembed",normalizedTitle:"messageembed",charIndex:961},{level:2,title:"MessageArk",slug:"messageark",normalizedTitle:"messageark",charIndex:1034},{level:3,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:1234},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1449},{level:3,title:"Message",slug:"message",normalizedTitle:"message",charIndex:296},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1855},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:1883},{level:3,title:"DefaultRoleIDs",slug:"defaultroleids",normalizedTitle:"defaultroleids",charIndex:2104},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:2362}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 被动回复消息 MessageEmbed MessageArk MessageReference 返回说明 Message User Member DefaultRoleIDs 返回示例",content:'# 发送消息\n\n向指定子频道推送消息。\n\n注意\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动推送消息，默认每天往每个频道可推送的消息数是 20 条，超过会被限制。\n * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息，超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟，超时会报错。\n * 发送消息接口要求机器人接口需要链接到 websocket gateway 上保持在线状态。\n * 有关主动消息审核，可以通过 Intents 中审核事件 MESSAGE_AUDIT 返回 MessageAudited 对象获取结果。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.post_message(channel_id="xxxx", content="xxx", msg_id="xxxx", embed=embed)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数                  必填                 类型             说明\nchannel_id          是                  string         子频道 ID\ncontent             否                  string         消息内容，文本内容，支持内嵌格式，可以为空\nembed               否                  MessageEmbed   embed 消息，一种特殊的 ark\nark                 否                  MessageArk     ark 消息\nimage               否                  string         图片 url 地址\nmsg_id              否                  string         要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessage_reference   MessageReference   否              引用消息对象\n\ncontent、embed、ark、image至少需要有一个字段，否则无法下发消息。\n\n\n# 被动回复消息\n\n注意\n\n被动消息需是用户@机器人的消息，否则将会报错。\n\n\n# MessageEmbed\n\n详见消息内嵌格式。\n\n\n# MessageArk\n\n详见发送模板消息。\n\n\n# MessageReference\n\n详见发送引用消息。\n\n\n# 返回说明\n\n主动消息都需要审核，返回结果如下：\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now"\n}\n\n\n1\n2\n3\n4\n\n\n若为私域机器人可正常返回Message 对象。\n\n\n# Message\n\n字段名          类型       描述\nid           string   消息 ID\nchannel_id   string   子频道 ID\nguild_id     string   频道 ID\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iISO8601 timestamp\n                      字符串，例："2021-11-23T15:16:48+08:00"\nauthor       User     消息创建者\nmember       Member   消息创建者的 member 信息\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# Member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# DefaultRoleIDs\n\n系统默认生成下列身份组 ID。\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "hello world",\n  "timestamp": "2021-05-13T14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 发送消息\n\n向指定子频道推送消息。\n\n注意\n\n * 要求操作人在该子频道具有发送消息的权限。\n * 主动推送消息，默认每天往每个频道可推送的消息数是 20 条，超过会被限制。\n * 主动推送消息在每个频道中，每天可以往 2 个子频道推送消息，超过后会被限制。\n * 不论主动消息还是被动消息，在一个子频道中，每 1s 只能发送 5 条消息。\n * 被动回复消息有效期为 5 分钟，超时会报错。\n * 发送消息接口要求机器人接口需要链接到 websocket gateway 上保持在线状态。\n * 有关主动消息审核，可以通过 intents 中审核事件 message_audit 返回 messageaudited 对象获取结果。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.post_message(channel_id="xxxx", content="xxx", msg_id="xxxx", embed=embed)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n参数                  必填                 类型             说明\nchannel_id          是                  string         子频道 id\ncontent             否                  string         消息内容，文本内容，支持内嵌格式，可以为空\nembed               否                  messageembed   embed 消息，一种特殊的 ark\nark                 否                  messageark     ark 消息\nimage               否                  string         图片 url 地址\nmsg_id              否                  string         要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessage_reference   messagereference   否              引用消息对象\n\ncontent、embed、ark、image至少需要有一个字段，否则无法下发消息。\n\n\n# 被动回复消息\n\n注意\n\n被动消息需是用户@机器人的消息，否则将会报错。\n\n\n# messageembed\n\n详见消息内嵌格式。\n\n\n# messageark\n\n详见发送模板消息。\n\n\n# messagereference\n\n详见发送引用消息。\n\n\n# 返回说明\n\n主动消息都需要审核，返回结果如下：\n\n{\n  "code": 304023,\n  "message": "push message is waiting for audit now"\n}\n\n\n1\n2\n3\n4\n\n\n若为私域机器人可正常返回message 对象。\n\n\n# message\n\n字段名          类型       描述\nid           string   消息 id\nchannel_id   string   子频道 id\nguild_id     string   频道 id\ncontent      string   消息内容\ntimestamp    string   消息创建时间，是个 iiso8601 timestamp\n                      字符串，例："2021-11-23t15:16:48+08:00"\nauthor       user     消息创建者\nmember       member   消息创建者的 member 信息\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# member\n\n字段名         类型         描述\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# defaultroleids\n\n系统默认生成下列身份组 id。\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员\n\n\n# 返回示例\n\n以发送文本内容hello world为例，下面是返回示例：\n\ndata:\n\n{\n  "id": "101234567890abcdef",\n  "channel_id": "10001",\n  "guild_id": "6400000001",\n  "content": "hello world",\n  "timestamp": "2021-05-13t14:45:45+08:00",\n  "tts": false,\n  "mention_everyone": false,\n  "author": {\n    "id": "12345",\n    "username": "abc",\n    "avatar": "",\n    "bot": true\n  },\n  "embeds": [{}],\n  "pinned": false,\n  "type": 0,\n  "flags": 0\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"撤回消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/message/recall_message.html",relativePath:"develop/pythonsdk/api/message/recall_message.md",key:"v-994b6bf2",path:"/develop/pythonsdk/api/message/recall_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:65},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:471},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:643},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:662}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 撤回消息\n\n撤回子频道内的消息。\n\n注意\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.recall_message(channel_id=message.channel_id, message_id="xxx", hidetip=True)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n参数           必填   类型       说明\nchannel_id   是    string   子频道 ID\nmessage_id   是    string   消息 ID\nhide_tip     否    bool     是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 撤回消息\n\n撤回子频道内的消息。\n\n注意\n\n * 管理员可以撤回普通成员的消息。\n * 频道主可以撤回所有人的消息。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.recall_message(channel_id=message.channel_id, message_id="xxx", hidetip=true)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n参数           必填   类型       说明\nchannel_id   是    string   子频道 id\nmessage_id   是    string   消息 id\nhide_tip     否    bool     是否隐藏提示小灰条，true 为隐藏，false 为显示。默认为false\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"禁言全员",frontmatter:{},regularPath:"/develop/pythonsdk/api/mute/mute_all.html",relativePath:"develop/pythonsdk/api/mute/mute_all.md",key:"v-c6c256a6",path:"/develop/pythonsdk/api/mute/mute_all.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:30},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:432},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:765},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:784}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 禁言全员\n\n将频道内全部成员（非管理员）禁言。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.mute_all(guild_id="xxxx", mute_end_timestamp="xxxx", mute_seconds="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                  必填       类型                                              描述\nguild_id             是        string                                          频道 ID\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）   \nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）         \n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 禁言全员\n\n将频道内全部成员（非管理员）禁言。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.mute_all(guild_id="xxxx", mute_end_timestamp="xxxx", mute_seconds="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                  必填       类型                                              描述\nguild_id             是        string                                          频道 id\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）   \nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）         \n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"禁言指定成员",frontmatter:{},regularPath:"/develop/pythonsdk/api/mute/mute_member.html",relativePath:"develop/pythonsdk/api/mute/mute_member.md",key:"v-62634816",path:"/develop/pythonsdk/api/mute/mute_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:31},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:452},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:869},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:888}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 禁言指定成员\n\n将频道指定成员（非管理员）禁言。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.mute_member(guild_id="xxxx", user_id="xxxx", mute_end_timestamp="xxxx", mute_seconds="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                  必填       类型                                              描述\nguild_id             是        string                                          频道 ID\nuser_id              是        string                                          成员 ID\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）   \nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）         \n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 禁言指定成员\n\n将频道指定成员（非管理员）禁言。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.mute_member(guild_id="xxxx", user_id="xxxx", mute_end_timestamp="xxxx", mute_seconds="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名                  必填       类型                                              描述\nguild_id             是        string                                          频道 id\nuser_id              是        string                                          成员 id\nmute_end_timestamp   string   禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）   \nmute_seconds         string   禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）         \n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"批量禁言成员",frontmatter:{},regularPath:"/develop/pythonsdk/api/mute/mute_multi_member.html",relativePath:"develop/pythonsdk/api/mute/mute_multi_member.md",key:"v-4fe449e9",path:"/develop/pythonsdk/api/mute/mute_multi_member.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:76},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:543},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1063},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1094}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 批量禁言成员\n\n用于将频道的指定批量成员（非管理员）禁言。要求机器人有管理员权限\n\n该接口同样可用于批量解除禁言，具体使用见批量解除禁言。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        user_ids = ["xxx", "xxx"]\n        await self.api.mute_multi_member(guild_id="xxxx", user_ids=user_ids, mute_end_timestamp="xxxx", mute_seconds="xxxx")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名                  必填          类型                                              描述\nguild_id             是           string                                          频道 ID\nuser_ids             string 列表   禁言成员的 user_id 列表                                \nmute_end_timestamp   string      禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）   \nmute_seconds         string      禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）         \n\n# 批量解除禁言\n\n该接口同样支持批量解除禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可，同时附上需要解除禁言的 user_id 列表。\n\n\n# 返回说明\n\n返回设置成功的成员 user_id 列表\n\n\n# 返回示例\n\ndata：\n\nList["123", "456"]\n\n\n1\n',normalizedContent:'# 批量禁言成员\n\n用于将频道的指定批量成员（非管理员）禁言。要求机器人有管理员权限\n\n该接口同样可用于批量解除禁言，具体使用见批量解除禁言。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        user_ids = ["xxx", "xxx"]\n        await self.api.mute_multi_member(guild_id="xxxx", user_ids=user_ids, mute_end_timestamp="xxxx", mute_seconds="xxxx")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名                  必填          类型                                              描述\nguild_id             是           string                                          频道 id\nuser_ids             string 列表   禁言成员的 user_id 列表                                \nmute_end_timestamp   string      禁言到期时间戳，绝对时间戳，单位：秒（与 seconds 字段同时赋值的话，以该字段为准）   \nmute_seconds         string      禁言多少秒（两个字段二选一，默认以 mute_end_timstamp 为准）         \n\n# 批量解除禁言\n\n该接口同样支持批量解除禁言，将mute_end_timestamp或mute_seconds传值为字符串\'0\'即可，同时附上需要解除禁言的 user_id 列表。\n\n\n# 返回说明\n\n返回设置成功的成员 user_id 列表\n\n\n# 返回示例\n\ndata：\n\nlist["123", "456"]\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取精华消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/pins_message/get_pins_message.html",relativePath:"develop/pythonsdk/api/pins_message/get_pins_message.md",key:"v-2017c68d",path:"/develop/pythonsdk/api/pins_message/get_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:40},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:408},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:482},{level:3,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:491},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:650}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 PinsMessage 返回示例",content:'# 获取精华消息\n\n用于获取子频道 channelId 内的精华消息。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_pins(channel_id=message.channel_id)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\n\n\n# 返回说明\n\n返回 PinsMessage 对象。\n\n\n# PinsMessage\n\n字段名           类型         描述\nguild_id      string     频道 ID\nchannel_id    string     子频道 ID\nmessage_ids   string[]   消息 ID\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 获取精华消息\n\n用于获取子频道 channelid 内的精华消息。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_pins(channel_id=message.channel_id)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\n\n\n# 返回说明\n\n返回 pinsmessage 对象。\n\n\n# pinsmessage\n\n字段名           类型         描述\nguild_id      string     频道 id\nchannel_id    string     子频道 id\nmessage_ids   string[]   消息 id\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除精华消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/pins_message/delete_pins_message.html",relativePath:"develop/pythonsdk/api/pins_message/delete_pins_message.md",key:"v-edd20332",path:"/develop/pythonsdk/api/pins_message/delete_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:51},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:444},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:551},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:570}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:"# 删除精华消息\n\n用于移除子频道 channelId 下的精华消息 messageId 。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.delete_pin(channel_id=message.channel_id, message_id=message.id)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nmessage_id   是    string   消息 ID\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n",normalizedContent:"# 删除精华消息\n\n用于移除子频道 channelid 下的精华消息 messageid 。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.delete_pin(channel_id=message.channel_id, message_id=message.id)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nmessage_id   是    string   消息 id\n\n\n# 返回说明\n\n成功返回空对象。\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除表情表态",frontmatter:{},regularPath:"/develop/pythonsdk/api/reaction/delete_reaction.html",relativePath:"develop/pythonsdk/api/reaction/delete_reaction.md",key:"v-06b895db",path:"/develop/pythonsdk/api/reaction/delete_reaction.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:40},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:446},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:642},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:661}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 删除表情表态\n\n删除自己对消息 message_id 的表情表态。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.delete_reaction(channel_id="xxxx", message_id="xxxx", emoji_type=1, emoji_id="4")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nmessage_id   是    string   消息 ID\nemoji_type   是    int      表情类型，参考EmojiType\nemoji_id     是    string   表情 ID，参考 Emoji 列表\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 删除表情表态\n\n删除自己对消息 message_id 的表情表态。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.delete_reaction(channel_id="xxxx", message_id="xxxx", emoji_type=1, emoji_id="4")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nmessage_id   是    string   消息 id\nemoji_type   是    int      表情类型，参考emojitype\nemoji_id     是    string   表情 id，参考 emoji 列表\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建精华消息",frontmatter:{},regularPath:"/develop/pythonsdk/api/pins_message/put_pins_message.html",relativePath:"develop/pythonsdk/api/pins_message/put_pins_message.md",key:"v-cd6ddb26",path:"/develop/pythonsdk/api/pins_message/put_pins_message.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:160},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:550},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:657},{level:3,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:666},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:832}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 PinsMessage 返回示例",content:'# 创建精华消息\n\n用于将messageId添加为子频道 channelId 内的精华消息。\n\n注意\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.put_pin(channel_id=message.channel_id, message_id=message.id)\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nmessage_id   是    string   消息 ID\n\n\n# 返回说明\n\n返回 PinsMessage 对象。\n\n\n# PinsMessage\n\n字段名           类型          描述\nguild_id      string      频道 ID\nchannel_id    string      子频道 ID\nmessage_ids   string 列表   消息 ID 列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 创建精华消息\n\n用于将messageid添加为子频道 channelid 内的精华消息。\n\n注意\n\n * 精华消息在一个子频道内最多只能创建 20 条。\n * 只有可见的消息才能被设置为精华消息。\n * 接口返回对象中 message_ids 为当前请求后子频道内所有精华消息 message_id 数组。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.put_pin(channel_id=message.channel_id, message_id=message.id)\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nmessage_id   是    string   消息 id\n\n\n# 返回说明\n\n返回 pinsmessage 对象。\n\n\n# pinsmessage\n\n字段名           类型          描述\nguild_id      string      频道 id\nchannel_id    string      子频道 id\nmessage_ids   string 列表   消息 id 列表\n\n\n# 返回示例\n\ndata：\n\n{\n  "guild_id": "xxxxxx",\n  "channel_id": "xxxxxx",\n  "message_ids": ["xxxxx"]\n}\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"拉取表情表态用户列表",frontmatter:{},regularPath:"/develop/pythonsdk/api/reaction/get_reaction_users.html",relativePath:"develop/pythonsdk/api/reaction/get_reaction_users.md",key:"v-7b93bb26",path:"/develop/pythonsdk/api/reaction/get_reaction_users.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:47},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:1260},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1564}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明",content:'# 拉取表情表态用户列表\n\n拉取对消息 message_id 指定表情表态的用户列表\n\n\n# 使用示例\n\nfrom typing import List\n\nimport botpy\n\nfrom botpy.message import Message\nfrom botpy.types import reaction\nfrom botpy.types.user import User\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        users: List[User] = []\n        cookie = ""\n        while True:\n            reactionUsers: reaction.ReactionUsers = await self.api.get_reaction_users(\n                channel_id="2568610",\n                message_id="088de19cbeb883e7e97110a2e39c0138d80d48acfc879406",\n                emoji_type=1,\n                emoji_id="4",\n                cookie=cookie,\n                limit=20\n            )\n\n            if not reactionUsers:\n                break\n\n            users.extend(reactionUsers["users"])\n\n            if reactionUsers["is_end"]:\n                break\n            else:\n                cookie = reactionUsers["cookie"]\n\n        print(len(users))\n        for user in users:\n            print(user["username"])\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nmessage_id   是    string   消息 ID\ntype         是    int      表情类型，参考EmojiType\nemoji_id     是    string   表情 ID，参考 Emoji 列表\ncookie       否    string   cookie 上次请求返回的cookie，第一次请求无需填写\nlimit        否    int      返回的最大用户数 (1-100), 默认20\n\n\n# 返回说明\n\n返回 ReactionUsers 对象',normalizedContent:'# 拉取表情表态用户列表\n\n拉取对消息 message_id 指定表情表态的用户列表\n\n\n# 使用示例\n\nfrom typing import list\n\nimport botpy\n\nfrom botpy.message import message\nfrom botpy.types import reaction\nfrom botpy.types.user import user\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        users: list[user] = []\n        cookie = ""\n        while true:\n            reactionusers: reaction.reactionusers = await self.api.get_reaction_users(\n                channel_id="2568610",\n                message_id="088de19cbeb883e7e97110a2e39c0138d80d48acfc879406",\n                emoji_type=1,\n                emoji_id="4",\n                cookie=cookie,\n                limit=20\n            )\n\n            if not reactionusers:\n                break\n\n            users.extend(reactionusers["users"])\n\n            if reactionusers["is_end"]:\n                break\n            else:\n                cookie = reactionusers["cookie"]\n\n        print(len(users))\n        for user in users:\n            print(user["username"])\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nmessage_id   是    string   消息 id\ntype         是    int      表情类型，参考emojitype\nemoji_id     是    string   表情 id，参考 emoji 列表\ncookie       否    string   cookie 上次请求返回的cookie，第一次请求无需填写\nlimit        否    int      返回的最大用户数 (1-100), 默认20\n\n\n# 返回说明\n\n返回 reactionusers 对象',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"发表表情表态",frontmatter:{},regularPath:"/develop/pythonsdk/api/reaction/post_reaction.html",relativePath:"develop/pythonsdk/api/reaction/post_reaction.md",key:"v-dc5e13f6",path:"/develop/pythonsdk/api/reaction/post_reaction.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:35},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:442},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:638},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:657}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 发表表情表态\n\n用于在指定子频道向某条消息发表表情表态。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.put_reaction(channel_id="xxxx", message_id="xxxx", emoji_type=1, emoji_id="4")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nmessage_id   是    string   消息 ID\nemoji_type   是    int      表情类型，参考EmojiType\nemoji_id     是    string   表情 ID，参考 Emoji 列表\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 发表表情表态\n\n用于在指定子频道向某条消息发表表情表态。\n\n\n# 使用示例\n\nimport botpy\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.put_reaction(channel_id="xxxx", message_id="xxxx", emoji_type=1, emoji_id="4")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nmessage_id   是    string   消息 id\nemoji_type   是    int      表情类型，参考emojitype\nemoji_id     是    string   表情 id，参考 emoji 列表\n\n\n# 返回说明\n\n返回是否更新成功\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"删除日程",frontmatter:{},regularPath:"/develop/pythonsdk/api/schedule/delete_schedule.html",relativePath:"develop/pythonsdk/api/schedule/delete_schedule.md",key:"v-194e4e23",path:"/develop/pythonsdk/api/schedule/delete_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:69},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:451},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:561},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:579}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 返回示例",content:'# 删除日程\n\n删除日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.delete_schedule(channel_id="日程子频道ID", schedule_id="日程ID")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名           必填   类型       描述\nchannel_id    是    string   子频道 ID\nschedule_id   是    string   日程 ID\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\nTrue\n\n\n1\n',normalizedContent:'# 删除日程\n\n删除日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.delete_schedule(channel_id="日程子频道id", schedule_id="日程id")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名           必填   类型       描述\nchannel_id    是    string   子频道 id\nschedule_id   是    string   日程 id\n\n\n# 返回说明\n\n返回结果为空。\n\n\n# 返回示例\n\ndata：\n\ntrue\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取日程详情",frontmatter:{},regularPath:"/develop/pythonsdk/api/schedule/get_schedule.html",relativePath:"develop/pythonsdk/api/schedule/get_schedule.md",key:"v-78768ee6",path:"/develop/pythonsdk/api/schedule/get_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:25},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:419},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:529},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:538},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:788},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:941},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:882},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1378}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 获取日程详情\n\n获取某个日程的详情。\n\n\n# 使用示例\n\nimport time\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_schedule(channel_id="日程子频道ID", schedule_id="日程ID")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名           必填   类型       描述\nchannel_id    是    string   子频道 ID\nschedule_id   是    string   日程 ID\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 获取日程详情\n\n获取某个日程的详情。\n\n\n# 使用示例\n\nimport time\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_schedule(channel_id="日程子频道id", schedule_id="日程id")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 参数说明\n\n字段名           必填   类型       描述\nchannel_id    是    string   子频道 id\nschedule_id   是    string   日程 id\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取日程列表",frontmatter:{},regularPath:"/develop/pythonsdk/api/schedule/get_schedules.html",relativePath:"develop/pythonsdk/api/schedule/get_schedules.md",key:"v-24a449da",path:"/develop/pythonsdk/api/schedule/get_schedules.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:33},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:420},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:621},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:630},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:880},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1033},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:974},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:1470}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 获取日程列表\n\n获取某个日程子频道中当天的日程列表。\n\n\n# 使用示例\n\n# sync\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        await self.api.get_schedules(channel_id="日程ID", since="1656008891145")\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 ID\nsince        否    string   起始时间戳(ms)\n\n注意\n\nsince 需是毫秒级别的时间戳（13位）。\n\n若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# 返回说明\n\n返回 Schedule 数组。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "xxxxxx",\n    "description": "xxxxxx",\n    "start_timestamp": "1641913200000",\n    "end_timestamp": "1641916800000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": false\n      },\n      "nick": "",\n      "joined_at": "2021-11-24T16:51:35+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "2"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 获取日程列表\n\n获取某个日程子频道中当天的日程列表。\n\n\n# 使用示例\n\n# sync\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        await self.api.get_schedules(channel_id="日程id", since="1656008891145")\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 参数说明\n\n字段名          必填   类型       描述\nchannel_id   是    string   子频道 id\nsince        否    string   起始时间戳(ms)\n\n注意\n\nsince 需是毫秒级别的时间戳（13位）。\n\n若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n\n\n# 返回说明\n\n返回 schedule 数组。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": "xxxxxx",\n    "name": "xxxxxx",\n    "description": "xxxxxx",\n    "start_timestamp": "1641913200000",\n    "end_timestamp": "1641916800000",\n    "creator": {\n      "user": {\n        "id": "xxxxxx",\n        "username": "xxxxxx",\n        "bot": false\n      },\n      "nick": "",\n      "joined_at": "2021-11-24t16:51:35+08:00"\n    },\n    "jump_channel_id": "0",\n    "remind_type": "2"\n  }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"创建日程",frontmatter:{},regularPath:"/develop/pythonsdk/api/schedule/post_schedule.html",relativePath:"develop/pythonsdk/api/schedule/post_schedule.md",key:"v-b037bf66",path:"/develop/pythonsdk/api/schedule/post_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:68},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:801},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1220},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:1229},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:1101},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1632},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:1205},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:2069}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 创建日程\n\n在日程子频道创建一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nimport time\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        delay = 1000 * 60\n        start_time = int(round(time.time() * 1000)) + delay\n        end_time = start_time + delay\n        await self.api.create_schedule(\n            channel_id="日程子频道ID",\n            name="test",\n            start_timestamp=str(start_time),\n            end_timestamp=str(end_time),\n            jump_channel_id="日程子频道ID",\n            remind_type="0",\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 参数说明\n\n字段名               必填   类型       描述\nchannel_id        是    string   子频道 ID\nname              是    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nend_timestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\ncreator           否    Member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 ID\nremind_type       是    string   日程提醒类型，取值参考RemindType\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 创建日程\n\n在日程子频道创建一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nimport time\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        delay = 1000 * 60\n        start_time = int(round(time.time() * 1000)) + delay\n        end_time = start_time + delay\n        await self.api.create_schedule(\n            channel_id="日程子频道id",\n            name="test",\n            start_timestamp=str(start_time),\n            end_timestamp=str(end_time),\n            jump_channel_id="日程子频道id",\n            remind_type="0",\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 参数说明\n\n字段名               必填   类型       描述\nchannel_id        是    string   子频道 id\nname              是    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms) ，日程开始时间必须大于传当前时间\nend_timestamp     是    string   日程结束时间戳(ms) ，日程结束时间必须大于日程开始时间\ncreator           否    member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 id\nremind_type       是    string   日程提醒类型，取值参考remindtype\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"修改日程",frontmatter:{},regularPath:"/develop/pythonsdk/api/schedule/update_schedule.html",relativePath:"develop/pythonsdk/api/schedule/update_schedule.md",key:"v-85ca1042",path:"/develop/pythonsdk/api/schedule/update_schedule.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:69},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:837},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:1259},{level:3,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:1268},{level:3,title:"Member",slug:"member",normalizedTitle:"member",charIndex:1140},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:1671},{level:3,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:1244},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:2108}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Schedule Member User RemindType 返回示例",content:'# 修改日程\n\n修改日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nimport time\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        delay = 1000 * 60\n        start_time = int(round(time.time() * 1000)) + delay\n        end_time = start_time + delay\n        await self.api.update_schedule(\n            channel_id="日程子频道ID",\n            schedule_id="日程ID",\n            name="test",\n            start_timestamp=str(start_time),\n            end_timestamp=str(end_time),\n            jump_channel_id="日程子频道ID",\n            remind_type="0",\n        )\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 参数说明\n\n字段名               必填   类型       描述\nchannel_id        是    string   子频道 ID\nschedule_id       是    string   日程 ID\nname              否    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms)\nend_timestamp     是    string   日程结束时间戳(ms)\ncreator           否    Member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 ID\nremind_type       是    string   日程提醒类型，取值参考RemindType\n\n\n# 返回说明\n\n返回 Schedule 对象。\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# Member\n\n字段名         类型       描述\nuser        User     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 ISO8601 timestamp\n                     字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# User\n\n字段名        类型        描述\nid         string    用户 ID\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24T16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'# 修改日程\n\n修改日程子频道里的一个日程。\n\n注意\n\n要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n\n\n# 使用示例\n\nimport time\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        delay = 1000 * 60\n        start_time = int(round(time.time() * 1000)) + delay\n        end_time = start_time + delay\n        await self.api.update_schedule(\n            channel_id="日程子频道id",\n            schedule_id="日程id",\n            name="test",\n            start_timestamp=str(start_time),\n            end_timestamp=str(end_time),\n            jump_channel_id="日程子频道id",\n            remind_type="0",\n        )\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 参数说明\n\n字段名               必填   类型       描述\nchannel_id        是    string   子频道 id\nschedule_id       是    string   日程 id\nname              否    string   日程名称\ndescription       否    string   日程描述\nstart_timestamp   是    string   日程开始时间戳(ms)\nend_timestamp     是    string   日程结束时间戳(ms)\ncreator           否    member   创建者\njump_channel_id   否    string   日程开始时跳转到的子频道 id\nremind_type       是    string   日程提醒类型，取值参考remindtype\n\n\n# 返回说明\n\n返回 schedule 对象。\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# member\n\n字段名         类型       描述\nuser        user     用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string   用户在频道内的昵称\njoined_at   string   用户加入频道的时间，是个 iso8601 timestamp\n                     字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# user\n\n字段名        类型        描述\nid         string    用户 id\nusername   string    用户名\nbot        boolean   是否是机器人\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "name": "xxxxxx",\n  "description": "xxxxxx",\n  "start_timestamp": "1641913200000",\n  "end_timestamp": "1641916800000",\n  "creator": {\n    "user": {\n      "id": "xxxxxx",\n      "username": "xxxxxx",\n      "bot": false\n    },\n    "nick": "",\n    "joined_at": "2021-11-24t16:51:35+08:00"\n  },\n  "jump_channel_id": "0",\n  "remind_type": "2"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取当前用户信息",frontmatter:{},regularPath:"/develop/pythonsdk/api/user/me.html",relativePath:"develop/pythonsdk/api/user/me.md",key:"v-4952848d",path:"/develop/pythonsdk/api/user/me.html",headers:[{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:15},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:351},{level:3,title:"User",slug:"user",normalizedTitle:"user",charIndex:369},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:694}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 返回说明 User 返回示例",content:'# 获取当前用户信息\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        user = await self.api.me()\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 返回说明\n\n使用当前用户信息填充的 User 对象\n\n\n# User\n\n字段名                  类型       描述\nid                   string   用户 ID\nusername             string   用户名\navatar               string   用户头像地址\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "username": "zsh-测试中",\n  "avatar": "xxxxxx",\n  "union_openid": "xxxxxx",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 获取当前用户信息\n\n\n# 使用示例\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        user = await self.api.me()\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 返回说明\n\n使用当前用户信息填充的 user 对象\n\n\n# user\n\n字段名                  类型       描述\nid                   string   用户 id\nusername             string   用户名\navatar               string   用户头像地址\nunion_openid         string   特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string   机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。\n\n\n# 返回示例\n\ndata：\n\n{\n  "id": "xxxxxx",\n  "username": "zsh-测试中",\n  "avatar": "xxxxxx",\n  "union_openid": "xxxxxx",\n  "union_user_account": ""\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"获取当前用户频道列表",frontmatter:{},regularPath:"/develop/pythonsdk/api/user/me_guilds.html",relativePath:"develop/pythonsdk/api/user/me_guilds.md",key:"v-e92069fa",path:"/develop/pythonsdk/api/user/me_guilds.html",headers:[{level:3,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:17},{level:2,title:"参数说明",slug:"参数说明",normalizedTitle:"参数说明",charIndex:554},{level:2,title:"返回说明",slug:"返回说明",normalizedTitle:"返回说明",charIndex:700},{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:709},{level:2,title:"返回示例",slug:"返回示例",normalizedTitle:"返回示例",charIndex:855}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"使用示例 参数说明 返回说明 Guild 返回示例",content:'# 获取当前用户频道列表\n\n\n# 使用示例\n\n# sync\n\nimport botpy\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        guild_list = await self.api.me_guilds(guild_id=message.guild_id, limit=100, desc=True)\n        for guild in guild_list:\n            botpy.logger.info(f\'guild_id: {guild.get("id")} guild_name: {guild.get("name")}\')\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   获取频道列表范围\nlimit      否    int      获取频道列表范围\ndesc       否    bool     获取列表返回的顺序是否为反序\n\n\n# 返回说明\n\n返回 Guild 数组。\n\n\n# Guild\n\n字段名     类型        描述\nid      string    频道 ID\nname    string    频道名称\nicon    string    频道头像地址\nowner   boolean   当前人是否是创建人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": \'xxxxxx\',\n    "name": \'测试频道\',\n    "icon": \'xxxxxx\',\n    "owner": false,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',normalizedContent:'# 获取当前用户频道列表\n\n\n# 使用示例\n\n# sync\n\nimport botpy\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        guild_list = await self.api.me_guilds(guild_id=message.guild_id, limit=100, desc=true)\n        for guild in guild_list:\n            botpy.logger.info(f\'guild_id: {guild.get("id")} guild_name: {guild.get("name")}\')\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents=intents)\nclient.run(appid={appid}, token={token})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 参数说明\n\n字段名        必填   类型       描述\nguild_id   是    string   获取频道列表范围\nlimit      否    int      获取频道列表范围\ndesc       否    bool     获取列表返回的顺序是否为反序\n\n\n# 返回说明\n\n返回 guild 数组。\n\n\n# guild\n\n字段名     类型        描述\nid      string    频道 id\nname    string    频道名称\nicon    string    频道头像地址\nowner   boolean   当前人是否是创建人\n\n\n# 返回示例\n\ndata：\n\n[\n  {\n    "id": \'xxxxxx\',\n    "name": \'测试频道\',\n    "icon": \'xxxxxx\',\n    "owner": false,\n  },\n];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"PythonSDK更新日志",frontmatter:{},regularPath:"/develop/pythonsdk/changelog/",relativePath:"develop/pythonsdk/changelog/README.md",key:"v-2e55e20a",path:"/develop/pythonsdk/changelog/",headers:[{level:2,title:"2022-06-17",slug:"_2022-06-17",normalizedTitle:"2022-06-17",charIndex:20},{level:2,title:"2022-06-15",slug:"_2022-06-15",normalizedTitle:"2022-06-15",charIndex:196},{level:2,title:"2022-06-14",slug:"_2022-06-14",normalizedTitle:"2022-06-14",charIndex:353},{level:2,title:"2022-06-13",slug:"_2022-06-13",normalizedTitle:"2022-06-13",charIndex:406},{level:2,title:"2022-06-11",slug:"_2022-06-11",normalizedTitle:"2022-06-11",charIndex:562},{level:2,title:"2022-01-13",slug:"_2022-01-13",normalizedTitle:"2022-01-13",charIndex:608},{level:2,title:"2022-01-10",slug:"_2022-01-10",normalizedTitle:"2022-01-10",charIndex:690},{level:2,title:"2022-01-09",slug:"_2022-01-09",normalizedTitle:"2022-01-09",charIndex:737},{level:2,title:"2022-01-07",slug:"_2022-01-07",normalizedTitle:"2022-01-07",charIndex:783},{level:2,title:"2022-01-06",slug:"_2022-01-06",normalizedTitle:"2022-01-06",charIndex:838},{level:2,title:"2022-01-05",slug:"_2022-01-05",normalizedTitle:"2022-01-05",charIndex:896},{level:2,title:"2021-12-31",slug:"_2021-12-31",normalizedTitle:"2021-12-31",charIndex:993},{level:2,title:"2021-12-30",slug:"_2021-12-30",normalizedTitle:"2021-12-30",charIndex:1074},{level:2,title:"2021-12-27",slug:"_2021-12-27",normalizedTitle:"2021-12-27",charIndex:1173},{level:2,title:"2021-12-25",slug:"_2021-12-25",normalizedTitle:"2021-12-25",charIndex:1219}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"2022-06-17 2022-06-15 2022-06-14 2022-06-13 2022-06-11 2022-01-13 2022-01-10 2022-01-09 2022-01-07 2022-01-06 2022-01-05 2021-12-31 2021-12-30 2021-12-27 2021-12-25",content:"# PythonSDK更新日志\n\n\n# 2022-06-17\n\n * feat: 完善ws事件中Message数据的构建 (9564cb2)\n * feat: 完善ws事件中User-Member数据的构建 (109c74e)\n * feat: 完善ws事件中Reaction、Audio、DirectMessage 以及 Forum（Thread类）数据的构建 (26af7ad)\n\n\n# 2022-06-15\n\n * feat: 优化gateway, api, flags, http中的部分逻辑构建与冗余代码 (727ed73)\n * docs: 更新文档中的部分demo (a24bf94)\n * feat: 优化撤回消息api的用法&优化handle消息参数的返回值 (166496e)\n\n\n# 2022-06-14\n\n * fix: 修复撤回消息隐藏小灰条没有生效的问题 (6c37dd6)\n\n\n# 2022-06-13\n\n * feat: 优化指令装饰器并新增指令装饰器demo (40576451)\n * feat: botpy 1.0 版本合入 (8a30abe2)\n * feat: 优化http模块&新增频道成员事件的Member构建&优化代码逻辑统一性，去除部分冗余代码 (0add0b9)\n\n\n# 2022-06-11\n\n * fix: 优化logging模块 (9162c24)\n\n\n# 2022-01-13\n\n * fix: 修改发送主动消息后的审核状态判断为正常状态 (9d2dbd3)\n * fix: 修改UA头名字 (933480b)\n\n\n# 2022-01-10\n\n * chore: 修改PYPI打包配置 (e9a2d57)\n\n\n# 2022-01-09\n\n * feat: SDK支持Async (44473de)\n\n\n# 2022-01-07\n\n * fix: 增加异常时的traceback (#6) (f9f9962)\n\n\n# 2022-01-06\n\n * fix: 增加异常信息的traceback打印 (#5) (cb08164)\n\n\n# 2022-01-05\n\n * doc: 增加版本和流水线徽章 (caae658)\n * fix: delete websocket error close (#3) (663111f)\n\n\n# 2021-12-31\n\n * fix: windows下不使用RotatingFileHandler; 优化 README (#2) (a2e23d0)\n\n\n# 2021-12-30\n\n * chore: Create python-publish.yml (4a37777)\n * feat: 增加http请求的ua头 (#1) (49f31a3)\n\n\n# 2021-12-27\n\n * fix: 修改test配置的路径 (9522ded)\n\n\n# 2021-12-25\n\n * fix: 修改import规范 (37099b3)\n * [init]初始化框架代码 (4413bd5)",normalizedContent:"# pythonsdk更新日志\n\n\n# 2022-06-17\n\n * feat: 完善ws事件中message数据的构建 (9564cb2)\n * feat: 完善ws事件中user-member数据的构建 (109c74e)\n * feat: 完善ws事件中reaction、audio、directmessage 以及 forum（thread类）数据的构建 (26af7ad)\n\n\n# 2022-06-15\n\n * feat: 优化gateway, api, flags, http中的部分逻辑构建与冗余代码 (727ed73)\n * docs: 更新文档中的部分demo (a24bf94)\n * feat: 优化撤回消息api的用法&优化handle消息参数的返回值 (166496e)\n\n\n# 2022-06-14\n\n * fix: 修复撤回消息隐藏小灰条没有生效的问题 (6c37dd6)\n\n\n# 2022-06-13\n\n * feat: 优化指令装饰器并新增指令装饰器demo (40576451)\n * feat: botpy 1.0 版本合入 (8a30abe2)\n * feat: 优化http模块&新增频道成员事件的member构建&优化代码逻辑统一性，去除部分冗余代码 (0add0b9)\n\n\n# 2022-06-11\n\n * fix: 优化logging模块 (9162c24)\n\n\n# 2022-01-13\n\n * fix: 修改发送主动消息后的审核状态判断为正常状态 (9d2dbd3)\n * fix: 修改ua头名字 (933480b)\n\n\n# 2022-01-10\n\n * chore: 修改pypi打包配置 (e9a2d57)\n\n\n# 2022-01-09\n\n * feat: sdk支持async (44473de)\n\n\n# 2022-01-07\n\n * fix: 增加异常时的traceback (#6) (f9f9962)\n\n\n# 2022-01-06\n\n * fix: 增加异常信息的traceback打印 (#5) (cb08164)\n\n\n# 2022-01-05\n\n * doc: 增加版本和流水线徽章 (caae658)\n * fix: delete websocket error close (#3) (663111f)\n\n\n# 2021-12-31\n\n * fix: windows下不使用rotatingfilehandler; 优化 readme (#2) (a2e23d0)\n\n\n# 2021-12-30\n\n * chore: create python-publish.yml (4a37777)\n * feat: 增加http请求的ua头 (#1) (49f31a3)\n\n\n# 2021-12-27\n\n * fix: 修改test配置的路径 (9522ded)\n\n\n# 2021-12-25\n\n * fix: 修改import规范 (37099b3)\n * [init]初始化框架代码 (4413bd5)",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"公告对象（Announce）",frontmatter:{},regularPath:"/develop/pythonsdk/model/announce.html",relativePath:"develop/pythonsdk/model/announce.md",key:"v-02085015",path:"/develop/pythonsdk/model/announce.html",headers:[{level:2,title:"Announce",slug:"announce",normalizedTitle:"announce",charIndex:7},{level:2,title:"RecommendChannel",slug:"recommendchannel",normalizedTitle:"recommendchannel",charIndex:309}],lastUpdated:"3/14/2022, 2:00:12 PM",lastUpdatedTimestamp:1647266412e3,headersStr:"Announce RecommendChannel",content:"# 公告对象（Announce）\n\n\n# Announce\n\n字段名                  类型                    描述\nguild_id             string                频道 ID\nchannel_id           string                子频道 ID\nmessage_id           string                消息 ID\nannounce_type        number                推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   RecommendChannel 列表   推荐子频道详情列表\n\n\n# RecommendChannel\n\n字段名          类型       描述\nchannel_id   string   子频道 ID\nintroduce    string   消息 ID",normalizedContent:"# 公告对象（announce）\n\n\n# announce\n\n字段名                  类型                    描述\nguild_id             string                频道 id\nchannel_id           string                子频道 id\nmessage_id           string                消息 id\nannounce_type        number                推荐类别 0:成员公告; 1:欢迎公告\nrecommend_channels   recommendchannel 列表   推荐子频道详情列表\n\n\n# recommendchannel\n\n字段名          类型       描述\nchannel_id   string   子频道 id\nintroduce    string   消息 id",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"API 权限对象",frontmatter:{},regularPath:"/develop/pythonsdk/model/api_permission.html",relativePath:"develop/pythonsdk/model/api_permission.md",key:"v-1d268482",path:"/develop/pythonsdk/model/api_permission.html",headers:[{level:2,title:"接口权限对象(APIPermission)",slug:"接口权限对象-apipermission",normalizedTitle:"接口权限对象(apipermission)",charIndex:15},{level:3,title:"APIPermission",slug:"apipermission",normalizedTitle:"apipermission",charIndex:22},{level:2,title:"接口权限需求对象（APIPermissionDemand）",slug:"接口权限需求对象-apipermissiondemand",normalizedTitle:"接口权限需求对象（apipermissiondemand）",charIndex:281},{level:3,title:"APIPermissionDemand",slug:"apipermissiondemand",normalizedTitle:"apipermissiondemand",charIndex:290},{level:2,title:"接口权限需求标识对象（APIPermissionDemandIdentify）",slug:"接口权限需求标识对象-apipermissiondemandidentify",normalizedTitle:"接口权限需求标识对象（apipermissiondemandidentify）",charIndex:694},{level:3,title:"APIPermissionDemandIdentify",slug:"apipermissiondemandidentify",normalizedTitle:"apipermissiondemandidentify",charIndex:522}],lastUpdated:"2/8/2022, 9:16:51 AM",lastUpdatedTimestamp:1644311811e3,headersStr:"接口权限对象(APIPermission) APIPermission 接口权限需求对象（APIPermissionDemand） APIPermissionDemand 接口权限需求标识对象（APIPermissionDemandIdentify） APIPermissionDemandIdentify",content:"# API 权限对象\n\n\n# 接口权限对象(APIPermission)\n\n\n# APIPermission\n\n字段名           类型       描述\npath          string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 GET\ndesc          string   API 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 接口权限需求对象（APIPermissionDemand）\n\n\n# APIPermissionDemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 ID\nchannel_id     string                        接口权限需求授权链接发送的子频道 ID\napi_identify   APIPermissionDemandIdentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（APIPermissionDemandIdentify）\n\n\n# APIPermissionDemandIdentify\n\n字段名      类型       描述\npath     string   API 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 GET",normalizedContent:"# api 权限对象\n\n\n# 接口权限对象(apipermission)\n\n\n# apipermission\n\n字段名           类型       描述\npath          string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod        string   请求方法，例如 get\ndesc          string   api 接口名称，例如 获取频道信\nauth_status   number   授权状态，auth_stats 为 1 时已授权\n\n\n# 接口权限需求对象（apipermissiondemand）\n\n\n# apipermissiondemand\n\n字段名            类型                            描述\nguild_id       string                        申请接口权限的频道 id\nchannel_id     string                        接口权限需求授权链接发送的子频道 id\napi_identify   apipermissiondemandidentify   权限接口唯一标识\ntitle          string                        接口权限链接中的接口权限描述信息\ndesc           string                        接口权限链接中的机器人可使用功能的描述信息\n\n\n# 接口权限需求标识对象（apipermissiondemandidentify）\n\n\n# apipermissiondemandidentify\n\n字段名      类型       描述\npath     string   api 接口名，例如 /guilds/{guild_id}/members/{user_id}\nmethod   string   请求方法，例如 get",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"语音对象(AudioControl)",frontmatter:{},regularPath:"/develop/pythonsdk/model/audio.html",relativePath:"develop/pythonsdk/model/audio.md",key:"v-896ad926",path:"/develop/pythonsdk/model/audio.html",headers:[{level:2,title:"AudioControl",slug:"audiocontrol",normalizedTitle:"audiocontrol",charIndex:7},{level:2,title:"STATUS",slug:"status",normalizedTitle:"status",charIndex:182},{level:2,title:"AudioAction",slug:"audioaction",normalizedTitle:"audioaction",charIndex:318}],lastUpdated:"12/23/2021, 7:19:13 AM",lastUpdatedTimestamp:1640243953e3,headersStr:"AudioControl STATUS AudioAction",content:"# 语音对象(AudioControl)\n\n\n# AudioControl\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      STATUS   播放状态，参考 STATUS\n\n\n# STATUS\n\n字段名      值   描述\nSTART    0   开始播放操作\nPAUSE    1   暂停播放操作\nRESUME   2   继续播放操作\nSTOP     3   停止播放操作\n\n\n# AudioAction\n\n字段名          类型       描述\nguild_id     string   频道 ID\nchannel_id   string   子频道 ID\naudio_url    string   音频数据的 url status 为 0 时传\ntext         string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传",normalizedContent:"# 语音对象(audiocontrol)\n\n\n# audiocontrol\n\n字段名         类型       描述\naudio_url   string   音频数据的 url status 为 0 时传\ntext        string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传\nstatus      status   播放状态，参考 status\n\n\n# status\n\n字段名      值   描述\nstart    0   开始播放操作\npause    1   暂停播放操作\nresume   2   继续播放操作\nstop     3   停止播放操作\n\n\n# audioaction\n\n字段名          类型       描述\nguild_id     string   频道 id\nchannel_id   string   子频道 id\naudio_url    string   音频数据的 url status 为 0 时传\ntext         string   状态文本（比如：简单爱-周杰伦），可选，status 为 0 时传，其他操作不传",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道对象(Channel)",frontmatter:{},regularPath:"/develop/pythonsdk/model/channel.html",relativePath:"develop/pythonsdk/model/channel.md",key:"v-6da20066",path:"/develop/pythonsdk/model/channel.html",headers:[{level:3,title:"Channel",slug:"channel",normalizedTitle:"channel",charIndex:8},{level:3,title:"有关 position 的说明",slug:"有关-position-的说明",normalizedTitle:"有关 position 的说明",charIndex:663},{level:3,title:"ChannelType",slug:"channeltype",normalizedTitle:"channeltype",charIndex:252},{level:3,title:"ChannelSubType",slug:"channelsubtype",normalizedTitle:"channelsubtype",charIndex:299},{level:3,title:"PrivateType",slug:"privatetype",normalizedTitle:"privatetype",charIndex:469},{level:3,title:"SpeakPermission",slug:"speakpermission",normalizedTitle:"speakpermission",charIndex:517},{level:3,title:"应用子频道的应用类型",slug:"应用子频道的应用类型",normalizedTitle:"应用子频道的应用类型",charIndex:597}],lastUpdated:"4/21/2022, 7:02:11 AM",lastUpdatedTimestamp:1650524531e3,headersStr:"Channel 有关 position 的说明 ChannelType ChannelSubType PrivateType SpeakPermission 应用子频道的应用类型",content:"# 子频道对象(Channel)\n\n子频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# Channel\n\n字段名                类型       描述\nid                 string   子频道 ID\nguild_id           string   频道 ID\nname               string   子频道名\ntype               number   子频道类型 ChannelType\nsub_type           number   子频道子类型 ChannelSubType\nposition           number   排序，必填，而且不能够和其他子频道的值重复\nparent_id          string   分组 ID\nowner_id           string   创建人 ID\nprivate_type       string   子频道私密类型 PrivateType\nspeak_permission   number   子频道发言权限 SpeakPermission\napplication_id     string   用于标识应用子频道应用类型，仅应用子频道时会使用该字段，具体定义请参考 应用子频道的应用类型\npermissions        string   用户拥有的子频道权限 Permissions\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始。\n * 当子频道类型为 子频道分组（ChannelType=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始。\n * 如果不传默认追加到分组下最后一个。\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前。\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值。\n\n\n# ChannelType\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 QQ 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 ChannelType 时，请注意相关的未知 ID 的处理。\n\n\n# ChannelSubType\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n注：目前只有文字子频道具有 ChannelSubType 二级分类，同时二级分类也可能会不断增加，开发者也需要注意对未知 ID 的处理。\n\n\n# PrivateType\n\n子频道私密类型。\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# SpeakPermission\n\n值   描述\n0   无效类型\n1   所有人\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   CoDM 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于 QQ 频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",normalizedContent:"# 子频道对象(channel)\n\n子频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# channel\n\n字段名                类型       描述\nid                 string   子频道 id\nguild_id           string   频道 id\nname               string   子频道名\ntype               number   子频道类型 channeltype\nsub_type           number   子频道子类型 channelsubtype\nposition           number   排序，必填，而且不能够和其他子频道的值重复\nparent_id          string   分组 id\nowner_id           string   创建人 id\nprivate_type       string   子频道私密类型 privatetype\nspeak_permission   number   子频道发言权限 speakpermission\napplication_id     string   用于标识应用子频道应用类型，仅应用子频道时会使用该字段，具体定义请参考 应用子频道的应用类型\npermissions        string   用户拥有的子频道权限 permissions\n\n\n# 有关 position 的说明\n\n * postiton 从 1 开始。\n * 当子频道类型为 子频道分组（channeltype=4）时，由于 position 1 被未分组占用，所以 position 只能从 2 开始。\n * 如果不传默认追加到分组下最后一个。\n * 如果填写一个已经存在的值，那么会插入在原来的元素之前。\n * 如果填写一个较大值，与不填是相同的表现，同时存储的值会根据真实的 position 进行重新计算，并不会直接使用传入的值。\n\n\n# channeltype\n\n值       描述\n0       文字子频道\n1       保留，不可用\n2       语音子频道\n3       保留，不可用\n4       子频道分组\n10005   直播子频道\n10006   应用子频道\n10007   论坛子频道\n\n注：由于 qq 频道还在持续的迭代中，经常会有新的子频道类型增加，文档更新不一定及时，开发者识别 channeltype 时，请注意相关的未知 id 的处理。\n\n\n# channelsubtype\n\n值   描述\n0   闲聊\n1   公告\n2   攻略\n3   开黑\n\n注：目前只有文字子频道具有 channelsubtype 二级分类，同时二级分类也可能会不断增加，开发者也需要注意对未知 id 的处理。\n\n\n# privatetype\n\n子频道私密类型。\n\n值   描述\n0   公开频道\n1   群主管理员可见\n2   群主管理员 + 指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# speakpermission\n\n值   描述\n0   无效类型\n1   所有人\n2   群主管理员+指定成员，可使用 修改子频道权限接口 指定成员\n\n\n# 应用子频道的应用类型\n\n以下列表用于说明应用子频道的application_id含义。\n\n值         描述\n1000000   王者开黑大厅\n1000001   互动小游戏\n1000010   腾讯投票\n1000051   飞车开黑大厅\n1000050   日程提醒\n1000070   codm 开黑大厅\n1010000   和平精英开黑大厅\n\n注：由于 qq 频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"子频道权限对象(ChannelPermissions)",frontmatter:{},regularPath:"/develop/pythonsdk/model/channel_permission.html",relativePath:"develop/pythonsdk/model/channel_permission.md",key:"v-7c630a51",path:"/develop/pythonsdk/model/channel_permission.html",headers:[{level:3,title:"ChannelPermissions",slug:"channelpermissions",normalizedTitle:"channelpermissions",charIndex:10},{level:3,title:"Permissions",slug:"permissions",normalizedTitle:"permissions",charIndex:17}],lastUpdated:"5/17/2022, 1:48:09 PM",lastUpdatedTimestamp:1652795289e3,headersStr:"ChannelPermissions Permissions",content:'# 子频道权限对象(ChannelPermissions)\n\n\n# ChannelPermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 ID\nuser_id       string   用户 ID\npermissions   string   用户拥有的子频道权限，具体值参考permissions\n\n\n# Permissions\n\n权限是 QQ 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n注意：不能设置ID为1的身份组权限。逻辑上未获得任何身份组权限的普通用户被归到"普通用户"身份组（ID=1）。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004 (1 << 2)   支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000004 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n# 参数参考\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限',normalizedContent:'# 子频道权限对象(channelpermissions)\n\n\n# channelpermissions\n\n字段名           类型       描述\nchannel_id    string   子频道 id\nuser_id       string   用户 id\npermissions   string   用户拥有的子频道权限，具体值参考permissions\n\n\n# permissions\n\n权限是 qq 频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n注意：不能设置id为1的身份组权限。逻辑上未获得任何身份组权限的普通用户被归到"普通用户"身份组（id=1）。\n\n权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6fff，会被序列化为十进制"28671"。\n\n权限       值                       描述\n可查看子频道   0x0000000001 (1 << 0)   目前仅支持指定成员可见类型，不支持身份组可见类型\n可管理子频道   0x0000000002 (1 << 1)   创建者、管理员、子频道管理员都具有此权限\n可发言子频道   0x0000000004 (1 << 2)   支持指定成员发言类型，支持身份组发言类型\n可直播子频道   0x0000000004 (1 << 3)   支持指定成员发起直播，支持身份组发起直播；仅可在直播子频道中设置\n\n# 参数参考\n\n字段名      类型       描述\nadd      string   字符串形式的位图表示赋予用户的权限\nremove   string   字符串形式的位图表示删除用户的权限',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情对象",frontmatter:{},regularPath:"/develop/pythonsdk/model/emoji.html",relativePath:"develop/pythonsdk/model/emoji.md",key:"v-dd0df526",path:"/develop/pythonsdk/model/emoji.html",headers:[{level:3,title:"Emoji",slug:"emoji",normalizedTitle:"emoji",charIndex:26},{level:3,title:"EmojiType",slug:"emojitype",normalizedTitle:"emojitype",charIndex:142},{level:3,title:"Emoji 列表",slug:"emoji-列表",normalizedTitle:"emoji 列表",charIndex:112}],lastUpdated:"3/14/2022, 2:00:12 PM",lastUpdatedTimestamp:1647266412e3,headersStr:"Emoji EmojiType Emoji 列表",content:"# 表情对象\n\n用来表示一个表情基本单位。\n\n\n# Emoji\n\n字段名    类型       描述\nid     string   表情 ID，系统表情使用数字为 ID，emoji 使用 emoji 本身为 id，参考 Emoji 列表\ntype   uint32   表情类型 EmojiType\n\n\n# EmojiType\n\n值   描述\n1   系统表情\n2   emoji 表情\n\n\n# Emoji 列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的 QQ 系统表情类型（EmojiType=1）来处理。\n\n表情类型   表情 ID    表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      NO\n1      124      OK\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",normalizedContent:"# 表情对象\n\n用来表示一个表情基本单位。\n\n\n# emoji\n\n字段名    类型       描述\nid     string   表情 id，系统表情使用数字为 id，emoji 使用 emoji 本身为 id，参考 emoji 列表\ntype   uint32   表情类型 emojitype\n\n\n# emojitype\n\n值   描述\n1   系统表情\n2   emoji 表情\n\n\n# emoji 列表\n\n本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的 qq 系统表情类型（emojitype=1）来处理。\n\n表情类型   表情 id    表情含义\n1      4        得意\n1      5        流泪\n1      8        睡\n1      9        大哭\n1      10       尴尬\n1      12       调皮\n1      14       微笑\n1      16       酷\n1      21       可爱\n1      23       傲慢\n1      24       饥饿\n1      25       困\n1      26       惊恐\n1      27       流汗\n1      28       憨笑\n1      29       悠闲\n1      30       奋斗\n1      32       疑问\n1      33       嘘\n1      34       晕\n1      38       敲打\n1      39       再见\n1      41       发抖\n1      42       爱情\n1      43       跳跳\n1      49       拥抱\n1      53       蛋糕\n1      60       咖啡\n1      63       玫瑰\n1      66       爱心\n1      74       太阳\n1      75       月亮\n1      76       赞\n1      78       握手\n1      79       胜利\n1      85       飞吻\n1      89       西瓜\n1      96       冷汗\n1      97       擦汗\n1      98       抠鼻\n1      99       鼓掌\n1      100      糗大了\n1      101      坏笑\n1      102      左哼哼\n1      103      右哼哼\n1      104      哈欠\n1      106      委屈\n1      109      左亲亲\n1      111      可怜\n1      116      示爱\n1      118      抱拳\n1      120      拳头\n1      122      爱你\n1      123      no\n1      124      ok\n1      125      转圈\n1      129      挥手\n1      144      喝彩\n1      147      棒棒糖\n1      171      茶\n1      173      泪奔\n1      174      无奈\n1      175      卖萌\n1      176      小纠结\n1      179      doge\n1      180      惊喜\n1      181      骚扰\n1      182      笑哭\n1      183      我最美\n1      201      点赞\n1      203      托脸\n1      212      托腮\n1      214      啵啵\n1      219      蹭一蹭\n1      222      抱抱\n1      227      拍手\n1      232      佛系\n1      240      喷脸\n1      243      甩头\n1      246      加油抱抱\n1      262      脑阔疼\n1      264      捂脸\n1      265      辣眼睛\n1      266      哦哟\n1      267      头秃\n1      268      问号脸\n1      269      暗中观察\n1      270      emm\n1      271      吃瓜\n1      272      呵呵哒\n1      273      我酸了\n1      277      汪汪\n1      278      汗\n1      281      无眼笑\n1      282      敬礼\n1      284      面无表情\n1      285      摸鱼\n1      287      哦\n1      289      睁眼\n1      290      敲开心\n1      293      摸锦鲤\n1      294      期待\n1      297      拜谢\n1      298      元宝\n1      299      牛啊\n1      305      右亲亲\n1      306      牛气冲天\n1      307      喵喵\n1      314      仔细分析\n1      315      加油\n1      318      崇拜\n1      319      比心\n1      320      庆祝\n1      322      拒绝\n1      324      吃糖\n1      326      生气\n2      9728     ☀ 晴天\n2      9749     ☕ 咖啡\n2      9786     ☺ 可爱\n2      10024    ✨ 闪光\n2      10060    ❌ 错误\n2      10068    ❔ 问号\n2      127801   🌹 玫瑰\n2      127817   🍉 西瓜\n2      127822   🍎 苹果\n2      127827   🍓 草莓\n2      127836   🍜 拉面\n2      127838   🍞 面包\n2      127847   🍧 刨冰\n2      127866   🍺 啤酒\n2      127867   🍻 干杯\n2      127881   🎉 庆祝\n2      128027   🐛 虫\n2      128046   🐮 牛\n2      128051   🐳 鲸鱼\n2      128053   🐵 猴\n2      128074   👊 拳头\n2      128076   👌 好的\n2      128077   👍 厉害\n2      128079   👏 鼓掌\n2      128089   👙 内衣\n2      128102   👦 男孩\n2      128104   👨 爸爸\n2      128147   💓 爱心\n2      128157   💝 礼物\n2      128164   💤 睡觉\n2      128166   💦 水\n2      128168   💨 吹气\n2      128170   💪 肌肉\n2      128235   📫 邮箱\n2      128293   🔥 火\n2      128513   😁 呲牙\n2      128514   😂 激动\n2      128516   😄 高兴\n2      128522   😊 嘿嘿\n2      128524   😌 羞涩\n2      128527   😏 哼哼\n2      128530   😒 不屑\n2      128531   😓 汗\n2      128532   😔 失落\n2      128536   😘 飞吻\n2      128538   😚 亲亲\n2      128540   😜 淘气\n2      128541   😝 吐舌\n2      128557   😭 大哭\n2      128560   😰 紧张\n2      128563   😳 瞪眼",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道对象(Guild)",frontmatter:{},regularPath:"/develop/pythonsdk/model/guild.html",relativePath:"develop/pythonsdk/model/guild.md",key:"v-ed61c066",path:"/develop/pythonsdk/model/guild.html",headers:[{level:3,title:"Guild",slug:"guild",normalizedTitle:"guild",charIndex:7}],lastUpdated:"12/23/2021, 7:19:13 AM",lastUpdatedTimestamp:1640243953e3,headersStr:"Guild",content:"# 频道对象(Guild)\n\n频道对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# Guild\n\n字段名            类型        描述\nid             string    频道ID\nname           string    频道名称\nicon           string    频道头像地址\nowner_id       string    创建人用户ID\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\njoined_at      string    加入时间",normalizedContent:"# 频道对象(guild)\n\n频道对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# guild\n\n字段名            类型        描述\nid             string    频道id\nname           string    频道名称\nicon           string    频道头像地址\nowner_id       string    创建人用户id\nowner          boolean   当前人是否是创建人\nmember_count   number    成员数\nmax_members    number    最大成员数\ndescription    string    描述\njoined_at      string    加入时间",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息按钮组件（InlineKeyboard）",frontmatter:{},regularPath:"/develop/pythonsdk/model/inline_keyboard.html",relativePath:"develop/pythonsdk/model/inline_keyboard.md",key:"v-64345a0d",path:"/develop/pythonsdk/model/inline_keyboard.html",headers:[{level:3,title:"InlineKeyboard",slug:"inlinekeyboard",normalizedTitle:"inlinekeyboard",charIndex:9},{level:3,title:"InlineKeyboardRow",slug:"inlinekeyboardrow",normalizedTitle:"inlinekeyboardrow",charIndex:94},{level:3,title:"Button",slug:"button",normalizedTitle:"button",charIndex:214},{level:3,title:"RenderData",slug:"renderdata",normalizedTitle:"renderdata",charIndex:386},{level:3,title:"RenderStyle",slug:"renderstyle",normalizedTitle:"renderstyle",charIndex:612},{level:3,title:"Action",slug:"action",normalizedTitle:"action",charIndex:434},{level:3,title:"ActionType",slug:"actiontype",normalizedTitle:"actiontype",charIndex:799},{level:3,title:"Permission",slug:"permission",normalizedTitle:"permission",charIndex:837},{level:3,title:"PermissionType",slug:"permissiontype",normalizedTitle:"permissiontype",charIndex:1293}],lastUpdated:"5/19/2022, 2:40:08 AM",lastUpdatedTimestamp:1652928008e3,headersStr:"InlineKeyboard InlineKeyboardRow Button RenderData RenderStyle Action ActionType Permission PermissionType",content:"# 消息按钮组件（InlineKeyboard）\n\n\n# InlineKeyboard\n\n字段名    类型                              描述\nrows   InlineKeyboardRow 消息按钮组件行对象数组   数组的一项代表消息按钮组件的一行,最多含有 5 行\n\n\n# InlineKeyboardRow\n\n字段名       类型              描述\nbuttons   Button 按钮对象数组   数组的一项代表一个按钮，每个 InlineKeyboardRow 最多含有 5 个 Button\n\n\n# Button\n\n字段名           类型                    描述\nid            string                按钮 id\nrender_data   RenderData 按纽渲染展示对象   用于设定按钮的显示效果\naction        Action 该按纽操作相关字段      用于设定按钮点击后的操作\n\n\n# RenderData\n\n字段名             类型       描述\nlabel           string   按纽上的文字\nvisited_label   string   点击后按纽上文字\nstyle           int      按钮样式，参考 RenderStyle\n\n\n# RenderStyle\n\n字段名   类型    描述\n0     int   灰色线框\n1     int   蓝色线框\n\n\n# Action\n\n字段名                        类型              描述\ntype                       int             操作类型，参考 ActionType\npermission                 Permission 对象   用于设定操作按钮所需的权限\nclick_limit                int             可点击的次数, 默认不限\ndata                       string          操作相关数据\nat_bot_show_channel_list   bool            false:不弹出子频道选择器 true:弹出子频道选择器\n\n\n# ActionType\n\n值   描述\n0   http 或 小程序 客户端识别 schem, data字段为链接\n1   回调后台接口, data 传给后台\n2   at机器人, 根据 at_bot_show_channel_list 决定在当前频道或用户选择频道,自动在输入框\n    @bot data\n\n\n# Permission\n\n字段名                类型          描述\ntype               int         权限类型，参考 PermissionType\nspecify_role_ids   string 数组   有权限的身份组id的列表\nspecify_user_ids   string 数组   有权限的用户id的列表\n\n\n# PermissionType\n\n值   描述\n0   指定用户可操作\n1   仅管理者可操作\n2   所有人可操作\n3   指定身份组可操作",normalizedContent:"# 消息按钮组件（inlinekeyboard）\n\n\n# inlinekeyboard\n\n字段名    类型                              描述\nrows   inlinekeyboardrow 消息按钮组件行对象数组   数组的一项代表消息按钮组件的一行,最多含有 5 行\n\n\n# inlinekeyboardrow\n\n字段名       类型              描述\nbuttons   button 按钮对象数组   数组的一项代表一个按钮，每个 inlinekeyboardrow 最多含有 5 个 button\n\n\n# button\n\n字段名           类型                    描述\nid            string                按钮 id\nrender_data   renderdata 按纽渲染展示对象   用于设定按钮的显示效果\naction        action 该按纽操作相关字段      用于设定按钮点击后的操作\n\n\n# renderdata\n\n字段名             类型       描述\nlabel           string   按纽上的文字\nvisited_label   string   点击后按纽上文字\nstyle           int      按钮样式，参考 renderstyle\n\n\n# renderstyle\n\n字段名   类型    描述\n0     int   灰色线框\n1     int   蓝色线框\n\n\n# action\n\n字段名                        类型              描述\ntype                       int             操作类型，参考 actiontype\npermission                 permission 对象   用于设定操作按钮所需的权限\nclick_limit                int             可点击的次数, 默认不限\ndata                       string          操作相关数据\nat_bot_show_channel_list   bool            false:不弹出子频道选择器 true:弹出子频道选择器\n\n\n# actiontype\n\n值   描述\n0   http 或 小程序 客户端识别 schem, data字段为链接\n1   回调后台接口, data 传给后台\n2   at机器人, 根据 at_bot_show_channel_list 决定在当前频道或用户选择频道,自动在输入框\n    @bot data\n\n\n# permission\n\n字段名                类型          描述\ntype               int         权限类型，参考 permissiontype\nspecify_role_ids   string 数组   有权限的身份组id的列表\nspecify_user_ids   string 数组   有权限的用户id的列表\n\n\n# permissiontype\n\n值   描述\n0   指定用户可操作\n1   仅管理者可操作\n2   所有人可操作\n3   指定身份组可操作",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"私信会话对象（DMS）",frontmatter:{},regularPath:"/develop/pythonsdk/model/dms.html",relativePath:"develop/pythonsdk/model/dms.md",key:"v-7f2650ad",path:"/develop/pythonsdk/model/dms.html",headers:[{level:2,title:"DMS",slug:"dms",normalizedTitle:"dms",charIndex:9}],lastUpdated:"12/23/2021, 7:19:13 AM",lastUpdatedTimestamp:1640243953e3,headersStr:"DMS",content:"# 私信会话对象（DMS）\n\n\n# DMS\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 ID\nchannel_id    string   私信会话关联的子频道 ID\ncreate_time   string   创建私信会话时间戳",normalizedContent:"# 私信会话对象（dms）\n\n\n# dms\n\n字段名           类型       描述\nguild_id      string   私信会话关联的频道 id\nchannel_id    string   私信会话关联的子频道 id\ncreate_time   string   创建私信会话时间戳",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"成员对象(Member)",frontmatter:{},regularPath:"/develop/pythonsdk/model/member.html",relativePath:"develop/pythonsdk/model/member.md",key:"v-7c7206b3",path:"/develop/pythonsdk/model/member.html",headers:[{level:2,title:"Member",slug:"member",normalizedTitle:"member",charIndex:7},{level:3,title:"MemberWithGuildID",slug:"memberwithguildid",normalizedTitle:"memberwithguildid",charIndex:308}],lastUpdated:"2/23/2022, 8:09:37 AM",lastUpdatedTimestamp:1645603777e3,headersStr:"Member MemberWithGuildID",content:'# 成员对象(Member)\n\n\n# Member\n\n字段名         类型         描述\nuser        User       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 ID，默认值可参考DefaultRoleIDs\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"\n\n\n# MemberWithGuildID\n\n字段名         类型         描述\nguild_id    string     频道 ID\nuser        User       用户基础信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份\njoined_at   string     用户加入频道的时间，是个 ISO8601 timestamp\n                       字符串，例："2021-11-23T15:16:48+08:00"',normalizedContent:'# 成员对象(member)\n\n\n# member\n\n字段名         类型         描述\nuser        user       用户的频道基础信息，只有成员相关接口中会填充此信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份组 id，默认值可参考defaultroleids\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"\n\n\n# memberwithguildid\n\n字段名         类型         描述\nguild_id    string     频道 id\nuser        user       用户基础信息\nnick        string     用户在频道内的昵称\nroles       string[]   用户在频道内的身份\njoined_at   string     用户加入频道的时间，是个 iso8601 timestamp\n                       字符串，例："2021-11-23t15:16:48+08:00"',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"消息对象(Message)",frontmatter:{},regularPath:"/develop/pythonsdk/model/message.html",relativePath:"develop/pythonsdk/model/message.md",key:"v-2bbdee4d",path:"/develop/pythonsdk/model/message.html",headers:[{level:2,title:"Message",slug:"message",normalizedTitle:"message",charIndex:7},{level:2,title:"MessageSendRequest",slug:"messagesendrequest",normalizedTitle:"messagesendrequest",charIndex:1270},{level:2,title:"MessageEmbed",slug:"messageembed",normalizedTitle:"messageembed",charIndex:724},{level:2,title:"MessageEmbedField",slug:"messageembedfield",normalizedTitle:"messageembedfield",charIndex:1992},{level:2,title:"MessageAttachment",slug:"messageattachment",normalizedTitle:"messageattachment",charIndex:679},{level:2,title:"MessageArk",slug:"messageark",normalizedTitle:"messageark",charIndex:880},{level:2,title:"MessageArkKv",slug:"messagearkkv",normalizedTitle:"messagearkkv",charIndex:2304},{level:2,title:"MessageArkObj",slug:"messagearkobj",normalizedTitle:"messagearkobj",charIndex:2417},{level:2,title:"MessageArkObjKv",slug:"messagearkobjkv",normalizedTitle:"messagearkobjkv",charIndex:2509},{level:2,title:"MessageReference",slug:"messagereference",normalizedTitle:"messagereference",charIndex:1176},{level:2,title:"MessageKeyboard",slug:"messagekeyboard",normalizedTitle:"messagekeyboard",charIndex:2811},{level:2,title:"MessageAudited",slug:"messageaudited",normalizedTitle:"messageaudited",charIndex:2988}],lastUpdated:"5/19/2022, 2:40:08 AM",lastUpdatedTimestamp:1652928008e3,headersStr:"Message MessageSendRequest MessageEmbed MessageEmbedField MessageAttachment MessageArk MessageArkKv MessageArkObj MessageArkObjKv MessageReference MessageKeyboard MessageAudited",content:'# 消息对象(Message)\n\n\n# Message\n\n字段名                 类型                    描述\nid                  string                消息 id\nchannel_id          string                子频道 ID\nguild_id            string                频道 ID\ncontent             string                消息内容\ntimestamp           string                消息创建时间，是个 iISO8601 timestamp\n                                          字符串，例："2021-11-23T15:16:48+08:00"\nedited_timestamp    string                消息编辑时间，是个 iISO8601 timestamp\n                                          字符串，例："2021-11-23T15:16:48+08:00"\nmention_everyone    boolean               是否是@全员消息\nauthor              User                  消息创建者\nattachments         MessageAttachment[]   附件\nembeds              MessageEmbed[]        embed\nmentions            User                  消息中@的人\nmember              Member                消息创建者的 member 信息\nark                 MessageArk            ark 消息\nseq                 number                用于消息间的排序，seq\n                                          在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序。(目前只在消息事件中有值，后续废弃)\nseq_in_channel      string                子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序\nmessage_reference   MessageReference      引用消息对象\nsrc_guild_id        string                用于私信场景下识别真实的来源频道id\n\n\n# MessageSendRequest\n\n字段名                 类型                 描述\ncontent             string             消息内容，文本内容，支持内嵌格式\nembed               MessageEmbed       embed 消息，一种特殊的 ark\nark                 MessageArk         ark 消息\nimage               string             图片 url 地址\nmsg_id              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessage_reference   MessageReference   引用消息对象\n\n\n# MessageEmbed\n\n字段名           类型                    描述\ntitle         string                标题\ndescription   string                描述\nprompt        string                消息弹窗内容\ntimestamp     string                消息创建时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\nfields        MessageEmbedField[]   消息体\n\n\n# MessageEmbedField\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# MessageAttachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# MessageArk\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            MessageAkrKv[]   kv 值列表\n\n\n# MessageArkKv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     MessageArkObj[]   ark obj 类型的列表\n\n\n# MessageArkObj\n\n字段名      类型                  描述\nobj_kv   MessageArkObjKv[]   ark objkv 列表\n\n\n# MessageArkObjKv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# MessageReference\n\n字段名                        类型        必填 ｜描述\nmessage_id                 string    是 ｜ 需要引用回复的消息 ID\nignore_get_message_error   boolean   否 ｜ 是否忽略获取引用消息详情错误，默认否\n\n\n# MessageKeyboard\n\n字段名       类型                  必填 ｜描述\nid        string              是 ｜ keyboard 模板 id\ncontent   InlineKeyboard 对象   否 ｜ 自定义 keyboard 内容,与 id 参数互斥,参数都传值将报错。\n\n\n# MessageAudited\n\n消息审核对象\n\n字段名              类型                 描述\naudit_id         string             消息审核 ID\nmessage_id       string             消息 ID，只有审核通过事件才会有值\nguild_id         string             频道 ID\nchannel_id       string             子频道 ID\naudit_time       string             消息审核时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\ncreate_time      string timestamp   消息创建时间，是个 ISO8601 timestamp\n                                    字符串，例："2021-11-23T15:16:48+08:00"\nseq_in_channel   string             子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序',normalizedContent:'# 消息对象(message)\n\n\n# message\n\n字段名                 类型                    描述\nid                  string                消息 id\nchannel_id          string                子频道 id\nguild_id            string                频道 id\ncontent             string                消息内容\ntimestamp           string                消息创建时间，是个 iiso8601 timestamp\n                                          字符串，例："2021-11-23t15:16:48+08:00"\nedited_timestamp    string                消息编辑时间，是个 iiso8601 timestamp\n                                          字符串，例："2021-11-23t15:16:48+08:00"\nmention_everyone    boolean               是否是@全员消息\nauthor              user                  消息创建者\nattachments         messageattachment[]   附件\nembeds              messageembed[]        embed\nmentions            user                  消息中@的人\nmember              member                消息创建者的 member 信息\nark                 messageark            ark 消息\nseq                 number                用于消息间的排序，seq\n                                          在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序。(目前只在消息事件中有值，后续废弃)\nseq_in_channel      string                子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序\nmessage_reference   messagereference      引用消息对象\nsrc_guild_id        string                用于私信场景下识别真实的来源频道id\n\n\n# messagesendrequest\n\n字段名                 类型                 描述\ncontent             string             消息内容，文本内容，支持内嵌格式\nembed               messageembed       embed 消息，一种特殊的 ark\nark                 messageark         ark 消息\nimage               string             图片 url 地址\nmsg_id              string             要回复的消息 id。带了 msg_id 视为被动回复消息，否则视为主动推送消息\nmessage_reference   messagereference   引用消息对象\n\n\n# messageembed\n\n字段名           类型                    描述\ntitle         string                标题\ndescription   string                描述\nprompt        string                消息弹窗内容\ntimestamp     string                消息创建时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\nfields        messageembedfield[]   消息体\n\n\n# messageembedfield\n\n字段名     类型       描述\nname    string   字段名\nvalue   string   字段值\n\n\n# messageattachment\n\n字段名   类型       描述\nurl   string   下载地址\n\n\n# messageark\n\n字段名           类型               描述\ntemplate_id   number           ark 模板 id（需要先申请）\nkv            messageakrkv[]   kv 值列表\n\n\n# messagearkkv\n\n字段名     类型                描述\nkey     string            key\nvalue   string            value\nobj     messagearkobj[]   ark obj 类型的列表\n\n\n# messagearkobj\n\n字段名      类型                  描述\nobj_kv   messagearkobjkv[]   ark objkv 列表\n\n\n# messagearkobjkv\n\n字段名     类型       描述\nkey     string   key\nvalue   string   value\n\n\n# messagereference\n\n字段名                        类型        必填 ｜描述\nmessage_id                 string    是 ｜ 需要引用回复的消息 id\nignore_get_message_error   boolean   否 ｜ 是否忽略获取引用消息详情错误，默认否\n\n\n# messagekeyboard\n\n字段名       类型                  必填 ｜描述\nid        string              是 ｜ keyboard 模板 id\ncontent   inlinekeyboard 对象   否 ｜ 自定义 keyboard 内容,与 id 参数互斥,参数都传值将报错。\n\n\n# messageaudited\n\n消息审核对象\n\n字段名              类型                 描述\naudit_id         string             消息审核 id\nmessage_id       string             消息 id，只有审核通过事件才会有值\nguild_id         string             频道 id\nchannel_id       string             子频道 id\naudit_time       string             消息审核时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\ncreate_time      string timestamp   消息创建时间，是个 iso8601 timestamp\n                                    字符串，例："2021-11-23t15:16:48+08:00"\nseq_in_channel   string             子频道消息 seq，用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"精华消息对象(PinsMessage)",frontmatter:{},regularPath:"/develop/pythonsdk/model/pins_message.html",relativePath:"develop/pythonsdk/model/pins_message.md",key:"v-ed9e72ca",path:"/develop/pythonsdk/model/pins_message.html",headers:[{level:2,title:"PinsMessage",slug:"pinsmessage",normalizedTitle:"pinsmessage",charIndex:9}],lastUpdated:"3/14/2022, 2:00:12 PM",lastUpdatedTimestamp:1647266412e3,headersStr:"PinsMessage",content:"# 精华消息对象(PinsMessage)\n\n\n# PinsMessage\n\n字段名           类型          描述\nguild_id      string      频道 ID\nchannel_id    string      子频道 ID\nmessage_ids   string 列表   消息 ID 列表",normalizedContent:"# 精华消息对象(pinsmessage)\n\n\n# pinsmessage\n\n字段名           类型          描述\nguild_id      string      频道 id\nchannel_id    string      子频道 id\nmessage_ids   string 列表   消息 id 列表",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"频道身份组对象(Role)",frontmatter:{},regularPath:"/develop/pythonsdk/model/role.html",relativePath:"develop/pythonsdk/model/role.md",key:"v-5349e18a",path:"/develop/pythonsdk/model/role.html",headers:[{level:3,title:"Role",slug:"role",normalizedTitle:"role",charIndex:10},{level:3,title:"DefaultRoleIDs(系统默认生成下列身份组 ID)",slug:"defaultroleids-系统默认生成下列身份组-id",normalizedTitle:"defaultroleids(系统默认生成下列身份组 id)",charIndex:284}],lastUpdated:"12/23/2021, 7:19:13 AM",lastUpdatedTimestamp:1640243953e3,headersStr:"Role DefaultRoleIDs(系统默认生成下列身份组 ID)",content:"# 频道身份组对象(Role)\n\n\n# Role\n\n字段名            类型       描述\nid             string   身份组 ID\nname           string   名称\ncolor          number   ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# DefaultRoleIDs(系统默认生成下列身份组 ID)\n\n身份组 ID 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员",normalizedContent:"# 频道身份组对象(role)\n\n\n# role\n\n字段名            类型       描述\nid             string   身份组 id\nname           string   名称\ncolor          number   argb 的 hex 十六进制颜色值转换后的十进制数值（例：4294927682）\nhoist          number   是否在成员列表中单独展示: 0-否, 1-是\nnumber         number   人数\nmember_limit   number   成员上限\n\n\n# defaultroleids(系统默认生成下列身份组 id)\n\n身份组 id 默认值   描述\n1            全体成员\n2            管理员\n4            群主/创建者\n5            子频道管理员",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"用户对象(User)",frontmatter:{},regularPath:"/develop/pythonsdk/model/user.html",relativePath:"develop/pythonsdk/model/user.md",key:"v-4b13e6d1",path:"/develop/pythonsdk/model/user.html",headers:[{level:2,title:"User",slug:"user",normalizedTitle:"user",charIndex:7}],lastUpdated:"12/23/2021, 7:19:13 AM",lastUpdatedTimestamp:1640243953e3,headersStr:"User",content:"# 用户对象(User)\n\n用户对象中所涉及的 ID 类数据，都仅在机器人场景流通，与真实的 ID 无关，请不要理解为真实的 ID。\n\n\n# User\n\n字段名                  类型        描述\nid                   string    用户 ID\nusername             string    用户名\navatar               string    用户头像地址\nbot                  boolean   是否是机器人\nunion_openid         string    特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string    机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。",normalizedContent:"# 用户对象(user)\n\n用户对象中所涉及的 id 类数据，都仅在机器人场景流通，与真实的 id 无关，请不要理解为真实的 id。\n\n\n# user\n\n字段名                  类型        描述\nid                   string    用户 id\nusername             string    用户名\navatar               string    用户头像地址\nbot                  boolean   是否是机器人\nunion_openid         string    特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员。\nunion_user_account   string    机器人关联的互联应用的用户信息，与 union_openid 关联的应用是同一个。如需申请，请联系平台运营人员。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"日程对象(Schedule)",frontmatter:{},regularPath:"/develop/pythonsdk/model/schedule.html",relativePath:"develop/pythonsdk/model/schedule.md",key:"v-3ec5678e",path:"/develop/pythonsdk/model/schedule.html",headers:[{level:2,title:"Schedule",slug:"schedule",normalizedTitle:"schedule",charIndex:7},{level:2,title:"RemindType",slug:"remindtype",normalizedTitle:"remindtype",charIndex:348}],lastUpdated:"2/8/2022, 9:16:51 AM",lastUpdatedTimestamp:1644311811e3,headersStr:"Schedule RemindType",content:"# 日程对象(Schedule)\n\n\n# Schedule\n\n字段名               类型       描述\nid                string   日程 ID\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           Member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 ID\nremind_type       string   日程提醒类型，取值参考RemindType\n\n\n# RemindType\n\n提醒类型 ID   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",normalizedContent:"# 日程对象(schedule)\n\n\n# schedule\n\n字段名               类型       描述\nid                string   日程 id\nname              string   日程名称\ndescription       string   日程描述\nstart_timestamp   string   日程开始时间戳(ms)\nend_timestamp     string   日程结束时间戳(ms)\ncreator           member   创建者\njump_channel_id   string   日程开始时跳转到的子频道 id\nremind_type       string   日程提醒类型，取值参考remindtype\n\n\n# remindtype\n\n提醒类型 id   描述\n0         不提醒\n1         开始时提醒\n2         开始前 5 分钟提醒\n3         开始前 15 分钟提醒\n4         开始前 30 分钟提醒\n5         开始前 60 分钟提醒",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"表情表态对象",frontmatter:{},regularPath:"/develop/pythonsdk/model/reaction.html",relativePath:"develop/pythonsdk/model/reaction.md",key:"v-5e80d495",path:"/develop/pythonsdk/model/reaction.html",headers:[{level:2,title:"MessageReaction",slug:"messagereaction",normalizedTitle:"messagereaction",charIndex:85},{level:2,title:"ReactionTarget",slug:"reactiontarget",normalizedTitle:"reactiontarget",charIndex:257},{level:2,title:"ReactionUsers",slug:"reactionusers",normalizedTitle:"reactionusers",charIndex:428},{level:2,title:"ReactionTargetType",slug:"reactiontargettype",normalizedTitle:"reactiontargettype",charIndex:405},{level:2,title:"表情表态事件监听",slug:"表情表态事件监听",normalizedTitle:"表情表态事件监听",charIndex:670},{level:3,title:"代码示例",slug:"代码示例",normalizedTitle:"代码示例",charIndex:683}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"MessageReaction ReactionTarget ReactionUsers ReactionTargetType 表情表态事件监听 代码示例",content:'# 表情表态对象\n\n在消息、帖子、评论、回复中使用的表情。\n\n表情表态相关事件可参考表情表态事件。\n\n事件监听方式可参考ws 使用。\n\n具体示例可参考使用示例。\n\n\n# MessageReaction\n\n字段名          类型               描述\nuser_id      string           用户 ID\nguild_id     string           频道 ID\nchannel_id   string           子频道 ID\ntarget       ReactionTarget   表态对象\nemoji        Emoji            表态所用表情\n\n\n# ReactionTarget\n\n字段名    类型       描述\nid     string   表态对象 ID\ntype   number   表态对象类型，参考 ReactionTargetType\n\n\n# ReactionUsers\n\n字段名      类型          描述\nusers    User 对象列表   用户对象列表，参考 User，会返回 id, username, avatar 等\ncookie   string      分页参数，用于拉取下一页\nis_end   bool        是否已拉取完成到最后一页，true代表完成\n\n\n# ReactionTargetType\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复\n\n\n# 表情表态事件监听\n\n\n# 代码示例\n\nfrom typing import List\n\nimport botpy\n\nfrom botpy.message import Message\nfrom botpy.types import reaction\nfrom botpy.types.user import User\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        users: List[User] = []\n        cookie = ""\n        while True:\n            reactionUsers: reaction.ReactionUsers = await self.api.get_reaction_users(\n                "2568610",\n                "088de19cbeb883e7e97110a2e39c0138d80d48acfc879406",\n                1,\n                "4",\n                cookie=cookie,\n            )\n\n            if not reactionUsers:\n                break\n\n            users.extend(reactionUsers["users"])\n\n            if reactionUsers["is_end"]:\n                break\n            else:\n                cookie = reactionUsers["cookie"]\n\n        print(len(users))\n        for user in users:\n            print(user["username"])\n\nintents = botpy.Intents(public_guild_messages=True)\nclient = MyClient(intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n在频道内，长按某条消息进行表情回复 👍，ws 收到消息并打印如下 log 信息：\n\n"event MESSAGE_REACTION_ADD, reaction channel id 2568610"\n\n\n1\n',normalizedContent:'# 表情表态对象\n\n在消息、帖子、评论、回复中使用的表情。\n\n表情表态相关事件可参考表情表态事件。\n\n事件监听方式可参考ws 使用。\n\n具体示例可参考使用示例。\n\n\n# messagereaction\n\n字段名          类型               描述\nuser_id      string           用户 id\nguild_id     string           频道 id\nchannel_id   string           子频道 id\ntarget       reactiontarget   表态对象\nemoji        emoji            表态所用表情\n\n\n# reactiontarget\n\n字段名    类型       描述\nid     string   表态对象 id\ntype   number   表态对象类型，参考 reactiontargettype\n\n\n# reactionusers\n\n字段名      类型          描述\nusers    user 对象列表   用户对象列表，参考 user，会返回 id, username, avatar 等\ncookie   string      分页参数，用于拉取下一页\nis_end   bool        是否已拉取完成到最后一页，true代表完成\n\n\n# reactiontargettype\n\n值   描述\n0   消息\n1   帖子\n2   评论\n3   回复\n\n\n# 表情表态事件监听\n\n\n# 代码示例\n\nfrom typing import list\n\nimport botpy\n\nfrom botpy.message import message\nfrom botpy.types import reaction\nfrom botpy.types.user import user\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        users: list[user] = []\n        cookie = ""\n        while true:\n            reactionusers: reaction.reactionusers = await self.api.get_reaction_users(\n                "2568610",\n                "088de19cbeb883e7e97110a2e39c0138d80d48acfc879406",\n                1,\n                "4",\n                cookie=cookie,\n            )\n\n            if not reactionusers:\n                break\n\n            users.extend(reactionusers["users"])\n\n            if reactionusers["is_end"]:\n                break\n            else:\n                cookie = reactionusers["cookie"]\n\n        print(len(users))\n        for user in users:\n            print(user["username"])\n\nintents = botpy.intents(public_guild_messages=true)\nclient = myclient(intents)\nclient.run(appid={appid}, token={token})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n在频道内，长按某条消息进行表情回复 👍，ws 收到消息并打印如下 log 信息：\n\n"event message_reaction_add, reaction channel id 2568610"\n\n\n1\n',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"v.5(2023.11.08)",frontmatter:{},regularPath:"/newfeature/eleven/",relativePath:"newfeature/eleven/README.md",key:"v-a9a94810",path:"/newfeature/eleven/",headers:[{level:2,title:"一、全域融合",slug:"一、全域融合",normalizedTitle:"一、全域融合",charIndex:22},{level:2,title:"二、开发者入驻全流程管理",slug:"二、开发者入驻全流程管理",normalizedTitle:"二、开发者入驻全流程管理",charIndex:33},{level:3,title:"1.机器人创建 – 支持多场景选择",slug:"_1-机器人创建-支持多场景选择",normalizedTitle:"1.机器人创建 – 支持多场景选择",charIndex:50},{level:3,title:"2.机器人开发 – 效果预览",slug:"_2-机器人开发-效果预览",normalizedTitle:"2.机器人开发 – 效果预览",charIndex:72},{level:3,title:"3.机器人发布 – 自定义发布范围",slug:"_3-机器人发布-自定义发布范围",normalizedTitle:"3.机器人发布 – 自定义发布范围",charIndex:91}],lastUpdated:"11/9/2023, 7:28:06 AM",lastUpdatedTimestamp:1699514886e3,headersStr:"一、全域融合 二、开发者入驻全流程管理 1.机器人创建 – 支持多场景选择 2.机器人开发 – 效果预览 3.机器人发布 – 自定义发布范围",content:"# v.5(2023.11.08)\n\n\n# 一、全域融合\n\n\n# 二、开发者入驻全流程管理\n\n\n# 1.机器人创建 – 支持多场景选择\n\n\n# 2.机器人开发 – 效果预览\n\n\n# 3.机器人发布 – 自定义发布范围",normalizedContent:"# v.5(2023.11.08)\n\n\n# 一、全域融合\n\n\n# 二、开发者入驻全流程管理\n\n\n# 1.机器人创建 – 支持多场景选择\n\n\n# 2.机器人开发 – 效果预览\n\n\n# 3.机器人发布 – 自定义发布范围",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{frontmatter:{},regularPath:"/newfeature/",relativePath:"newfeature/README.md",key:"v-0486517e",path:"/newfeature/",lastUpdated:"11/9/2023, 7:28:06 AM",lastUpdatedTimestamp:1699514886e3,headersStr:null,content:"QQ开放平台更新介绍\n\n * v.5(2023.11.08)\n * v.4(2022.04.08)\n * v.3(2022.03.11)\n * v.2(2022.01.20)\n * v.1(2021.12.15)\n * v.0(2021.11.30)",normalizedContent:"qq开放平台更新介绍\n\n * v.5(2023.11.08)\n * v.4(2022.04.08)\n * v.3(2022.03.11)\n * v.2(2022.01.20)\n * v.1(2021.12.15)\n * v.0(2021.11.30)",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"事件监听",frontmatter:{},regularPath:"/develop/pythonsdk/websocket/listen_events.html",relativePath:"develop/pythonsdk/websocket/listen_events.md",key:"v-34ff9b66",path:"/develop/pythonsdk/websocket/listen_events.html",headers:[{level:2,title:"准备",slug:"准备",normalizedTitle:"准备",charIndex:28},{level:2,title:"使用方式",slug:"使用方式",normalizedTitle:"使用方式",charIndex:54},{level:2,title:"监听的事件",slug:"监听的事件",normalizedTitle:"监听的事件",charIndex:159},{level:3,title:"公域消息事件的监听",slug:"公域消息事件的监听",normalizedTitle:"公域消息事件的监听",charIndex:169},{level:3,title:"消息事件的监听",slug:"消息事件的监听",normalizedTitle:"消息事件的监听",charIndex:171},{level:3,title:"私信事件的监听",slug:"私信事件的监听",normalizedTitle:"私信事件的监听",charIndex:1527},{level:3,title:"消息相关互动事件的监听",slug:"消息相关互动事件的监听",normalizedTitle:"消息相关互动事件的监听",charIndex:2206},{level:3,title:"频道事件的监听",slug:"频道事件的监听",normalizedTitle:"频道事件的监听",charIndex:2877},{level:3,title:"频道成员事件的监听",slug:"频道成员事件的监听",normalizedTitle:"频道成员事件的监听",charIndex:4164},{level:3,title:"互动事件的监听",slug:"互动事件的监听",normalizedTitle:"互动事件的监听",charIndex:2210},{level:3,title:"消息审核事件的监听",slug:"消息审核事件的监听",normalizedTitle:"消息审核事件的监听",charIndex:5415},{level:3,title:"论坛事件的监听",slug:"论坛事件的监听",normalizedTitle:"论坛事件的监听",charIndex:6067},{level:3,title:"音频事件的监听",slug:"音频事件的监听",normalizedTitle:"音频事件的监听",charIndex:7843},{level:2,title:"订阅事件的方法",slug:"订阅事件的方法",normalizedTitle:"订阅事件的方法",charIndex:8696},{level:3,title:"方法一：",slug:"方法一",normalizedTitle:"方法一：",charIndex:8708},{level:3,title:"方法二：",slug:"方法二",normalizedTitle:"方法二：",charIndex:8902}],lastUpdated:"6/24/2022, 10:27:11 AM",lastUpdatedTimestamp:1656066431e3,headersStr:"准备 使用方式 监听的事件 公域消息事件的监听 消息事件的监听 私信事件的监听 消息相关互动事件的监听 频道事件的监听 频道成员事件的监听 互动事件的监听 消息审核事件的监听 论坛事件的监听 音频事件的监听 订阅事件的方法 方法一： 方法二：",content:'# 事件监听\n\n本文档概述botpy的事件监听\n\n\n# 准备\n\nimport botpy\n\n\n1\n\n\n\n# 使用方式\n\n通过继承实现bot.Client, 实现自己的机器人Client\n\n在MyClient类中调用函数实现处理事件的功能\n\nclass MyClient(botpy.Client):\n\n\n1\n\n\n\n# 监听的事件\n\n\n# 公域消息事件的监听\n\n首先需要订阅事件public_guild_messages\n\nintents = botpy.Intents(public_guild_messages=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                               说明\non_at_message_create(self, message: Message)       当收到@机器人的消息时\non_public_message_delete(self, message: Message)   当频道的消息被删除时\n\n * 注：需要引入Message\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_at_message_create(self, message: Message):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_public_message_delete(self, message: Message):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 消息事件的监听\n\n * 仅 私域 机器人能够设置此 intents\n\n首先需要订阅事件guild_messages\n\nintents = botpy.Intents(guild_messages=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                        说明\non_message_create(self, message: Message)   发送消息事件，代表频道内的全部消息，而不只是 at 机器人的消息。\n                                            内容与 AT_MESSAGE_CREATE 相同\non_message_delete(self, message: Message)   删除（撤回）消息事件\n\n * 注：需要引入Message\n\nfrom botpy.message import Message\n\nclass MyClient(botpy.Client):\n    async def on_message_create(self, message: Message):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_message_delete(self, message: Message):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 私信事件的监听\n\n首先需要订阅事件direct_message\n\nintents = botpy.Intents(direct_message=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                     说明\non_direct_message_create(self, message: DirectMessage)   当收到用户发给机器人的私信消息时\non_direct_message_delete(self, message: DirectMessage)   删除（撤回）消息事件\n\n * 注：需要引入DirectMessage\n\nfrom botpy.message import DirectMessage\n\nclass MyClient(botpy.Client):\n    async def on_direct_message_create(self, message: DirectMessage):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_direct_message_delete(self, message: DirectMessage):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 消息相关互动事件的监听\n\n首先需要订阅事件guild_message_reactions\n\nintents = botpy.Intents(guild_message_reactions=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                   说明\non_message_reaction_add(self, reaction: Reaction)      为消息添加表情表态\non_message_reaction_remove(self, reaction: Reaction)   为消息删除表情表态\n\n * 注：需要引入Reaction\n\nfrom botpy.reaction import Reaction\n\nclass MyClient(botpy.Client):\n    async def on_message_reaction_add(self, reaction: Reaction):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_message_reaction_remove(self, reaction: Reaction):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 频道事件的监听\n\n首先需要订阅事件guilds\n\nintents = botpy.Intents(guilds=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                        说明\non_guild_create(self, guild: Guild)         当机器人加入新guild时\non_guild_update(self, guild: Guild)         当guild资料发生变更时\non_guild_delete(self, guild: Guild)         当机器人退出guild时\non_channel_create(self, channel: Channel)   当channel被创建时\non_channel_update(self, channel: Channel)   当channel被更新时\non_channel_delete(self, channel: Channel)   当channel被删除时\n\n * 注：需要引入Guild和Channel\n\nfrom botpy.guild import Guild\nfrom botpy.channel import Channel\n\nclass MyClient(botpy.Client):\n    async def on_guild_create(self, guild: Guild):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_update(self, guild: Guild):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_delete(self, guild: Guild):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_channel_create(self, channel: Channel):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_channel_update(self, channel: Channel):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_channel_delete(self, channel: Channel):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 频道成员事件的监听\n\n首先需要订阅事件guild_members\n\nintents = botpy.Intents(guild_members=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                           说明\non_guild_member_add(self, member: Member)      当成员加入时\non_guild_member_update(self, member: Member)   当成员资料变更时\non_guild_member_remove(self, member: Member)   当成员被移除时\n\n * 注：需要引入GuildMember\n\nfrom botpy.user import Member\n\nclass MyClient(botpy.Client):\n    async def on_guild_member_add(self, member: Member):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_member_update(self, member: Member):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_member_remove(self, member: Member):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 互动事件的监听\n\n首先需要订阅事件interaction\n\nintents = botpy.Intents(interaction=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                    说明\non_interaction_create(self, interaction: Interaction)   当收到用户发给机器人的私信消息时\n\n * 注：需要引入Interaction\n\nfrom botpy.interaction import Interaction\n\nclass MyClient(botpy.Client):\n    async def on_interaction_create(self, interaction: Interaction):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 消息审核事件的监听\n\n首先需要订阅事件message_audit\n\nintents = botpy.Intents(message_audit=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                   说明\non_message_audit_pass(self, message: MessageAudit)     消息审核通过\non_message_audit_reject(self, message: MessageAudit)   消息审核不通过\n\n * 注：需要引入MessageAudit\n\nfrom botpy.message import MessageAudit\n\nclass MyClient(botpy.Client):\n    async def on_message_audit_pass(self, message: MessageAudit):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_message_audit_reject(self, message: MessageAudit):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 论坛事件的监听\n\n * 仅 私域 机器人能够设置此 intents\n\n首先需要订阅事件forums\n\nintents = botpy.Intents(forums=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                               说明\non_forum_thread_create(self, thread: Thread)       当用户创建主题时\non_forum_thread_update(self, thread: Thread)       当用户更新主题时\non_forum_thread_delete(self, thread: Thread)       当用户删除主题时\non_forum_post_create(self, post: Post)             当用户创建帖子时\non_forum_post_delete(self, post: Post)             当用户删除帖子时\non_forum_reply_create(self, reply: Reply)          当用户回复评论时\non_forum_reply_delete(self, reply: Reply)          当用户删除评论时\non_forum_publish_audit_result(self, auditresult:   当用户发表审核通过时\nAuditResult)\n\n * 注：需要引入Thread、Post、Reply和AuditResult\n\nfrom botpy.forum import Thread\nfrom botpy.types.forum import Post, Reply, AuditResult\n\nclass MyClient(botpy.Client):\n    async def on_forum_thread_create(self, thread: Thread):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_thread_update(self, thread: Thread):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_thread_delete(self, thread: Thread):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_post_create(self, post: Post):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_post_delete(self, post: Post):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_reply_create(self, reply: Reply):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_reply_delete(self, reply: Reply):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_publish_audit_result(self, auditresult: AuditResult):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 音频事件的监听\n\n首先需要订阅事件audio_action\n\nintents = botpy.Intents(audio_action=True) \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                   说明\non_audio_start(self, audio: Audio)     音频开始播放时\non_audio_finish(self, audio: Audio)    音频播放结束时\non_audio_on_mic(self, audio: Audio)    上麦时\non_audio_off_mic(self, audio: Audio)   下麦时\n\n * 注：需要引入Audio\n\nfrom botpy.audio import Audio\n\nclass MyClient(botpy.Client):\n    async def on_audio_start(self, audio: Audio):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_audio_finish(self, audio: Audio):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_audio_on_mic(self, audio: Audio):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_audio_off_mic(self, audio: Audio):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 订阅事件的方法\n\n\n# 方法一：\n\nintents = botpy.Intents() \nclient = MyClient(intents=intents)\n\n\n1\n2\n\n\n在Intents中填入对应的参数\n\n例子：\n\nintents = botpy.Intents(public_guild_messages=True, direct_message=True, guilds=True)\n\n\n1\n\n\n\n# 方法二：\n\nintents = botpy.Intents.none()\n\n\n1\n\n\n然后打开对应的订阅(参数列表)\n\nintents.public_guild_messages=True\nintents.direct_message=True\nintents.guilds=True\n\n\n1\n2\n3\n\n * 说明\n\n方法二对应的快捷订阅方式为\n\n 1. 订阅所有事件\n\nintents = botpy.Intents.all()\n\n\n1\n\n 2. 订阅所有的公域事件\n\nintents = botpy.Intents.default()\n\n\n1\n\n\n# 参数列表\n\n参数                        含义\npublic_guild_messages     公域消息事件\nguild_messages            消息事件 (仅 私域 机器人能够设置此 intents)\ndirect_message            私信事件\nguild_message_reactions   消息相关互动事件\nguilds                    频道事件\nguild_members             频道成员事件\ninteraction               互动事件\nmessage_audit             消息审核事件\nforums                    论坛事件 (仅 私域 机器人能够设置此 intents)\naudio_action              音频事件',normalizedContent:'# 事件监听\n\n本文档概述botpy的事件监听\n\n\n# 准备\n\nimport botpy\n\n\n1\n\n\n\n# 使用方式\n\n通过继承实现bot.client, 实现自己的机器人client\n\n在myclient类中调用函数实现处理事件的功能\n\nclass myclient(botpy.client):\n\n\n1\n\n\n\n# 监听的事件\n\n\n# 公域消息事件的监听\n\n首先需要订阅事件public_guild_messages\n\nintents = botpy.intents(public_guild_messages=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                               说明\non_at_message_create(self, message: message)       当收到@机器人的消息时\non_public_message_delete(self, message: message)   当频道的消息被删除时\n\n * 注：需要引入message\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_at_message_create(self, message: message):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_public_message_delete(self, message: message):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 消息事件的监听\n\n * 仅 私域 机器人能够设置此 intents\n\n首先需要订阅事件guild_messages\n\nintents = botpy.intents(guild_messages=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                        说明\non_message_create(self, message: message)   发送消息事件，代表频道内的全部消息，而不只是 at 机器人的消息。\n                                            内容与 at_message_create 相同\non_message_delete(self, message: message)   删除（撤回）消息事件\n\n * 注：需要引入message\n\nfrom botpy.message import message\n\nclass myclient(botpy.client):\n    async def on_message_create(self, message: message):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_message_delete(self, message: message):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 私信事件的监听\n\n首先需要订阅事件direct_message\n\nintents = botpy.intents(direct_message=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                     说明\non_direct_message_create(self, message: directmessage)   当收到用户发给机器人的私信消息时\non_direct_message_delete(self, message: directmessage)   删除（撤回）消息事件\n\n * 注：需要引入directmessage\n\nfrom botpy.message import directmessage\n\nclass myclient(botpy.client):\n    async def on_direct_message_create(self, message: directmessage):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_direct_message_delete(self, message: directmessage):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 消息相关互动事件的监听\n\n首先需要订阅事件guild_message_reactions\n\nintents = botpy.intents(guild_message_reactions=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                   说明\non_message_reaction_add(self, reaction: reaction)      为消息添加表情表态\non_message_reaction_remove(self, reaction: reaction)   为消息删除表情表态\n\n * 注：需要引入reaction\n\nfrom botpy.reaction import reaction\n\nclass myclient(botpy.client):\n    async def on_message_reaction_add(self, reaction: reaction):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_message_reaction_remove(self, reaction: reaction):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 频道事件的监听\n\n首先需要订阅事件guilds\n\nintents = botpy.intents(guilds=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                        说明\non_guild_create(self, guild: guild)         当机器人加入新guild时\non_guild_update(self, guild: guild)         当guild资料发生变更时\non_guild_delete(self, guild: guild)         当机器人退出guild时\non_channel_create(self, channel: channel)   当channel被创建时\non_channel_update(self, channel: channel)   当channel被更新时\non_channel_delete(self, channel: channel)   当channel被删除时\n\n * 注：需要引入guild和channel\n\nfrom botpy.guild import guild\nfrom botpy.channel import channel\n\nclass myclient(botpy.client):\n    async def on_guild_create(self, guild: guild):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_update(self, guild: guild):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_delete(self, guild: guild):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_channel_create(self, channel: channel):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_channel_update(self, channel: channel):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_channel_delete(self, channel: channel):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 频道成员事件的监听\n\n首先需要订阅事件guild_members\n\nintents = botpy.intents(guild_members=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                           说明\non_guild_member_add(self, member: member)      当成员加入时\non_guild_member_update(self, member: member)   当成员资料变更时\non_guild_member_remove(self, member: member)   当成员被移除时\n\n * 注：需要引入guildmember\n\nfrom botpy.user import member\n\nclass myclient(botpy.client):\n    async def on_guild_member_add(self, member: member):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_member_update(self, member: member):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_guild_member_remove(self, member: member):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 互动事件的监听\n\n首先需要订阅事件interaction\n\nintents = botpy.intents(interaction=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                    说明\non_interaction_create(self, interaction: interaction)   当收到用户发给机器人的私信消息时\n\n * 注：需要引入interaction\n\nfrom botpy.interaction import interaction\n\nclass myclient(botpy.client):\n    async def on_interaction_create(self, interaction: interaction):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 消息审核事件的监听\n\n首先需要订阅事件message_audit\n\nintents = botpy.intents(message_audit=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                                   说明\non_message_audit_pass(self, message: messageaudit)     消息审核通过\non_message_audit_reject(self, message: messageaudit)   消息审核不通过\n\n * 注：需要引入messageaudit\n\nfrom botpy.message import messageaudit\n\nclass myclient(botpy.client):\n    async def on_message_audit_pass(self, message: messageaudit):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_message_audit_reject(self, message: messageaudit):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 论坛事件的监听\n\n * 仅 私域 机器人能够设置此 intents\n\n首先需要订阅事件forums\n\nintents = botpy.intents(forums=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                               说明\non_forum_thread_create(self, thread: thread)       当用户创建主题时\non_forum_thread_update(self, thread: thread)       当用户更新主题时\non_forum_thread_delete(self, thread: thread)       当用户删除主题时\non_forum_post_create(self, post: post)             当用户创建帖子时\non_forum_post_delete(self, post: post)             当用户删除帖子时\non_forum_reply_create(self, reply: reply)          当用户回复评论时\non_forum_reply_delete(self, reply: reply)          当用户删除评论时\non_forum_publish_audit_result(self, auditresult:   当用户发表审核通过时\nauditresult)\n\n * 注：需要引入thread、post、reply和auditresult\n\nfrom botpy.forum import thread\nfrom botpy.types.forum import post, reply, auditresult\n\nclass myclient(botpy.client):\n    async def on_forum_thread_create(self, thread: thread):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_thread_update(self, thread: thread):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_thread_delete(self, thread: thread):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_post_create(self, post: post):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_post_delete(self, post: post):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_reply_create(self, reply: reply):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_reply_delete(self, reply: reply):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_forum_publish_audit_result(self, auditresult: auditresult):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 音频事件的监听\n\n首先需要订阅事件audio_action\n\nintents = botpy.intents(audio_action=true) \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n对应函数                                   说明\non_audio_start(self, audio: audio)     音频开始播放时\non_audio_finish(self, audio: audio)    音频播放结束时\non_audio_on_mic(self, audio: audio)    上麦时\non_audio_off_mic(self, audio: audio)   下麦时\n\n * 注：需要引入audio\n\nfrom botpy.audio import audio\n\nclass myclient(botpy.client):\n    async def on_audio_start(self, audio: audio):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_audio_finish(self, audio: audio):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_audio_on_mic(self, audio: audio):\n        """\n        此处为处理该事件的代码\n        """\n    async def on_audio_off_mic(self, audio: audio):\n        """\n        此处为处理该事件的代码\n        """\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 订阅事件的方法\n\n\n# 方法一：\n\nintents = botpy.intents() \nclient = myclient(intents=intents)\n\n\n1\n2\n\n\n在intents中填入对应的参数\n\n例子：\n\nintents = botpy.intents(public_guild_messages=true, direct_message=true, guilds=true)\n\n\n1\n\n\n\n# 方法二：\n\nintents = botpy.intents.none()\n\n\n1\n\n\n然后打开对应的订阅(参数列表)\n\nintents.public_guild_messages=true\nintents.direct_message=true\nintents.guilds=true\n\n\n1\n2\n3\n\n * 说明\n\n方法二对应的快捷订阅方式为\n\n 1. 订阅所有事件\n\nintents = botpy.intents.all()\n\n\n1\n\n 2. 订阅所有的公域事件\n\nintents = botpy.intents.default()\n\n\n1\n\n\n# 参数列表\n\n参数                        含义\npublic_guild_messages     公域消息事件\nguild_messages            消息事件 (仅 私域 机器人能够设置此 intents)\ndirect_message            私信事件\nguild_message_reactions   消息相关互动事件\nguilds                    频道事件\nguild_members             频道成员事件\ninteraction               互动事件\nmessage_audit             消息审核事件\nforums                    论坛事件 (仅 私域 机器人能够设置此 intents)\naudio_action              音频事件',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"v.0(2021.11.30)",frontmatter:{},regularPath:"/newfeature/five/",relativePath:"newfeature/five/README.md",key:"v-63c3d856",path:"/newfeature/five/",headers:[{level:2,title:"一、开发者管理端",slug:"一、开发者管理端",normalizedTitle:"一、开发者管理端",charIndex:22},{level:3,title:"1. 语料配置规则：",slug:"_1-语料配置规则",normalizedTitle:"1. 语料配置规则：",charIndex:65},{level:3,title:"2. 指令配置规则：",slug:"_2-指令配置规则",normalizedTitle:"2. 指令配置规则：",charIndex:115},{level:2,title:"二、机器人能力",slug:"二、机器人能力",normalizedTitle:"二、机器人能力",charIndex:225},{level:3,title:"1. 接口能力",slug:"_1-接口能力",normalizedTitle:"1. 接口能力",charIndex:237},{level:3,title:"2. 消息能力",slug:"_2-消息能力",normalizedTitle:"2. 消息能力",charIndex:656}],lastUpdated:"4/28/2022, 12:31:37 PM",lastUpdatedTimestamp:1651149097e3,headersStr:"一、开发者管理端 1. 语料配置规则： 2. 指令配置规则： 二、机器人能力 1. 接口能力 2. 消息能力",content:"# v.0(2021.11.30)\n\n\n# 一、开发者管理端\n\n机器人开发者管理端-语料、功能配置、指令配置放开部分限制\n\n\n# 1. 语料配置规则：\n\n语料支持中文、数字、字母，输入限制6个字以内，输出限制100字以内\n\n\n# 2. 指令配置规则：\n\n指令文字包含在语料当中，指令文字与语料配置解除绑定校验关系（暂时为底层逻辑放开，开发者管理端暂未放开）\n\n注意\n\n已提供下发消息不校验语料id的能力，如需申请可联系机器人管家-tammy\n\n\n# 二、机器人能力\n\n\n# 1. 接口能力\n\n# （1）机器人可查询、赋予、删除用户的子频道可见权限\n\n查询：\n\n获取子频道用户权限｜QQ机器人文档\n\n赋予：\n\n修改子频道权限｜QQ机器人文档\n\n删除：\n\n修改子频道权限｜QQ机器人文档\n\n# （2）机器人可查询、赋予用户子频道管理员身份\n\n查询：\n\n获取子频道用户权限｜QQ机器人文档\n\n赋予\n\n创建频道身份组成员｜QQ机器人文档\n\n# （3）机器人创建子频道支持区分一级/二级分类\n\n子频道一级类型：文字子频道、语音子频道、直播子频道\n\n子频道二级类型：闲聊、公告、攻略、开黑（开黑暂不对外）\n\n子频道对象(Channel)｜QQ机器人文档\n\n# （4）机器人下发消息支持#跳转指定子频道\n\n内嵌格式｜QQ机器人文档\n\n# （5）频道身份组对象 defaultroles类型修改\n\n变更前：\n\n变更后：\n\n频道身份组对象(Role)\n\n注意\n\n身份组类型调整已完成，请调用该接口的开发者，尽快完成更改～\n\n\n# 2. 消息能力\n\n# （1）机器人被动消息下发无需提前报备上传，可直接下发\n\n注意\n\n机器人如有1次下发违规消息被平台打击，该机器人将警用该能力，如需进行被动消息下发需在开发者管理端上传语料进行人工审核，审核时效性24小时内完成。\n\n# （2）新增大图ark模板样式\n\n大图尺寸规范为 975*540\n\n标题：1行\n\n子标题：2行（如不满2行，则会有一行空白）",normalizedContent:"# v.0(2021.11.30)\n\n\n# 一、开发者管理端\n\n机器人开发者管理端-语料、功能配置、指令配置放开部分限制\n\n\n# 1. 语料配置规则：\n\n语料支持中文、数字、字母，输入限制6个字以内，输出限制100字以内\n\n\n# 2. 指令配置规则：\n\n指令文字包含在语料当中，指令文字与语料配置解除绑定校验关系（暂时为底层逻辑放开，开发者管理端暂未放开）\n\n注意\n\n已提供下发消息不校验语料id的能力，如需申请可联系机器人管家-tammy\n\n\n# 二、机器人能力\n\n\n# 1. 接口能力\n\n# （1）机器人可查询、赋予、删除用户的子频道可见权限\n\n查询：\n\n获取子频道用户权限｜qq机器人文档\n\n赋予：\n\n修改子频道权限｜qq机器人文档\n\n删除：\n\n修改子频道权限｜qq机器人文档\n\n# （2）机器人可查询、赋予用户子频道管理员身份\n\n查询：\n\n获取子频道用户权限｜qq机器人文档\n\n赋予\n\n创建频道身份组成员｜qq机器人文档\n\n# （3）机器人创建子频道支持区分一级/二级分类\n\n子频道一级类型：文字子频道、语音子频道、直播子频道\n\n子频道二级类型：闲聊、公告、攻略、开黑（开黑暂不对外）\n\n子频道对象(channel)｜qq机器人文档\n\n# （4）机器人下发消息支持#跳转指定子频道\n\n内嵌格式｜qq机器人文档\n\n# （5）频道身份组对象 defaultroles类型修改\n\n变更前：\n\n变更后：\n\n频道身份组对象(role)\n\n注意\n\n身份组类型调整已完成，请调用该接口的开发者，尽快完成更改～\n\n\n# 2. 消息能力\n\n# （1）机器人被动消息下发无需提前报备上传，可直接下发\n\n注意\n\n机器人如有1次下发违规消息被平台打击，该机器人将警用该能力，如需进行被动消息下发需在开发者管理端上传语料进行人工审核，审核时效性24小时内完成。\n\n# （2）新增大图ark模板样式\n\n大图尺寸规范为 975*540\n\n标题：1行\n\n子标题：2行（如不满2行，则会有一行空白）",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"v.3(2022.03.11)",frontmatter:{},regularPath:"/newfeature/nine/",relativePath:"newfeature/nine/README.md",key:"v-7e08d754",path:"/newfeature/nine/",headers:[{level:2,title:"一、机器人/小程序管理端",slug:"一、机器人-小程序管理端",normalizedTitle:"一、机器人/小程序管理端",charIndex:22},{level:3,title:"1. 新增小程序一键加入频道",slug:"_1-新增小程序一键加入频道",normalizedTitle:"1. 新增小程序一键加入频道",charIndex:39},{level:3,title:"2. 新增开发者指令和服务使用场景",slug:"_2-新增开发者指令和服务使用场景",normalizedTitle:"2. 新增开发者指令和服务使用场景",charIndex:118},{level:3,title:"3. 机器人指令面板区分私信/频道",slug:"_3-机器人指令面板区分私信-频道",normalizedTitle:"3. 机器人指令面板区分私信/频道",charIndex:224},{level:3,title:"4. 新增GitHub开发者资料卡",slug:"_4-新增github开发者资料卡",normalizedTitle:"4. 新增github开发者资料卡",charIndex:316},{level:2,title:"二、开放平台",slug:"二、开放平台",normalizedTitle:"二、开放平台",charIndex:428},{level:3,title:"1. 机器人和小程序账号打通",slug:"_1-机器人和小程序账号打通",normalizedTitle:"1. 机器人和小程序账号打通",charIndex:439},{level:3,title:"2. 支持创建多个机器人",slug:"_2-支持创建多个机器人",normalizedTitle:"2. 支持创建多个机器人",charIndex:488},{level:2,title:"三、机器人接口",slug:"三、机器人接口",normalizedTitle:"三、机器人接口",charIndex:605},{level:3,title:"1. 机器人拉取子频道列表的时候，附带机器人在该子频道的权限情况",slug:"_1-机器人拉取子频道列表的时候-附带机器人在该子频道的权限情况",normalizedTitle:"1. 机器人拉取子频道列表的时候，附带机器人在该子频道的权限情况",charIndex:617},{level:3,title:"2. 机器人可以设置/删除/获取精华消息",slug:"_2-机器人可以设置-删除-获取精华消息",normalizedTitle:"2. 机器人可以设置/删除/获取精华消息",charIndex:654},{level:3,title:"3. 机器人可以发送/删除表情表态（采纳社区开发者建议）",slug:"_3-机器人可以发送-删除表情表态-采纳社区开发者建议",normalizedTitle:"3. 机器人可以发送/删除表情表态（采纳社区开发者建议）",charIndex:679},{level:3,title:"4. 机器人可以接受到引用回复消息事件，该事件复用了ATMESSAGECREATE（intents AT_MESSAGES）事件，由标志位区分是@机器人还是回复机器人消息",slug:"_4-机器人可以接受到引用回复消息事件-该事件复用了at-message-create-intents-at-messages-事件-由标志位区分是-机器人还是回复机器人消息",normalizedTitle:"4. 机器人可以接受到引用回复消息事件，该事件复用了atmessagecreate（intents at_messages）事件，由标志位区分是@机器人还是回复机器人消息",charIndex:null},{level:3,title:"5. 机器人支持发送小黄脸表情，由内嵌格式实现",slug:"_5-机器人支持发送小黄脸表情-由内嵌格式实现",normalizedTitle:"5. 机器人支持发送小黄脸表情，由内嵌格式实现",charIndex:804},{level:3,title:"6. 创建频道公告支持设置推荐子频道",slug:"_6-创建频道公告支持设置推荐子频道",normalizedTitle:"6. 创建频道公告支持设置推荐子频道",charIndex:832},{level:3,title:"7. 踢出成员时，支持删除该成员的发言（灰度中）和将成员拉入黑名单（采纳社区开发者建议）",slug:"_7-踢出成员时-支持删除该成员的发言-灰度中-和将成员拉入黑名单-采纳社区开发者建议",normalizedTitle:"7. 踢出成员时，支持删除该成员的发言（灰度中）和将成员拉入黑名单（采纳社区开发者建议）",charIndex:855}],lastUpdated:"4/28/2022, 12:31:37 PM",lastUpdatedTimestamp:1651149097e3,headersStr:"一、机器人/小程序管理端 1. 新增小程序一键加入频道 2. 新增开发者指令和服务使用场景 3. 机器人指令面板区分私信/频道 4. 新增GitHub开发者资料卡 二、开放平台 1. 机器人和小程序账号打通 2. 支持创建多个机器人 三、机器人接口 1. 机器人拉取子频道列表的时候，附带机器人在该子频道的权限情况 2. 机器人可以设置/删除/获取精华消息 3. 机器人可以发送/删除表情表态（采纳社区开发者建议） 4. 机器人可以接受到引用回复消息事件，该事件复用了ATMESSAGECREATE（intents AT_MESSAGES）事件，由标志位区分是@机器人还是回复机器人消息 5. 机器人支持发送小黄脸表情，由内嵌格式实现 6. 创建频道公告支持设置推荐子频道 7. 踢出成员时，支持删除该成员的发言（灰度中）和将成员拉入黑名单（采纳社区开发者建议）",content:"# v.3(2022.03.11)\n\n\n# 一、机器人/小程序管理端\n\n\n# 1. 新增小程序一键加入频道\n\n开发者可以通过绑定频道，引导小程序用户入驻频道，提升自有频道的用户量\n\n详细内容请参考 【能力新增】小程序一键加频道\n\n\n# 2. 新增开发者指令和服务使用场景\n\n# （1）未提交审核的指令\n\n模块入口：发布设置-功能配置-指令\n\n模块入口：发布设置-功能配置-服务\n\n# （2）已提交审核的指令\n\n请将指令删除后，重新配置即可\n\n\n# 3. 机器人指令面板区分私信/频道\n\n备注：开发者需先在开发者端配置私信下的指令服（具体操作见2--“新增开发者指令和服务使用场景”），3月15日后发布手q8883版本可展示\n\n\n# 4. 新增GitHub开发者资料卡\n\n支持绑定平台账号，将Github资料卡同步到频道\n\n添加路径：频道左侧头像按钮-绑定平台账号-添加平台账号-GitHub。注意：需手机网络能正常打开GitHub官网才可绑定成功\n\n\n# 二、开放平台\n\n\n# 1. 机器人和小程序账号打通\n\n详情请见入驻文档：开发者管理端入驻文档预计3月11日发布\n\n\n# 2. 支持创建多个机器人\n\n企业级开发者：①一个账号最多允许注册10个机器人；②一个主体下最多允许存在50个APPID\n\n个体开发者：①一个账号最多允许注册5个机器人；②一个主体下最多允许存在5个APPID\n\n预计3月底上线\n\n\n# 三、机器人接口\n\n\n# 1. 机器人拉取子频道列表的时候，附带机器人在该子频道的权限情况\n\n\n# 2. 机器人可以设置/删除/获取精华消息\n\n\n# 3. 机器人可以发送/删除表情表态（采纳社区开发者建议）\n\n\n# 4. 机器人可以接受到引用回复消息事件，该事件复用了AT_MESSAGE_CREATE（intents AT_MESSAGES）事件，由标志位区分是@机器人还是回复机器人消息\n\n\n# 5. 机器人支持发送小黄脸表情，由内嵌格式实现\n\n\n# 6. 创建频道公告支持设置推荐子频道\n\n\n# 7. 踢出成员时，支持删除该成员的发言（灰度中）和将成员拉入黑名单（采纳社区开发者建议）",normalizedContent:"# v.3(2022.03.11)\n\n\n# 一、机器人/小程序管理端\n\n\n# 1. 新增小程序一键加入频道\n\n开发者可以通过绑定频道，引导小程序用户入驻频道，提升自有频道的用户量\n\n详细内容请参考 【能力新增】小程序一键加频道\n\n\n# 2. 新增开发者指令和服务使用场景\n\n# （1）未提交审核的指令\n\n模块入口：发布设置-功能配置-指令\n\n模块入口：发布设置-功能配置-服务\n\n# （2）已提交审核的指令\n\n请将指令删除后，重新配置即可\n\n\n# 3. 机器人指令面板区分私信/频道\n\n备注：开发者需先在开发者端配置私信下的指令服（具体操作见2--“新增开发者指令和服务使用场景”），3月15日后发布手q8883版本可展示\n\n\n# 4. 新增github开发者资料卡\n\n支持绑定平台账号，将github资料卡同步到频道\n\n添加路径：频道左侧头像按钮-绑定平台账号-添加平台账号-github。注意：需手机网络能正常打开github官网才可绑定成功\n\n\n# 二、开放平台\n\n\n# 1. 机器人和小程序账号打通\n\n详情请见入驻文档：开发者管理端入驻文档预计3月11日发布\n\n\n# 2. 支持创建多个机器人\n\n企业级开发者：①一个账号最多允许注册10个机器人；②一个主体下最多允许存在50个appid\n\n个体开发者：①一个账号最多允许注册5个机器人；②一个主体下最多允许存在5个appid\n\n预计3月底上线\n\n\n# 三、机器人接口\n\n\n# 1. 机器人拉取子频道列表的时候，附带机器人在该子频道的权限情况\n\n\n# 2. 机器人可以设置/删除/获取精华消息\n\n\n# 3. 机器人可以发送/删除表情表态（采纳社区开发者建议）\n\n\n# 4. 机器人可以接受到引用回复消息事件，该事件复用了at_message_create（intents at_messages）事件，由标志位区分是@机器人还是回复机器人消息\n\n\n# 5. 机器人支持发送小黄脸表情，由内嵌格式实现\n\n\n# 6. 创建频道公告支持设置推荐子频道\n\n\n# 7. 踢出成员时，支持删除该成员的发言（灰度中）和将成员拉入黑名单（采纳社区开发者建议）",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"v.2(2022.01.20)",frontmatter:{},regularPath:"/newfeature/seven/",relativePath:"newfeature/seven/README.md",key:"v-ce009004",path:"/newfeature/seven/",headers:[{level:2,title:"一、机器人客户端",slug:"一、机器人客户端",normalizedTitle:"一、机器人客户端",charIndex:22},{level:3,title:"1. 优化机器人C端提示，区分开发中、审核中、已上线（手q8868版本，年前全量发布）",slug:"_1-优化机器人c端提示-区分开发中、审核中、已上线-手q8868版本-年前全量发布",normalizedTitle:"1. 优化机器人c端提示，区分开发中、审核中、已上线（手q8868版本，年前全量发布）",charIndex:35},{level:3,title:"2. 支持公域机器人被添加、分享到其他频道，私域机器人不允许被添加、分享到其他频道",slug:"_2-支持公域机器人被添加、分享到其他频道-私域机器人不允许被添加、分享到其他频道",normalizedTitle:"2. 支持公域机器人被添加、分享到其他频道，私域机器人不允许被添加、分享到其他频道",charIndex:83},{level:3,title:"3. 文字子频道输入框，支持输入/，唤起机器人指令/服务半屏面板（手q8868版本，年前全量发布）",slug:"_3-文字子频道输入框-支持输入-唤起机器人指令-服务半屏面板-手q8868版本-年前全量发布",normalizedTitle:"3. 文字子频道输入框，支持输入/，唤起机器人指令/服务半屏面板（手q8868版本，年前全量发布）",charIndex:148},{level:2,title:"二、开发者管理端",slug:"二、开发者管理端",normalizedTitle:"二、开发者管理端",charIndex:221},{level:3,title:"1. 增加频道管理tab，实现自主选择机器人灰度频道",slug:"_1-增加频道管理tab-实现自主选择机器人灰度频道",normalizedTitle:"1. 增加频道管理tab，实现自主选择机器人灰度频道",charIndex:234},{level:3,title:"2. 增加机器人公域/私域选择，及公域机器人自主控制被添加频道数量",slug:"_2-增加机器人公域-私域选择-及公域机器人自主控制被添加频道数量",normalizedTitle:"2. 增加机器人公域/私域选择，及公域机器人自主控制被添加频道数量",charIndex:422},{level:3,title:'3. 优化指令配置，增加 "/ "，指令名支持中英文',slug:"_3-优化指令配置-增加-指令名支持中英文",normalizedTitle:"3. 优化指令配置，增加 &quot;/ &quot;，指令名支持中英文",charIndex:null},{level:2,title:"三、机器人能力",slug:"三、机器人能力",normalizedTitle:"三、机器人能力",charIndex:878},{level:3,title:"1. 接口能力",slug:"_1-接口能力",normalizedTitle:"1. 接口能力",charIndex:890},{level:2,title:"四、额外能力支持",slug:"四、额外能力支持",normalizedTitle:"四、额外能力支持",charIndex:1090}],lastUpdated:"4/28/2022, 12:31:37 PM",lastUpdatedTimestamp:1651149097e3,headersStr:'一、机器人客户端 1. 优化机器人C端提示，区分开发中、审核中、已上线（手q8868版本，年前全量发布） 2. 支持公域机器人被添加、分享到其他频道，私域机器人不允许被添加、分享到其他频道 3. 文字子频道输入框，支持输入/，唤起机器人指令/服务半屏面板（手q8868版本，年前全量发布） 二、开发者管理端 1. 增加频道管理tab，实现自主选择机器人灰度频道 2. 增加机器人公域/私域选择，及公域机器人自主控制被添加频道数量 3. 优化指令配置，增加 "/ "，指令名支持中英文 三、机器人能力 1. 接口能力 四、额外能力支持',content:'# v.2(2022.01.20)\n\n\n# 一、机器人客户端\n\n\n# 1. 优化机器人C端提示，区分开发中、审核中、已上线（手q8868版本，年前全量发布）\n\n\n# 2. 支持公域机器人被添加、分享到其他频道，私域机器人不允许被添加、分享到其他频道\n\n（手q8868版本，年前全量发布）\n\n\n# 3. 文字子频道输入框，支持输入/，唤起机器人指令/服务半屏面板（手q8868版本，年前全量发布）\n\n附上： QQ机器人C端场景说明文档\n\n\n# 二、开发者管理端\n\n\n# 1. 增加频道管理tab，实现自主选择机器人灰度频道\n\n# 企业开发者\n\n可添加企业开发者QQ为管理员or频道主的频道，可添加频道上限为10个。\n\n# 个体开发者\n\n选择公域机器人，则可添加个体开发者为管理员or频道主的频道，可添加频道上限为10个。\n\n选择私域机器人，则可添加个体开发者为频道主的频道，可添加频道上限为10个。\n\n注意\n\n灰度功能仅机器人上线后可用\n\n\n# 2. 增加机器人公域/私域选择，及公域机器人自主控制被添加频道数量\n\n机器人上线前，可修改公域/私域机器人类型。\n\n机器人上线后，选择公域机器人后不允许修改，选择私域机器人可修改为公域机器人。\n\n开发者选择私域机器人后，自动开通私域能力，当从私域机器人变为公域机器人后，所有私域能力将被收回。\n\n注意\n\n由于选择公域后，会被其他频道主添加，如回退为私域，将会影响存量频道机器人功能使用，考虑到用户体验，故不允许选择公域后再修改为私域。\n\n\n# 3. 优化指令配置，增加 "/ "，指令名支持中英文\n\n# 指令名\n\n管理端默认增加一个"/"，开发者保存后，格式为“/指令名”，然后展示在客户端\n\n开发者可自主编辑，限制6字符（汉字算1个字符，英文算1个字符），可以输入中文和英文\n\n# 指令描述\n\n开发者可自主编辑，限制15个字符，仅可输入中文\n\n# 权限菜单\n\n每一条指令都需要下拉选择「管理员」or「所有人」\n\n注意\n\n已经提审过的指令需要删除后重新添加才可带上“/”，且代码里指令实现也需带上“/”\n\n\n# 三、机器人能力\n\n\n# 1. 接口能力\n\n# （1）支持设置/解除 全局禁言\n\n禁言全员｜QQ机器人文档\n\n# （2）支持设置/解除 指定成员禁言\n\n禁言指定成员｜QQ机器人文档\n\n# （3）支持单个子频道的发言权限/可查看权限 ——查询/绑定/解绑身份组；支持查询/赋予/删除 指定成员/全部成员的发言权限\n\n子频道权限对象｜QQ机器人文档\n\n# （4）支持添加 /删除 全局公告\n\n创建频道公告｜QQ机器人文档\n\n\n# 四、额外能力支持\n\n机器人开发者默认可开通2个频道，无需单独进行申请~',normalizedContent:'# v.2(2022.01.20)\n\n\n# 一、机器人客户端\n\n\n# 1. 优化机器人c端提示，区分开发中、审核中、已上线（手q8868版本，年前全量发布）\n\n\n# 2. 支持公域机器人被添加、分享到其他频道，私域机器人不允许被添加、分享到其他频道\n\n（手q8868版本，年前全量发布）\n\n\n# 3. 文字子频道输入框，支持输入/，唤起机器人指令/服务半屏面板（手q8868版本，年前全量发布）\n\n附上： qq机器人c端场景说明文档\n\n\n# 二、开发者管理端\n\n\n# 1. 增加频道管理tab，实现自主选择机器人灰度频道\n\n# 企业开发者\n\n可添加企业开发者qq为管理员or频道主的频道，可添加频道上限为10个。\n\n# 个体开发者\n\n选择公域机器人，则可添加个体开发者为管理员or频道主的频道，可添加频道上限为10个。\n\n选择私域机器人，则可添加个体开发者为频道主的频道，可添加频道上限为10个。\n\n注意\n\n灰度功能仅机器人上线后可用\n\n\n# 2. 增加机器人公域/私域选择，及公域机器人自主控制被添加频道数量\n\n机器人上线前，可修改公域/私域机器人类型。\n\n机器人上线后，选择公域机器人后不允许修改，选择私域机器人可修改为公域机器人。\n\n开发者选择私域机器人后，自动开通私域能力，当从私域机器人变为公域机器人后，所有私域能力将被收回。\n\n注意\n\n由于选择公域后，会被其他频道主添加，如回退为私域，将会影响存量频道机器人功能使用，考虑到用户体验，故不允许选择公域后再修改为私域。\n\n\n# 3. 优化指令配置，增加 "/ "，指令名支持中英文\n\n# 指令名\n\n管理端默认增加一个"/"，开发者保存后，格式为“/指令名”，然后展示在客户端\n\n开发者可自主编辑，限制6字符（汉字算1个字符，英文算1个字符），可以输入中文和英文\n\n# 指令描述\n\n开发者可自主编辑，限制15个字符，仅可输入中文\n\n# 权限菜单\n\n每一条指令都需要下拉选择「管理员」or「所有人」\n\n注意\n\n已经提审过的指令需要删除后重新添加才可带上“/”，且代码里指令实现也需带上“/”\n\n\n# 三、机器人能力\n\n\n# 1. 接口能力\n\n# （1）支持设置/解除 全局禁言\n\n禁言全员｜qq机器人文档\n\n# （2）支持设置/解除 指定成员禁言\n\n禁言指定成员｜qq机器人文档\n\n# （3）支持单个子频道的发言权限/可查看权限 ——查询/绑定/解绑身份组；支持查询/赋予/删除 指定成员/全部成员的发言权限\n\n子频道权限对象｜qq机器人文档\n\n# （4）支持添加 /删除 全局公告\n\n创建频道公告｜qq机器人文档\n\n\n# 四、额外能力支持\n\n机器人开发者默认可开通2个频道，无需单独进行申请~',charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"v.4(2022.04.08)",frontmatter:{},regularPath:"/newfeature/ten/",relativePath:"newfeature/ten/README.md",key:"v-3074783e",path:"/newfeature/ten/",headers:[{level:2,title:"一、接口能力",slug:"一、接口能力",normalizedTitle:"一、接口能力",charIndex:22},{level:3,title:"1. 提供机器人删除撤回消息小灰条能力",slug:"_1-提供机器人删除撤回消息小灰条能力",normalizedTitle:"1. 提供机器人删除撤回消息小灰条能力",charIndex:33},{level:3,title:"2. 用户消息被撤回提供事件通知给机器人",slug:"_2-用户消息被撤回提供事件通知给机器人",normalizedTitle:"2. 用户消息被撤回提供事件通知给机器人",charIndex:115},{level:2,title:"二、C端能力",slug:"二、c端能力",normalizedTitle:"二、c端能力",charIndex:140},{level:3,title:"1. 支持每日上新的机器人外露在机器人入口",slug:"_1-支持每日上新的机器人外露在机器人入口",normalizedTitle:"1. 支持每日上新的机器人外露在机器人入口",charIndex:151},{level:3,title:"2. 优化机器人私信场景，提升用户体验",slug:"_2-优化机器人私信场景-提升用户体验",normalizedTitle:"2. 优化机器人私信场景，提升用户体验",charIndex:265},{level:3,title:"3. 指令面板上的指令/机器人优化",slug:"_3-指令面板上的指令-机器人优化",normalizedTitle:"3. 指令面板上的指令/机器人优化",charIndex:406},{level:2,title:"三、机器人管理端",slug:"三、机器人管理端",normalizedTitle:"三、机器人管理端",charIndex:480},{level:3,title:"机器人开发者管理端UI界面优化",slug:"机器人开发者管理端ui界面优化",normalizedTitle:"机器人开发者管理端ui界面优化",charIndex:493}],lastUpdated:"4/28/2022, 12:31:37 PM",lastUpdatedTimestamp:1651149097e3,headersStr:"一、接口能力 1. 提供机器人删除撤回消息小灰条能力 2. 用户消息被撤回提供事件通知给机器人 二、C端能力 1. 支持每日上新的机器人外露在机器人入口 2. 优化机器人私信场景，提升用户体验 3. 指令面板上的指令/机器人优化 三、机器人管理端 机器人开发者管理端UI界面优化",content:"# v.4(2022.04.08)\n\n\n# 一、接口能力\n\n\n# 1. 提供机器人删除撤回消息小灰条能力\n\n支持管理员删除频道内残留的消息小灰条，删除之后所有人将看不到该撤回消息的小灰条。\n\n撤回消息 | QQ机器人文档\n\n\n# 2. 用户消息被撤回提供事件通知给机器人\n\n\n# 二、C端能力\n\n\n# 1. 支持每日上新的机器人外露在机器人入口\n\n虽然说酒香不怕巷子深，但好玩实用的机器人怎么能不被人发现呢？\n\n为了让管理员/频道主对机器人的感知性更强，目前支持外露每日上新的全量推荐机器人，展示机器人头像和文案等信息。\n\n\n# 2. 优化机器人私信场景，提升用户体验\n\n①私信场景下，机器人主动消息带“来自XXX频道”的小尾巴，用户可以自由地回到原始频道。\n\n②私信场景下，支持直接点击用户与机器人的共同频道，可以跳转到共同频道半屏浮层。\n\n③支持点击私信aio的顶部机器人头像，呼起资料卡半屏面板。\n\n\n# 3. 指令面板上的指令/机器人优化\n\n①增加机器人tab切换，定位到半屏面板对应的机器人。\n\n②增加最近指令tab，使最近使用的指令前置。\n\n\n# 三、机器人管理端\n\n\n# 机器人开发者管理端UI界面优化\n\n升级机器人开发者管理端的视觉效果，使得管理端页面更加简洁舒适。",normalizedContent:"# v.4(2022.04.08)\n\n\n# 一、接口能力\n\n\n# 1. 提供机器人删除撤回消息小灰条能力\n\n支持管理员删除频道内残留的消息小灰条，删除之后所有人将看不到该撤回消息的小灰条。\n\n撤回消息 | qq机器人文档\n\n\n# 2. 用户消息被撤回提供事件通知给机器人\n\n\n# 二、c端能力\n\n\n# 1. 支持每日上新的机器人外露在机器人入口\n\n虽然说酒香不怕巷子深，但好玩实用的机器人怎么能不被人发现呢？\n\n为了让管理员/频道主对机器人的感知性更强，目前支持外露每日上新的全量推荐机器人，展示机器人头像和文案等信息。\n\n\n# 2. 优化机器人私信场景，提升用户体验\n\n①私信场景下，机器人主动消息带“来自xxx频道”的小尾巴，用户可以自由地回到原始频道。\n\n②私信场景下，支持直接点击用户与机器人的共同频道，可以跳转到共同频道半屏浮层。\n\n③支持点击私信aio的顶部机器人头像，呼起资料卡半屏面板。\n\n\n# 3. 指令面板上的指令/机器人优化\n\n①增加机器人tab切换，定位到半屏面板对应的机器人。\n\n②增加最近指令tab，使最近使用的指令前置。\n\n\n# 三、机器人管理端\n\n\n# 机器人开发者管理端ui界面优化\n\n升级机器人开发者管理端的视觉效果，使得管理端页面更加简洁舒适。",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}},{title:"v.1(2021.12.15)",frontmatter:{},regularPath:"/newfeature/six/",relativePath:"newfeature/six/README.md",key:"v-0792f49e",path:"/newfeature/six/",headers:[{level:2,title:"一、机器人客户端",slug:"一、机器人客户端",normalizedTitle:"一、机器人客户端",charIndex:22},{level:3,title:"1. 机器人指令/服务交互方式升级",slug:"_1-机器人指令-服务交互方式升级",normalizedTitle:"1. 机器人指令/服务交互方式升级",charIndex:35},{level:2,title:"二、开发者管理端",slug:"二、开发者管理端",normalizedTitle:"二、开发者管理端",charIndex:99},{level:3,title:"1. 新增用户意见反馈能力",slug:"_1-新增用户意见反馈能力",normalizedTitle:"1. 新增用户意见反馈能力",charIndex:112},{level:3,title:"2. 优化沙箱频道填写体验",slug:"_2-优化沙箱频道填写体验",normalizedTitle:"2. 优化沙箱频道填写体验",charIndex:311},{level:2,title:"三、机器人能力",slug:"三、机器人能力",normalizedTitle:"三、机器人能力",charIndex:429},{level:3,title:"1. 新增三个接口能力",slug:"_1-新增三个接口能力",normalizedTitle:"1. 新增三个接口能力",charIndex:441},{level:3,title:"2. 新增一个监听事件",slug:"_2-新增一个监听事件",normalizedTitle:"2. 新增一个监听事件",charIndex:727},{level:2,title:"四、消息能力",slug:"四、消息能力",normalizedTitle:"四、消息能力",charIndex:811},{level:3,title:"1. 默认不校验语料id，无需单独申请",slug:"_1-默认不校验语料id-无需单独申请",normalizedTitle:"1. 默认不校验语料id，无需单独申请",charIndex:822},{level:3,title:"2. 主动消息提频",slug:"_2-主动消息提频",normalizedTitle:"2. 主动消息提频",charIndex:956},{level:2,title:"五、机器人SDK",slug:"五、机器人sdk",normalizedTitle:"五、机器人sdk",charIndex:1001},{level:3,title:"1. Node SDK发布",slug:"_1-node-sdk发布",normalizedTitle:"1. node sdk发布",charIndex:1014},{level:3,title:"2. 提供主/被动消息SDK demo示例",slug:"_2-提供主-被动消息sdk-demo示例",normalizedTitle:"2. 提供主/被动消息sdk demo示例",charIndex:1061},{level:2,title:"六、额外能力支持",slug:"六、额外能力支持",normalizedTitle:"六、额外能力支持",charIndex:1118}],lastUpdated:"4/28/2022, 12:31:37 PM",lastUpdatedTimestamp:1651149097e3,headersStr:"一、机器人客户端 1. 机器人指令/服务交互方式升级 二、开发者管理端 1. 新增用户意见反馈能力 2. 优化沙箱频道填写体验 三、机器人能力 1. 新增三个接口能力 2. 新增一个监听事件 四、消息能力 1. 默认不校验语料id，无需单独申请 2. 主动消息提频 五、机器人SDK 1. Node SDK发布 2. 提供主/被动消息SDK demo示例 六、额外能力支持",content:"# v.1(2021.12.15)\n\n\n# 一、机器人客户端\n\n\n# 1. 机器人指令/服务交互方式升级\n\n@机器人，支持机器人的指令/服务展示在同一面板，便于用户了解并使用机器人相关能力\n\n\n# 二、开发者管理端\n\n\n# 1. 新增用户意见反馈能力\n\n在顶部导航栏，增加开发者社区tab，开发者可以在管理端创建腾讯兔小巢空间，填写产品ID后即可在机器人C端自动创建用户反馈入口，用户对于机器人的反馈将自动同步至开发者管理端，实现快速获取机器人意见反馈。\n\n具体创建方法详见文档：\n\n用户反馈空间创建攻略\n\n注意\n\n平台同步新增了用户投诉入口，用户可向平台投诉机器人不佳体验，请广大开发者遵守平台规则保证用户体验\n\n\n# 2. 优化沙箱频道填写体验\n\n由填写改为下拉，解决开发者频道id获取问题，下拉频道展示校验逻辑如下：\n\n(1)开发者平台管理员QQ为频道主或者管理员\n\n(2)该频道成员数小于等于20人\n\n(3)展示频道ID、频道名称、频道头像\n\n\n# 三、机器人能力\n\n\n# 1. 新增三个接口能力\n\n# (1) 机器人获取用户信息头像改为获取用户频道头像\n\n用户对象(User)｜QQ机器人文档\n\n# (2) 机器人可创建/删除子频道公告\n\n# 创建\n\n创建子频道公告｜QQ机器人文档\n\n# 删除\n\n删除子频道公告｜QQ机器人文档\n\n# (3) 机器人可获取/创建/修改/删除日程活动\n\n# 获取频道日程列表\n\n获取频道日程列表｜QQ机器人文档\n\n# 获取单个日程信息\n\n获取单个日程信息｜QQ机器人文档\n\n# 创建日程\n\n创建日程｜QQ机器人文档\n\n# 修改日程\n\n修改日程｜QQ机器人文档\n\n# 删除日程\n\n删除日程｜QQ机器人文档\n\n\n# 2. 新增一个监听事件\n\n# （1）添加/删除表情表态反应事件\n\n# 添加\n\n添加表情表态事件｜QQ机器人文档\n\n# 删除\n\n删除表情表态事件｜QQ机器人文档\n\n\n# 四、消息能力\n\n\n# 1. 默认不校验语料id，无需单独申请\n\n开发者入驻后，企业/个人主体均默认被动消息不校验语料id，如出现消息违规（广告、营销、色情、赌博等）问题则取消该能力，全部语料需上传至人工审核（审核时效性24小时），同时主动消息需人审后可发布（审核时效性30分钟）。\n\n\n# 2. 主动消息提频\n\n公域机器人每个频道/天可下发主动消息上限从2条调整为20条\n\n\n# 五、机器人SDK\n\n\n# 1. Node SDK发布\n\n已支持Node SDK\n\nSDK接入指南QQ机器人文档\n\n\n# 2. 提供主/被动消息SDK demo示例\n\n平台提供示例便于开发者快速了解消息应用场景\n\ndemo示例\n\n\n# 六、额外能力支持\n\n提示\n\n一个QQ号可申请两个频道\n\n已申请机器人正式和测试频道的QQ号均支持创建两个频道，开发者自主填写到机器人开发者管理端的QQ号默认为测试频道，其他则为正式频道； 后续开发者仍需先填写申请频道创建权限问卷（一个QQ号即可），由官方对机器人开发者定制创建两个频道号权限。\n\n频道创建权限问卷",normalizedContent:"# v.1(2021.12.15)\n\n\n# 一、机器人客户端\n\n\n# 1. 机器人指令/服务交互方式升级\n\n@机器人，支持机器人的指令/服务展示在同一面板，便于用户了解并使用机器人相关能力\n\n\n# 二、开发者管理端\n\n\n# 1. 新增用户意见反馈能力\n\n在顶部导航栏，增加开发者社区tab，开发者可以在管理端创建腾讯兔小巢空间，填写产品id后即可在机器人c端自动创建用户反馈入口，用户对于机器人的反馈将自动同步至开发者管理端，实现快速获取机器人意见反馈。\n\n具体创建方法详见文档：\n\n用户反馈空间创建攻略\n\n注意\n\n平台同步新增了用户投诉入口，用户可向平台投诉机器人不佳体验，请广大开发者遵守平台规则保证用户体验\n\n\n# 2. 优化沙箱频道填写体验\n\n由填写改为下拉，解决开发者频道id获取问题，下拉频道展示校验逻辑如下：\n\n(1)开发者平台管理员qq为频道主或者管理员\n\n(2)该频道成员数小于等于20人\n\n(3)展示频道id、频道名称、频道头像\n\n\n# 三、机器人能力\n\n\n# 1. 新增三个接口能力\n\n# (1) 机器人获取用户信息头像改为获取用户频道头像\n\n用户对象(user)｜qq机器人文档\n\n# (2) 机器人可创建/删除子频道公告\n\n# 创建\n\n创建子频道公告｜qq机器人文档\n\n# 删除\n\n删除子频道公告｜qq机器人文档\n\n# (3) 机器人可获取/创建/修改/删除日程活动\n\n# 获取频道日程列表\n\n获取频道日程列表｜qq机器人文档\n\n# 获取单个日程信息\n\n获取单个日程信息｜qq机器人文档\n\n# 创建日程\n\n创建日程｜qq机器人文档\n\n# 修改日程\n\n修改日程｜qq机器人文档\n\n# 删除日程\n\n删除日程｜qq机器人文档\n\n\n# 2. 新增一个监听事件\n\n# （1）添加/删除表情表态反应事件\n\n# 添加\n\n添加表情表态事件｜qq机器人文档\n\n# 删除\n\n删除表情表态事件｜qq机器人文档\n\n\n# 四、消息能力\n\n\n# 1. 默认不校验语料id，无需单独申请\n\n开发者入驻后，企业/个人主体均默认被动消息不校验语料id，如出现消息违规（广告、营销、色情、赌博等）问题则取消该能力，全部语料需上传至人工审核（审核时效性24小时），同时主动消息需人审后可发布（审核时效性30分钟）。\n\n\n# 2. 主动消息提频\n\n公域机器人每个频道/天可下发主动消息上限从2条调整为20条\n\n\n# 五、机器人sdk\n\n\n# 1. node sdk发布\n\n已支持node sdk\n\nsdk接入指南qq机器人文档\n\n\n# 2. 提供主/被动消息sdk demo示例\n\n平台提供示例便于开发者快速了解消息应用场景\n\ndemo示例\n\n\n# 六、额外能力支持\n\n提示\n\n一个qq号可申请两个频道\n\n已申请机器人正式和测试频道的qq号均支持创建两个频道，开发者自主填写到机器人开发者管理端的qq号默认为测试频道，其他则为正式频道； 后续开发者仍需先填写申请频道创建权限问卷（一个qq号即可），由官方对机器人开发者定制创建两个频道号权限。\n\n频道创建权限问卷",charsets:{cjk:!0},rightAnchor:{showDepth:6,expand:{trigger:"hover",clickModeDefaultOpen:!0},isIgnore:!1},contributors:{docsRepo:"tencent-connect/bot-docs",docsBranch:"main",docsDir:"docs",label:"贡献者🎉",api:"https://api.xuann.wang/api/github-file-contributors",disableRoutes:["/develop/api/"]}}],themeConfig:{sidebarDepth:1,displayAllHeaders:!1,lastUpdated:"上次更新",nav:[{text:"介绍",link:"/"},{text:"API文档",link:"/develop/api-v2/"},{text:"SDK文档",items:[{text:"NodeSDK",link:"https://github.com/tencent-connect/bot-node-sdk"},{text:"PythonSDK",link:"https://github.com/tencent-connect/botpy"},{text:"GoSDK",link:"https://github.com/tencent-connect/botgo"}]},{text:"运营规范",link:"/business/"},{text:"机器人平台",link:"https://bot.q.qq.com/open"},{text:"新特性",link:"/newfeature/"},{text:"更新日志",link:"/changelog/"}],repo:"Shanshui2024/Site-QQOpenDocs",editLinks:!0,editLinkText:"在GitHub上编辑此页",docsDir:"docs",disableRoutes:["/develop/api/","/changelog/","/develop/nodesdk/changelog/","/develop/pythonsdk/changelog/"],docsBranch:"main",sidebar:{"/develop/api-v2/":[{title:"起步指南",collapsable:!1,sidebarDepth:2,children:[""]},{title:"用户端功能简介",collapsable:!1,sidebarDepth:2,children:["client-func/intro/baseinfo.md","client-func/intro/datacard.md","client-func/intro/find.md"]},{title:"基础框架须知",collapsable:!1,sidebarDepth:2,children:[{title:"接口通信框架",collapsable:!1,sidebarDepth:1,path:"/develop/api-v2/dev-prepare/interface-framework/",children:["dev-prepare/interface-framework/api-use.md","dev-prepare/interface-framework/event-emit.md"]},"dev-prepare/unique-id.md",{title:"错误与调试",collapsable:!1,sidebarDepth:1,path:"/develop/api-v2/dev-prepare/error-trace/",children:["dev-prepare/error-trace/openapi.md","dev-prepare/error-trace/websocket.md"]}]},{title:"服务端接口",collapsable:!1,sidebarDepth:2,children:[{title:"消息相关",collapsable:!1,sidebarDepth:1,path:"/develop/api-v2/server-inter/message/",children:[{title:"消息收发",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/message/send-receive/",children:["server-inter/message/send-receive/send.md","server-inter/message/send-receive/rich-media.md","server-inter/message/send-receive/reset.md","server-inter/message/send-receive/event.md"]},{title:"消息类型",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/message/type/",children:["server-inter/message/type/text.md","server-inter/message/type/rich-text.md","server-inter/message/type/image.md","server-inter/message/type/audio.md","server-inter/message/type/video.md","server-inter/message/type/file.md","server-inter/message/type/sticker.md","server-inter/message/type/ark.md","server-inter/message/type/embed.md","server-inter/message/type/markdown.md"]},{title:"消息交互",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/message/trans/",children:["server-inter/message/trans/emoji.md","server-inter/message/trans/text-chain.md","server-inter/message/trans/msg-btn.md"]}]},{title:"频道模块",collapsable:!1,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/",children:[{title:"频道管理",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/manage/",children:["server-inter/channel/manage/user/me.md","server-inter/channel/manage/guild/guilds.md","server-inter/channel/manage/guild/get_guild.md","server-inter/channel/manage/channel/get_channels.md","server-inter/channel/manage/channel/get_channel.md","server-inter/channel/manage/channel/post_channels.md","server-inter/channel/manage/channel/patch_channel.md","server-inter/channel/manage/channel/delete_channel.md","server-inter/channel/manage/event/guild.md","server-inter/channel/manage/event/channel.md"]},{title:"频道成员",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/role/",children:["server-inter/channel/role/get_online_nums.md","server-inter/channel/role/member/get_members.md","server-inter/channel/role/member/get_role_members.md","server-inter/channel/role/member/get_member.md","server-inter/channel/role/member/delete_member.md","server-inter/channel/role/guild_member.md","server-inter/channel/role/audio_or_live_channel_member.md"]},{title:"频道身份组与权限管理",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/role-group/",children:["server-inter/channel/role-group/get_guild_roles.md","server-inter/channel/role-group/post_guild_role.md","server-inter/channel/role-group/patch_guild_role.md","server-inter/channel/role-group/delete_guild_role.md","server-inter/channel/role-group/put_guild_member_role.md","server-inter/channel/role-group/delete_guild_member_role.md","server-inter/channel/role-group/channel_permissions/get_channel_permissions.md","server-inter/channel/role-group/channel_permissions/put_channel_permissions.md","server-inter/channel/role-group/channel_permissions/get_channel_roles_permissions.md","server-inter/channel/role-group/channel_permissions/put_channel_roles_permissions.md"]},{title:"接口授权管理",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/api_permissions/",children:["server-inter/channel/api_permissions/get_guild_api_permission.md","server-inter/channel/api_permissions/post_api_permission_demand.md"]},{title:"发言管理",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/speak/",children:["server-inter/channel/speak/setting/message_setting.md","server-inter/channel/speak/patch_guild_mute.md","server-inter/channel/speak/patch_guild_member_mute.md","server-inter/channel/speak/patch_guild_mute_multi_member.md"]},{title:"内容管理",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/content/",children:["server-inter/channel/content/announces/post_guild_announces.md","server-inter/channel/content/announces/delete_guild_announces.md","server-inter/channel/content/pins/put_pins_message.md","server-inter/channel/content/pins/delete_pins_message.md","server-inter/channel/content/pins/get_pins_message.md","server-inter/channel/content/schedule/get_schedules.md","server-inter/channel/content/schedule/get_schedule.md","server-inter/channel/content/schedule/post_schedule.md","server-inter/channel/content/schedule/patch_schedule.md","server-inter/channel/content/schedule/delete_schedule.md","server-inter/channel/content/audio/audio_control.md","server-inter/channel/content/audio/put_mic.md","server-inter/channel/content/audio/delete_mic.md","server-inter/channel/content/forum/get_threads_list.md","server-inter/channel/content/forum/get_thread.md","server-inter/channel/content/forum/put_thread.md","server-inter/channel/content/forum/delete_thread.md","server-inter/channel/content/forum/forum.md","server-inter/channel/content/forum/open_forum.md"]},{title:"小程序相关",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/channel/miniapp/",children:["server-inter/channel/miniapp/opendata.md","server-inter/channel/miniapp/interface.md"]}]},{title:"群聊模块",collapsable:!1,sidebarDepth:1,path:"/develop/api-v2/server-inter/group/",children:[{title:"群管理",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/group/manage/",children:["server-inter/group/manage/event.md"]}]},{title:"用户模块",collapsable:!1,sidebarDepth:1,path:"/develop/api-v2/server-inter/user/",children:[{title:"用户管理",collapsable:!0,sidebarDepth:1,path:"/develop/api-v2/server-inter/user/manage/",children:["server-inter/user/manage/event.md"]}]}]}],"/develop/nodesdk/":["",{title:"NodeSDK更新日志",path:"changelog/",sidebarDepth:0,sidebar:!1},{title:"术语",collapsable:!1,sidebarDepth:0,children:[{title:"用户对象(User)",path:"model/user"},{title:"接口权限API(API)",path:"model/api_permission.md"},{title:"频道对象(Guild)",path:"model/guild"},{title:"子频道对象(Channel)",path:"model/channel"},{title:"子频道权限对象(ChannelPermissions)",path:"model/channel_permission"},{title:"成员对象(Member)",path:"model/member"},{title:"频道身份组对象(Role)",path:"model/role"},{title:"消息对象(Message)",path:"model/message"},{title:"消息按钮对象(InlineKeyboard)",path:"model/inline_keyboard"},{title:"私信对象(DMS)",path:"model/dms"},{title:"公告对象(Announce)",path:"model/announce"},{title:"精华消息对象(PinsMessage)",path:"model/pins_message.md"},{title:"日程对象(Schedule)",path:"model/schedule"},{title:"表情对象(Emoji)",path:"model/emoji"},{title:"表情表态对象(Reaction)",path:"model/reaction"},{title:"语音对象(Audio)",path:"model/audio"}]},{title:"Client API",collapsable:!1,children:[{title:"用户 API",collapsable:!1,sidebarDepth:0,children:["user/me"]},{title:"频道 API",collapsable:!1,sidebarDepth:0,children:["guild/guilds","guild/get_guild"]},{title:"子频道 API",collapsable:!1,sidebarDepth:0,children:["channel/get_channels","channel/get_channel","channel/post_channels","channel/patch_channel","channel/delete_channel"]},{title:"成员 API",collapsable:!1,sidebarDepth:0,children:["member/get_members","member/get_member","member/delete_member","member/get_voice_members"]},{title:"频道身份组 API",collapsable:!1,sidebarDepth:0,children:["guild/get_guild_roles","guild/post_guild_role","guild/patch_guild_role","guild/delete_guild_role","guild/put_guild_member_role","guild/delete_guild_member_role"]},{title:"子频道权限 API",collapsable:!1,sidebarDepth:0,children:["channel_permissions/get_channel_permissions","channel_permissions/put_channel_permissions","channel_permissions/get_channel_role_permissions","channel_permissions/put_channel_role_permissions"]},{title:"消息 API",collapsable:!1,sidebarDepth:0,children:["message/get_message_of_id","message/post_messages","message/delete_message","message/message_template","message/post_ark_messages","message/message_format","message/post_reference_messages","message/post_keyboard_message.md"]},{title:"私信 API",collapsable:!1,sidebarDepth:0,children:["dms/post_dms.md","dms/post_dms_messages.md"]},{title:"表情表态 API",collapsable:!1,sidebarDepth:0,children:["reaction/post_reaction.md","reaction/delete_reaction.md","reaction/get_reaction_user_list.md"]},{title:"禁言 API",collapsable:!1,sidebarDepth:0,children:["mute/mute_all","mute/mute_member","mute/mute_members"]},{title:"公告 API",collapsable:!1,sidebarDepth:0,children:["announce/post_guild_announce","announce/post_guild_recommend","announce/delete_guild_announce","announce/post_channel_announce","announce/delete_channel_announce"]},{title:"精华消息 API",collapsable:!1,sidebarDepth:0,children:["pins_message/get_pins_message","pins_message/put_pins_message","pins_message/delete_pins_message"]},{title:"日程 API",collapsable:!1,sidebarDepth:0,children:["schedule/get_schedules","schedule/get_schedule","schedule/post_schedule","schedule/patch_schedule","schedule/delete_schedule"]},{title:"音频 API",collapsable:!1,sidebarDepth:0,children:["audio/audio_control","audio/bot_on_mic","audio/bot_off_mic"]},{title:"接口权限 API",collapsable:!1,sidebarDepth:0,children:["api_permissions/get_permissions","api_permissions/post_permission.md"]}]},{title:"WebSocket API",collapsable:!1,sidebarDepth:0,children:[{title:"wss 消息体",path:"wss/model.md"}]}],"/develop/pythonsdk/":["",{title:"PythonSDK更新日志",path:"changelog/",sidebarDepth:0,sidebar:!1},{title:"术语",collapsable:!1,sidebarDepth:0,children:[{title:"用户对象(User)",path:"model/user"},{title:"接口权限API(APIPermission)",path:"model/api_permission.md"},{title:"频道对象(Guild)",path:"model/guild"},{title:"子频道对象(Channel)",path:"model/channel"},{title:"子频道权限对象(ChannelPermissions)",path:"model/channel_permission"},{title:"成员对象(Member)",path:"model/member"},{title:"频道身份组对象(Role)",path:"model/role"},{title:"消息对象(Message)",path:"model/message"},{title:"消息按钮对象(InlineKeyboard)",path:"model/inline_keyboard"},{title:"私信对象(DMS)",path:"model/dms"},{title:"语音对象(Audio)",path:"model/audio"},{title:"公告对象(Announce)",path:"model/announce"},{title:"精华消息对象(PinsMessage)",path:"model/pins_message"},{title:"表情对象(Emoji)",path:"model/emoji"},{title:"表情表态对象(Reaction)",path:"model/reaction"},{title:"日程对象(Schedule)",path:"model/schedule"}]},{title:"Client API",collapsable:!1,children:[{title:"用户 API",collapsable:!1,sidebarDepth:0,children:["api/user/me","api/user/me_guilds"]},{title:"频道 API",collapsable:!1,sidebarDepth:0,children:["api/guild/get_guild"]},{title:"子频道 API",collapsable:!1,sidebarDepth:0,children:["api/channel/get_channel","api/channel/get_channels","api/channel/create_channel","api/channel/update_channel","api/channel/delete_channel"]},{title:"子频道权限 API",collapsable:!1,sidebarDepth:0,children:["api/channel_permissions/get_channel_permissions","api/channel_permissions/update_channel_permissions","api/channel_permissions/get_channel_role_permissions","api/channel_permissions/update_channel_role_permissions"]},{title:"成员 API",collapsable:!1,sidebarDepth:0,children:["api/member/get_guild_member","api/member/get_guild_members","api/member/delete_guild_member"]},{title:"频道身份组 API",collapsable:!1,sidebarDepth:0,children:["api/guild/guild_role/get_guild_roles","api/guild/guild_role/create_guild_role","api/guild/guild_role/update_guild_role","api/guild/guild_role/delete_guild_role","api/guild/guild_role/create_guild_role_member","api/guild/guild_role/delete_guild_role_member"]},{title:"消息 API",collapsable:!1,sidebarDepth:0,children:["api/message/get_message","api/message/post_message","api/message/recall_message","api/message/post_ark_message","api/message/message_template","api/message/message_format","api/message/post_reference_messages","api/message/post_keyboard_message.md"]},{title:"私信 API",collapsable:!1,sidebarDepth:0,children:["api/dms/create_dms","api/dms/post_dms"]},{title:"表情表态 API",collapsable:!1,sidebarDepth:0,children:["api/reaction/post_reaction.md","api/reaction/delete_reaction.md","api/reaction/get_reaction_users.md"]},{title:"禁言 API",collapsable:!1,sidebarDepth:0,children:["api/mute/mute_all","api/mute/mute_member","api/mute/mute_multi_member"]},{title:"公告 API",collapsable:!1,sidebarDepth:0,children:["api/announce/create_guild_announce","api/announce/delete_guild_announce","api/announce/create_channel_announce","api/announce/delete_channel_announce"]},{title:"日程 API",collapsable:!1,sidebarDepth:0,children:["api/schedule/get_schedules","api/schedule/get_schedule","api/schedule/post_schedule","api/schedule/update_schedule","api/schedule/delete_schedule"]},{title:"精华消息 API",collapsable:!1,sidebarDepth:0,children:["api/pins_message/get_pins_message","api/pins_message/put_pins_message","api/pins_message/delete_pins_message"]},{title:"音频 API",collapsable:!1,sidebarDepth:0,children:["api/audio/post_audio","api/audio/audio_on_mic","api/audio/audio_off_mic"]},{title:"接口权限 API",collapsable:!1,sidebarDepth:0,children:["api/api_permissions/get_permissions","api/api_permissions/post_permission.md"]}]},{title:"WebSocket API",collapsable:!1,sidebarDepth:0,children:[{title:"事件监听",path:"websocket/listen_events.md"}]}],"/develop/gosdk/":["",{title:"术语",collapsable:!1,sidebarDepth:0,children:[{title:"用户对象(User)",path:"model/user"},{title:"接口权限API(APIPermission)",path:"model/api_permission.md"},{title:"频道对象(Guild)",path:"model/guild"},{title:"子频道对象(Channel)",path:"model/channel"},{title:"子频道权限对象(ChannelPermissions)",path:"model/channel_permission"},{title:"成员对象(Member)",path:"model/member"},{title:"频道身份组对象(Role)",path:"model/role"},{title:"消息对象(Message)",path:"model/message"},{title:"私信对象(DirectMessage)",path:"model/dms"},{title:"语音对象(Audio)",path:"model/audio"},{title:"公告对象(Announces)",path:"model/announce"},{title:"精华消息对象(PinsMessage)",path:"model/pins_message"},{title:"表情对象(Emoji)",path:"model/emoji"},{title:"表情表态对象(Reaction)",path:"model/reaction"},{title:"日程对象(Schedule)",path:"model/schedule"}]},{title:"Client API",collapsable:!1,children:[{title:"用户 API",collapsable:!1,sidebarDepth:0,children:["api/user/me","api/user/me_guilds"]},{title:"频道 API",collapsable:!1,sidebarDepth:0,children:["api/guild/get_guild"]},{title:"子频道 API",collapsable:!1,sidebarDepth:0,children:["api/channel/get_channel","api/channel/get_channels","api/channel/create_channel","api/channel/update_channel","api/channel/delete_channel"]},{title:"子频道权限 API",collapsable:!1,sidebarDepth:0,children:["api/channel_permissions/get_channel_permissions","api/channel_permissions/update_channel_permissions","api/channel_permissions/get_channel_roles_permissions.md","api/channel_permissions/update_channel_roles_permissions.md"]},{title:"成员 API",collapsable:!1,sidebarDepth:0,children:["api/member/get_guild_member","api/member/get_guild_members","api/member/delete_guild_member"]},{title:"频道身份组 API",collapsable:!1,sidebarDepth:0,children:["api/guild/guild_role/get_guild_roles","api/guild/guild_role/create_guild_role","api/guild/guild_role/update_guild_role","api/guild/guild_role/delete_guild_role","api/guild/guild_role/create_guild_role_member","api/guild/guild_role/delete_guild_role_member"]},{title:"消息 API",collapsable:!1,sidebarDepth:0,children:["api/message/get_message","api/message/get_messages","api/message/post_message","api/message/recall_message","api/message/post_ark_message","api/message/message_template","api/message/message_format","api/message/message_reference.md"]},{title:"私信 API",collapsable:!1,sidebarDepth:0,children:["api/direct_msg/create_direct_message.md","api/direct_msg/post_direct_message.md"]},{title:"表情表态 API",collapsable:!1,sidebarDepth:0,children:["api/reaction/post_reaction.md","api/reaction/delete_reaction.md"]},{title:"禁言 API",collapsable:!1,sidebarDepth:0,children:["api/mute/mute_all","api/mute/mute_member"]},{title:"公告 API",collapsable:!1,sidebarDepth:0,children:["api/announce/create_guild_announce","api/announce/delete_guild_announce","api/announce/create_channel_announce","api/announce/delete_channel_announce","api/announce/post_recommended_channels"]},{title:"日程 API",collapsable:!1,sidebarDepth:0,children:["api/schedule/get_schedules","api/schedule/get_schedule","api/schedule/post_schedule","api/schedule/update_schedule","api/schedule/delete_schedule"]},{title:"精华消息 API",collapsable:!1,sidebarDepth:0,children:["api/pins_message/get_pins_message","api/pins_message/put_pins_message","api/pins_message/delete_pins_message"]},{title:"音频 API",collapsable:!1,sidebarDepth:0,children:["api/audio/post_audio"]},{title:"接口权限 API",collapsable:!1,sidebarDepth:0,children:["api/api_permissions/get_permissions","api/api_permissions/post_permission.md"]}]},{title:"WebSocket API",collapsable:!1,sidebarDepth:0,children:[{title:"事件监听",path:"websocket/listen_events.md"}]}],"/newfeature/":[{title:"QQ开放平台更新介绍",children:[["/newfeature/eleven/","v.5(2023.11.08)"],["/newfeature/ten/","v.4(2022.04.08)"],["/newfeature/nine/","v.3(2022.03.11)"],["/newfeature/seven/","v.2(2022.01.20)"],["/newfeature/six/","v.1(2021.12.15)"],["/newfeature/five/","v.0(2021.11.30)"]]}],"/":[""]},plugins:[["@vuepress/search",{searchMaxSuggestions:10,themeColor:"#0252d9",inputMinLength:2,openInNewWindow:!0}]]}};var Ke=t(169),Ye=t.n(Ke);t(371);const Xe=t(372);t(373);i.default.component("MySWUpdatePopup",()=>Promise.all([t.e(0),t.e(16)]).then(t.bind(null,501))),i.default.component("PrivateDomain",()=>Promise.all([t.e(0),t.e(22)]).then(t.bind(null,880))),i.default.component("NpmBadge",()=>Promise.all([t.e(0),t.e(21)]).then(t.bind(null,502))),i.default.component("Qrcode",()=>Promise.all([t.e(0),t.e(23)]).then(t.bind(null,503))),i.default.component("TuXiaoChao",()=>Promise.all([t.e(0),t.e(24)]).then(t.bind(null,504))),i.default.component("Badge",()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,505))),i.default.component("CodeBlock",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,497))),i.default.component("CodeGroup",()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,498)));t(374);var Je={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:()=>({scrollTop:null}),computed:{show(){return this.scrollTop>this.threshold}},mounted(){this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",oe()(()=>{this.scrollTop=this.getScrollTop()},100))},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Ze=(t(375),Object(Ge.a)(Je,(function(){var n=this._self._c;return n("transition",{attrs:{name:"fade"}},[this.show?n("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[n("g",{attrs:{transform:"translate(-229 -126.358)"}},[n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),n("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),nt=t(170),et=t.n(nt),tt={name:"right-anchor",props:{global:Boolean},data:()=>({listData:[],activeIndex:null,opened:!1}),watch:{"$page.regularPath"(){this.filterDataByLevel()}},computed:{visible(){return this.listData&&this.listData.length&&!(this.rightAnchorOptions.disableGlobalUI&&this.global)},rightAnchorOptions(){return this.$page.rightAnchor},expandOptions(){var n;return null===(n=this.$page.rightAnchor)||void 0===n?void 0:n.expand}},methods:{mouseover(){"hover"===this.expandOptions.trigger&&(this.opened=!0)},mouseleave(){"hover"===this.expandOptions.trigger&&(this.opened=!1)},btnClick(){"click"===this.expandOptions.trigger&&(this.opened=!this.opened)},itemClick(n,e){var t;this.activeIndex=n,window.scrollTo({top:(null===(t=document.getElementById(e))||void 0===t?void 0:t.offsetTop)||0,behavior:"smooth"})},filterDataByLevel(){this.listData=[];const{headers:n}=this.$page,{isIgnore:e,showDepth:t}=this.rightAnchorOptions;!e&&0!==t&&n&&(this.listData=t?n.filter(n=>n.level<=t+1):[...n])},getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},mounted(){var n,e;(this.filterDataByLevel(),"click"===(null===(n=this.expandOptions)||void 0===n?void 0:n.trigger))&&(this.opened=null===(e=this.expandOptions)||void 0===e?void 0:e.clickModeDefaultOpen);window.addEventListener("scroll",et()(()=>{const n=this.getScrollTop();this.listData.forEach((e,t)=>{var i;const a=null===(i=document.getElementById(e.slug))||void 0===i?void 0:i.offsetTop;a&&(0===t&&n<a?this.activeIndex=0:n>=a&&(this.activeIndex=t))})},100))}},it=(t(376),Object(Ge.a)(tt,(function(){var n=this,e=n._self._c;return n.visible?e("div",{staticClass:"ra-wrapper",class:[n.rightAnchorOptions.customClass,n.global&&"is-global"],on:{mouseover:n.mouseover,mouseleave:n.mouseleave}},[e("div",{staticClass:"ra-button",on:{click:n.btnClick}},[e("svg",{staticClass:"icon",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",role:"img",viewBox:"0 0 448 512"}},[e("path",{attrs:{fill:"currentColor",d:"M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"}})])]),n._v(" "),e("ul",{directives:[{name:"show",rawName:"v-show",value:n.opened,expression:"opened"}],staticClass:"ra-menu"},n._l(n.listData,(function(t,i){return e("li",{key:i,staticClass:"ra-menu-item",class:[i===n.activeIndex?"active":"",t.level>2?"sub":"","h"+t.level],on:{click:function(e){return n.itemClick(i,t.slug)}}},[n._v(n._s(t.title))])})),0)]):n._e()}),[],!1,null,"c2c6b790",null).exports);class at{constructor(n){Object.defineProperty(this,"registration",{value:n,configurable:!0,writable:!0})}update(){return this.registration.update()}skipWaiting(){const n=this.registration.waiting;return n?(console.log("[vuepress:sw] Doing worker.skipWaiting()."),new Promise((e,t)=>{const i=new MessageChannel;i.port1.onmessage=n=>{console.log("[vuepress:sw] Done worker.skipWaiting()."),n.data.error?t(n.data.error):e(n.data)},n.postMessage({type:"skip-waiting"},[i.port2])})):Promise.resolve()}}var rt=t(30);var ot=t(93);t(377);function st(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function lt(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?st(Object(t),!0).forEach((function(e){ht(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):st(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function dt(n){return(dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function ct(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function ut(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}function pt(n,e,t){return e&&ut(n.prototype,e),t&&ut(n,t),n}function ht(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function mt(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&ft(n,e)}function gt(n){return(gt=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function ft(n,e){return(ft=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function vt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}function bt(n,e,t){return(bt=vt()?Reflect.construct:function(n,e,t){var i=[null];i.push.apply(i,e);var a=new(Function.bind.apply(n,i));return t&&ft(a,t.prototype),a}).apply(null,arguments)}function _t(n){var e="function"==typeof Map?new Map:void 0;return(_t=function(n){if(null===n||(t=n,-1===Function.toString.call(t).indexOf("[native code]")))return n;var t;if("function"!=typeof n)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(n))return e.get(n);e.set(n,i)}function i(){return bt(n,arguments,gt(this).constructor)}return i.prototype=Object.create(n.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),ft(i,n)})(n)}function yt(n,e){if(e&&("object"==typeof e||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function xt(n){var e=vt();return function(){var t,i=gt(n);if(e){var a=gt(this).constructor;t=Reflect.construct(i,arguments,a)}else t=i.apply(this,arguments);return yt(this,t)}}function kt(n){return function(n){if(Array.isArray(n))return Tt(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||function(n,e){if(!n)return;if("string"==typeof n)return Tt(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Tt(n,e)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tt(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}function wt(n){if(!Array.isArray(n))throw new TypeError("Middlewares must be an array!");for(var e=n.length,t=0;t<e;t++)if("function"!=typeof n[t])throw new TypeError("Middleware must be componsed of function");return function(e,t){var i=-1;return function a(r){if(r<=i)return Promise.reject(new Error("next() should not be called multiple times in one middleware!"));i=r;var o=n[r]||t;if(!o)return Promise.resolve();try{return Promise.resolve(o(e,(function(){return a(r+1)})))}catch(n){return Promise.reject(n)}}(0)}}var It=function(){function n(e){if(ct(this,n),!Array.isArray(e))throw new TypeError("Default middlewares must be an array!");this.defaultMiddlewares=kt(e),this.middlewares=[]}return pt(n,[{key:"use",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{global:!1,core:!1,defaultInstance:!1},i=!1,a=!1,r=!1;"number"==typeof t?(process&&process.env,i=!0,a=!1):"object"===dt(t)&&t&&(a=t.global||!1,i=t.core||!1,r=t.defaultInstance||!1),a?n.globalMiddlewares.splice(n.globalMiddlewares.length-n.defaultGlobalMiddlewaresLength,0,e):i?n.coreMiddlewares.splice(n.coreMiddlewares.length-n.defaultCoreMiddlewaresLength,0,e):r?this.defaultMiddlewares.push(e):this.middlewares.push(e)}},{key:"execute",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=wt([].concat(kt(this.middlewares),kt(this.defaultMiddlewares),kt(n.globalMiddlewares),kt(n.coreMiddlewares)));return t(e)}}]),n}();It.globalMiddlewares=[],It.defaultGlobalMiddlewaresLength=0,It.coreMiddlewares=[],It.defaultCoreMiddlewaresLength=0;var Ct=function(){function n(e){ct(this,n),this.cache=new Map,this.timer={},this.extendOptions(e)}return pt(n,[{key:"extendOptions",value:function(n){this.maxCache=n.maxCache||0}},{key:"get",value:function(n){return this.cache.get(JSON.stringify(n))}},{key:"set",value:function(n,e){var t=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:6e4;if(this.maxCache>0&&this.cache.size>=this.maxCache){var a=kt(this.cache.keys())[0];this.cache.delete(a),this.timer[a]&&clearTimeout(this.timer[a])}var r=JSON.stringify(n);this.cache.set(r,e),i>0&&(this.timer[r]=setTimeout((function(){t.cache.delete(r),delete t.timer[r]}),i))}},{key:"delete",value:function(n){var e=JSON.stringify(n);return delete this.timer[e],this.cache.delete(e)}},{key:"clear",value:function(){return this.timer={},this.cache.clear()}}]),n}(),Dt=function(n){mt(t,n);var e=xt(t);function t(n,i){var a,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RequestError";return ct(this,t),(a=e.call(this,n)).name="RequestError",a.request=i,a.type=r,a}return t}(_t(Error)),Et=function(n){mt(t,n);var e=xt(t);function t(n,i,a,r){var o,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"ResponseError";return ct(this,t),(o=e.call(this,i||n.statusText)).name="ResponseError",o.data=a,o.response=n,o.request=r,o.type=s,o}return t}(_t(Error));function St(n){return new Promise((function(e,t){var i=new FileReader;i.onload=function(){e(i.result)},i.onerror=t,i.readAsText(n,"GBK")}))}function Mt(n){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;try{return JSON.parse(n)}catch(a){if(e)throw new Et(t,"JSON.parse fail",n,i,"ParseError")}return n}function At(n,e,t){return new Promise((function(i,a){setTimeout((function(){a(new Dt(e||"timeout of ".concat(n,"ms exceeded"),t,"Timeout"))}),n)}))}function Ot(n){return new Promise((function(e,t){n.cancelToken&&n.cancelToken.promise.then((function(n){t(n)}))}))}var Pt=Object.prototype.toString;function jt(){var n;return"undefined"!=typeof process&&"[object process]"===Pt.call(process)&&(n="NODE"),"undefined"!=typeof XMLHttpRequest&&(n="BROWSER"),n}function zt(n){return"object"===dt(n)&&"[object Array]"===Object.prototype.toString.call(n)}function Rt(n){return"undefined"!=typeof URLSearchParams&&n instanceof URLSearchParams}function $t(n){return null!==n&&"object"===dt(n)}function Lt(n,e){if(n)if("object"!==dt(n)&&(n=[n]),zt(n))for(var t=0;t<n.length;t++)e.call(null,n[t],t,n);else for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&e.call(null,n[i],i,n)}function Ut(n){return Rt(n)?Object(ot.parse)(n.toString(),{strictNullHandling:!0}):"string"==typeof n?[n]:n}function Nt(n){return Object(ot.stringify)(n,{arrayFormat:"repeat",strictNullHandling:!0})}function qt(n,e){return lt(lt(lt({},n),e),{},{headers:lt(lt({},n.headers),e.headers),params:lt(lt({},Ut(n.params)),Ut(e.params)),method:(e.method||n.method||"get").toLowerCase()})}function Bt(n,e){var t=e.method;return"get"===(void 0===t?"get":t).toLowerCase()}function Ft(n,e){var t,i;if(n)if(e)t=e(n);else if(Rt(n))t=n.toString();else{if(zt(n))i=[],Lt(n,(function(n){null==n?i.push(n):i.push($t(n)?JSON.stringify(n):n)})),t=Nt(i);else i={},Lt(n,(function(n,e){var t,a=n;null==n?i[e]=n:"object"===dt(t=n)&&"[object Date]"===Object.prototype.toString.call(t)?a=n.toISOString():zt(n)?a=n:$t(n)&&(a=JSON.stringify(n)),i[e]=a})),t=Nt(i)}return t}var Vt=[function(n,e){if(!n)return e();var t=n.req,i=(t=void 0===t?{}:t).options,a=void 0===i?{}:i,r=a.method;if(-1===["post","put","patch","delete"].indexOf((void 0===r?"get":r).toLowerCase()))return e();var o=a.requestType,s=void 0===o?"json":o,l=a.data;if(l){var d=Object.prototype.toString.call(l);"[object Object]"===d||"[object Array]"===d?"json"===s?(a.headers=lt({Accept:"application/json","Content-Type":"application/json;charset=UTF-8"},a.headers),a.body=JSON.stringify(l)):"form"===s&&(a.headers=lt({Accept:"application/json","Content-Type":"application/x-www-form-urlencoded;charset=UTF-8"},a.headers),a.body=Nt(l)):(a.headers=lt({Accept:"application/json"},a.headers),a.body=l)}return n.req.options=a,e()},function(n,e){if(!n)return e();var t=n.req,i=(t=void 0===t?{}:t).options,a=void 0===i?{}:i,r=a.paramsSerializer,o=a.params,s=n.req,l=(s=void 0===s?{}:s).url,d=void 0===l?"":l;a.method=a.method?a.method.toUpperCase():"GET",a.credentials=a.credentials||"same-origin";var c=Ft(o,r);if(n.req.originUrl=d,c){var u=-1!==d.indexOf("?")?"&":"?";n.req.url="".concat(d).concat(u).concat(c)}return n.req.options=a,e()},function(n,e){var t;return e().then((function(){if(n){var e=n.res,i=void 0===e?{}:e,a=n.req,r=void 0===a?{}:a,o=(r||{}).options,s=(o=void 0===o?{}:o).responseType,l=void 0===s?"json":s,d=o.charset,c=void 0===d?"utf8":d,u=(o.getResponse,o.throwErrIfParseFail),p=void 0!==u&&u,h=o.parseResponse;if((void 0===h||h)&&i&&i.clone){if((t="BROWSER"===jt()?i.clone():i).useCache=i.useCache||!1,"gbk"===c)try{return i.blob().then(St).then((function(n){return Mt(n,!1,t,r)}))}catch(n){throw new Et(t,n.message,null,r,"ParseError")}else if("json"===l)return i.text().then((function(n){return Mt(n,p,t,r)}));try{return i[l]()}catch(n){throw new Et(t,"responseType not support",null,r,"ParseError")}}}})).then((function(e){if(n){n.res;var i=n.req,a=void 0===i?{}:i,r=(a||{}).options,o=(r=void 0===r?{}:r).getResponse,s=void 0!==o&&o;if(t){if(t.status>=200&&t.status<300)return s?void(n.res={data:e,response:t}):void(n.res=e);throw new Et(t,"http error",e,a,"HttpError")}}})).catch((function(e){if(e instanceof Dt||e instanceof Et)throw e;var t=n.req,i=n.res;throw e.request=e.request||t,e.response=e.response||i,e.type=e.type||e.name,e.data=e.data||void 0,e}))}],Gt=[function(n,e){if(!n)return e();var t=n.req,i=(t=void 0===t?{}:t).options,a=void 0===i?{}:i,r=t.url,o=void 0===r?"":r,s=n.cache,l=n.responseInterceptors,d=a.timeout,c=void 0===d?0:d,u=a.timeoutMessage,p=a.__umiRequestCoreType__,h=void 0===p?"normal":p,m=a.useCache,g=void 0!==m&&m,f=a.method,v=void 0===f?"get":f,b=a.params,_=a.ttl,y=a.validateCache,x=void 0===y?Bt:y;if("normal"!==h)return process&&process.env,e();var k=fetch;if(!k)throw new Error("Global fetch not exist!");var T,w="BROWSER"===jt(),I=x(o,a)&&g&&w;if(I){var C=s.get({url:o,params:b,method:v});if(C)return(C=C.clone()).useCache=!0,n.res=C,e()}return T=c>0?Promise.race([Ot(a),k(o,a),At(c,u,n.req)]):Promise.race([Ot(a),k(o,a)]),l.forEach((function(n){T=T.then((function(e){var t="function"==typeof e.clone?e.clone():e;return n(t,a)}))})),T.then((function(t){if(I&&200===t.status){var i=t.clone();i.useCache=!0,s.set({url:o,params:b,method:v},i,_)}return n.res=t,e()}))}];It.globalMiddlewares=Vt,It.defaultGlobalMiddlewaresLength=Vt.length,It.coreMiddlewares=Gt,It.defaultCoreMiddlewaresLength=Gt.length;var Ht=function(){function n(e){ct(this,n),this.onion=new It([]),this.fetchIndex=0,this.mapCache=new Ct(e),this.initOptions=e,this.instanceRequestInterceptors=[],this.instanceResponseInterceptors=[]}return pt(n,[{key:"use",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{global:!1,core:!1};return this.onion.use(n,e),this}},{key:"extendOptions",value:function(n){this.initOptions=qt(this.initOptions,n),this.mapCache.extendOptions(n)}},{key:"dealRequestInterceptors",value:function(e){return[].concat(kt(n.requestInterceptors),kt(this.instanceRequestInterceptors)).reduce((function(n,t){return n.then((function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e.req.url=n.url||e.req.url,e.req.options=n.options||e.req.options,t(e.req.url,e.req.options)}))}),Promise.resolve()).then((function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e.req.url=n.url||e.req.url,e.req.options=n.options||e.req.options,Promise.resolve()}))}},{key:"request",value:function(e,t){var i=this,a=this.onion,r={req:{url:e,options:lt(lt({},t),{},{url:e})},res:null,cache:this.mapCache,responseInterceptors:[].concat(kt(n.responseInterceptors),kt(this.instanceResponseInterceptors))};if("string"!=typeof e)throw new Error("url MUST be a string");return new Promise((function(n,e){i.dealRequestInterceptors(r).then((function(){return a.execute(r)})).then((function(){n(r.res)})).catch((function(t){var i=r.req.options.errorHandler;if(i)try{var a=i(t);n(a)}catch(n){e(n)}else e(t)}))}))}}],[{key:"requestUse",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{global:!0};if("function"!=typeof e)throw new TypeError("Interceptor must be function!");t.global?n.requestInterceptors.push(e):this.instanceRequestInterceptors.push(e)}},{key:"responseUse",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{global:!0};if("function"!=typeof e)throw new TypeError("Interceptor must be function!");t.global?n.responseInterceptors.push(e):this.instanceResponseInterceptors.push(e)}}]),n}();function Wt(n){this.message=n}function Qt(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(n){e=n}));var t=this;n((function(n){t.reason||(t.reason=new Wt(n),e(t.reason))}))}function Kt(n){return!(!n||!n.__CANCEL__)}Ht.requestInterceptors=[function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=e.prefix,i=e.suffix;return t&&(n="".concat(t).concat(n)),i&&(n="".concat(n).concat(i)),{url:n,options:e}}],Ht.responseInterceptors=[],Wt.prototype.toString=function(){return this.message?"Cancel: ".concat(this.message):"Cancel"},Wt.prototype.__CANCEL__=!0,Qt.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},Qt.source=function(){var n;return{token:new Qt((function(e){n=e})),cancel:n}};var Yt=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=new Ht(n),t=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=qt(e.initOptions,t);return e.request(n,i)};t.use=e.use.bind(e),t.fetchIndex=e.fetchIndex,t.interceptors={request:{use:Ht.requestUse.bind(e)},response:{use:Ht.responseUse.bind(e)}};var i=["get","post","delete","put","patch","head","options","rpc"];return i.forEach((function(n){t[n]=function(e,i){return t(e,lt(lt({},i),{},{method:n}))}})),t.Cancel=Wt,t.CancelToken=Qt,t.isCancel=Kt,t.extendOptions=e.extendOptions.bind(e),t.middlewares={instance:e.onion.middlewares,defaultInstance:e.onion.defaultMiddlewares,global:It.globalMiddlewares,core:It.coreMiddlewares},t},Xt=(Yt({parseResponse:!1}),Yt({})),Jt={name:"Contributors",data:()=>({contributors:[]}),computed:{label(){return this.$themeLocaleConfig.contributorsLabel||this.$page.contributors.label||"Contributors"},isShow(){return this.getIsShow()}},methods:{getIsShow(){const{disableRoutes:n}=this.$page.contributors,{path:e}=this.$page;return!n.some(n=>e.includes(n))}},watch:{$route:{handler({path:n},e){if("undefined"==typeof window||e&&n===e.path||!this.getIsShow())return;this.contributors.length=0;const{docsRepo:t,docsBranch:i,docsDir:a,api:r}=this.$page.contributors,[o,s]=t.split("/");Xt.get(r||"https://api.xuann.wang/api/github-file-contributors",{params:{user:o,repo:s,tree:i,path:`${a?a+"/":""}${this.$page.relativePath}`}}).then(n=>{this.contributors=n}).catch((function(n){console.log("request contributors error:",n.message)}))},immediate:!0}}},Zt=(t(409),Object(Ge.a)(Jt,(function(){var n=this._self._c;return n("div",{directives:[{name:"show",rawName:"v-show",value:this.isShow&&this.contributors.length,expression:"isShow && this.contributors.length"}],staticClass:"contributors"},[n("span",[this._v(this._s(this.label))]),this._v(" "),this._l(this.contributors,(function({username:e,id:t}){return n("a",{key:t,attrs:{href:"https://github.com/"+e,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:`https://avatars.githubusercontent.com/u/${t}?s=90`,alt:e,title:e}})])}))],2)}),[],!1,null,"713eb016",null).exports),ni=[({Vue:n,options:e,router:t,siteData:i,isServer:a})=>{n.use(Ye.a);n.mixin({methods:{hashChange(){t.onReady(()=>{setTimeout(()=>{const{hash:n}=document.location;if(n.length>1){const e=decodeURIComponent(n.substring(1)).replace(/[A-Z]/g,n=>String.fromCharCode(n.charCodeAt(0)+32)),t=document.getElementById(e);t&&t.scrollIntoView()}},500)})}},mounted(){this.hashChange(),window.addEventListener("hashchange",()=>this.hashChange())}}),n.prototype.$withBotBase=function(n){return"/"===n.charAt(0)&&(n=n.slice(1)),Xe.cdnBase+Xe.cdnPath+n}},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:n})=>{n.component("BackToTop",Ze)},({Vue:n})=>{n.component("RightAnchor",it),n.component("GlobalRightAnchor",{name:"GlobalRightAnchor",functional:!0,render(){return(0,arguments[0])(it,{attrs:{global:!0}})}})},({router:n})=>{"undefined"!=typeof window&&function(){var n=document.createElement("script"),e=window.location.protocol.split(":")[0];n.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)}()},async({router:n,isServer:e})=>{if(!e){const{register:e}=await t.e(404).then(t.bind(null,493));n.onReady(()=>{e("/service-worker.js",{registrationOptions:{},ready(){console.log("[vuepress:sw] Service worker is active."),rt.a.$emit("sw-ready")},cached(n){console.log("[vuepress:sw] Content has been cached for offline use."),rt.a.$emit("sw-cached",new at(n))},updated(n){console.log("[vuepress:sw] Content updated."),rt.a.$emit("sw-updated",new at(n))},offline(){console.log("[vuepress:sw] No internet connection found. App is running in offline mode."),rt.a.$emit("sw-offline")},error(n){console.error("[vuepress:sw] Error during service worker registration:",n),rt.a.$emit("sw-error",n),GA_ID&&ga("send","exception",{exDescription:n.message,exFatal:!1})}})})}},({Vue:n})=>{n.component("Contributors",Zt)}],ei=["TuXiaoChao","Qrcode","BackToTop","GlobalRightAnchor","MySWUpdatePopup"];class ti extends class{constructor(){this.store=new i.default({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){i.default.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(ti.prototype,{getPageAsyncComponent:Kn.d,getLayoutAsyncComponent:Kn.c,getAsyncComponent:Kn.b,getVueComponent:Kn.e});var ii={install(n){const e=new ti;n.$vuepress=e,n.prototype.$vuepress=e}};function ai(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var ri={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return Object(Kn.h)("pageKey",e),i.default.component(e)||i.default.component(e,Object(Kn.d)(e)),i.default.component(e)?n(e):n("")}},oi={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},si={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},li=(t(410),t(411),Object(Ge.a)(si,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),di={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};i.default.config.productionTip=!1,i.default.use(Wn),i.default.use(ii),i.default.mixin(function(n,e,t=i.default){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const a=new(n(t.$vuepress.$get("siteData"))),r=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),o={};return Object.keys(r).reduce((n,e)=>(e.startsWith("$")&&(n[e]=r[e].get),n),o),{computed:o}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const i in n)"/"===i?t=n[i]:0===this.$page.path.indexOf(i)&&(e=n[i]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,i=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?i?i+" | "+t:t:i||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const i=n[t];if(i.path.toLowerCase()===e.toLowerCase())return i}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Qe)),i.default.component("Content",ri),i.default.component("ContentSlotsDistributor",oi),i.default.component("OutboundLink",li),i.default.component("ClientOnly",di),i.default.component("Layout",Object(Kn.c)("Layout")),i.default.component("NotFound",Object(Kn.c)("NotFound")),i.default.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.10",hash:"6e39fd9"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Qe.routerBase||Qe.base,t=new Wn({base:e,mode:"history",fallback:!1,routes:We,scrollBehavior:(n,e,t)=>t||(n.hash?!i.default.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,i)=>{if(ai(n,e.path))i();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";ai(n,t)?i(t):i()}else i();else{const t=e.path+"/",a=e.path+".html";ai(n,a)?i(a):ai(n,t)?i(t):i()}})}(t);const a={};try{await Promise.all(ni.filter(n=>"function"==typeof n).map(e=>e({Vue:i.default,options:a,router:t,siteData:Qe,isServer:n})))}catch(n){console.error(n)}return{app:new i.default(Object.assign(a,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},ei.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);